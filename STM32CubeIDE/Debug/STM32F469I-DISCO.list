
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026954  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000268c  08026b14  08026b14  00036b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000004c  080291a0  080291a0  000391a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  080291ec  080291ec  0013e55c  2**0
                  CONTENTS
  5 .ARM          00000008  080291ec  080291ec  000391ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  080291f4  080291f4  0013e55c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  080291f4  080291f4  000391f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802920c  0802920c  0003920c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08029214  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000dde0  20000140  08029354  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000df20  08029354  0004df20  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0013e55c  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 000edc00  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000008f8  900edc00  900edc00  0013dc00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000064  900ee4f8  900ee4f8  0013e4f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00059e04  00000000  00000000  0013e58c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000e1e1e  00000000  00000000  00198390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00015fec  00000000  00000000  0027a1ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000031a8  00000000  00000000  002901a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00142837  00000000  00000000  00293348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000ac28  00000000  00000000  003d5b80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0003eefb  00000000  00000000  003e07a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003abac  00000000  00000000  0041f6a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  0045a24f  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000092d0  00000000  00000000  0045a320  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08026afc 	.word	0x08026afc

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	08026afc 	.word	0x08026afc

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_dmul>:
 80002a0:	b570      	push	{r4, r5, r6, lr}
 80002a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80002a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80002aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80002ae:	bf1d      	ittte	ne
 80002b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002b4:	ea94 0f0c 	teqne	r4, ip
 80002b8:	ea95 0f0c 	teqne	r5, ip
 80002bc:	f000 f8de 	bleq	800047c <__aeabi_dmul+0x1dc>
 80002c0:	442c      	add	r4, r5
 80002c2:	ea81 0603 	eor.w	r6, r1, r3
 80002c6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ca:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002ce:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002d2:	bf18      	it	ne
 80002d4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002e0:	d038      	beq.n	8000354 <__aeabi_dmul+0xb4>
 80002e2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002e6:	f04f 0500 	mov.w	r5, #0
 80002ea:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002ee:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80002f2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002f6:	f04f 0600 	mov.w	r6, #0
 80002fa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002fe:	f09c 0f00 	teq	ip, #0
 8000302:	bf18      	it	ne
 8000304:	f04e 0e01 	orrne.w	lr, lr, #1
 8000308:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800030c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000310:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000314:	d204      	bcs.n	8000320 <__aeabi_dmul+0x80>
 8000316:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800031a:	416d      	adcs	r5, r5
 800031c:	eb46 0606 	adc.w	r6, r6, r6
 8000320:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000324:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000328:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800032c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000330:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000334:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000338:	bf88      	it	hi
 800033a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800033e:	d81e      	bhi.n	800037e <__aeabi_dmul+0xde>
 8000340:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000344:	bf08      	it	eq
 8000346:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800034a:	f150 0000 	adcs.w	r0, r0, #0
 800034e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000358:	ea46 0101 	orr.w	r1, r6, r1
 800035c:	ea40 0002 	orr.w	r0, r0, r2
 8000360:	ea81 0103 	eor.w	r1, r1, r3
 8000364:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000368:	bfc2      	ittt	gt
 800036a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800036e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000372:	bd70      	popgt	{r4, r5, r6, pc}
 8000374:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000378:	f04f 0e00 	mov.w	lr, #0
 800037c:	3c01      	subs	r4, #1
 800037e:	f300 80ab 	bgt.w	80004d8 <__aeabi_dmul+0x238>
 8000382:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000386:	bfde      	ittt	le
 8000388:	2000      	movle	r0, #0
 800038a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800038e:	bd70      	pople	{r4, r5, r6, pc}
 8000390:	f1c4 0400 	rsb	r4, r4, #0
 8000394:	3c20      	subs	r4, #32
 8000396:	da35      	bge.n	8000404 <__aeabi_dmul+0x164>
 8000398:	340c      	adds	r4, #12
 800039a:	dc1b      	bgt.n	80003d4 <__aeabi_dmul+0x134>
 800039c:	f104 0414 	add.w	r4, r4, #20
 80003a0:	f1c4 0520 	rsb	r5, r4, #32
 80003a4:	fa00 f305 	lsl.w	r3, r0, r5
 80003a8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ac:	fa01 f205 	lsl.w	r2, r1, r5
 80003b0:	ea40 0002 	orr.w	r0, r0, r2
 80003b4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80003b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80003bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003c0:	fa21 f604 	lsr.w	r6, r1, r4
 80003c4:	eb42 0106 	adc.w	r1, r2, r6
 80003c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003cc:	bf08      	it	eq
 80003ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003d2:	bd70      	pop	{r4, r5, r6, pc}
 80003d4:	f1c4 040c 	rsb	r4, r4, #12
 80003d8:	f1c4 0520 	rsb	r5, r4, #32
 80003dc:	fa00 f304 	lsl.w	r3, r0, r4
 80003e0:	fa20 f005 	lsr.w	r0, r0, r5
 80003e4:	fa01 f204 	lsl.w	r2, r1, r4
 80003e8:	ea40 0002 	orr.w	r0, r0, r2
 80003ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003f0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003f4:	f141 0100 	adc.w	r1, r1, #0
 80003f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003fc:	bf08      	it	eq
 80003fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f1c4 0520 	rsb	r5, r4, #32
 8000408:	fa00 f205 	lsl.w	r2, r0, r5
 800040c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000410:	fa20 f304 	lsr.w	r3, r0, r4
 8000414:	fa01 f205 	lsl.w	r2, r1, r5
 8000418:	ea43 0302 	orr.w	r3, r3, r2
 800041c:	fa21 f004 	lsr.w	r0, r1, r4
 8000420:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000424:	fa21 f204 	lsr.w	r2, r1, r4
 8000428:	ea20 0002 	bic.w	r0, r0, r2
 800042c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000430:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000434:	bf08      	it	eq
 8000436:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800043a:	bd70      	pop	{r4, r5, r6, pc}
 800043c:	f094 0f00 	teq	r4, #0
 8000440:	d10f      	bne.n	8000462 <__aeabi_dmul+0x1c2>
 8000442:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000446:	0040      	lsls	r0, r0, #1
 8000448:	eb41 0101 	adc.w	r1, r1, r1
 800044c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000450:	bf08      	it	eq
 8000452:	3c01      	subeq	r4, #1
 8000454:	d0f7      	beq.n	8000446 <__aeabi_dmul+0x1a6>
 8000456:	ea41 0106 	orr.w	r1, r1, r6
 800045a:	f095 0f00 	teq	r5, #0
 800045e:	bf18      	it	ne
 8000460:	4770      	bxne	lr
 8000462:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000466:	0052      	lsls	r2, r2, #1
 8000468:	eb43 0303 	adc.w	r3, r3, r3
 800046c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000470:	bf08      	it	eq
 8000472:	3d01      	subeq	r5, #1
 8000474:	d0f7      	beq.n	8000466 <__aeabi_dmul+0x1c6>
 8000476:	ea43 0306 	orr.w	r3, r3, r6
 800047a:	4770      	bx	lr
 800047c:	ea94 0f0c 	teq	r4, ip
 8000480:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000484:	bf18      	it	ne
 8000486:	ea95 0f0c 	teqne	r5, ip
 800048a:	d00c      	beq.n	80004a6 <__aeabi_dmul+0x206>
 800048c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000490:	bf18      	it	ne
 8000492:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000496:	d1d1      	bne.n	800043c <__aeabi_dmul+0x19c>
 8000498:	ea81 0103 	eor.w	r1, r1, r3
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	f04f 0000 	mov.w	r0, #0
 80004a4:	bd70      	pop	{r4, r5, r6, pc}
 80004a6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004aa:	bf06      	itte	eq
 80004ac:	4610      	moveq	r0, r2
 80004ae:	4619      	moveq	r1, r3
 80004b0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004b4:	d019      	beq.n	80004ea <__aeabi_dmul+0x24a>
 80004b6:	ea94 0f0c 	teq	r4, ip
 80004ba:	d102      	bne.n	80004c2 <__aeabi_dmul+0x222>
 80004bc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004c0:	d113      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004c2:	ea95 0f0c 	teq	r5, ip
 80004c6:	d105      	bne.n	80004d4 <__aeabi_dmul+0x234>
 80004c8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004cc:	bf1c      	itt	ne
 80004ce:	4610      	movne	r0, r2
 80004d0:	4619      	movne	r1, r3
 80004d2:	d10a      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004d4:	ea81 0103 	eor.w	r1, r1, r3
 80004d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004dc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd70      	pop	{r4, r5, r6, pc}
 80004ea:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004ee:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80004f2:	bd70      	pop	{r4, r5, r6, pc}

080004f4 <__aeabi_drsub>:
 80004f4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80004f8:	e002      	b.n	8000500 <__adddf3>
 80004fa:	bf00      	nop

080004fc <__aeabi_dsub>:
 80004fc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000500 <__adddf3>:
 8000500:	b530      	push	{r4, r5, lr}
 8000502:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000506:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800050a:	ea94 0f05 	teq	r4, r5
 800050e:	bf08      	it	eq
 8000510:	ea90 0f02 	teqeq	r0, r2
 8000514:	bf1f      	itttt	ne
 8000516:	ea54 0c00 	orrsne.w	ip, r4, r0
 800051a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800051e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000522:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000526:	f000 80e2 	beq.w	80006ee <__adddf3+0x1ee>
 800052a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800052e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000532:	bfb8      	it	lt
 8000534:	426d      	neglt	r5, r5
 8000536:	dd0c      	ble.n	8000552 <__adddf3+0x52>
 8000538:	442c      	add	r4, r5
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	ea82 0000 	eor.w	r0, r2, r0
 8000546:	ea83 0101 	eor.w	r1, r3, r1
 800054a:	ea80 0202 	eor.w	r2, r0, r2
 800054e:	ea81 0303 	eor.w	r3, r1, r3
 8000552:	2d36      	cmp	r5, #54	; 0x36
 8000554:	bf88      	it	hi
 8000556:	bd30      	pophi	{r4, r5, pc}
 8000558:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800055c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000560:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000564:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000568:	d002      	beq.n	8000570 <__adddf3+0x70>
 800056a:	4240      	negs	r0, r0
 800056c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000570:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000574:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000578:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800057c:	d002      	beq.n	8000584 <__adddf3+0x84>
 800057e:	4252      	negs	r2, r2
 8000580:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000584:	ea94 0f05 	teq	r4, r5
 8000588:	f000 80a7 	beq.w	80006da <__adddf3+0x1da>
 800058c:	f1a4 0401 	sub.w	r4, r4, #1
 8000590:	f1d5 0e20 	rsbs	lr, r5, #32
 8000594:	db0d      	blt.n	80005b2 <__adddf3+0xb2>
 8000596:	fa02 fc0e 	lsl.w	ip, r2, lr
 800059a:	fa22 f205 	lsr.w	r2, r2, r5
 800059e:	1880      	adds	r0, r0, r2
 80005a0:	f141 0100 	adc.w	r1, r1, #0
 80005a4:	fa03 f20e 	lsl.w	r2, r3, lr
 80005a8:	1880      	adds	r0, r0, r2
 80005aa:	fa43 f305 	asr.w	r3, r3, r5
 80005ae:	4159      	adcs	r1, r3
 80005b0:	e00e      	b.n	80005d0 <__adddf3+0xd0>
 80005b2:	f1a5 0520 	sub.w	r5, r5, #32
 80005b6:	f10e 0e20 	add.w	lr, lr, #32
 80005ba:	2a01      	cmp	r2, #1
 80005bc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005c0:	bf28      	it	cs
 80005c2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005c6:	fa43 f305 	asr.w	r3, r3, r5
 80005ca:	18c0      	adds	r0, r0, r3
 80005cc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d4:	d507      	bpl.n	80005e6 <__adddf3+0xe6>
 80005d6:	f04f 0e00 	mov.w	lr, #0
 80005da:	f1dc 0c00 	rsbs	ip, ip, #0
 80005de:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005e2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005e6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005ea:	d31b      	bcc.n	8000624 <__adddf3+0x124>
 80005ec:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80005f0:	d30c      	bcc.n	800060c <__adddf3+0x10c>
 80005f2:	0849      	lsrs	r1, r1, #1
 80005f4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005f8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005fc:	f104 0401 	add.w	r4, r4, #1
 8000600:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000604:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000608:	f080 809a 	bcs.w	8000740 <__adddf3+0x240>
 800060c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000610:	bf08      	it	eq
 8000612:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000616:	f150 0000 	adcs.w	r0, r0, #0
 800061a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800061e:	ea41 0105 	orr.w	r1, r1, r5
 8000622:	bd30      	pop	{r4, r5, pc}
 8000624:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000628:	4140      	adcs	r0, r0
 800062a:	eb41 0101 	adc.w	r1, r1, r1
 800062e:	3c01      	subs	r4, #1
 8000630:	bf28      	it	cs
 8000632:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000636:	d2e9      	bcs.n	800060c <__adddf3+0x10c>
 8000638:	f091 0f00 	teq	r1, #0
 800063c:	bf04      	itt	eq
 800063e:	4601      	moveq	r1, r0
 8000640:	2000      	moveq	r0, #0
 8000642:	fab1 f381 	clz	r3, r1
 8000646:	bf08      	it	eq
 8000648:	3320      	addeq	r3, #32
 800064a:	f1a3 030b 	sub.w	r3, r3, #11
 800064e:	f1b3 0220 	subs.w	r2, r3, #32
 8000652:	da0c      	bge.n	800066e <__adddf3+0x16e>
 8000654:	320c      	adds	r2, #12
 8000656:	dd08      	ble.n	800066a <__adddf3+0x16a>
 8000658:	f102 0c14 	add.w	ip, r2, #20
 800065c:	f1c2 020c 	rsb	r2, r2, #12
 8000660:	fa01 f00c 	lsl.w	r0, r1, ip
 8000664:	fa21 f102 	lsr.w	r1, r1, r2
 8000668:	e00c      	b.n	8000684 <__adddf3+0x184>
 800066a:	f102 0214 	add.w	r2, r2, #20
 800066e:	bfd8      	it	le
 8000670:	f1c2 0c20 	rsble	ip, r2, #32
 8000674:	fa01 f102 	lsl.w	r1, r1, r2
 8000678:	fa20 fc0c 	lsr.w	ip, r0, ip
 800067c:	bfdc      	itt	le
 800067e:	ea41 010c 	orrle.w	r1, r1, ip
 8000682:	4090      	lslle	r0, r2
 8000684:	1ae4      	subs	r4, r4, r3
 8000686:	bfa2      	ittt	ge
 8000688:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800068c:	4329      	orrge	r1, r5
 800068e:	bd30      	popge	{r4, r5, pc}
 8000690:	ea6f 0404 	mvn.w	r4, r4
 8000694:	3c1f      	subs	r4, #31
 8000696:	da1c      	bge.n	80006d2 <__adddf3+0x1d2>
 8000698:	340c      	adds	r4, #12
 800069a:	dc0e      	bgt.n	80006ba <__adddf3+0x1ba>
 800069c:	f104 0414 	add.w	r4, r4, #20
 80006a0:	f1c4 0220 	rsb	r2, r4, #32
 80006a4:	fa20 f004 	lsr.w	r0, r0, r4
 80006a8:	fa01 f302 	lsl.w	r3, r1, r2
 80006ac:	ea40 0003 	orr.w	r0, r0, r3
 80006b0:	fa21 f304 	lsr.w	r3, r1, r4
 80006b4:	ea45 0103 	orr.w	r1, r5, r3
 80006b8:	bd30      	pop	{r4, r5, pc}
 80006ba:	f1c4 040c 	rsb	r4, r4, #12
 80006be:	f1c4 0220 	rsb	r2, r4, #32
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ca:	ea40 0003 	orr.w	r0, r0, r3
 80006ce:	4629      	mov	r1, r5
 80006d0:	bd30      	pop	{r4, r5, pc}
 80006d2:	fa21 f004 	lsr.w	r0, r1, r4
 80006d6:	4629      	mov	r1, r5
 80006d8:	bd30      	pop	{r4, r5, pc}
 80006da:	f094 0f00 	teq	r4, #0
 80006de:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006e2:	bf06      	itte	eq
 80006e4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006e8:	3401      	addeq	r4, #1
 80006ea:	3d01      	subne	r5, #1
 80006ec:	e74e      	b.n	800058c <__adddf3+0x8c>
 80006ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006f2:	bf18      	it	ne
 80006f4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006f8:	d029      	beq.n	800074e <__adddf3+0x24e>
 80006fa:	ea94 0f05 	teq	r4, r5
 80006fe:	bf08      	it	eq
 8000700:	ea90 0f02 	teqeq	r0, r2
 8000704:	d005      	beq.n	8000712 <__adddf3+0x212>
 8000706:	ea54 0c00 	orrs.w	ip, r4, r0
 800070a:	bf04      	itt	eq
 800070c:	4619      	moveq	r1, r3
 800070e:	4610      	moveq	r0, r2
 8000710:	bd30      	pop	{r4, r5, pc}
 8000712:	ea91 0f03 	teq	r1, r3
 8000716:	bf1e      	ittt	ne
 8000718:	2100      	movne	r1, #0
 800071a:	2000      	movne	r0, #0
 800071c:	bd30      	popne	{r4, r5, pc}
 800071e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000722:	d105      	bne.n	8000730 <__adddf3+0x230>
 8000724:	0040      	lsls	r0, r0, #1
 8000726:	4149      	adcs	r1, r1
 8000728:	bf28      	it	cs
 800072a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800072e:	bd30      	pop	{r4, r5, pc}
 8000730:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000734:	bf3c      	itt	cc
 8000736:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800073a:	bd30      	popcc	{r4, r5, pc}
 800073c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000740:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000744:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd30      	pop	{r4, r5, pc}
 800074e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000752:	bf1a      	itte	ne
 8000754:	4619      	movne	r1, r3
 8000756:	4610      	movne	r0, r2
 8000758:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800075c:	bf1c      	itt	ne
 800075e:	460b      	movne	r3, r1
 8000760:	4602      	movne	r2, r0
 8000762:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000766:	bf06      	itte	eq
 8000768:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800076c:	ea91 0f03 	teqeq	r1, r3
 8000770:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000774:	bd30      	pop	{r4, r5, pc}
 8000776:	bf00      	nop

08000778 <__aeabi_ui2d>:
 8000778:	f090 0f00 	teq	r0, #0
 800077c:	bf04      	itt	eq
 800077e:	2100      	moveq	r1, #0
 8000780:	4770      	bxeq	lr
 8000782:	b530      	push	{r4, r5, lr}
 8000784:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000788:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800078c:	f04f 0500 	mov.w	r5, #0
 8000790:	f04f 0100 	mov.w	r1, #0
 8000794:	e750      	b.n	8000638 <__adddf3+0x138>
 8000796:	bf00      	nop

08000798 <__aeabi_i2d>:
 8000798:	f090 0f00 	teq	r0, #0
 800079c:	bf04      	itt	eq
 800079e:	2100      	moveq	r1, #0
 80007a0:	4770      	bxeq	lr
 80007a2:	b530      	push	{r4, r5, lr}
 80007a4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007a8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007ac:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80007b0:	bf48      	it	mi
 80007b2:	4240      	negmi	r0, r0
 80007b4:	f04f 0100 	mov.w	r1, #0
 80007b8:	e73e      	b.n	8000638 <__adddf3+0x138>
 80007ba:	bf00      	nop

080007bc <__aeabi_f2d>:
 80007bc:	0042      	lsls	r2, r0, #1
 80007be:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007c2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007c6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ca:	bf1f      	itttt	ne
 80007cc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007d4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007d8:	4770      	bxne	lr
 80007da:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007de:	bf08      	it	eq
 80007e0:	4770      	bxeq	lr
 80007e2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007e6:	bf04      	itt	eq
 80007e8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007ec:	4770      	bxeq	lr
 80007ee:	b530      	push	{r4, r5, lr}
 80007f0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80007f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007fc:	e71c      	b.n	8000638 <__adddf3+0x138>
 80007fe:	bf00      	nop

08000800 <__aeabi_ul2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f04f 0500 	mov.w	r5, #0
 800080e:	e00a      	b.n	8000826 <__aeabi_l2d+0x16>

08000810 <__aeabi_l2d>:
 8000810:	ea50 0201 	orrs.w	r2, r0, r1
 8000814:	bf08      	it	eq
 8000816:	4770      	bxeq	lr
 8000818:	b530      	push	{r4, r5, lr}
 800081a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800081e:	d502      	bpl.n	8000826 <__aeabi_l2d+0x16>
 8000820:	4240      	negs	r0, r0
 8000822:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000826:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800082a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800082e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000832:	f43f aed8 	beq.w	80005e6 <__adddf3+0xe6>
 8000836:	f04f 0203 	mov.w	r2, #3
 800083a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800083e:	bf18      	it	ne
 8000840:	3203      	addne	r2, #3
 8000842:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000846:	bf18      	it	ne
 8000848:	3203      	addne	r2, #3
 800084a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800084e:	f1c2 0320 	rsb	r3, r2, #32
 8000852:	fa00 fc03 	lsl.w	ip, r0, r3
 8000856:	fa20 f002 	lsr.w	r0, r0, r2
 800085a:	fa01 fe03 	lsl.w	lr, r1, r3
 800085e:	ea40 000e 	orr.w	r0, r0, lr
 8000862:	fa21 f102 	lsr.w	r1, r1, r2
 8000866:	4414      	add	r4, r2
 8000868:	e6bd      	b.n	80005e6 <__adddf3+0xe6>
 800086a:	bf00      	nop

0800086c <__aeabi_d2f>:
 800086c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000870:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000874:	bf24      	itt	cs
 8000876:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800087a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800087e:	d90d      	bls.n	800089c <__aeabi_d2f+0x30>
 8000880:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000884:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000888:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800088c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000890:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000894:	bf08      	it	eq
 8000896:	f020 0001 	biceq.w	r0, r0, #1
 800089a:	4770      	bx	lr
 800089c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80008a0:	d121      	bne.n	80008e6 <__aeabi_d2f+0x7a>
 80008a2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80008a6:	bfbc      	itt	lt
 80008a8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80008ac:	4770      	bxlt	lr
 80008ae:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008b2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80008b6:	f1c2 0218 	rsb	r2, r2, #24
 80008ba:	f1c2 0c20 	rsb	ip, r2, #32
 80008be:	fa10 f30c 	lsls.w	r3, r0, ip
 80008c2:	fa20 f002 	lsr.w	r0, r0, r2
 80008c6:	bf18      	it	ne
 80008c8:	f040 0001 	orrne.w	r0, r0, #1
 80008cc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80008d0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80008d4:	fa03 fc0c 	lsl.w	ip, r3, ip
 80008d8:	ea40 000c 	orr.w	r0, r0, ip
 80008dc:	fa23 f302 	lsr.w	r3, r3, r2
 80008e0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80008e4:	e7cc      	b.n	8000880 <__aeabi_d2f+0x14>
 80008e6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80008ea:	d107      	bne.n	80008fc <__aeabi_d2f+0x90>
 80008ec:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80008f0:	bf1e      	ittt	ne
 80008f2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80008f6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80008fa:	4770      	bxne	lr
 80008fc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000900:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000904:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000908:	4770      	bx	lr
 800090a:	bf00      	nop

0800090c <__aeabi_uldivmod>:
 800090c:	b953      	cbnz	r3, 8000924 <__aeabi_uldivmod+0x18>
 800090e:	b94a      	cbnz	r2, 8000924 <__aeabi_uldivmod+0x18>
 8000910:	2900      	cmp	r1, #0
 8000912:	bf08      	it	eq
 8000914:	2800      	cmpeq	r0, #0
 8000916:	bf1c      	itt	ne
 8000918:	f04f 31ff 	movne.w	r1, #4294967295
 800091c:	f04f 30ff 	movne.w	r0, #4294967295
 8000920:	f000 b974 	b.w	8000c0c <__aeabi_idiv0>
 8000924:	f1ad 0c08 	sub.w	ip, sp, #8
 8000928:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800092c:	f000 f806 	bl	800093c <__udivmoddi4>
 8000930:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000934:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000938:	b004      	add	sp, #16
 800093a:	4770      	bx	lr

0800093c <__udivmoddi4>:
 800093c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000940:	9d08      	ldr	r5, [sp, #32]
 8000942:	4604      	mov	r4, r0
 8000944:	468e      	mov	lr, r1
 8000946:	2b00      	cmp	r3, #0
 8000948:	d14d      	bne.n	80009e6 <__udivmoddi4+0xaa>
 800094a:	428a      	cmp	r2, r1
 800094c:	4694      	mov	ip, r2
 800094e:	d969      	bls.n	8000a24 <__udivmoddi4+0xe8>
 8000950:	fab2 f282 	clz	r2, r2
 8000954:	b152      	cbz	r2, 800096c <__udivmoddi4+0x30>
 8000956:	fa01 f302 	lsl.w	r3, r1, r2
 800095a:	f1c2 0120 	rsb	r1, r2, #32
 800095e:	fa20 f101 	lsr.w	r1, r0, r1
 8000962:	fa0c fc02 	lsl.w	ip, ip, r2
 8000966:	ea41 0e03 	orr.w	lr, r1, r3
 800096a:	4094      	lsls	r4, r2
 800096c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000970:	0c21      	lsrs	r1, r4, #16
 8000972:	fbbe f6f8 	udiv	r6, lr, r8
 8000976:	fa1f f78c 	uxth.w	r7, ip
 800097a:	fb08 e316 	mls	r3, r8, r6, lr
 800097e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000982:	fb06 f107 	mul.w	r1, r6, r7
 8000986:	4299      	cmp	r1, r3
 8000988:	d90a      	bls.n	80009a0 <__udivmoddi4+0x64>
 800098a:	eb1c 0303 	adds.w	r3, ip, r3
 800098e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000992:	f080 811f 	bcs.w	8000bd4 <__udivmoddi4+0x298>
 8000996:	4299      	cmp	r1, r3
 8000998:	f240 811c 	bls.w	8000bd4 <__udivmoddi4+0x298>
 800099c:	3e02      	subs	r6, #2
 800099e:	4463      	add	r3, ip
 80009a0:	1a5b      	subs	r3, r3, r1
 80009a2:	b2a4      	uxth	r4, r4
 80009a4:	fbb3 f0f8 	udiv	r0, r3, r8
 80009a8:	fb08 3310 	mls	r3, r8, r0, r3
 80009ac:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80009b0:	fb00 f707 	mul.w	r7, r0, r7
 80009b4:	42a7      	cmp	r7, r4
 80009b6:	d90a      	bls.n	80009ce <__udivmoddi4+0x92>
 80009b8:	eb1c 0404 	adds.w	r4, ip, r4
 80009bc:	f100 33ff 	add.w	r3, r0, #4294967295
 80009c0:	f080 810a 	bcs.w	8000bd8 <__udivmoddi4+0x29c>
 80009c4:	42a7      	cmp	r7, r4
 80009c6:	f240 8107 	bls.w	8000bd8 <__udivmoddi4+0x29c>
 80009ca:	4464      	add	r4, ip
 80009cc:	3802      	subs	r0, #2
 80009ce:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80009d2:	1be4      	subs	r4, r4, r7
 80009d4:	2600      	movs	r6, #0
 80009d6:	b11d      	cbz	r5, 80009e0 <__udivmoddi4+0xa4>
 80009d8:	40d4      	lsrs	r4, r2
 80009da:	2300      	movs	r3, #0
 80009dc:	e9c5 4300 	strd	r4, r3, [r5]
 80009e0:	4631      	mov	r1, r6
 80009e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009e6:	428b      	cmp	r3, r1
 80009e8:	d909      	bls.n	80009fe <__udivmoddi4+0xc2>
 80009ea:	2d00      	cmp	r5, #0
 80009ec:	f000 80ef 	beq.w	8000bce <__udivmoddi4+0x292>
 80009f0:	2600      	movs	r6, #0
 80009f2:	e9c5 0100 	strd	r0, r1, [r5]
 80009f6:	4630      	mov	r0, r6
 80009f8:	4631      	mov	r1, r6
 80009fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009fe:	fab3 f683 	clz	r6, r3
 8000a02:	2e00      	cmp	r6, #0
 8000a04:	d14a      	bne.n	8000a9c <__udivmoddi4+0x160>
 8000a06:	428b      	cmp	r3, r1
 8000a08:	d302      	bcc.n	8000a10 <__udivmoddi4+0xd4>
 8000a0a:	4282      	cmp	r2, r0
 8000a0c:	f200 80f9 	bhi.w	8000c02 <__udivmoddi4+0x2c6>
 8000a10:	1a84      	subs	r4, r0, r2
 8000a12:	eb61 0303 	sbc.w	r3, r1, r3
 8000a16:	2001      	movs	r0, #1
 8000a18:	469e      	mov	lr, r3
 8000a1a:	2d00      	cmp	r5, #0
 8000a1c:	d0e0      	beq.n	80009e0 <__udivmoddi4+0xa4>
 8000a1e:	e9c5 4e00 	strd	r4, lr, [r5]
 8000a22:	e7dd      	b.n	80009e0 <__udivmoddi4+0xa4>
 8000a24:	b902      	cbnz	r2, 8000a28 <__udivmoddi4+0xec>
 8000a26:	deff      	udf	#255	; 0xff
 8000a28:	fab2 f282 	clz	r2, r2
 8000a2c:	2a00      	cmp	r2, #0
 8000a2e:	f040 8092 	bne.w	8000b56 <__udivmoddi4+0x21a>
 8000a32:	eba1 010c 	sub.w	r1, r1, ip
 8000a36:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000a3a:	fa1f fe8c 	uxth.w	lr, ip
 8000a3e:	2601      	movs	r6, #1
 8000a40:	0c20      	lsrs	r0, r4, #16
 8000a42:	fbb1 f3f7 	udiv	r3, r1, r7
 8000a46:	fb07 1113 	mls	r1, r7, r3, r1
 8000a4a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000a4e:	fb0e f003 	mul.w	r0, lr, r3
 8000a52:	4288      	cmp	r0, r1
 8000a54:	d908      	bls.n	8000a68 <__udivmoddi4+0x12c>
 8000a56:	eb1c 0101 	adds.w	r1, ip, r1
 8000a5a:	f103 38ff 	add.w	r8, r3, #4294967295
 8000a5e:	d202      	bcs.n	8000a66 <__udivmoddi4+0x12a>
 8000a60:	4288      	cmp	r0, r1
 8000a62:	f200 80cb 	bhi.w	8000bfc <__udivmoddi4+0x2c0>
 8000a66:	4643      	mov	r3, r8
 8000a68:	1a09      	subs	r1, r1, r0
 8000a6a:	b2a4      	uxth	r4, r4
 8000a6c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000a70:	fb07 1110 	mls	r1, r7, r0, r1
 8000a74:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000a78:	fb0e fe00 	mul.w	lr, lr, r0
 8000a7c:	45a6      	cmp	lr, r4
 8000a7e:	d908      	bls.n	8000a92 <__udivmoddi4+0x156>
 8000a80:	eb1c 0404 	adds.w	r4, ip, r4
 8000a84:	f100 31ff 	add.w	r1, r0, #4294967295
 8000a88:	d202      	bcs.n	8000a90 <__udivmoddi4+0x154>
 8000a8a:	45a6      	cmp	lr, r4
 8000a8c:	f200 80bb 	bhi.w	8000c06 <__udivmoddi4+0x2ca>
 8000a90:	4608      	mov	r0, r1
 8000a92:	eba4 040e 	sub.w	r4, r4, lr
 8000a96:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000a9a:	e79c      	b.n	80009d6 <__udivmoddi4+0x9a>
 8000a9c:	f1c6 0720 	rsb	r7, r6, #32
 8000aa0:	40b3      	lsls	r3, r6
 8000aa2:	fa22 fc07 	lsr.w	ip, r2, r7
 8000aa6:	ea4c 0c03 	orr.w	ip, ip, r3
 8000aaa:	fa20 f407 	lsr.w	r4, r0, r7
 8000aae:	fa01 f306 	lsl.w	r3, r1, r6
 8000ab2:	431c      	orrs	r4, r3
 8000ab4:	40f9      	lsrs	r1, r7
 8000ab6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000aba:	fa00 f306 	lsl.w	r3, r0, r6
 8000abe:	fbb1 f8f9 	udiv	r8, r1, r9
 8000ac2:	0c20      	lsrs	r0, r4, #16
 8000ac4:	fa1f fe8c 	uxth.w	lr, ip
 8000ac8:	fb09 1118 	mls	r1, r9, r8, r1
 8000acc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ad0:	fb08 f00e 	mul.w	r0, r8, lr
 8000ad4:	4288      	cmp	r0, r1
 8000ad6:	fa02 f206 	lsl.w	r2, r2, r6
 8000ada:	d90b      	bls.n	8000af4 <__udivmoddi4+0x1b8>
 8000adc:	eb1c 0101 	adds.w	r1, ip, r1
 8000ae0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ae4:	f080 8088 	bcs.w	8000bf8 <__udivmoddi4+0x2bc>
 8000ae8:	4288      	cmp	r0, r1
 8000aea:	f240 8085 	bls.w	8000bf8 <__udivmoddi4+0x2bc>
 8000aee:	f1a8 0802 	sub.w	r8, r8, #2
 8000af2:	4461      	add	r1, ip
 8000af4:	1a09      	subs	r1, r1, r0
 8000af6:	b2a4      	uxth	r4, r4
 8000af8:	fbb1 f0f9 	udiv	r0, r1, r9
 8000afc:	fb09 1110 	mls	r1, r9, r0, r1
 8000b00:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000b04:	fb00 fe0e 	mul.w	lr, r0, lr
 8000b08:	458e      	cmp	lr, r1
 8000b0a:	d908      	bls.n	8000b1e <__udivmoddi4+0x1e2>
 8000b0c:	eb1c 0101 	adds.w	r1, ip, r1
 8000b10:	f100 34ff 	add.w	r4, r0, #4294967295
 8000b14:	d26c      	bcs.n	8000bf0 <__udivmoddi4+0x2b4>
 8000b16:	458e      	cmp	lr, r1
 8000b18:	d96a      	bls.n	8000bf0 <__udivmoddi4+0x2b4>
 8000b1a:	3802      	subs	r0, #2
 8000b1c:	4461      	add	r1, ip
 8000b1e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000b22:	fba0 9402 	umull	r9, r4, r0, r2
 8000b26:	eba1 010e 	sub.w	r1, r1, lr
 8000b2a:	42a1      	cmp	r1, r4
 8000b2c:	46c8      	mov	r8, r9
 8000b2e:	46a6      	mov	lr, r4
 8000b30:	d356      	bcc.n	8000be0 <__udivmoddi4+0x2a4>
 8000b32:	d053      	beq.n	8000bdc <__udivmoddi4+0x2a0>
 8000b34:	b15d      	cbz	r5, 8000b4e <__udivmoddi4+0x212>
 8000b36:	ebb3 0208 	subs.w	r2, r3, r8
 8000b3a:	eb61 010e 	sbc.w	r1, r1, lr
 8000b3e:	fa01 f707 	lsl.w	r7, r1, r7
 8000b42:	fa22 f306 	lsr.w	r3, r2, r6
 8000b46:	40f1      	lsrs	r1, r6
 8000b48:	431f      	orrs	r7, r3
 8000b4a:	e9c5 7100 	strd	r7, r1, [r5]
 8000b4e:	2600      	movs	r6, #0
 8000b50:	4631      	mov	r1, r6
 8000b52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b56:	f1c2 0320 	rsb	r3, r2, #32
 8000b5a:	40d8      	lsrs	r0, r3
 8000b5c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000b60:	fa21 f303 	lsr.w	r3, r1, r3
 8000b64:	4091      	lsls	r1, r2
 8000b66:	4301      	orrs	r1, r0
 8000b68:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000b6c:	fa1f fe8c 	uxth.w	lr, ip
 8000b70:	fbb3 f0f7 	udiv	r0, r3, r7
 8000b74:	fb07 3610 	mls	r6, r7, r0, r3
 8000b78:	0c0b      	lsrs	r3, r1, #16
 8000b7a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000b7e:	fb00 f60e 	mul.w	r6, r0, lr
 8000b82:	429e      	cmp	r6, r3
 8000b84:	fa04 f402 	lsl.w	r4, r4, r2
 8000b88:	d908      	bls.n	8000b9c <__udivmoddi4+0x260>
 8000b8a:	eb1c 0303 	adds.w	r3, ip, r3
 8000b8e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000b92:	d22f      	bcs.n	8000bf4 <__udivmoddi4+0x2b8>
 8000b94:	429e      	cmp	r6, r3
 8000b96:	d92d      	bls.n	8000bf4 <__udivmoddi4+0x2b8>
 8000b98:	3802      	subs	r0, #2
 8000b9a:	4463      	add	r3, ip
 8000b9c:	1b9b      	subs	r3, r3, r6
 8000b9e:	b289      	uxth	r1, r1
 8000ba0:	fbb3 f6f7 	udiv	r6, r3, r7
 8000ba4:	fb07 3316 	mls	r3, r7, r6, r3
 8000ba8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000bac:	fb06 f30e 	mul.w	r3, r6, lr
 8000bb0:	428b      	cmp	r3, r1
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x28a>
 8000bb4:	eb1c 0101 	adds.w	r1, ip, r1
 8000bb8:	f106 38ff 	add.w	r8, r6, #4294967295
 8000bbc:	d216      	bcs.n	8000bec <__udivmoddi4+0x2b0>
 8000bbe:	428b      	cmp	r3, r1
 8000bc0:	d914      	bls.n	8000bec <__udivmoddi4+0x2b0>
 8000bc2:	3e02      	subs	r6, #2
 8000bc4:	4461      	add	r1, ip
 8000bc6:	1ac9      	subs	r1, r1, r3
 8000bc8:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000bcc:	e738      	b.n	8000a40 <__udivmoddi4+0x104>
 8000bce:	462e      	mov	r6, r5
 8000bd0:	4628      	mov	r0, r5
 8000bd2:	e705      	b.n	80009e0 <__udivmoddi4+0xa4>
 8000bd4:	4606      	mov	r6, r0
 8000bd6:	e6e3      	b.n	80009a0 <__udivmoddi4+0x64>
 8000bd8:	4618      	mov	r0, r3
 8000bda:	e6f8      	b.n	80009ce <__udivmoddi4+0x92>
 8000bdc:	454b      	cmp	r3, r9
 8000bde:	d2a9      	bcs.n	8000b34 <__udivmoddi4+0x1f8>
 8000be0:	ebb9 0802 	subs.w	r8, r9, r2
 8000be4:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000be8:	3801      	subs	r0, #1
 8000bea:	e7a3      	b.n	8000b34 <__udivmoddi4+0x1f8>
 8000bec:	4646      	mov	r6, r8
 8000bee:	e7ea      	b.n	8000bc6 <__udivmoddi4+0x28a>
 8000bf0:	4620      	mov	r0, r4
 8000bf2:	e794      	b.n	8000b1e <__udivmoddi4+0x1e2>
 8000bf4:	4640      	mov	r0, r8
 8000bf6:	e7d1      	b.n	8000b9c <__udivmoddi4+0x260>
 8000bf8:	46d0      	mov	r8, sl
 8000bfa:	e77b      	b.n	8000af4 <__udivmoddi4+0x1b8>
 8000bfc:	3b02      	subs	r3, #2
 8000bfe:	4461      	add	r1, ip
 8000c00:	e732      	b.n	8000a68 <__udivmoddi4+0x12c>
 8000c02:	4630      	mov	r0, r6
 8000c04:	e709      	b.n	8000a1a <__udivmoddi4+0xde>
 8000c06:	4464      	add	r4, ip
 8000c08:	3802      	subs	r0, #2
 8000c0a:	e742      	b.n	8000a92 <__udivmoddi4+0x156>

08000c0c <__aeabi_idiv0>:
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000c10:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000c48 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000c14:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000c16:	e003      	b.n	8000c20 <LoopCopyDataInit>

08000c18 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000c18:	4b0c      	ldr	r3, [pc, #48]	; (8000c4c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000c1a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000c1c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000c1e:	3104      	adds	r1, #4

08000c20 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000c20:	480b      	ldr	r0, [pc, #44]	; (8000c50 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000c22:	4b0c      	ldr	r3, [pc, #48]	; (8000c54 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000c24:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000c26:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000c28:	d3f6      	bcc.n	8000c18 <CopyDataInit>
  ldr  r2, =_sbss
 8000c2a:	4a0b      	ldr	r2, [pc, #44]	; (8000c58 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000c2c:	e002      	b.n	8000c34 <LoopFillZerobss>

08000c2e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000c2e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000c30:	f842 3b04 	str.w	r3, [r2], #4

08000c34 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000c34:	4b09      	ldr	r3, [pc, #36]	; (8000c5c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000c36:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000c38:	d3f9      	bcc.n	8000c2e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000c3a:	f009 fc9d 	bl	800a578 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000c3e:	f024 fef7 	bl	8025a30 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000c42:	f000 ffcb 	bl	8001bdc <main>
  bx  lr    
 8000c46:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000c48:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000c4c:	08029214 	.word	0x08029214
  ldr  r0, =_sdata
 8000c50:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000c54:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 8000c58:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 8000c5c:	2000df20 	.word	0x2000df20

08000c60 <CAN1_RX0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000c60:	e7fe      	b.n	8000c60 <CAN1_RX0_IRQHandler>

08000c62 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8000c62:	f000 be45 	b.w	80018f0 <touchgfx_init>

08000c66 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000c66:	f000 beb7 	b.w	80019d8 <touchgfx_taskEntry>

08000c6a <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000c6a:	2100      	movs	r1, #0
 8000c6c:	4608      	mov	r0, r1
 8000c6e:	f008 bfeb 	b.w	8009c48 <BSP_PB_Init>

08000c72 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000c72:	2000      	movs	r0, #0
 8000c74:	f009 b822 	b.w	8009cbc <BSP_PB_GetState>

08000c78 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000c78:	6840      	ldr	r0, [r0, #4]
    }
 8000c7a:	4770      	bx	lr

08000c7c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000c7c:	6041      	str	r1, [r0, #4]
    }
 8000c7e:	4770      	bx	lr

08000c80 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000c80:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000c84:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000c88:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000c8c:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000c90:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000c94:	6813      	ldr	r3, [r2, #0]
 8000c96:	f043 0301 	orr.w	r3, r3, #1
 8000c9a:	6013      	str	r3, [r2, #0]
}
 8000c9c:	4770      	bx	lr

08000c9e <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000c9e:	1a51      	subs	r1, r2, r1
 8000ca0:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000ca4:	fbb1 f0f3 	udiv	r0, r1, r3
 8000ca8:	4770      	bx	lr
	...

08000cac <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000cac:	4b01      	ldr	r3, [pc, #4]	; (8000cb4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000cae:	6858      	ldr	r0, [r3, #4]
}
 8000cb0:	4770      	bx	lr
 8000cb2:	bf00      	nop
 8000cb4:	e0001000 	.word	0xe0001000

08000cb8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000cb8:	4770      	bx	lr

08000cba <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000cba:	b510      	push	{r4, lr}
 8000cbc:	210c      	movs	r1, #12
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	f024 fe3d 	bl	802593e <_ZdlPvj>
 8000cc4:	4620      	mov	r0, r4
 8000cc6:	bd10      	pop	{r4, pc}

08000cc8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000cc8:	6803      	ldr	r3, [r0, #0]
{
 8000cca:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000ccc:	691b      	ldr	r3, [r3, #16]
{
 8000cce:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000cd0:	b131      	cbz	r1, 8000ce0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000cd2:	4798      	blx	r3
 8000cd4:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000cd6:	6863      	ldr	r3, [r4, #4]
 8000cd8:	1a9b      	subs	r3, r3, r2
 8000cda:	4418      	add	r0, r3
 8000cdc:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000cde:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000ce0:	4798      	blx	r3
 8000ce2:	60a0      	str	r0, [r4, #8]
}
 8000ce4:	e7fb      	b.n	8000cde <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000ce6 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000ce6:	4770      	bx	lr

08000ce8 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000ce8:	4770      	bx	lr
	...

08000cec <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000cec:	b508      	push	{r3, lr}
    Buttons::init();
 8000cee:	f7ff ffbc 	bl	8000c6a <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000cf2:	4b02      	ldr	r3, [pc, #8]	; (8000cfc <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	601a      	str	r2, [r3, #0]
}
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	2000015c 	.word	0x2000015c

08000d00 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000d00:	b570      	push	{r4, r5, r6, lr}
 8000d02:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000d04:	f7ff ffb5 	bl	8000c72 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000d08:	4a0b      	ldr	r2, [pc, #44]	; (8000d38 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000d0a:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000d0c:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000d0e:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000d10:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000d12:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000d14:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000d18:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000d1a:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000d1c:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000d1e:	d00a      	beq.n	8000d36 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000d20:	f016 0001 	ands.w	r0, r6, #1
 8000d24:	d007      	beq.n	8000d36 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000d26:	f011 0001 	ands.w	r0, r1, #1
 8000d2a:	d004      	beq.n	8000d36 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000d2c:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000d2e:	bf5a      	itte	pl
 8000d30:	2001      	movpl	r0, #1
 8000d32:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000d34:	2000      	movmi	r0, #0
}
 8000d36:	bd70      	pop	{r4, r5, r6, pc}
 8000d38:	2000015c 	.word	0x2000015c

08000d3c <_ZN8touchgfx10KeySamplerD0Ev>:
 8000d3c:	b510      	push	{r4, lr}
 8000d3e:	2104      	movs	r1, #4
 8000d40:	4604      	mov	r4, r0
 8000d42:	f024 fdfc 	bl	802593e <_ZdlPvj>
 8000d46:	4620      	mov	r0, r4
 8000d48:	bd10      	pop	{r4, pc}

08000d4a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000d4a:	4770      	bx	lr

08000d4c <_ZN20STM32TouchControllerD0Ev>:
 8000d4c:	b510      	push	{r4, lr}
 8000d4e:	2104      	movs	r1, #4
 8000d50:	4604      	mov	r4, r0
 8000d52:	f024 fdf4 	bl	802593e <_ZdlPvj>
 8000d56:	4620      	mov	r0, r4
 8000d58:	bd10      	pop	{r4, pc}
	...

08000d5c <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000d5c:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000d5e:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000d62:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000d66:	f009 fb59 	bl	800a41c <BSP_TS_Init>
 8000d6a:	4b07      	ldr	r3, [pc, #28]	; (8000d88 <_ZN20STM32TouchController4initEv+0x2c>)
 8000d6c:	b910      	cbnz	r0, 8000d74 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000d6e:	2201      	movs	r2, #1
 8000d70:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000d72:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000d74:	781b      	ldrb	r3, [r3, #0]
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d1fb      	bne.n	8000d72 <_ZN20STM32TouchController4initEv+0x16>
 8000d7a:	4b04      	ldr	r3, [pc, #16]	; (8000d8c <_ZN20STM32TouchController4initEv+0x30>)
 8000d7c:	4a04      	ldr	r2, [pc, #16]	; (8000d90 <_ZN20STM32TouchController4initEv+0x34>)
 8000d7e:	4805      	ldr	r0, [pc, #20]	; (8000d94 <_ZN20STM32TouchController4initEv+0x38>)
 8000d80:	2127      	movs	r1, #39	; 0x27
 8000d82:	f024 fe0b 	bl	802599c <__assert_func>
 8000d86:	bf00      	nop
 8000d88:	20000160 	.word	0x20000160
 8000d8c:	08026b98 	.word	0x08026b98
 8000d90:	08026bab 	.word	0x08026bab
 8000d94:	08026bd5 	.word	0x08026bd5

08000d98 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000d98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000d9a:	4b0b      	ldr	r3, [pc, #44]	; (8000dc8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000d9c:	781c      	ldrb	r4, [r3, #0]
{
 8000d9e:	460e      	mov	r6, r1
 8000da0:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000da2:	b15c      	cbz	r4, 8000dbc <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000da4:	a801      	add	r0, sp, #4
 8000da6:	f009 fb71 	bl	800a48c <BSP_TS_GetState>
        if (state.touchDetected)
 8000daa:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000dae:	b143      	cbz	r3, 8000dc2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000db0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000db4:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000db6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000dba:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000dbc:	4620      	mov	r0, r4
 8000dbe:	b004      	add	sp, #16
 8000dc0:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000dc2:	461c      	mov	r4, r3
 8000dc4:	e7fa      	b.n	8000dbc <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000dc6:	bf00      	nop
 8000dc8:	20000160 	.word	0x20000160

08000dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000dcc:	2803      	cmp	r0, #3
 8000dce:	d823      	bhi.n	8000e18 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000dd0:	e8df f000 	tbb	[pc, r0]
 8000dd4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000dd8:	4b10      	ldr	r3, [pc, #64]	; (8000e1c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000dda:	681a      	ldr	r2, [r3, #0]
 8000ddc:	fab2 f282 	clz	r2, r2
 8000de0:	0952      	lsrs	r2, r2, #5
 8000de2:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000de4:	480e      	ldr	r0, [pc, #56]	; (8000e20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000de6:	f00a be4d 	b.w	800ba84 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000dec:	685a      	ldr	r2, [r3, #4]
 8000dee:	fab2 f282 	clz	r2, r2
 8000df2:	0952      	lsrs	r2, r2, #5
 8000df4:	2140      	movs	r1, #64	; 0x40
 8000df6:	e7f5      	b.n	8000de4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000df8:	4b08      	ldr	r3, [pc, #32]	; (8000e1c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000dfa:	689a      	ldr	r2, [r3, #8]
 8000dfc:	fab2 f282 	clz	r2, r2
 8000e00:	0952      	lsrs	r2, r2, #5
 8000e02:	2102      	movs	r1, #2
 8000e04:	e7ee      	b.n	8000de4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000e06:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000e08:	4806      	ldr	r0, [pc, #24]	; (8000e24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8000e0a:	68da      	ldr	r2, [r3, #12]
 8000e0c:	fab2 f282 	clz	r2, r2
 8000e10:	0952      	lsrs	r2, r2, #5
 8000e12:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000e16:	e7e6      	b.n	8000de6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop
 8000e1c:	20000164 	.word	0x20000164
 8000e20:	40020000 	.word	0x40020000
 8000e24:	40021800 	.word	0x40021800

08000e28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000e28:	2803      	cmp	r0, #3
 8000e2a:	d823      	bhi.n	8000e74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8000e2c:	e8df f000 	tbb	[pc, r0]
 8000e30:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000e34:	4b10      	ldr	r3, [pc, #64]	; (8000e78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000e36:	681a      	ldr	r2, [r3, #0]
 8000e38:	3a00      	subs	r2, #0
 8000e3a:	bf18      	it	ne
 8000e3c:	2201      	movne	r2, #1
 8000e3e:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000e40:	480e      	ldr	r0, [pc, #56]	; (8000e7c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000e42:	f00a be1f 	b.w	800ba84 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000e46:	4b0c      	ldr	r3, [pc, #48]	; (8000e78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000e48:	685a      	ldr	r2, [r3, #4]
 8000e4a:	3a00      	subs	r2, #0
 8000e4c:	bf18      	it	ne
 8000e4e:	2201      	movne	r2, #1
 8000e50:	2140      	movs	r1, #64	; 0x40
 8000e52:	e7f5      	b.n	8000e40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000e54:	4b08      	ldr	r3, [pc, #32]	; (8000e78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000e56:	689a      	ldr	r2, [r3, #8]
 8000e58:	3a00      	subs	r2, #0
 8000e5a:	bf18      	it	ne
 8000e5c:	2201      	movne	r2, #1
 8000e5e:	2102      	movs	r1, #2
 8000e60:	e7ee      	b.n	8000e40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000e62:	4b05      	ldr	r3, [pc, #20]	; (8000e78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000e64:	4806      	ldr	r0, [pc, #24]	; (8000e80 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8000e66:	68da      	ldr	r2, [r3, #12]
 8000e68:	3a00      	subs	r2, #0
 8000e6a:	bf18      	it	ne
 8000e6c:	2201      	movne	r2, #1
 8000e6e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000e72:	e7e6      	b.n	8000e42 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000e74:	4770      	bx	lr
 8000e76:	bf00      	nop
 8000e78:	20000164 	.word	0x20000164
 8000e7c:	40020000 	.word	0x40020000
 8000e80:	40021800 	.word	0x40021800

08000e84 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000e84:	2803      	cmp	r0, #3
 8000e86:	d80f      	bhi.n	8000ea8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8000e88:	e8df f000 	tbb	[pc, r0]
 8000e8c:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000e90:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000e92:	4806      	ldr	r0, [pc, #24]	; (8000eac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000e94:	f00a bdfb 	b.w	800ba8e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000e98:	2140      	movs	r1, #64	; 0x40
 8000e9a:	e7fa      	b.n	8000e92 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000e9c:	2102      	movs	r1, #2
 8000e9e:	e7f8      	b.n	8000e92 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000ea0:	4803      	ldr	r0, [pc, #12]	; (8000eb0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 8000ea2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ea6:	e7f5      	b.n	8000e94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8000ea8:	4770      	bx	lr
 8000eaa:	bf00      	nop
 8000eac:	40020000 	.word	0x40020000
 8000eb0:	40021800 	.word	0x40021800

08000eb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000eb4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000eb6:	2803      	cmp	r0, #3
 8000eb8:	d813      	bhi.n	8000ee2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8000eba:	e8df f000 	tbb	[pc, r0]
 8000ebe:	0a02      	.short	0x0a02
 8000ec0:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000ec2:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000ec4:	4808      	ldr	r0, [pc, #32]	; (8000ee8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000ec6:	f00a fdd7 	bl	800ba78 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000eca:	1e43      	subs	r3, r0, #1
 8000ecc:	4258      	negs	r0, r3
 8000ece:	4158      	adcs	r0, r3
 8000ed0:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000ed2:	2140      	movs	r1, #64	; 0x40
 8000ed4:	e7f6      	b.n	8000ec4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000ed6:	2102      	movs	r1, #2
 8000ed8:	e7f4      	b.n	8000ec4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000eda:	4804      	ldr	r0, [pc, #16]	; (8000eec <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8000edc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ee0:	e7f1      	b.n	8000ec6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 8000ee2:	2000      	movs	r0, #0
 8000ee4:	e7f1      	b.n	8000eca <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000ee6:	bf00      	nop
 8000ee8:	40020000 	.word	0x40020000
 8000eec:	40021800 	.word	0x40021800

08000ef0 <_ZN8touchgfx4GPIO4initEv>:
{
 8000ef0:	b570      	push	{r4, r5, r6, lr}
 8000ef2:	4d08      	ldr	r5, [pc, #32]	; (8000f14 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000ef4:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000ef6:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000ef8:	b2e0      	uxtb	r0, r4
 8000efa:	f7ff ffdb 	bl	8000eb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000efe:	b118      	cbz	r0, 8000f08 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000f00:	682b      	ldr	r3, [r5, #0]
 8000f02:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000f04:	bf18      	it	ne
 8000f06:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000f08:	3401      	adds	r4, #1
 8000f0a:	2c05      	cmp	r4, #5
 8000f0c:	f105 0504 	add.w	r5, r5, #4
 8000f10:	d1f2      	bne.n	8000ef8 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000f12:	bd70      	pop	{r4, r5, r6, pc}
 8000f14:	20000164 	.word	0x20000164

08000f18 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f18:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f1a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000f1e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000f22:	4770      	bx	lr

08000f24 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000f24:	2000      	movs	r0, #0
 8000f26:	4770      	bx	lr

08000f28 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000f28:	4b03      	ldr	r3, [pc, #12]	; (8000f38 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000f2a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000f2c:	3900      	subs	r1, #0
 8000f2e:	bf18      	it	ne
 8000f30:	2101      	movne	r1, #1
 8000f32:	7019      	strb	r1, [r3, #0]
    }
 8000f34:	4770      	bx	lr
 8000f36:	bf00      	nop
 8000f38:	2000dc73 	.word	0x2000dc73

08000f3c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f3c:	2000      	movs	r0, #0
 8000f3e:	4770      	bx	lr

08000f40 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f40:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f42:	b10b      	cbz	r3, 8000f48 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f44:	4608      	mov	r0, r1
 8000f46:	4718      	bx	r3
        }
    }
 8000f48:	4770      	bx	lr

08000f4a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f4a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f4e:	4770      	bx	lr

08000f50 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f50:	6840      	ldr	r0, [r0, #4]
 8000f52:	6803      	ldr	r3, [r0, #0]
 8000f54:	699b      	ldr	r3, [r3, #24]
 8000f56:	4718      	bx	r3

08000f58 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000f58:	4770      	bx	lr

08000f5a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000f5a:	4770      	bx	lr

08000f5c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000f5c:	4b01      	ldr	r3, [pc, #4]	; (8000f64 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000f5e:	6818      	ldr	r0, [r3, #0]
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop
 8000f64:	20000174 	.word	0x20000174

08000f68 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000f68:	4770      	bx	lr
	...

08000f6c <_ZN11TouchGFXHAL10initializeEv>:
{
 8000f6c:	b538      	push	{r3, r4, r5, lr}
 8000f6e:	4604      	mov	r4, r0
    mcuInstr.init();
 8000f70:	4d09      	ldr	r5, [pc, #36]	; (8000f98 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 8000f72:	f7ff ffbd 	bl	8000ef0 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000f76:	4620      	mov	r0, r4
 8000f78:	f000 fdae 	bl	8001ad8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000f82:	4628      	mov	r0, r5
 8000f84:	f7ff fe7c 	bl	8000c80 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000f88:	2301      	movs	r3, #1
 8000f8a:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000f8e:	4b03      	ldr	r3, [pc, #12]	; (8000f9c <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000f90:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000f92:	6163      	str	r3, [r4, #20]
}
 8000f94:	bd38      	pop	{r3, r4, r5, pc}
 8000f96:	bf00      	nop
 8000f98:	20000180 	.word	0x20000180
 8000f9c:	2000017c 	.word	0x2000017c

08000fa0 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000fa0:	6803      	ldr	r3, [r0, #0]
{
 8000fa2:	4604      	mov	r4, r0
 8000fa4:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8000fa6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000faa:	4798      	blx	r3
    enableInterrupts();
 8000fac:	6823      	ldr	r3, [r4, #0]
 8000fae:	4620      	mov	r0, r4
 8000fb0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000fb2:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000fb4:	f000 fa2e 	bl	8001414 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000fb8:	6823      	ldr	r3, [r4, #0]
 8000fba:	4620      	mov	r0, r4
 8000fbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000fbe:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000fc0:	2100      	movs	r1, #0
 8000fc2:	4806      	ldr	r0, [pc, #24]	; (8000fdc <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000fc4:	9100      	str	r1, [sp, #0]
 8000fc6:	2329      	movs	r3, #41	; 0x29
 8000fc8:	2215      	movs	r2, #21
 8000fca:	f00a fb44 	bl	800b656 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000fce:	f000 fa21 	bl	8001414 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000fd2:	6823      	ldr	r3, [r4, #0]
 8000fd4:	4620      	mov	r0, r4
 8000fd6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000fd8:	4798      	blx	r3
    for (;;)
 8000fda:	e7f8      	b.n	8000fce <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000fdc:	20004a50 	.word	0x20004a50

08000fe0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000fe0:	b510      	push	{r4, lr}
 8000fe2:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000fe4:	f010 f8fc 	bl	80111e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000fe8:	6823      	ldr	r3, [r4, #0]
 8000fea:	4620      	mov	r0, r4
 8000fec:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000ff4:	4718      	bx	r3

08000ff6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000ff6:	f000 bd6e 	b.w	8001ad6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000ffa <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000ffa:	f000 bd84 	b.w	8001b06 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000ffe <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000ffe:	f000 bd84 	b.w	8001b0a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001002 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001002:	f000 bd57 	b.w	8001ab4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001006 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001006:	f000 bd5d 	b.w	8001ac4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800100a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800100a:	f000 bd81 	b.w	8001b10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08001010 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8001010:	4b02      	ldr	r3, [pc, #8]	; (800101c <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8001012:	2200      	movs	r2, #0
 8001014:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8001016:	f00f bb87 	b.w	8010728 <_ZN8touchgfx3HAL10beginFrameEv>
 800101a:	bf00      	nop
 800101c:	20000014 	.word	0x20000014

08001020 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8001020:	b510      	push	{r4, lr}
 8001022:	4604      	mov	r4, r0
    HAL::endFrame();
 8001024:	f00f fb8c 	bl	8010740 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8001028:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 800102c:	b113      	cbz	r3, 8001034 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800102e:	4b02      	ldr	r3, [pc, #8]	; (8001038 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8001030:	2201      	movs	r2, #1
 8001032:	701a      	strb	r2, [r3, #0]
    }
}
 8001034:	bd10      	pop	{r4, pc}
 8001036:	bf00      	nop
 8001038:	20000014 	.word	0x20000014

0800103c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800103c:	f00f bb38 	b.w	80106b0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001040 <_ZN11TouchGFXHALD0Ev>:
 8001040:	b510      	push	{r4, lr}
 8001042:	217c      	movs	r1, #124	; 0x7c
 8001044:	4604      	mov	r4, r0
 8001046:	f024 fc7a 	bl	802593e <_ZdlPvj>
 800104a:	4620      	mov	r0, r4
 800104c:	bd10      	pop	{r4, pc}

0800104e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800104e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8001052:	b11b      	cbz	r3, 800105c <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001054:	6840      	ldr	r0, [r0, #4]
 8001056:	6803      	ldr	r3, [r0, #0]
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	4718      	bx	r3
    }
 800105c:	4618      	mov	r0, r3
 800105e:	4770      	bx	lr

08001060 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001060:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001062:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001066:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800106a:	4b0c      	ldr	r3, [pc, #48]	; (800109c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800106c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800106e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001070:	d009      	beq.n	8001086 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001072:	b93a      	cbnz	r2, 8001084 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001074:	4a0a      	ldr	r2, [pc, #40]	; (80010a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001076:	490b      	ldr	r1, [pc, #44]	; (80010a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001078:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800107a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800107c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800107e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001080:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001082:	701a      	strb	r2, [r3, #0]
    }
 8001084:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001086:	2a00      	cmp	r2, #0
 8001088:	d0fc      	beq.n	8001084 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800108a:	4a05      	ldr	r2, [pc, #20]	; (80010a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800108c:	4905      	ldr	r1, [pc, #20]	; (80010a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800108e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001090:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001092:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001094:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001096:	2200      	movs	r2, #0
 8001098:	e7f3      	b.n	8001082 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800109a:	bf00      	nop
 800109c:	2000dc6c 	.word	0x2000dc6c
 80010a0:	2000dc68 	.word	0x2000dc68
 80010a4:	2000dc6a 	.word	0x2000dc6a

080010a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80010a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80010aa:	4b09      	ldr	r3, [pc, #36]	; (80010d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80010ac:	881b      	ldrh	r3, [r3, #0]
 80010ae:	428b      	cmp	r3, r1
 80010b0:	d803      	bhi.n	80010ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80010b2:	4b08      	ldr	r3, [pc, #32]	; (80010d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80010b4:	881b      	ldrh	r3, [r3, #0]
 80010b6:	4293      	cmp	r3, r2
 80010b8:	d905      	bls.n	80010c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80010ba:	4b07      	ldr	r3, [pc, #28]	; (80010d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80010bc:	4a07      	ldr	r2, [pc, #28]	; (80010dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80010be:	4808      	ldr	r0, [pc, #32]	; (80010e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80010c0:	219e      	movs	r1, #158	; 0x9e
 80010c2:	f024 fc6b 	bl	802599c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80010c6:	4b07      	ldr	r3, [pc, #28]	; (80010e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80010c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80010ca:	4b07      	ldr	r3, [pc, #28]	; (80010e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80010cc:	801a      	strh	r2, [r3, #0]
    }
 80010ce:	bd08      	pop	{r3, pc}
 80010d0:	2000dc68 	.word	0x2000dc68
 80010d4:	2000dc6a 	.word	0x2000dc6a
 80010d8:	08026c3c 	.word	0x08026c3c
 80010dc:	08026c9f 	.word	0x08026c9f
 80010e0:	08026ce2 	.word	0x08026ce2
 80010e4:	2000dc6e 	.word	0x2000dc6e
 80010e8:	2000dc70 	.word	0x2000dc70

080010ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80010ec:	b570      	push	{r4, r5, r6, lr}
 80010ee:	460d      	mov	r5, r1
 80010f0:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 80010f2:	4b0b      	ldr	r3, [pc, #44]	; (8001120 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80010f4:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80010f6:	b935      	cbnz	r5, 8001106 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 80010f8:	4b0a      	ldr	r3, [pc, #40]	; (8001124 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80010fa:	4a0b      	ldr	r2, [pc, #44]	; (8001128 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80010fc:	480b      	ldr	r0, [pc, #44]	; (800112c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80010fe:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001102:	f024 fc4b 	bl	802599c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001106:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800110a:	4b09      	ldr	r3, [pc, #36]	; (8001130 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 800110c:	3a00      	subs	r2, #0
 800110e:	bf18      	it	ne
 8001110:	2201      	movne	r2, #1
 8001112:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001114:	6803      	ldr	r3, [r0, #0]
}
 8001116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800111a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800111e:	4718      	bx	r3
 8001120:	20000174 	.word	0x20000174
 8001124:	08026d27 	.word	0x08026d27
 8001128:	08026d5f 	.word	0x08026d5f
 800112c:	08026ce2 	.word	0x08026ce2
 8001130:	2000dc72 	.word	0x2000dc72

08001134 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8001134:	2801      	cmp	r0, #1
    {
 8001136:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8001138:	d80a      	bhi.n	8001150 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 800113a:	784b      	ldrb	r3, [r1, #1]
 800113c:	9300      	str	r3, [sp, #0]
 800113e:	780b      	ldrb	r3, [r1, #0]
 8001140:	4808      	ldr	r0, [pc, #32]	; (8001164 <DSI_IO_WriteCmd+0x30>)
 8001142:	2215      	movs	r2, #21
 8001144:	2100      	movs	r1, #0
 8001146:	f00a fa86 	bl	800b656 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 800114a:	b003      	add	sp, #12
 800114c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8001150:	9101      	str	r1, [sp, #4]
 8001152:	5c0b      	ldrb	r3, [r1, r0]
 8001154:	9300      	str	r3, [sp, #0]
 8001156:	2239      	movs	r2, #57	; 0x39
 8001158:	4603      	mov	r3, r0
 800115a:	2100      	movs	r1, #0
 800115c:	4801      	ldr	r0, [pc, #4]	; (8001164 <DSI_IO_WriteCmd+0x30>)
 800115e:	f00a fa8b 	bl	800b678 <HAL_DSI_LongWrite>
    }
 8001162:	e7f2      	b.n	800114a <DSI_IO_WriteCmd+0x16>
 8001164:	20004a50 	.word	0x20004a50

08001168 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001168:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 800116a:	4a0b      	ldr	r2, [pc, #44]	; (8001198 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 800116c:	4c0b      	ldr	r4, [pc, #44]	; (800119c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 800116e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8001170:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8001172:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8001174:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001176:	9201      	str	r2, [sp, #4]
 8001178:	2244      	movs	r2, #68	; 0x44
 800117a:	9200      	str	r2, [sp, #0]
 800117c:	2100      	movs	r1, #0
 800117e:	2239      	movs	r2, #57	; 0x39
 8001180:	4620      	mov	r0, r4
 8001182:	f00a fa79 	bl	800b678 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8001186:	2100      	movs	r1, #0
 8001188:	9100      	str	r1, [sp, #0]
 800118a:	2335      	movs	r3, #53	; 0x35
 800118c:	462a      	mov	r2, r5
 800118e:	4620      	mov	r0, r4
 8001190:	f00a fa61 	bl	800b656 <HAL_DSI_ShortWrite>
    }
 8001194:	b003      	add	sp, #12
 8001196:	bd30      	pop	{r4, r5, pc}
 8001198:	2000018c 	.word	0x2000018c
 800119c:	20004a50 	.word	0x20004a50

080011a0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 80011a0:	b507      	push	{r0, r1, r2, lr}
 80011a2:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 80011a4:	f7ff ffe0 	bl	8001168 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80011a8:	9801      	ldr	r0, [sp, #4]
}
 80011aa:	b003      	add	sp, #12
 80011ac:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80011b0:	f000 bc90 	b.w	8001ad4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080011b4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 80011b4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 80011b6:	4b07      	ldr	r3, [pc, #28]	; (80011d4 <LCD_SetUpdateRegion+0x20>)
 80011b8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80011bc:	232a      	movs	r3, #42	; 0x2a
 80011be:	9001      	str	r0, [sp, #4]
 80011c0:	9300      	str	r3, [sp, #0]
 80011c2:	2239      	movs	r2, #57	; 0x39
 80011c4:	2304      	movs	r3, #4
 80011c6:	2100      	movs	r1, #0
 80011c8:	4803      	ldr	r0, [pc, #12]	; (80011d8 <LCD_SetUpdateRegion+0x24>)
 80011ca:	f00a fa55 	bl	800b678 <HAL_DSI_LongWrite>
    }
 80011ce:	b003      	add	sp, #12
 80011d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80011d4:	20000004 	.word	0x20000004
 80011d8:	20004a50 	.word	0x20004a50

080011dc <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 80011dc:	b570      	push	{r4, r5, r6, lr}
        return instance;
 80011de:	4d15      	ldr	r5, [pc, #84]	; (8001234 <HAL_DSI_TearingEffectCallback+0x58>)
 80011e0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 80011e2:	2000      	movs	r0, #0
 80011e4:	f7ff fdf2 	bl	8000dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80011e8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 80011ea:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80011ee:	3301      	adds	r3, #1
 80011f0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 80011f4:	f000 f902 	bl	80013fc <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 80011f8:	4b0f      	ldr	r3, [pc, #60]	; (8001238 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 80011fa:	6828      	ldr	r0, [r5, #0]
 80011fc:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 80011fe:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8001200:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8001204:	b123      	cbz	r3, 8001210 <HAL_DSI_TearingEffectCallback+0x34>
 8001206:	4d0d      	ldr	r5, [pc, #52]	; (800123c <HAL_DSI_TearingEffectCallback+0x60>)
 8001208:	782b      	ldrb	r3, [r5, #0]
 800120a:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 800120e:	b123      	cbz	r3, 800121a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001210:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001214:	2000      	movs	r0, #0
 8001216:	f7ff be07 	b.w	8000e28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 800121a:	f00f ffe1 	bl	80111e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 800121e:	4b08      	ldr	r3, [pc, #32]	; (8001240 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8001220:	4630      	mov	r0, r6
            updateRegion = 0;
 8001222:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8001224:	f7ff ffc6 	bl	80011b4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8001228:	4620      	mov	r0, r4
 800122a:	f00a fa04 	bl	800b636 <HAL_DSI_Refresh>
            displayRefreshing = true;
 800122e:	2301      	movs	r3, #1
 8001230:	702b      	strb	r3, [r5, #0]
    }
 8001232:	bd70      	pop	{r4, r5, r6, pc}
 8001234:	2000dc74 	.word	0x2000dc74
 8001238:	20000014 	.word	0x20000014
 800123c:	2000018e 	.word	0x2000018e
 8001240:	20000178 	.word	0x20000178

08001244 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8001244:	4b33      	ldr	r3, [pc, #204]	; (8001314 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8001246:	681a      	ldr	r2, [r3, #0]
 8001248:	3201      	adds	r2, #1
    {
 800124a:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 800124c:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 800124e:	4b32      	ldr	r3, [pc, #200]	; (8001318 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8001250:	4c32      	ldr	r4, [pc, #200]	; (800131c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8001252:	6819      	ldr	r1, [r3, #0]
 8001254:	4b32      	ldr	r3, [pc, #200]	; (8001320 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8001256:	2a03      	cmp	r2, #3
    {
 8001258:	4605      	mov	r5, r0
        if (updateRegion < 4)
 800125a:	dc2e      	bgt.n	80012ba <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 800125c:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8001260:	f020 0008 	bic.w	r0, r0, #8
 8001264:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001268:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800126c:	fb00 1102 	mla	r1, r0, r2, r1
 8001270:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8001274:	bf0c      	ite	eq
 8001276:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8001278:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 800127a:	3302      	adds	r3, #2
 800127c:	4928      	ldr	r1, [pc, #160]	; (8001320 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800127e:	041b      	lsls	r3, r3, #16
 8001280:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8001284:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8001286:	4b27      	ldr	r3, [pc, #156]	; (8001324 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8001288:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 800128a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 800128e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8001292:	4b25      	ldr	r3, [pc, #148]	; (8001328 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001294:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001298:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 800129a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800129c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 800129e:	f7ff ff89 	bl	80011b4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 80012a2:	4a1e      	ldr	r2, [pc, #120]	; (800131c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 80012a4:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 80012a8:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 80012ac:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 80012ae:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 80012b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 80012b6:	f00a b9be 	b.w	800b636 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 80012ba:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 80012be:	f022 0208 	bic.w	r2, r2, #8
 80012c2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 80012c6:	4a19      	ldr	r2, [pc, #100]	; (800132c <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 80012c8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 80012cc:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 80012ce:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 80012d2:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 80012d4:	4a16      	ldr	r2, [pc, #88]	; (8001330 <HAL_DSI_EndOfRefreshCallback+0xec>)
 80012d6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 80012da:	4a13      	ldr	r2, [pc, #76]	; (8001328 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 80012dc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80012e0:	2201      	movs	r2, #1
 80012e2:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 80012e4:	2000      	movs	r0, #0
 80012e6:	f7ff ff65 	bl	80011b4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 80012ea:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 80012ee:	f043 0308 	orr.w	r3, r3, #8
 80012f2:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012f6:	2000      	movs	r0, #0
 80012f8:	f7ff fd96 	bl	8000e28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 80012fc:	4b0d      	ldr	r3, [pc, #52]	; (8001334 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 80012fe:	2200      	movs	r2, #0
 8001300:	701a      	strb	r2, [r3, #0]
        return instance;
 8001302:	4b0d      	ldr	r3, [pc, #52]	; (8001338 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8001304:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8001306:	b120      	cbz	r0, 8001312 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8001308:	6803      	ldr	r3, [r0, #0]
    }
 800130a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800130e:	6a1b      	ldr	r3, [r3, #32]
 8001310:	4718      	bx	r3
 8001312:	bd70      	pop	{r4, r5, r6, pc}
 8001314:	20000178 	.word	0x20000178
 8001318:	20000174 	.word	0x20000174
 800131c:	40016c00 	.word	0x40016c00
 8001320:	40016800 	.word	0x40016800
 8001324:	00ca01e3 	.word	0x00ca01e3
 8001328:	06800193 	.word	0x06800193
 800132c:	00ca01e2 	.word	0x00ca01e2
 8001330:	00ca0003 	.word	0x00ca0003
 8001334:	2000018e 	.word	0x2000018e
 8001338:	2000dc74 	.word	0x2000dc74

0800133c <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 800133c:	b508      	push	{r3, lr}
        return instance;
 800133e:	4b04      	ldr	r3, [pc, #16]	; (8001350 <IdleTaskHook+0x14>)
 8001340:	4601      	mov	r1, r0
 8001342:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001344:	b101      	cbz	r1, 8001348 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001346:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001348:	f00f ff64 	bl	8011214 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 800134c:	2001      	movs	r0, #1
 800134e:	bd08      	pop	{r3, pc}
 8001350:	2000dc74 	.word	0x2000dc74

08001354 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8001354:	4b05      	ldr	r3, [pc, #20]	; (800136c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8001356:	4806      	ldr	r0, [pc, #24]	; (8001370 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8001358:	2200      	movs	r2, #0
 800135a:	605a      	str	r2, [r3, #4]
 800135c:	609a      	str	r2, [r3, #8]
 800135e:	4a05      	ldr	r2, [pc, #20]	; (8001374 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8001360:	601a      	str	r2, [r3, #0]
 8001362:	4b05      	ldr	r3, [pc, #20]	; (8001378 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8001364:	6003      	str	r3, [r0, #0]
        init();
 8001366:	f7ff bcc1 	b.w	8000cec <_ZN8touchgfx10KeySampler4initEv>
 800136a:	bf00      	nop
 800136c:	20000180 	.word	0x20000180
 8001370:	2000017c 	.word	0x2000017c
 8001374:	08026b5c 	.word	0x08026b5c
 8001378:	08026b84 	.word	0x08026b84

0800137c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800137c:	2101      	movs	r1, #1
{
 800137e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001380:	2200      	movs	r2, #0
 8001382:	4608      	mov	r0, r1
 8001384:	f00c fe27 	bl	800dfd6 <osSemaphoreNew>
 8001388:	4b0a      	ldr	r3, [pc, #40]	; (80013b4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800138a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800138c:	b928      	cbnz	r0, 800139a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800138e:	4b0a      	ldr	r3, [pc, #40]	; (80013b8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001390:	4a0a      	ldr	r2, [pc, #40]	; (80013bc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001392:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001394:	480a      	ldr	r0, [pc, #40]	; (80013c0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001396:	f024 fb01 	bl	802599c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800139a:	2200      	movs	r2, #0
 800139c:	2104      	movs	r1, #4
 800139e:	2001      	movs	r0, #1
 80013a0:	f00c feb6 	bl	800e110 <osMessageQueueNew>
 80013a4:	4b07      	ldr	r3, [pc, #28]	; (80013c4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80013a6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80013a8:	b918      	cbnz	r0, 80013b2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80013aa:	4b07      	ldr	r3, [pc, #28]	; (80013c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80013ac:	4a03      	ldr	r2, [pc, #12]	; (80013bc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80013ae:	212c      	movs	r1, #44	; 0x2c
 80013b0:	e7f0      	b.n	8001394 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80013b2:	bd08      	pop	{r3, pc}
 80013b4:	20000194 	.word	0x20000194
 80013b8:	08026e88 	.word	0x08026e88
 80013bc:	08026ed1 	.word	0x08026ed1
 80013c0:	08026f00 	.word	0x08026f00
 80013c4:	20000190 	.word	0x20000190
 80013c8:	08026f4d 	.word	0x08026f4d

080013cc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80013cc:	4b02      	ldr	r3, [pc, #8]	; (80013d8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80013ce:	f04f 31ff 	mov.w	r1, #4294967295
 80013d2:	6818      	ldr	r0, [r3, #0]
 80013d4:	f00c be49 	b.w	800e06a <osSemaphoreAcquire>
 80013d8:	20000194 	.word	0x20000194

080013dc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80013dc:	4b01      	ldr	r3, [pc, #4]	; (80013e4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80013de:	6818      	ldr	r0, [r3, #0]
 80013e0:	f00c be6e 	b.w	800e0c0 <osSemaphoreRelease>
 80013e4:	20000194 	.word	0x20000194

080013e8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80013e8:	4b02      	ldr	r3, [pc, #8]	; (80013f4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80013ea:	2100      	movs	r1, #0
 80013ec:	6818      	ldr	r0, [r3, #0]
 80013ee:	f00c be3c 	b.w	800e06a <osSemaphoreAcquire>
 80013f2:	bf00      	nop
 80013f4:	20000194 	.word	0x20000194

080013f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80013f8:	f7ff bff0 	b.w	80013dc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080013fc <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80013fc:	4803      	ldr	r0, [pc, #12]	; (800140c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80013fe:	4904      	ldr	r1, [pc, #16]	; (8001410 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001400:	6800      	ldr	r0, [r0, #0]
 8001402:	2300      	movs	r3, #0
 8001404:	461a      	mov	r2, r3
 8001406:	f00c bebe 	b.w	800e186 <osMessageQueuePut>
 800140a:	bf00      	nop
 800140c:	20000190 	.word	0x20000190
 8001410:	20000018 	.word	0x20000018

08001414 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001414:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001416:	4c08      	ldr	r4, [pc, #32]	; (8001438 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001418:	2300      	movs	r3, #0
 800141a:	461a      	mov	r2, r3
 800141c:	a901      	add	r1, sp, #4
 800141e:	6820      	ldr	r0, [r4, #0]
 8001420:	f00c fee1 	bl	800e1e6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001424:	6820      	ldr	r0, [r4, #0]
 8001426:	f04f 33ff 	mov.w	r3, #4294967295
 800142a:	2200      	movs	r2, #0
 800142c:	a901      	add	r1, sp, #4
 800142e:	f00c feda 	bl	800e1e6 <osMessageQueueGet>
}
 8001432:	b002      	add	sp, #8
 8001434:	bd10      	pop	{r4, pc}
 8001436:	bf00      	nop
 8001438:	20000190 	.word	0x20000190

0800143c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 800143c:	6803      	ldr	r3, [r0, #0]
 800143e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001440:	4718      	bx	r3

08001442 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001442:	2001      	movs	r0, #1
 8001444:	4770      	bx	lr

08001446 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001446:	6803      	ldr	r3, [r0, #0]
 8001448:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800144a:	4718      	bx	r3

0800144c <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 800144c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800144e:	2300      	movs	r3, #0
 8001450:	9301      	str	r3, [sp, #4]
 8001452:	4b0d      	ldr	r3, [pc, #52]	; (8001488 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001454:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001456:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800145a:	631a      	str	r2, [r3, #48]	; 0x30
 800145c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800145e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8001462:	9201      	str	r2, [sp, #4]
 8001464:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001466:	691a      	ldr	r2, [r3, #16]
 8001468:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800146c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800146e:	691a      	ldr	r2, [r3, #16]
 8001470:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001474:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001476:	4b05      	ldr	r3, [pc, #20]	; (800148c <_ZN8STM32DMA10initializeEv+0x40>)
 8001478:	4a05      	ldr	r2, [pc, #20]	; (8001490 <_ZN8STM32DMA10initializeEv+0x44>)
 800147a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800147c:	4b05      	ldr	r3, [pc, #20]	; (8001494 <_ZN8STM32DMA10initializeEv+0x48>)
 800147e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001482:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001484:	b002      	add	sp, #8
 8001486:	4770      	bx	lr
 8001488:	40023800 	.word	0x40023800
 800148c:	20004a10 	.word	0x20004a10
 8001490:	080014d9 	.word	0x080014d9
 8001494:	e000e100 	.word	0xe000e100

08001498 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001498:	f240 30ef 	movw	r0, #1007	; 0x3ef
 800149c:	4770      	bx	lr
	...

080014a0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80014a0:	4b05      	ldr	r3, [pc, #20]	; (80014b8 <_ZN8STM32DMAD1Ev+0x18>)
 80014a2:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014a4:	4b05      	ldr	r3, [pc, #20]	; (80014bc <_ZN8STM32DMAD1Ev+0x1c>)
 80014a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80014aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014b2:	f3bf 8f6f 	isb	sy
}
 80014b6:	4770      	bx	lr
 80014b8:	080270ec 	.word	0x080270ec
 80014bc:	e000e100 	.word	0xe000e100

080014c0 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 80014c0:	b510      	push	{r4, lr}
 80014c2:	4604      	mov	r4, r0
}
 80014c4:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 80014c8:	f7ff ffea 	bl	80014a0 <_ZN8STM32DMAD1Ev>
 80014cc:	4620      	mov	r0, r4
 80014ce:	f024 fa36 	bl	802593e <_ZdlPvj>
 80014d2:	4620      	mov	r0, r4
 80014d4:	bd10      	pop	{r4, pc}
	...

080014d8 <DMA2D_XferCpltCallback>:
 80014d8:	4b02      	ldr	r3, [pc, #8]	; (80014e4 <DMA2D_XferCpltCallback+0xc>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80014de:	6803      	ldr	r3, [r0, #0]
 80014e0:	695b      	ldr	r3, [r3, #20]
 80014e2:	4718      	bx	r3
 80014e4:	2000dc74 	.word	0x2000dc74

080014e8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80014e8:	b570      	push	{r4, r5, r6, lr}
 80014ea:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80014ec:	4625      	mov	r5, r4
 80014ee:	4b0a      	ldr	r3, [pc, #40]	; (8001518 <_ZN8STM32DMAC1Ev+0x30>)
 80014f0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80014f2:	2600      	movs	r6, #0
 80014f4:	6060      	str	r0, [r4, #4]
 80014f6:	7226      	strb	r6, [r4, #8]
 80014f8:	7266      	strb	r6, [r4, #9]
 80014fa:	f845 3b20 	str.w	r3, [r5], #32
 80014fe:	2260      	movs	r2, #96	; 0x60
 8001500:	4629      	mov	r1, r5
 8001502:	f00f ffdb 	bl	80114bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001506:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800150a:	60ee      	str	r6, [r5, #12]
 800150c:	3524      	adds	r5, #36	; 0x24
 800150e:	42ab      	cmp	r3, r5
 8001510:	d1fb      	bne.n	800150a <_ZN8STM32DMAC1Ev+0x22>
}
 8001512:	4620      	mov	r0, r4
 8001514:	bd70      	pop	{r4, r5, r6, pc}
 8001516:	bf00      	nop
 8001518:	080270ec 	.word	0x080270ec

0800151c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 800151c:	b508      	push	{r3, lr}
    switch (format)
 800151e:	290b      	cmp	r1, #11
 8001520:	d80b      	bhi.n	800153a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001522:	e8df f001 	tbb	[pc, r1]
 8001526:	0612      	.short	0x0612
 8001528:	0a0a0a10 	.word	0x0a0a0a10
 800152c:	0808080a 	.word	0x0808080a
 8001530:	0808      	.short	0x0808
 8001532:	2001      	movs	r0, #1
}
 8001534:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001536:	2005      	movs	r0, #5
        break;
 8001538:	e7fc      	b.n	8001534 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800153a:	4b05      	ldr	r3, [pc, #20]	; (8001550 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800153c:	4a05      	ldr	r2, [pc, #20]	; (8001554 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800153e:	4806      	ldr	r0, [pc, #24]	; (8001558 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001540:	2166      	movs	r1, #102	; 0x66
 8001542:	f024 fa2b 	bl	802599c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001546:	2000      	movs	r0, #0
 8001548:	e7f4      	b.n	8001534 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800154a:	2002      	movs	r0, #2
    return dma2dColorMode;
 800154c:	e7f2      	b.n	8001534 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800154e:	bf00      	nop
 8001550:	08026f8f 	.word	0x08026f8f
 8001554:	08026faa 	.word	0x08026faa
 8001558:	08026ff4 	.word	0x08026ff4

0800155c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 800155c:	b508      	push	{r3, lr}
    switch (format)
 800155e:	290a      	cmp	r1, #10
 8001560:	d809      	bhi.n	8001576 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001562:	e8df f001 	tbb	[pc, r1]
 8001566:	0610      	.short	0x0610
 8001568:	0808080e 	.word	0x0808080e
 800156c:	06060608 	.word	0x06060608
 8001570:	06          	.byte	0x06
 8001571:	00          	.byte	0x00
 8001572:	2001      	movs	r0, #1
}
 8001574:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001576:	4b05      	ldr	r3, [pc, #20]	; (800158c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001578:	4a05      	ldr	r2, [pc, #20]	; (8001590 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800157a:	4806      	ldr	r0, [pc, #24]	; (8001594 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800157c:	2187      	movs	r1, #135	; 0x87
 800157e:	f024 fa0d 	bl	802599c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001582:	2000      	movs	r0, #0
 8001584:	e7f6      	b.n	8001574 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001586:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001588:	e7f4      	b.n	8001574 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800158a:	bf00      	nop
 800158c:	08026f8f 	.word	0x08026f8f
 8001590:	0802703f 	.word	0x0802703f
 8001594:	08026ff4 	.word	0x08026ff4

08001598 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001598:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800159c:	7f4f      	ldrb	r7, [r1, #29]
{
 800159e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015a0:	4639      	mov	r1, r7
{
 80015a2:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015a4:	f7ff ffba 	bl	800151c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015a8:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015ac:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015ae:	4641      	mov	r1, r8
 80015b0:	4648      	mov	r0, r9
 80015b2:	f7ff ffb3 	bl	800151c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015b6:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015b8:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015ba:	4648      	mov	r0, r9
 80015bc:	f7ff ffce 	bl	800155c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80015c0:	8aa1      	ldrh	r1, [r4, #20]
 80015c2:	8b62      	ldrh	r2, [r4, #26]
 80015c4:	4b42      	ldr	r3, [pc, #264]	; (80016d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80015c6:	1a52      	subs	r2, r2, r1
 80015c8:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80015ca:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80015cc:	8b22      	ldrh	r2, [r4, #24]
 80015ce:	1a52      	subs	r2, r2, r1
 80015d0:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80015d2:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80015d4:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80015d6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80015da:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80015dc:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80015de:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80015e0:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80015e2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80015e4:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80015e6:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 80015ea:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80015ec:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 80015f0:	d026      	beq.n	8001640 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 80015f2:	d810      	bhi.n	8001616 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 80015f4:	2920      	cmp	r1, #32
 80015f6:	ea45 0402 	orr.w	r4, r5, r2
 80015fa:	d061      	beq.n	80016c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80015fc:	2940      	cmp	r1, #64	; 0x40
 80015fe:	d05f      	beq.n	80016c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001600:	2904      	cmp	r1, #4
 8001602:	d05d      	beq.n	80016c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001604:	4b32      	ldr	r3, [pc, #200]	; (80016d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001606:	432a      	orrs	r2, r5
 8001608:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800160c:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800160e:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001610:	d05a      	beq.n	80016c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001612:	4a30      	ldr	r2, [pc, #192]	; (80016d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001614:	e040      	b.n	8001698 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8001616:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800161a:	d007      	beq.n	800162c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 800161c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001620:	d1f0      	bne.n	8001604 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001622:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001626:	f042 0209 	orr.w	r2, r2, #9
 800162a:	e003      	b.n	8001634 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800162c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001630:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001634:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001636:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001638:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800163a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800163c:	6158      	str	r0, [r3, #20]
 800163e:	e02a      	b.n	8001696 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001640:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001642:	432a      	orrs	r2, r5
 8001644:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001648:	1d21      	adds	r1, r4, #4
 800164a:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800164c:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 800164e:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001650:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001652:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001654:	b142      	cbz	r2, 8001668 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001656:	2a01      	cmp	r2, #1
 8001658:	d021      	beq.n	800169e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 800165a:	4b1f      	ldr	r3, [pc, #124]	; (80016d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 800165c:	4a1f      	ldr	r2, [pc, #124]	; (80016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 800165e:	4820      	ldr	r0, [pc, #128]	; (80016e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001660:	f240 1111 	movw	r1, #273	; 0x111
 8001664:	f024 f99a 	bl	802599c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001668:	69da      	ldr	r2, [r3, #28]
 800166a:	8861      	ldrh	r1, [r4, #2]
 800166c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001670:	3901      	subs	r1, #1
 8001672:	f022 0210 	bic.w	r2, r2, #16
 8001676:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800167a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 800167c:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800167e:	4b14      	ldr	r3, [pc, #80]	; (80016d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001680:	69da      	ldr	r2, [r3, #28]
 8001682:	f042 0220 	orr.w	r2, r2, #32
 8001686:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001688:	69da      	ldr	r2, [r3, #28]
 800168a:	0692      	lsls	r2, r2, #26
 800168c:	d4fc      	bmi.n	8001688 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800168e:	2210      	movs	r2, #16
 8001690:	609a      	str	r2, [r3, #8]
            if(blend)
 8001692:	2800      	cmp	r0, #0
 8001694:	d0bd      	beq.n	8001612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001696:	4a13      	ldr	r2, [pc, #76]	; (80016e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001698:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 800169a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800169e:	8862      	ldrh	r2, [r4, #2]
 80016a0:	69d9      	ldr	r1, [r3, #28]
 80016a2:	1e54      	subs	r4, r2, #1
 80016a4:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 80016a8:	f022 0210 	bic.w	r2, r2, #16
 80016ac:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 80016b0:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016b4:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 80016b8:	bf18      	it	ne
 80016ba:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016bc:	61da      	str	r2, [r3, #28]
                break;
 80016be:	e7de      	b.n	800167e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016c0:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 80016c4:	61dc      	str	r4, [r3, #28]
 80016c6:	e7b8      	b.n	800163a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80016c8:	f240 2201 	movw	r2, #513	; 0x201
 80016cc:	e7e4      	b.n	8001698 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 80016ce:	bf00      	nop
 80016d0:	4002b000 	.word	0x4002b000
 80016d4:	00010201 	.word	0x00010201
 80016d8:	0802708a 	.word	0x0802708a
 80016dc:	080270a4 	.word	0x080270a4
 80016e0:	08026ff4 	.word	0x08026ff4
 80016e4:	00020201 	.word	0x00020201

080016e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80016e8:	b570      	push	{r4, r5, r6, lr}
 80016ea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016ec:	7f89      	ldrb	r1, [r1, #30]
 80016ee:	f7ff ff35 	bl	800155c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80016f2:	8aa6      	ldrh	r6, [r4, #20]
 80016f4:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80016f6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80016f8:	4b15      	ldr	r3, [pc, #84]	; (8001750 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016fa:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80016fc:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80016fe:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001702:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001704:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001706:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001708:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800170a:	6826      	ldr	r6, [r4, #0]
 800170c:	68e1      	ldr	r1, [r4, #12]
 800170e:	2e08      	cmp	r6, #8
 8001710:	d10d      	bne.n	800172e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001712:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001714:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001716:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001718:	7f20      	ldrb	r0, [r4, #28]
 800171a:	4a0e      	ldr	r2, [pc, #56]	; (8001754 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 800171c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001720:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001722:	4a0d      	ldr	r2, [pc, #52]	; (8001758 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001724:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001726:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001728:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800172a:	601a      	str	r2, [r3, #0]
    }
}
 800172c:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 800172e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001730:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001732:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001734:	0948      	lsrs	r0, r1, #5
 8001736:	0a0a      	lsrs	r2, r1, #8
 8001738:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 800173c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8001740:	4302      	orrs	r2, r0
 8001742:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001746:	430a      	orrs	r2, r1
 8001748:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800174a:	4a04      	ldr	r2, [pc, #16]	; (800175c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 800174c:	e7ed      	b.n	800172a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800174e:	bf00      	nop
 8001750:	4002b000 	.word	0x4002b000
 8001754:	00010009 	.word	0x00010009
 8001758:	00020201 	.word	0x00020201
 800175c:	00030201 	.word	0x00030201

08001760 <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001760:	4b03      	ldr	r3, [pc, #12]	; (8001770 <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8001762:	681a      	ldr	r2, [r3, #0]
 8001764:	07d2      	lsls	r2, r2, #31
 8001766:	d4fc      	bmi.n	8001762 <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8001768:	2223      	movs	r2, #35	; 0x23
 800176a:	609a      	str	r2, [r3, #8]
    }
 800176c:	4770      	bx	lr
 800176e:	bf00      	nop
 8001770:	4002b000 	.word	0x4002b000

08001774 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8001774:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001776:	4c0f      	ldr	r4, [pc, #60]	; (80017b4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001778:	6825      	ldr	r5, [r4, #0]
 800177a:	07ed      	lsls	r5, r5, #31
 800177c:	d4fc      	bmi.n	8001778 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 800177e:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001780:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8001782:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001784:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001788:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 800178a:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800178c:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800178e:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001790:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8001792:	d00a      	beq.n	80017aa <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001794:	4908      	ldr	r1, [pc, #32]	; (80017b8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001796:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001798:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 800179c:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800179e:	4b07      	ldr	r3, [pc, #28]	; (80017bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 80017a0:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 80017a2:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 80017a4:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80017a6:	6023      	str	r3, [r4, #0]
        }
    }
 80017a8:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80017aa:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 80017ac:	9b03      	ldr	r3, [sp, #12]
 80017ae:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80017b0:	4b03      	ldr	r3, [pc, #12]	; (80017c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 80017b2:	e7f8      	b.n	80017a6 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80017b4:	4002b000 	.word	0x4002b000
 80017b8:	00010009 	.word	0x00010009
 80017bc:	00020001 	.word	0x00020001
 80017c0:	00030001 	.word	0x00030001

080017c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80017c4:	2001      	movs	r0, #1
 80017c6:	4770      	bx	lr

080017c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80017c8:	200c      	movs	r0, #12
 80017ca:	4770      	bx	lr

080017cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80017cc:	230c      	movs	r3, #12
 80017ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017d2:	3008      	adds	r0, #8
 80017d4:	4770      	bx	lr

080017d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80017d6:	230c      	movs	r3, #12
 80017d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017dc:	3008      	adds	r0, #8
 80017de:	4770      	bx	lr

080017e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80017e0:	2001      	movs	r0, #1
 80017e2:	4770      	bx	lr

080017e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80017e4:	f243 70dc 	movw	r0, #14300	; 0x37dc
 80017e8:	4770      	bx	lr

080017ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017ea:	f243 73dc 	movw	r3, #14300	; 0x37dc
 80017ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017f2:	3008      	adds	r0, #8
 80017f4:	4770      	bx	lr

080017f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017f6:	f243 73dc 	movw	r3, #14300	; 0x37dc
 80017fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017fe:	3008      	adds	r0, #8
 8001800:	4770      	bx	lr

08001802 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001802:	2001      	movs	r0, #1
 8001804:	4770      	bx	lr

08001806 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001806:	2010      	movs	r0, #16
 8001808:	4770      	bx	lr

0800180a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800180a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800180e:	3008      	adds	r0, #8
 8001810:	4770      	bx	lr

08001812 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001812:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001816:	3008      	adds	r0, #8
 8001818:	4770      	bx	lr

0800181a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800181a:	4608      	mov	r0, r1
 800181c:	f001 b9fe 	b.w	8002c1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001820 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001820:	b510      	push	{r4, lr}
 8001822:	4b03      	ldr	r3, [pc, #12]	; (8001830 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001824:	6003      	str	r3, [r0, #0]
 8001826:	4604      	mov	r4, r0
 8001828:	f00e fc8f 	bl	801014a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800182c:	4620      	mov	r0, r4
 800182e:	bd10      	pop	{r4, pc}
 8001830:	080271a4 	.word	0x080271a4

08001834 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001834:	b510      	push	{r4, lr}
 8001836:	4604      	mov	r4, r0
 8001838:	f7ff fff2 	bl	8001820 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800183c:	4620      	mov	r0, r4
 800183e:	2114      	movs	r1, #20
 8001840:	f024 f87d 	bl	802593e <_ZdlPvj>
 8001844:	4620      	mov	r0, r4
 8001846:	bd10      	pop	{r4, pc}

08001848 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001848:	b510      	push	{r4, lr}
 800184a:	4b03      	ldr	r3, [pc, #12]	; (8001858 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800184c:	6003      	str	r3, [r0, #0]
 800184e:	4604      	mov	r4, r0
 8001850:	f00e fc7b 	bl	801014a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001854:	4620      	mov	r0, r4
 8001856:	bd10      	pop	{r4, pc}
 8001858:	08027170 	.word	0x08027170

0800185c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800185c:	b510      	push	{r4, lr}
 800185e:	4604      	mov	r4, r0
 8001860:	f7ff fff2 	bl	8001848 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001864:	4620      	mov	r0, r4
 8001866:	f243 71e4 	movw	r1, #14308	; 0x37e4
 800186a:	f024 f868 	bl	802593e <_ZdlPvj>
 800186e:	4620      	mov	r0, r4
 8001870:	bd10      	pop	{r4, pc}
	...

08001874 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001874:	b510      	push	{r4, lr}
 8001876:	4b03      	ldr	r3, [pc, #12]	; (8001884 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001878:	6003      	str	r3, [r0, #0]
 800187a:	4604      	mov	r4, r0
 800187c:	f00e fc65 	bl	801014a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001880:	4620      	mov	r0, r4
 8001882:	bd10      	pop	{r4, pc}
 8001884:	0802713c 	.word	0x0802713c

08001888 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001888:	b510      	push	{r4, lr}
 800188a:	4604      	mov	r4, r0
 800188c:	f7ff fff2 	bl	8001874 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001890:	4620      	mov	r0, r4
 8001892:	2118      	movs	r1, #24
 8001894:	f024 f853 	bl	802593e <_ZdlPvj>
 8001898:	4620      	mov	r0, r4
 800189a:	bd10      	pop	{r4, pc}

0800189c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800189c:	b510      	push	{r4, lr}
 800189e:	4b09      	ldr	r3, [pc, #36]	; (80018c4 <_ZN12FrontendHeapD1Ev+0x28>)
 80018a0:	6003      	str	r3, [r0, #0]
 80018a2:	4604      	mov	r4, r0
 80018a4:	f500 5060 	add.w	r0, r0, #14336	; 0x3800
 80018a8:	3010      	adds	r0, #16
 80018aa:	f7ff ffb9 	bl	8001820 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80018ae:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80018b2:	f7ff ffc9 	bl	8001848 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80018b6:	f104 0014 	add.w	r0, r4, #20
 80018ba:	f7ff ffdb 	bl	8001874 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80018be:	4620      	mov	r0, r4
 80018c0:	bd10      	pop	{r4, pc}
 80018c2:	bf00      	nop
 80018c4:	080271d8 	.word	0x080271d8

080018c8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80018c8:	b508      	push	{r3, lr}
 80018ca:	4802      	ldr	r0, [pc, #8]	; (80018d4 <__tcf_0+0xc>)
 80018cc:	f7ff ffe6 	bl	800189c <_ZN12FrontendHeapD1Ev>
 80018d0:	bd08      	pop	{r3, pc}
 80018d2:	bf00      	nop
 80018d4:	2000019c 	.word	0x2000019c

080018d8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80018d8:	b510      	push	{r4, lr}
 80018da:	4604      	mov	r4, r0
 80018dc:	f7ff ffde 	bl	800189c <_ZN12FrontendHeapD1Ev>
 80018e0:	4620      	mov	r0, r4
 80018e2:	f44f 5166 	mov.w	r1, #14720	; 0x3980
 80018e6:	f024 f82a 	bl	802593e <_ZdlPvj>
 80018ea:	4620      	mov	r0, r4
 80018ec:	bd10      	pop	{r4, pc}
	...

080018f0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80018f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80018f4:	f001 f81c 	bl	8002930 <_ZN14BitmapDatabase11getInstanceEv>
 80018f8:	4605      	mov	r5, r0
 80018fa:	f001 f81d 	bl	8002938 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80018fe:	2400      	movs	r4, #0
 8001900:	4601      	mov	r1, r0
 8001902:	4623      	mov	r3, r4
 8001904:	4628      	mov	r0, r5
 8001906:	4622      	mov	r2, r4
 8001908:	9400      	str	r4, [sp, #0]
 800190a:	f017 fef9 	bl	8019700 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800190e:	4b26      	ldr	r3, [pc, #152]	; (80019a8 <touchgfx_init+0xb8>)
 8001910:	4a26      	ldr	r2, [pc, #152]	; (80019ac <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001912:	4d27      	ldr	r5, [pc, #156]	; (80019b0 <touchgfx_init+0xc0>)
 8001914:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001916:	4620      	mov	r0, r4
 8001918:	f007 fa50 	bl	8008dbc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800191c:	4825      	ldr	r0, [pc, #148]	; (80019b4 <touchgfx_init+0xc4>)
 800191e:	f017 fe57 	bl	80195d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001922:	782b      	ldrb	r3, [r5, #0]
 8001924:	f3bf 8f5b 	dmb	ish
 8001928:	07db      	lsls	r3, r3, #31
 800192a:	d436      	bmi.n	800199a <touchgfx_init+0xaa>
 800192c:	4628      	mov	r0, r5
 800192e:	f024 f808 	bl	8025942 <__cxa_guard_acquire>
 8001932:	b390      	cbz	r0, 800199a <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001934:	4c20      	ldr	r4, [pc, #128]	; (80019b8 <touchgfx_init+0xc8>)
 8001936:	4f21      	ldr	r7, [pc, #132]	; (80019bc <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001938:	4b21      	ldr	r3, [pc, #132]	; (80019c0 <touchgfx_init+0xd0>)
 800193a:	6023      	str	r3, [r4, #0]
 800193c:	f107 0618 	add.w	r6, r7, #24
 8001940:	f104 0014 	add.w	r0, r4, #20
 8001944:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001948:	6060      	str	r0, [r4, #4]
 800194a:	f8c4 8008 	str.w	r8, [r4, #8]
 800194e:	60e7      	str	r7, [r4, #12]
 8001950:	6126      	str	r6, [r4, #16]
 8001952:	f00e fbfb 	bl	801014c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001956:	4b1b      	ldr	r3, [pc, #108]	; (80019c4 <touchgfx_init+0xd4>)
 8001958:	6163      	str	r3, [r4, #20]
 800195a:	4640      	mov	r0, r8
 800195c:	f00e fbf6 	bl	801014c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001960:	4b19      	ldr	r3, [pc, #100]	; (80019c8 <touchgfx_init+0xd8>)
 8001962:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001964:	4638      	mov	r0, r7
 8001966:	f00e fbf1 	bl	801014c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800196a:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 800196e:	4a17      	ldr	r2, [pc, #92]	; (80019cc <touchgfx_init+0xdc>)
 8001970:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 8001974:	f603 0024 	addw	r0, r3, #2084	; 0x824
 8001978:	f007 fbec 	bl	8009154 <_ZN5ModelC1Ev>
 800197c:	4622      	mov	r2, r4
 800197e:	f107 0114 	add.w	r1, r7, #20
 8001982:	4630      	mov	r0, r6
 8001984:	f007 fbdc 	bl	8009140 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001988:	4630      	mov	r0, r6
 800198a:	f001 f947 	bl	8002c1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800198e:	4810      	ldr	r0, [pc, #64]	; (80019d0 <touchgfx_init+0xe0>)
 8001990:	f024 f822 	bl	80259d8 <atexit>
 8001994:	4628      	mov	r0, r5
 8001996:	f023 ffe0 	bl	802595a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800199a:	480e      	ldr	r0, [pc, #56]	; (80019d4 <touchgfx_init+0xe4>)
}
 800199c:	b002      	add	sp, #8
 800199e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80019a2:	f7ff bae3 	b.w	8000f6c <_ZN11TouchGFXHAL10initializeEv>
 80019a6:	bf00      	nop
 80019a8:	2000dcd8 	.word	0x2000dcd8
 80019ac:	2000493c 	.word	0x2000493c
 80019b0:	20000198 	.word	0x20000198
 80019b4:	2000001c 	.word	0x2000001c
 80019b8:	2000019c 	.word	0x2000019c
 80019bc:	200039ac 	.word	0x200039ac
 80019c0:	080271d8 	.word	0x080271d8
 80019c4:	0802713c 	.word	0x0802713c
 80019c8:	08027170 	.word	0x08027170
 80019cc:	080271a4 	.word	0x080271a4
 80019d0:	080018c9 	.word	0x080018c9
 80019d4:	200048c0 	.word	0x200048c0

080019d8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80019d8:	4801      	ldr	r0, [pc, #4]	; (80019e0 <touchgfx_taskEntry+0x8>)
 80019da:	f7ff bae1 	b.w	8000fa0 <_ZN11TouchGFXHAL9taskEntryEv>
 80019de:	bf00      	nop
 80019e0:	200048c0 	.word	0x200048c0

080019e4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80019e4:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80019e6:	4e23      	ldr	r6, [pc, #140]	; (8001a74 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80019e8:	4c23      	ldr	r4, [pc, #140]	; (8001a78 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80019ea:	4d24      	ldr	r5, [pc, #144]	; (8001a7c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80019ec:	4b24      	ldr	r3, [pc, #144]	; (8001a80 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80019ee:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80019f0:	4630      	mov	r0, r6
 80019f2:	f7ff fd79 	bl	80014e8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80019f6:	4628      	mov	r0, r5
 80019f8:	f01a ff8c 	bl	801c914 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80019fc:	4b21      	ldr	r3, [pc, #132]	; (8001a84 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019fe:	4822      	ldr	r0, [pc, #136]	; (8001a88 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001a00:	60dc      	str	r4, [r3, #12]
 8001a02:	2200      	movs	r2, #0
 8001a04:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001a08:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001a0c:	491f      	ldr	r1, [pc, #124]	; (8001a8c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001a0e:	861a      	strh	r2, [r3, #48]	; 0x30
 8001a10:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001a14:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001a18:	6759      	str	r1, [r3, #116]	; 0x74
 8001a1a:	2101      	movs	r1, #1
 8001a1c:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001a20:	491b      	ldr	r1, [pc, #108]	; (8001a90 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001a22:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001a24:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001a26:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001a2a:	8001      	strh	r1, [r0, #0]
 8001a2c:	4819      	ldr	r0, [pc, #100]	; (8001a94 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001a2e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001a32:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a34:	4818      	ldr	r0, [pc, #96]	; (8001a98 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001a36:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a38:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001a3c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001a40:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001a44:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001a48:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001a4c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001a50:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001a54:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001a58:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001a5c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a60:	8001      	strh	r1, [r0, #0]
 8001a62:	480e      	ldr	r0, [pc, #56]	; (8001a9c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a64:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a68:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001a6a:	490d      	ldr	r1, [pc, #52]	; (8001aa0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001a6c:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001a6e:	4a0d      	ldr	r2, [pc, #52]	; (8001aa4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001a70:	601a      	str	r2, [r3, #0]
}
 8001a72:	bd70      	pop	{r4, r5, r6, pc}
 8001a74:	20003b20 	.word	0x20003b20
 8001a78:	20003b1c 	.word	0x20003b1c
 8001a7c:	20004940 	.word	0x20004940
 8001a80:	08026c2c 	.word	0x08026c2c
 8001a84:	200048c0 	.word	0x200048c0
 8001a88:	2000dc68 	.word	0x2000dc68
 8001a8c:	01000001 	.word	0x01000001
 8001a90:	2000dc74 	.word	0x2000dc74
 8001a94:	2000dc6e 	.word	0x2000dc6e
 8001a98:	2000dc6a 	.word	0x2000dc6a
 8001a9c:	2000dc70 	.word	0x2000dc70
 8001aa0:	2000dc6c 	.word	0x2000dc6c
 8001aa4:	08026db8 	.word	0x08026db8

08001aa8 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001aa8:	4801      	ldr	r0, [pc, #4]	; (8001ab0 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001aaa:	f7ff bcf9 	b.w	80014a0 <_ZN8STM32DMAD1Ev>
 8001aae:	bf00      	nop
 8001ab0:	20003b20 	.word	0x20003b20

08001ab4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001ab4:	4b02      	ldr	r3, [pc, #8]	; (8001ac0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001ab6:	2290      	movs	r2, #144	; 0x90
 8001ab8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001abc:	4770      	bx	lr
 8001abe:	bf00      	nop
 8001ac0:	e000e100 	.word	0xe000e100

08001ac4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ac4:	4b02      	ldr	r3, [pc, #8]	; (8001ad0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001ac6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001aca:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001acc:	4770      	bx	lr
 8001ace:	bf00      	nop
 8001ad0:	e000e100 	.word	0xe000e100

08001ad4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001ad4:	4770      	bx	lr

08001ad6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001ad6:	4770      	bx	lr

08001ad8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001ad8:	b570      	push	{r4, r5, r6, lr}
 8001ada:	4604      	mov	r4, r0
    HAL::initialize();
 8001adc:	f00e fe3d 	bl	801075a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001ae0:	6823      	ldr	r3, [r4, #0]
 8001ae2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001ae4:	f014 fdb8 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 8001ae8:	4601      	mov	r1, r0
 8001aea:	4620      	mov	r0, r4
 8001aec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001aee:	6823      	ldr	r3, [r4, #0]
 8001af0:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001af4:	2300      	movs	r3, #0
 8001af6:	4620      	mov	r0, r4
 8001af8:	46ac      	mov	ip, r5
 8001afa:	461a      	mov	r2, r3
}
 8001afc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001b00:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001b04:	4760      	bx	ip

08001b06 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001b06:	f00e bdd9 	b.w	80106bc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001b0a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001b0a:	f00e bf32 	b.w	8010972 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08001b10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b10:	4b04      	ldr	r3, [pc, #16]	; (8001b24 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001b12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b1e:	f3bf 8f6f 	isb	sy
}
 8001b22:	4770      	bx	lr
 8001b24:	e000e100 	.word	0xe000e100

08001b28 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001b28:	4901      	ldr	r1, [pc, #4]	; (8001b30 <vApplicationIdleHook+0x8>)
 8001b2a:	2000      	movs	r0, #0
 8001b2c:	f00d be92 	b.w	800f854 <vTaskSetApplicationTaskTag>
 8001b30:	0800133d 	.word	0x0800133d

08001b34 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001b34:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001b36:	2064      	movs	r0, #100	; 0x64
 8001b38:	f00c fa41 	bl	800dfbe <osDelay>
  for(;;)
 8001b3c:	e7fb      	b.n	8001b36 <StartDefaultTask+0x2>
	...

08001b40 <SystemClock_Config>:
{
 8001b40:	b530      	push	{r4, r5, lr}
 8001b42:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b44:	2210      	movs	r2, #16
 8001b46:	2100      	movs	r1, #0
 8001b48:	a809      	add	r0, sp, #36	; 0x24
 8001b4a:	f023 ffb3 	bl	8025ab4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b4e:	2214      	movs	r2, #20
 8001b50:	2100      	movs	r1, #0
 8001b52:	a802      	add	r0, sp, #8
 8001b54:	f023 ffae 	bl	8025ab4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b58:	2400      	movs	r4, #0
 8001b5a:	4b1e      	ldr	r3, [pc, #120]	; (8001bd4 <SystemClock_Config+0x94>)
 8001b5c:	9400      	str	r4, [sp, #0]
 8001b5e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b60:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001b64:	641a      	str	r2, [r3, #64]	; 0x40
 8001b66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b68:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b6c:	9300      	str	r3, [sp, #0]
 8001b6e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b70:	4b19      	ldr	r3, [pc, #100]	; (8001bd8 <SystemClock_Config+0x98>)
 8001b72:	9401      	str	r4, [sp, #4]
 8001b74:	681a      	ldr	r2, [r3, #0]
 8001b76:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001b7a:	601a      	str	r2, [r3, #0]
 8001b7c:	681b      	ldr	r3, [r3, #0]
 8001b7e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001b82:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b84:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001b86:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001b88:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001b8c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001b90:	2502      	movs	r5, #2
 8001b92:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001b96:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001b98:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001b9c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001ba0:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001ba4:	2004      	movs	r0, #4
 8001ba6:	2306      	movs	r3, #6
 8001ba8:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bac:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001bae:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bb0:	f00b fb16 	bl	800d1e0 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001bb4:	f00a fd6a 	bl	800c68c <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001bb8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001bba:	e9cd 3502 	strd	r3, r5, [sp, #8]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001bbe:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001bc0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001bc4:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 8001bc6:	e9cd 3305 	strd	r3, r3, [sp, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001bca:	9404      	str	r4, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001bcc:	f00b f8dc 	bl	800cd88 <HAL_RCC_ClockConfig>
}
 8001bd0:	b015      	add	sp, #84	; 0x54
 8001bd2:	bd30      	pop	{r4, r5, pc}
 8001bd4:	40023800 	.word	0x40023800
 8001bd8:	40007000 	.word	0x40007000

08001bdc <main>:
{
 8001bdc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001be0:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 8001be2:	f008 fcd7 	bl	800a594 <HAL_Init>
  SystemClock_Config();
 8001be6:	f7ff ffab 	bl	8001b40 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bea:	2214      	movs	r2, #20
 8001bec:	2100      	movs	r1, #0
 8001bee:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001bf0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bf2:	f023 ff5f 	bl	8025ab4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001bf6:	4bc7      	ldr	r3, [pc, #796]	; (8001f14 <main+0x338>)
 8001bf8:	9403      	str	r4, [sp, #12]
 8001bfa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bfc:	48c6      	ldr	r0, [pc, #792]	; (8001f18 <main+0x33c>)
  hdma2d.Instance = DMA2D;
 8001bfe:	4fc7      	ldr	r7, [pc, #796]	; (8001f1c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001c00:	f042 0210 	orr.w	r2, r2, #16
 8001c04:	631a      	str	r2, [r3, #48]	; 0x30
 8001c06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c08:	f002 0210 	and.w	r2, r2, #16
 8001c0c:	9203      	str	r2, [sp, #12]
 8001c0e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c10:	9404      	str	r4, [sp, #16]
 8001c12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c14:	f042 0202 	orr.w	r2, r2, #2
 8001c18:	631a      	str	r2, [r3, #48]	; 0x30
 8001c1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c1c:	f002 0202 	and.w	r2, r2, #2
 8001c20:	9204      	str	r2, [sp, #16]
 8001c22:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c24:	9405      	str	r4, [sp, #20]
 8001c26:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c28:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c2c:	631a      	str	r2, [r3, #48]	; 0x30
 8001c2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c30:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c34:	9205      	str	r2, [sp, #20]
 8001c36:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c38:	9406      	str	r4, [sp, #24]
 8001c3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3c:	f042 0208 	orr.w	r2, r2, #8
 8001c40:	631a      	str	r2, [r3, #48]	; 0x30
 8001c42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c44:	f002 0208 	and.w	r2, r2, #8
 8001c48:	9206      	str	r2, [sp, #24]
 8001c4a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001c4c:	9407      	str	r4, [sp, #28]
 8001c4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c50:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001c54:	631a      	str	r2, [r3, #48]	; 0x30
 8001c56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c58:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001c5c:	9207      	str	r2, [sp, #28]
 8001c5e:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c60:	9408      	str	r4, [sp, #32]
 8001c62:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c64:	f042 0220 	orr.w	r2, r2, #32
 8001c68:	631a      	str	r2, [r3, #48]	; 0x30
 8001c6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6c:	f002 0220 	and.w	r2, r2, #32
 8001c70:	9208      	str	r2, [sp, #32]
 8001c72:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001c74:	9409      	str	r4, [sp, #36]	; 0x24
 8001c76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c78:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c7c:	631a      	str	r2, [r3, #48]	; 0x30
 8001c7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c80:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001c84:	9209      	str	r2, [sp, #36]	; 0x24
 8001c86:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001c88:	940a      	str	r4, [sp, #40]	; 0x28
 8001c8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c8c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001c90:	631a      	str	r2, [r3, #48]	; 0x30
 8001c92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c94:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001c98:	920a      	str	r2, [sp, #40]	; 0x28
 8001c9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c9c:	940b      	str	r4, [sp, #44]	; 0x2c
 8001c9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca0:	f042 0201 	orr.w	r2, r2, #1
 8001ca4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ca6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca8:	f002 0201 	and.w	r2, r2, #1
 8001cac:	920b      	str	r2, [sp, #44]	; 0x2c
 8001cae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cb0:	940c      	str	r4, [sp, #48]	; 0x30
 8001cb2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cb4:	f042 0204 	orr.w	r2, r2, #4
 8001cb8:	631a      	str	r2, [r3, #48]	; 0x30
 8001cba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cbc:	f002 0204 	and.w	r2, r2, #4
 8001cc0:	920c      	str	r2, [sp, #48]	; 0x30
 8001cc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001cc4:	940d      	str	r4, [sp, #52]	; 0x34
 8001cc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cc8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ccc:	631a      	str	r2, [r3, #48]	; 0x30
 8001cce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cd0:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001cd4:	4622      	mov	r2, r4
 8001cd6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001cda:	930d      	str	r3, [sp, #52]	; 0x34
 8001cdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001cde:	f009 fed1 	bl	800ba84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_RESET);
 8001ce2:	488f      	ldr	r0, [pc, #572]	; (8001f20 <main+0x344>)
 8001ce4:	4622      	mov	r2, r4
 8001ce6:	2108      	movs	r1, #8
 8001ce8:	f009 fecc 	bl	800ba84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001cec:	488d      	ldr	r0, [pc, #564]	; (8001f24 <main+0x348>)
 8001cee:	4622      	mov	r2, r4
 8001cf0:	2146      	movs	r1, #70	; 0x46
 8001cf2:	f009 fec7 	bl	800ba84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001cf6:	4622      	mov	r2, r4
 8001cf8:	488b      	ldr	r0, [pc, #556]	; (8001f28 <main+0x34c>)
 8001cfa:	2180      	movs	r1, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cfc:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001cfe:	f009 fec1 	bl	800ba84 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d02:	2503      	movs	r5, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d04:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001d08:	4883      	ldr	r0, [pc, #524]	; (8001f18 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d0a:	9530      	str	r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001d0c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d0e:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d12:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001d14:	f009 fd28 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d18:	2208      	movs	r2, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001d1a:	4881      	ldr	r0, [pc, #516]	; (8001f20 <main+0x344>)
 8001d1c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d1e:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d22:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001d26:	f009 fd1f 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001d2a:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2c:	487d      	ldr	r0, [pc, #500]	; (8001f24 <main+0x348>)
 8001d2e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001d30:	f04f 0880 	mov.w	r8, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d34:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d38:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d3c:	f009 fd14 	bl	800b768 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d40:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001d42:	2211      	movs	r2, #17
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d44:	4878      	ldr	r0, [pc, #480]	; (8001f28 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001d46:	e9cd 822d 	strd	r8, r2, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d4a:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d4e:	f009 fd0b 	bl	800b768 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001d52:	4876      	ldr	r0, [pc, #472]	; (8001f2c <main+0x350>)
 8001d54:	4a76      	ldr	r2, [pc, #472]	; (8001f30 <main+0x354>)
 8001d56:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001d58:	f008 ff24 	bl	800aba4 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001d5c:	4a75      	ldr	r2, [pc, #468]	; (8001f34 <main+0x358>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001d5e:	e9c7 440a 	strd	r4, r4, [r7, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d62:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001d66:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8001d68:	e9c7 2400 	strd	r2, r4, [r7]
  hdma2d.Init.OutputOffset = 0;
 8001d6c:	e9c7 4402 	strd	r4, r4, [r7, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001d70:	f009 f82c 	bl	800adcc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001d74:	4631      	mov	r1, r6
 8001d76:	4638      	mov	r0, r7
 8001d78:	f009 f8e0 	bl	800af3c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001d7c:	4641      	mov	r1, r8
 8001d7e:	4622      	mov	r2, r4
 8001d80:	4869      	ldr	r0, [pc, #420]	; (8001f28 <main+0x34c>)
  hdsi.Instance = DSI;
 8001d82:	4f6d      	ldr	r7, [pc, #436]	; (8001f38 <main+0x35c>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001d84:	f009 fe7e 	bl	800ba84 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001d88:	2014      	movs	r0, #20
 8001d8a:	f008 fc2f 	bl	800a5ec <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001d8e:	4641      	mov	r1, r8
 8001d90:	4632      	mov	r2, r6
 8001d92:	4865      	ldr	r0, [pc, #404]	; (8001f28 <main+0x34c>)
 8001d94:	f009 fe76 	bl	800ba84 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001d98:	200a      	movs	r0, #10
 8001d9a:	f008 fc27 	bl	800a5ec <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001d9e:	2224      	movs	r2, #36	; 0x24
 8001da0:	4621      	mov	r1, r4
 8001da2:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 8001da4:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001da6:	f023 fe85 	bl	8025ab4 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001daa:	2218      	movs	r2, #24
 8001dac:	4621      	mov	r1, r4
 8001dae:	a811      	add	r0, sp, #68	; 0x44
 8001db0:	f023 fe80 	bl	8025ab4 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001db4:	2234      	movs	r2, #52	; 0x34
 8001db6:	4621      	mov	r1, r4
 8001db8:	a82d      	add	r0, sp, #180	; 0xb4
 8001dba:	f023 fe7b 	bl	8025ab4 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001dbe:	222c      	movs	r2, #44	; 0x2c
 8001dc0:	4621      	mov	r1, r4
 8001dc2:	eb0d 0008 	add.w	r0, sp, r8
 8001dc6:	f023 fe75 	bl	8025ab4 <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001dca:	f04f 0802 	mov.w	r8, #2
  hdsi.Instance = DSI;
 8001dce:	4a5b      	ldr	r2, [pc, #364]	; (8001f3c <main+0x360>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001dd0:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 8001dd2:	f04f 0a04 	mov.w	sl, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001dd6:	e9cd 180e 	strd	r1, r8, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001dda:	4638      	mov	r0, r7
 8001ddc:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001dde:	e9c7 2400 	strd	r2, r4, [r7]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001de2:	e9c7 a602 	strd	sl, r6, [r7, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001de6:	f009 f971 	bl	800b0cc <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001dea:	a917      	add	r1, sp, #92	; 0x5c
 8001dec:	4638      	mov	r0, r7
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001dee:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001df2:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8001df6:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8001dfa:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001dfe:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001e00:	f009 fb90 	bl	800b524 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001e04:	231c      	movs	r3, #28
 8001e06:	2121      	movs	r1, #33	; 0x21
 8001e08:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001e0c:	230f      	movs	r3, #15
 8001e0e:	2119      	movs	r1, #25
 8001e10:	e9cd 3113 	strd	r3, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001e14:	4638      	mov	r0, r7
 8001e16:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 8001e18:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001e1c:	f009 fb45 	bl	800b4aa <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001e20:	4651      	mov	r1, sl
 8001e22:	4638      	mov	r0, r7
 8001e24:	f009 fb30 	bl	800b488 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001e28:	f242 7110 	movw	r1, #10000	; 0x2710
 8001e2c:	4638      	mov	r0, r7
 8001e2e:	f009 fc84 	bl	800b73a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001e32:	4621      	mov	r1, r4
 8001e34:	4638      	mov	r0, r7
 8001e36:	f009 f8e6 	bl	800b006 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001e3a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e3e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001e42:	e9cd 212d 	strd	r2, r1, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001e46:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001e4a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001e4e:	e9cd 312f 	strd	r3, r1, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001e52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e56:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e5a:	e9cd 1331 	strd	r1, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001e5e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001e62:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8001e66:	e9cd 3133 	strd	r3, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001e6a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001e6e:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001e72:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001e76:	e9cd 0135 	strd	r0, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001e7a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001e7e:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001e82:	4638      	mov	r0, r7
 8001e84:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001e86:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
 8001e8a:	f04f 0910 	mov.w	r9, #16
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001e8e:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001e92:	f009 fac5 	bl	800b420 <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001e96:	a920      	add	r1, sp, #128	; 0x80
 8001e98:	4638      	mov	r0, r7
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001e9a:	e9cd 4a24 	strd	r4, sl, [sp, #144]	; 0x90
  CmdCfg.ColorCoding = DSI_RGB565;
 8001e9e:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001ea2:	e9cd b922 	strd	fp, r9, [sp, #136]	; 0x88
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001ea6:	e9cd 8426 	strd	r8, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001eaa:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001eae:	962a      	str	r6, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001eb0:	f009 fa44 	bl	800b33c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001eb4:	4621      	mov	r1, r4
 8001eb6:	4638      	mov	r0, r7
 8001eb8:	f009 fa2f 	bl	800b31a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ebc:	4820      	ldr	r0, [pc, #128]	; (8001f40 <main+0x364>)
 8001ebe:	4921      	ldr	r1, [pc, #132]	; (8001f44 <main+0x368>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001ec0:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001ec2:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001ec6:	2320      	movs	r3, #32
 8001ec8:	2140      	movs	r1, #64	; 0x40
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001eca:	f44f 5e80 	mov.w	lr, #4096	; 0x1000
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001ece:	e9c0 3104 	strd	r3, r1, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001ed2:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001ed6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001eda:	e9c0 e309 	strd	lr, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001ede:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001ee2:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001ee4:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.SelfRefreshTime = 4;
 8001ee6:	e9cd 3a2e 	strd	r3, sl, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 8001eea:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001eee:	e9c0 4a02 	strd	r4, sl, [r0, #8]
  SdramTiming.RCDDelay = 2;
 8001ef2:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8001ef6:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001efa:	f00b fb2b 	bl	800d554 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8001efe:	f008 fa77 	bl	800a3f0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8001f02:	f008 fa27 	bl	800a354 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001f06:	4621      	mov	r1, r4
 8001f08:	2234      	movs	r2, #52	; 0x34
 8001f0a:	a820      	add	r0, sp, #128	; 0x80
 8001f0c:	f023 fdd2 	bl	8025ab4 <memset>
  hltdc.Instance = LTDC;
 8001f10:	4d0d      	ldr	r5, [pc, #52]	; (8001f48 <main+0x36c>)
 8001f12:	e01b      	b.n	8001f4c <main+0x370>
 8001f14:	40023800 	.word	0x40023800
 8001f18:	40021800 	.word	0x40021800
 8001f1c:	20004a10 	.word	0x20004a10
 8001f20:	40022800 	.word	0x40022800
 8001f24:	40020000 	.word	0x40020000
 8001f28:	40021c00 	.word	0x40021c00
 8001f2c:	20004a08 	.word	0x20004a08
 8001f30:	40023000 	.word	0x40023000
 8001f34:	4002b000 	.word	0x4002b000
 8001f38:	20004a50 	.word	0x20004a50
 8001f3c:	40016c00 	.word	0x40016c00
 8001f40:	20004bb4 	.word	0x20004bb4
 8001f44:	a0000140 	.word	0xa0000140
 8001f48:	20004ac0 	.word	0x20004ac0
 8001f4c:	4b87      	ldr	r3, [pc, #540]	; (800216c <main+0x590>)
  hltdc.Init.Backcolor.Blue = 0;
 8001f4e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001f50:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001f54:	f04f 0aca 	mov.w	sl, #202	; 0xca
 8001f58:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001f5c:	e9c5 a309 	strd	sl, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001f60:	22cb      	movs	r2, #203	; 0xcb
 8001f62:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f66:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001f68:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001f6c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 8001f70:	e9c5 4604 	strd	r4, r6, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001f74:	e9c5 6806 	strd	r6, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001f78:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001f7c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f80:	f00a fa4e 	bl	800c420 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001f84:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 8001f86:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001f8a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001f8e:	2205      	movs	r2, #5
 8001f90:	e9cd 1227 	strd	r1, r2, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001f94:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
  pLayerCfg.WindowY1 = 480;
 8001f98:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001f9c:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.ImageWidth = 200;
 8001f9e:	e9cd 2b29 	strd	r2, fp, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001fa2:	4628      	mov	r0, r5
 8001fa4:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001fa6:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 8001faa:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.WindowX1 = 200;
 8001fac:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.WindowY0 = 0;
 8001fb0:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 8001fb2:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8001fb6:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001fba:	f00a fafd 	bl	800c5b8 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001fbe:	682a      	ldr	r2, [r5, #0]
 8001fc0:	6993      	ldr	r3, [r2, #24]
 8001fc2:	f023 0301 	bic.w	r3, r3, #1
 8001fc6:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001fc8:	4638      	mov	r0, r7
 8001fca:	f009 fb11 	bl	800b5f0 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001fce:	4631      	mov	r1, r6
 8001fd0:	4640      	mov	r0, r8
 8001fd2:	f007 fb83 	bl	80096dc <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001fd6:	2328      	movs	r3, #40	; 0x28
 8001fd8:	2215      	movs	r2, #21
 8001fda:	4621      	mov	r1, r4
 8001fdc:	4638      	mov	r0, r7
 8001fde:	9400      	str	r4, [sp, #0]
 8001fe0:	f009 fb39 	bl	800b656 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001fe4:	a92d      	add	r1, sp, #180	; 0xb4
 8001fe6:	4638      	mov	r0, r7
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001fe8:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001fec:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001ff0:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001ff4:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001ff8:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001ffc:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001ffe:	f009 fa0f 	bl	800b420 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8002002:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002006:	4622      	mov	r2, r4
 8002008:	4628      	mov	r0, r5
 800200a:	f00a fb03 	bl	800c614 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800200e:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8002010:	4857      	ldr	r0, [pc, #348]	; (8002170 <main+0x594>)
  __HAL_LTDC_ENABLE(&hltdc);
 8002012:	6993      	ldr	r3, [r2, #24]
  hi2c1.Init.ClockSpeed = 400000;
 8002014:	4f57      	ldr	r7, [pc, #348]	; (8002174 <main+0x598>)
  __HAL_LTDC_ENABLE(&hltdc);
 8002016:	4333      	orrs	r3, r6
 8002018:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800201a:	4b57      	ldr	r3, [pc, #348]	; (8002178 <main+0x59c>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 800201c:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 800201e:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8002022:	251b      	movs	r5, #27
 8002024:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002028:	e9c0 5304 	strd	r5, r3, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800202c:	e9c0 6902 	strd	r6, r9, [r0, #8]
  hi2c1.Instance = I2C1;
 8002030:	4d52      	ldr	r5, [pc, #328]	; (800217c <main+0x5a0>)
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8002032:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8002036:	f00a fc37 	bl	800c8a8 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800203a:	f008 f851 	bl	800a0e0 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800203e:	f007 ff85 	bl	8009f4c <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8002042:	f007 fefb 	bl	8009e3c <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8002046:	4b4e      	ldr	r3, [pc, #312]	; (8002180 <main+0x5a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002048:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800204a:	e9c5 7300 	strd	r7, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800204e:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002050:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002054:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8002058:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800205c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002060:	f009 fefa 	bl	800be58 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8002064:	4628      	mov	r0, r5
 8002066:	f009 ff9f 	bl	800bfa8 <HAL_I2C_DeInit>
  ADC_ChannelConfTypeDef sConfig = {0};
 800206a:	464a      	mov	r2, r9
 800206c:	4621      	mov	r1, r4
 800206e:	a82d      	add	r0, sp, #180	; 0xb4
 8002070:	f023 fd20 	bl	8025ab4 <memset>
  hadc1.Instance = ADC1;
 8002074:	4d43      	ldr	r5, [pc, #268]	; (8002184 <main+0x5a8>)
 8002076:	4b44      	ldr	r3, [pc, #272]	; (8002188 <main+0x5ac>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8002078:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800207a:	e9c5 3400 	strd	r3, r4, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800207e:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8002080:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC1;
 8002084:	e9c5 430a 	strd	r4, r3, [r5, #40]	; 0x28
  hadc1.Init.ScanConvMode = DISABLE;
 8002088:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800208a:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800208c:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002090:	60ec      	str	r4, [r5, #12]
  hadc1.Init.NbrOfConversion = 1;
 8002092:	61ee      	str	r6, [r5, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8002094:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002098:	616e      	str	r6, [r5, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800209a:	f008 fabb 	bl	800a614 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_12;
 800209e:	230c      	movs	r3, #12
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80020a0:	a92d      	add	r1, sp, #180	; 0xb4
 80020a2:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80020a4:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80020a8:	942f      	str	r4, [sp, #188]	; 0xbc
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80020aa:	f008 fc77 	bl	800a99c <HAL_ADC_ConfigChannel>
  HAL_ADC_Start_IT(&hadc1);
 80020ae:	4628      	mov	r0, r5
 80020b0:	f008 fb56 	bl	800a760 <HAL_ADC_Start_IT>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80020b4:	221c      	movs	r2, #28
 80020b6:	4621      	mov	r1, r4
 80020b8:	a820      	add	r0, sp, #128	; 0x80
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80020ba:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  TIM_OC_InitTypeDef sConfigOC = {0};
 80020be:	f023 fcf9 	bl	8025ab4 <memset>
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80020c2:	2220      	movs	r2, #32
 80020c4:	4621      	mov	r1, r4
 80020c6:	a82d      	add	r0, sp, #180	; 0xb4
 80020c8:	f023 fcf4 	bl	8025ab4 <memset>
  htim1.Instance = TIM1;
 80020cc:	4d2f      	ldr	r5, [pc, #188]	; (800218c <main+0x5b0>)
  htim1.Init.Prescaler = 45-1;
 80020ce:	f8df c0d8 	ldr.w	ip, [pc, #216]	; 80021a8 <main+0x5cc>
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020d2:	60ac      	str	r4, [r5, #8]
  htim1.Init.Prescaler = 45-1;
 80020d4:	232c      	movs	r3, #44	; 0x2c
 80020d6:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80020da:	4628      	mov	r0, r5
  htim1.Init.Period = 16000-1;
 80020dc:	f643 637f 	movw	r3, #15999	; 0x3e7f
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80020e0:	e9c5 3403 	strd	r3, r4, [r5, #12]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020e4:	e9c5 4405 	strd	r4, r4, [r5, #20]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80020e8:	f00b fc9a 	bl	800da20 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80020ec:	a917      	add	r1, sp, #92	; 0x5c
 80020ee:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80020f0:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80020f4:	f00b fdca 	bl	800dc8c <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.Pulse = 16000/2;
 80020f8:	f04f 0e60 	mov.w	lr, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80020fc:	4622      	mov	r2, r4
  sConfigOC.Pulse = 16000/2;
 80020fe:	f44f 53fa 	mov.w	r3, #8000	; 0x1f40
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002102:	a920      	add	r1, sp, #128	; 0x80
 8002104:	4628      	mov	r0, r5
  sConfigOC.Pulse = 16000/2;
 8002106:	e9cd e320 	strd	lr, r3, [sp, #128]	; 0x80
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800210a:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800210e:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8002112:	9426      	str	r4, [sp, #152]	; 0x98
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002114:	f00b fce6 	bl	800dae4 <HAL_TIM_PWM_ConfigChannel>
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002118:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800211c:	a92d      	add	r1, sp, #180	; 0xb4
 800211e:	4628      	mov	r0, r5
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002120:	9332      	str	r3, [sp, #200]	; 0xc8
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8002122:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  sBreakDeadTimeConfig.DeadTime = 0;
 8002126:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800212a:	9431      	str	r4, [sp, #196]	; 0xc4
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800212c:	9434      	str	r4, [sp, #208]	; 0xd0
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800212e:	f00b fdeb 	bl	800dd08 <HAL_TIMEx_ConfigBreakDeadTime>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8002132:	4621      	mov	r1, r4
 8002134:	4628      	mov	r0, r5
 8002136:	f00b fda7 	bl	800dc88 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim1);
 800213a:	4628      	mov	r0, r5
 800213c:	f000 fa40 	bl	80025c0 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8002140:	f7fe fd8f 	bl	8000c62 <MX_TouchGFX_Init>
  osKernelInitialize();
 8002144:	f00b fec6 	bl	800ded4 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002148:	4a11      	ldr	r2, [pc, #68]	; (8002190 <main+0x5b4>)
 800214a:	4812      	ldr	r0, [pc, #72]	; (8002194 <main+0x5b8>)
 800214c:	4621      	mov	r1, r4
 800214e:	f00b feed 	bl	800df2c <osThreadNew>
 8002152:	4b11      	ldr	r3, [pc, #68]	; (8002198 <main+0x5bc>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002154:	4a11      	ldr	r2, [pc, #68]	; (800219c <main+0x5c0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002156:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002158:	4621      	mov	r1, r4
 800215a:	4811      	ldr	r0, [pc, #68]	; (80021a0 <main+0x5c4>)
 800215c:	f00b fee6 	bl	800df2c <osThreadNew>
 8002160:	4b10      	ldr	r3, [pc, #64]	; (80021a4 <main+0x5c8>)
 8002162:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002164:	f00b fec8 	bl	800def8 <osKernelStart>
  while (1)
 8002168:	e7fe      	b.n	8002168 <main+0x58c>
 800216a:	bf00      	nop
 800216c:	40016800 	.word	0x40016800
 8002170:	20004b68 	.word	0x20004b68
 8002174:	40005400 	.word	0x40005400
 8002178:	a0001000 	.word	0xa0001000
 800217c:	20004a6c 	.word	0x20004a6c
 8002180:	00061a80 	.word	0x00061a80
 8002184:	200049c0 	.word	0x200049c0
 8002188:	40012000 	.word	0x40012000
 800218c:	20004be8 	.word	0x20004be8
 8002190:	08027224 	.word	0x08027224
 8002194:	08001b35 	.word	0x08001b35
 8002198:	200049bc 	.word	0x200049bc
 800219c:	08027200 	.word	0x08027200
 80021a0:	08000c67 	.word	0x08000c67
 80021a4:	200049b8 	.word	0x200049b8
 80021a8:	40010000 	.word	0x40010000

080021ac <HAL_ADC_ConvCpltCallback>:
{
 80021ac:	b508      	push	{r3, lr}
	uhADCxConvertedData = HAL_ADC_GetValue(hadc);
 80021ae:	f008 fb61 	bl	800a874 <HAL_ADC_GetValue>
 80021b2:	4b02      	ldr	r3, [pc, #8]	; (80021bc <HAL_ADC_ConvCpltCallback+0x10>)
 80021b4:	b280      	uxth	r0, r0
 80021b6:	8018      	strh	r0, [r3, #0]
}
 80021b8:	bd08      	pop	{r3, pc}
 80021ba:	bf00      	nop
 80021bc:	20004c30 	.word	0x20004c30

080021c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80021c0:	6802      	ldr	r2, [r0, #0]
 80021c2:	4b03      	ldr	r3, [pc, #12]	; (80021d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80021c4:	429a      	cmp	r2, r3
 80021c6:	d101      	bne.n	80021cc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80021c8:	f008 b9fe 	b.w	800a5c8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80021cc:	4770      	bx	lr
 80021ce:	bf00      	nop
 80021d0:	40001000 	.word	0x40001000

080021d4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80021d4:	4770      	bx	lr
	...

080021d8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80021d8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80021da:	4b0e      	ldr	r3, [pc, #56]	; (8002214 <HAL_MspInit+0x3c>)
 80021dc:	2200      	movs	r2, #0
 80021de:	9200      	str	r2, [sp, #0]
 80021e0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021e2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021e6:	6459      	str	r1, [r3, #68]	; 0x44
 80021e8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021ea:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80021ee:	9100      	str	r1, [sp, #0]
 80021f0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021f2:	9201      	str	r2, [sp, #4]
 80021f4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021f6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80021fa:	6419      	str	r1, [r3, #64]	; 0x40
 80021fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002202:	9301      	str	r3, [sp, #4]
 8002204:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002206:	210f      	movs	r1, #15
 8002208:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800220c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800220e:	f008 bc75 	b.w	800aafc <HAL_NVIC_SetPriority>
 8002212:	bf00      	nop
 8002214:	40023800 	.word	0x40023800

08002218 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002218:	b510      	push	{r4, lr}
 800221a:	4604      	mov	r4, r0
 800221c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800221e:	2214      	movs	r2, #20
 8002220:	2100      	movs	r1, #0
 8002222:	a803      	add	r0, sp, #12
 8002224:	f023 fc46 	bl	8025ab4 <memset>
  if(hadc->Instance==ADC1)
 8002228:	6822      	ldr	r2, [r4, #0]
 800222a:	4b16      	ldr	r3, [pc, #88]	; (8002284 <HAL_ADC_MspInit+0x6c>)
 800222c:	429a      	cmp	r2, r3
 800222e:	d126      	bne.n	800227e <HAL_ADC_MspInit+0x66>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002230:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8002234:	2400      	movs	r4, #0
 8002236:	9401      	str	r4, [sp, #4]
 8002238:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PC2     ------> ADC1_IN12
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800223a:	4813      	ldr	r0, [pc, #76]	; (8002288 <HAL_ADC_MspInit+0x70>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 800223c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002240:	645a      	str	r2, [r3, #68]	; 0x44
 8002242:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002244:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8002248:	9201      	str	r2, [sp, #4]
 800224a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800224c:	9402      	str	r4, [sp, #8]
 800224e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002250:	f042 0204 	orr.w	r2, r2, #4
 8002254:	631a      	str	r2, [r3, #48]	; 0x30
 8002256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002258:	f003 0304 	and.w	r3, r3, #4
 800225c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800225e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002260:	9b02      	ldr	r3, [sp, #8]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002262:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002264:	2303      	movs	r3, #3
 8002266:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800226a:	f009 fa7d 	bl	800b768 <HAL_GPIO_Init>

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 5, 0);
 800226e:	2012      	movs	r0, #18
 8002270:	4622      	mov	r2, r4
 8002272:	2105      	movs	r1, #5
 8002274:	f008 fc42 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 8002278:	2012      	movs	r0, #18
 800227a:	f008 fc71 	bl	800ab60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800227e:	b008      	add	sp, #32
 8002280:	bd10      	pop	{r4, pc}
 8002282:	bf00      	nop
 8002284:	40012000 	.word	0x40012000
 8002288:	40020800 	.word	0x40020800

0800228c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 800228c:	6802      	ldr	r2, [r0, #0]
 800228e:	4b09      	ldr	r3, [pc, #36]	; (80022b4 <HAL_CRC_MspInit+0x28>)
 8002290:	429a      	cmp	r2, r3
{
 8002292:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002294:	d10b      	bne.n	80022ae <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002296:	2300      	movs	r3, #0
 8002298:	9301      	str	r3, [sp, #4]
 800229a:	4b07      	ldr	r3, [pc, #28]	; (80022b8 <HAL_CRC_MspInit+0x2c>)
 800229c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800229e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80022a2:	631a      	str	r2, [r3, #48]	; 0x30
 80022a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022a6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80022aa:	9301      	str	r3, [sp, #4]
 80022ac:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80022ae:	b002      	add	sp, #8
 80022b0:	4770      	bx	lr
 80022b2:	bf00      	nop
 80022b4:	40023000 	.word	0x40023000
 80022b8:	40023800 	.word	0x40023800

080022bc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80022bc:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80022be:	4b0f      	ldr	r3, [pc, #60]	; (80022fc <HAL_DMA2D_MspInit+0x40>)
 80022c0:	6802      	ldr	r2, [r0, #0]
 80022c2:	429a      	cmp	r2, r3
 80022c4:	d116      	bne.n	80022f4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80022c6:	2200      	movs	r2, #0
 80022c8:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80022cc:	9201      	str	r2, [sp, #4]
 80022ce:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80022d0:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80022d4:	6319      	str	r1, [r3, #48]	; 0x30
 80022d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80022dc:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80022de:	2105      	movs	r1, #5
 80022e0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80022e2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80022e4:	f008 fc0a 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80022e8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80022ea:	b003      	add	sp, #12
 80022ec:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80022f0:	f008 bc36 	b.w	800ab60 <HAL_NVIC_EnableIRQ>
}
 80022f4:	b003      	add	sp, #12
 80022f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80022fa:	bf00      	nop
 80022fc:	4002b000 	.word	0x4002b000

08002300 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8002300:	b510      	push	{r4, lr}
 8002302:	4604      	mov	r4, r0
 8002304:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002306:	2214      	movs	r2, #20
 8002308:	2100      	movs	r1, #0
 800230a:	a803      	add	r0, sp, #12
 800230c:	f023 fbd2 	bl	8025ab4 <memset>
  if(hdsi->Instance==DSI)
 8002310:	6822      	ldr	r2, [r4, #0]
 8002312:	4b17      	ldr	r3, [pc, #92]	; (8002370 <HAL_DSI_MspInit+0x70>)
 8002314:	429a      	cmp	r2, r3
 8002316:	d128      	bne.n	800236a <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8002318:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 800231c:	2400      	movs	r4, #0
 800231e:	9401      	str	r4, [sp, #4]
 8002320:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002322:	4814      	ldr	r0, [pc, #80]	; (8002374 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8002324:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002328:	645a      	str	r2, [r3, #68]	; 0x44
 800232a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800232c:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8002330:	9201      	str	r2, [sp, #4]
 8002332:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002334:	9402      	str	r4, [sp, #8]
 8002336:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002338:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800233c:	631a      	str	r2, [r3, #48]	; 0x30
 800233e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002340:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002344:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002346:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002348:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800234a:	2302      	movs	r3, #2
 800234c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002350:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8002352:	230d      	movs	r3, #13
 8002354:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002356:	f009 fa07 	bl	800b768 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 800235a:	205c      	movs	r0, #92	; 0x5c
 800235c:	4622      	mov	r2, r4
 800235e:	2105      	movs	r1, #5
 8002360:	f008 fbcc 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8002364:	205c      	movs	r0, #92	; 0x5c
 8002366:	f008 fbfb 	bl	800ab60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 800236a:	b008      	add	sp, #32
 800236c:	bd10      	pop	{r4, pc}
 800236e:	bf00      	nop
 8002370:	40016c00 	.word	0x40016c00
 8002374:	40022400 	.word	0x40022400

08002378 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002378:	b530      	push	{r4, r5, lr}
 800237a:	4604      	mov	r4, r0
 800237c:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800237e:	2214      	movs	r2, #20
 8002380:	2100      	movs	r1, #0
 8002382:	a803      	add	r0, sp, #12
 8002384:	f023 fb96 	bl	8025ab4 <memset>
  if(hi2c->Instance==I2C1)
 8002388:	6822      	ldr	r2, [r4, #0]
 800238a:	4b1a      	ldr	r3, [pc, #104]	; (80023f4 <HAL_I2C_MspInit+0x7c>)
 800238c:	429a      	cmp	r2, r3
 800238e:	d12f      	bne.n	80023f0 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002390:	4c19      	ldr	r4, [pc, #100]	; (80023f8 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002392:	481a      	ldr	r0, [pc, #104]	; (80023fc <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002394:	2500      	movs	r5, #0
 8002396:	9501      	str	r5, [sp, #4]
 8002398:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800239a:	f043 0302 	orr.w	r3, r3, #2
 800239e:	6323      	str	r3, [r4, #48]	; 0x30
 80023a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80023a2:	f003 0302 	and.w	r3, r3, #2
 80023a6:	9301      	str	r3, [sp, #4]
 80023a8:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80023aa:	f44f 7240 	mov.w	r2, #768	; 0x300
 80023ae:	2312      	movs	r3, #18
 80023b0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023b4:	2101      	movs	r1, #1
 80023b6:	2303      	movs	r3, #3
 80023b8:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80023bc:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023be:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80023c0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023c2:	f009 f9d1 	bl	800b768 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80023c6:	9502      	str	r5, [sp, #8]
 80023c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80023ca:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80023ce:	6423      	str	r3, [r4, #64]	; 0x40
 80023d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80023d2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80023d6:	9302      	str	r3, [sp, #8]
 80023d8:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 80023da:	6a23      	ldr	r3, [r4, #32]
 80023dc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80023e0:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 80023e2:	6a23      	ldr	r3, [r4, #32]
 80023e4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80023e8:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 80023ea:	2064      	movs	r0, #100	; 0x64
 80023ec:	f008 f8fe 	bl	800a5ec <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80023f0:	b009      	add	sp, #36	; 0x24
 80023f2:	bd30      	pop	{r4, r5, pc}
 80023f4:	40005400 	.word	0x40005400
 80023f8:	40023800 	.word	0x40023800
 80023fc:	40020400 	.word	0x40020400

08002400 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8002400:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8002402:	6802      	ldr	r2, [r0, #0]
 8002404:	4b0a      	ldr	r3, [pc, #40]	; (8002430 <HAL_I2C_MspDeInit+0x30>)
 8002406:	429a      	cmp	r2, r3
 8002408:	d110      	bne.n	800242c <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 800240a:	4a0a      	ldr	r2, [pc, #40]	; (8002434 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 800240c:	480a      	ldr	r0, [pc, #40]	; (8002438 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 800240e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002410:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002414:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8002416:	f44f 7180 	mov.w	r1, #256	; 0x100
 800241a:	f009 fa8b 	bl	800b934 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 800241e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8002422:	4805      	ldr	r0, [pc, #20]	; (8002438 <HAL_I2C_MspDeInit+0x38>)
 8002424:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002428:	f009 ba84 	b.w	800b934 <HAL_GPIO_DeInit>
}
 800242c:	bd08      	pop	{r3, pc}
 800242e:	bf00      	nop
 8002430:	40005400 	.word	0x40005400
 8002434:	40023800 	.word	0x40023800
 8002438:	40020400 	.word	0x40020400

0800243c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800243c:	b510      	push	{r4, lr}
 800243e:	4604      	mov	r4, r0
 8002440:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002442:	223c      	movs	r2, #60	; 0x3c
 8002444:	2100      	movs	r1, #0
 8002446:	a801      	add	r0, sp, #4
 8002448:	f023 fb34 	bl	8025ab4 <memset>
  if(hltdc->Instance==LTDC)
 800244c:	6822      	ldr	r2, [r4, #0]
 800244e:	4b12      	ldr	r3, [pc, #72]	; (8002498 <HAL_LTDC_MspInit+0x5c>)
 8002450:	429a      	cmp	r2, r3
 8002452:	d11f      	bne.n	8002494 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002454:	2308      	movs	r3, #8
 8002456:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8002458:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800245c:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800245e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8002460:	2306      	movs	r3, #6
 8002462:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002464:	f00a fd5a 	bl	800cf1c <HAL_RCCEx_PeriphCLKConfig>
 8002468:	b108      	cbz	r0, 800246e <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 800246a:	f7ff feb3 	bl	80021d4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800246e:	4b0b      	ldr	r3, [pc, #44]	; (800249c <HAL_LTDC_MspInit+0x60>)
 8002470:	2200      	movs	r2, #0
 8002472:	9200      	str	r2, [sp, #0]
 8002474:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002476:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800247a:	6459      	str	r1, [r3, #68]	; 0x44
 800247c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800247e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8002482:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002484:	2058      	movs	r0, #88	; 0x58
 8002486:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002488:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800248a:	f008 fb37 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248e:	2058      	movs	r0, #88	; 0x58
 8002490:	f008 fb66 	bl	800ab60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002494:	b010      	add	sp, #64	; 0x40
 8002496:	bd10      	pop	{r4, pc}
 8002498:	40016800 	.word	0x40016800
 800249c:	40023800 	.word	0x40023800

080024a0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80024a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024a2:	4604      	mov	r4, r0
 80024a4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024a6:	2214      	movs	r2, #20
 80024a8:	2100      	movs	r1, #0
 80024aa:	a803      	add	r0, sp, #12
 80024ac:	f023 fb02 	bl	8025ab4 <memset>
  if(hqspi->Instance==QUADSPI)
 80024b0:	6822      	ldr	r2, [r4, #0]
 80024b2:	4b24      	ldr	r3, [pc, #144]	; (8002544 <HAL_QSPI_MspInit+0xa4>)
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d142      	bne.n	800253e <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 80024b8:	4b23      	ldr	r3, [pc, #140]	; (8002548 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ba:	4824      	ldr	r0, [pc, #144]	; (800254c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 80024bc:	2400      	movs	r4, #0
 80024be:	9400      	str	r4, [sp, #0]
 80024c0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80024c2:	f042 0202 	orr.w	r2, r2, #2
 80024c6:	639a      	str	r2, [r3, #56]	; 0x38
 80024c8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80024ca:	f002 0202 	and.w	r2, r2, #2
 80024ce:	9200      	str	r2, [sp, #0]
 80024d0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024d2:	9401      	str	r4, [sp, #4]
 80024d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024d6:	f042 0202 	orr.w	r2, r2, #2
 80024da:	631a      	str	r2, [r3, #48]	; 0x30
 80024dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024de:	f002 0202 	and.w	r2, r2, #2
 80024e2:	9201      	str	r2, [sp, #4]
 80024e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e6:	9402      	str	r4, [sp, #8]
 80024e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ea:	f042 0220 	orr.w	r2, r2, #32
 80024ee:	631a      	str	r2, [r3, #48]	; 0x30
 80024f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f2:	f003 0320 	and.w	r3, r3, #32
 80024f6:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f8:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80024fa:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024fc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80024fe:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002500:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002502:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002504:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002508:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800250c:	f009 f92c 	bl	800b768 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8002510:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002514:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002518:	480d      	ldr	r0, [pc, #52]	; (8002550 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 800251a:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800251c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 800251e:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002520:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002524:	f009 f920 	bl	800b768 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8002528:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800252c:	4808      	ldr	r0, [pc, #32]	; (8002550 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 800252e:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002530:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002532:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002536:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800253a:	f009 f915 	bl	800b768 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 800253e:	b009      	add	sp, #36	; 0x24
 8002540:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002542:	bf00      	nop
 8002544:	a0001000 	.word	0xa0001000
 8002548:	40023800 	.word	0x40023800
 800254c:	40020400 	.word	0x40020400
 8002550:	40021400 	.word	0x40021400

08002554 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8002554:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8002556:	6802      	ldr	r2, [r0, #0]
 8002558:	4b09      	ldr	r3, [pc, #36]	; (8002580 <HAL_QSPI_MspDeInit+0x2c>)
 800255a:	429a      	cmp	r2, r3
 800255c:	d10f      	bne.n	800257e <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 800255e:	4a09      	ldr	r2, [pc, #36]	; (8002584 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8002560:	4809      	ldr	r0, [pc, #36]	; (8002588 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8002562:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002564:	f023 0302 	bic.w	r3, r3, #2
 8002568:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 800256a:	2140      	movs	r1, #64	; 0x40
 800256c:	f009 f9e2 	bl	800b934 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8002570:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8002574:	4805      	ldr	r0, [pc, #20]	; (800258c <HAL_QSPI_MspDeInit+0x38>)
 8002576:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 800257a:	f009 b9db 	b.w	800b934 <HAL_GPIO_DeInit>
}
 800257e:	bd08      	pop	{r3, pc}
 8002580:	a0001000 	.word	0xa0001000
 8002584:	40023800 	.word	0x40023800
 8002588:	40020400 	.word	0x40020400
 800258c:	40021400 	.word	0x40021400

08002590 <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM1)
 8002590:	6802      	ldr	r2, [r0, #0]
 8002592:	4b09      	ldr	r3, [pc, #36]	; (80025b8 <HAL_TIM_PWM_MspInit+0x28>)
 8002594:	429a      	cmp	r2, r3
{
 8002596:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM1)
 8002598:	d10b      	bne.n	80025b2 <HAL_TIM_PWM_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800259a:	2300      	movs	r3, #0
 800259c:	9301      	str	r3, [sp, #4]
 800259e:	4b07      	ldr	r3, [pc, #28]	; (80025bc <HAL_TIM_PWM_MspInit+0x2c>)
 80025a0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80025a2:	f042 0201 	orr.w	r2, r2, #1
 80025a6:	645a      	str	r2, [r3, #68]	; 0x44
 80025a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025aa:	f003 0301 	and.w	r3, r3, #1
 80025ae:	9301      	str	r3, [sp, #4]
 80025b0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 80025b2:	b002      	add	sp, #8
 80025b4:	4770      	bx	lr
 80025b6:	bf00      	nop
 80025b8:	40010000 	.word	0x40010000
 80025bc:	40023800 	.word	0x40023800

080025c0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80025c0:	b510      	push	{r4, lr}
 80025c2:	4604      	mov	r4, r0
 80025c4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025c6:	2214      	movs	r2, #20
 80025c8:	2100      	movs	r1, #0
 80025ca:	a801      	add	r0, sp, #4
 80025cc:	f023 fa72 	bl	8025ab4 <memset>
  if(htim->Instance==TIM1)
 80025d0:	6822      	ldr	r2, [r4, #0]
 80025d2:	4b0e      	ldr	r3, [pc, #56]	; (800260c <HAL_TIM_MspPostInit+0x4c>)
 80025d4:	429a      	cmp	r2, r3
 80025d6:	d116      	bne.n	8002606 <HAL_TIM_MspPostInit+0x46>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025d8:	2300      	movs	r3, #0
 80025da:	9300      	str	r3, [sp, #0]
 80025dc:	4b0c      	ldr	r3, [pc, #48]	; (8002610 <HAL_TIM_MspPostInit+0x50>)
    GPIO_InitStruct.Pin = GPIO_PIN_8;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025de:	480d      	ldr	r0, [pc, #52]	; (8002614 <HAL_TIM_MspPostInit+0x54>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80025e2:	f042 0201 	orr.w	r2, r2, #1
 80025e6:	631a      	str	r2, [r3, #48]	; 0x30
 80025e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025ea:	f003 0301 	and.w	r3, r3, #1
 80025ee:	9300      	str	r3, [sp, #0]
 80025f0:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025f2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025f6:	2302      	movs	r3, #2
 80025f8:	e9cd 2301 	strd	r2, r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025fc:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80025fe:	2301      	movs	r3, #1
 8002600:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002602:	f009 f8b1 	bl	800b768 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8002606:	b006      	add	sp, #24
 8002608:	bd10      	pop	{r4, pc}
 800260a:	bf00      	nop
 800260c:	40010000 	.word	0x40010000
 8002610:	40023800 	.word	0x40023800
 8002614:	40020000 	.word	0x40020000

08002618 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800261c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800261e:	2300      	movs	r3, #0
 8002620:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002622:	4b31      	ldr	r3, [pc, #196]	; (80026e8 <HAL_SDRAM_MspInit+0xd0>)
 8002624:	681c      	ldr	r4, [r3, #0]
 8002626:	2c00      	cmp	r4, #0
 8002628:	d15b      	bne.n	80026e2 <HAL_SDRAM_MspInit+0xca>
  FMC_Initialized = 1;
 800262a:	f04f 0801 	mov.w	r8, #1
 800262e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002632:	4b2e      	ldr	r3, [pc, #184]	; (80026ec <HAL_SDRAM_MspInit+0xd4>)
 8002634:	9400      	str	r4, [sp, #0]
 8002636:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002638:	482d      	ldr	r0, [pc, #180]	; (80026f0 <HAL_SDRAM_MspInit+0xd8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800263a:	ea42 0208 	orr.w	r2, r2, r8
 800263e:	639a      	str	r2, [r3, #56]	; 0x38
 8002640:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002642:	ea03 0308 	and.w	r3, r3, r8
 8002646:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002648:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800264a:	2603      	movs	r6, #3
 800264c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800264e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002650:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002652:	f64f 7383 	movw	r3, #65411	; 0xff83
 8002656:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800265a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800265e:	f009 f883 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002662:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002666:	4823      	ldr	r0, [pc, #140]	; (80026f4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002668:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800266a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800266c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002670:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002674:	f009 f878 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002678:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800267c:	481e      	ldr	r0, [pc, #120]	; (80026f8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800267e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002680:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002682:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002686:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800268a:	f009 f86d 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 800268e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002692:	481a      	ldr	r0, [pc, #104]	; (80026fc <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002694:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002696:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002698:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800269c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80026a0:	f009 f862 	bl	800b768 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026a4:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026a8:	4815      	ldr	r0, [pc, #84]	; (8002700 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026aa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026ac:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026ae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026b2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026b6:	f009 f857 	bl	800b768 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80026ba:	4812      	ldr	r0, [pc, #72]	; (8002704 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026bc:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_3
 80026be:	f64f 730c 	movw	r3, #65292	; 0xff0c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80026c2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026c4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026c8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80026cc:	f009 f84c 	bl	800b768 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026d0:	480d      	ldr	r0, [pc, #52]	; (8002708 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026d2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026d4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026d6:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026da:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026de:	f009 f843 	bl	800b768 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80026e2:	b006      	add	sp, #24
 80026e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80026e8:	20004c38 	.word	0x20004c38
 80026ec:	40023800 	.word	0x40023800
 80026f0:	40021000 	.word	0x40021000
 80026f4:	40021800 	.word	0x40021800
 80026f8:	40020c00 	.word	0x40020c00
 80026fc:	40022000 	.word	0x40022000
 8002700:	40021400 	.word	0x40021400
 8002704:	40021c00 	.word	0x40021c00
 8002708:	40020800 	.word	0x40020800

0800270c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
 800270c:	4b17      	ldr	r3, [pc, #92]	; (800276c <HAL_SDRAM_MspDeInit+0x60>)
 800270e:	681a      	ldr	r2, [r3, #0]
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8002710:	b510      	push	{r4, lr}
  if (FMC_DeInitialized) {
 8002712:	bb52      	cbnz	r2, 800276a <HAL_SDRAM_MspDeInit+0x5e>
  __HAL_RCC_FMC_CLK_DISABLE();
 8002714:	4a16      	ldr	r2, [pc, #88]	; (8002770 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002716:	4817      	ldr	r0, [pc, #92]	; (8002774 <HAL_SDRAM_MspDeInit+0x68>)
  FMC_DeInitialized = 1;
 8002718:	2401      	movs	r4, #1
 800271a:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 800271c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800271e:	f023 0301 	bic.w	r3, r3, #1
 8002722:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002724:	f64f 7183 	movw	r1, #65411	; 0xff83
 8002728:	f009 f904 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 800272c:	4812      	ldr	r0, [pc, #72]	; (8002778 <HAL_SDRAM_MspDeInit+0x6c>)
 800272e:	f248 1133 	movw	r1, #33075	; 0x8133
 8002732:	f009 f8ff 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002736:	4811      	ldr	r0, [pc, #68]	; (800277c <HAL_SDRAM_MspDeInit+0x70>)
 8002738:	f24c 7103 	movw	r1, #50947	; 0xc703
 800273c:	f009 f8fa 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002740:	480f      	ldr	r0, [pc, #60]	; (8002780 <HAL_SDRAM_MspDeInit+0x74>)
 8002742:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8002746:	f009 f8f5 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800274a:	480e      	ldr	r0, [pc, #56]	; (8002784 <HAL_SDRAM_MspDeInit+0x78>)
 800274c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8002750:	f009 f8f0 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_3
 8002754:	480c      	ldr	r0, [pc, #48]	; (8002788 <HAL_SDRAM_MspDeInit+0x7c>)
 8002756:	f64f 710c 	movw	r1, #65292	; 0xff0c
 800275a:	f009 f8eb 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 800275e:	4621      	mov	r1, r4
 8002760:	480a      	ldr	r0, [pc, #40]	; (800278c <HAL_SDRAM_MspDeInit+0x80>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8002762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 8002766:	f009 b8e5 	b.w	800b934 <HAL_GPIO_DeInit>
}
 800276a:	bd10      	pop	{r4, pc}
 800276c:	20004c34 	.word	0x20004c34
 8002770:	40023800 	.word	0x40023800
 8002774:	40021000 	.word	0x40021000
 8002778:	40021800 	.word	0x40021800
 800277c:	40020c00 	.word	0x40020c00
 8002780:	40022000 	.word	0x40022000
 8002784:	40021400 	.word	0x40021400
 8002788:	40021c00 	.word	0x40021c00
 800278c:	40020800 	.word	0x40020800

08002790 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002790:	b530      	push	{r4, r5, lr}
 8002792:	4601      	mov	r1, r0
 8002794:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8002796:	2200      	movs	r2, #0
 8002798:	2036      	movs	r0, #54	; 0x36
 800279a:	f008 f9af 	bl	800aafc <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800279e:	2036      	movs	r0, #54	; 0x36
 80027a0:	f008 f9de 	bl	800ab60 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027a4:	2500      	movs	r5, #0
 80027a6:	4b15      	ldr	r3, [pc, #84]	; (80027fc <HAL_InitTick+0x6c>)
 80027a8:	9502      	str	r5, [sp, #8]
 80027aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027ac:	4c14      	ldr	r4, [pc, #80]	; (8002800 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027ae:	f042 0210 	orr.w	r2, r2, #16
 80027b2:	641a      	str	r2, [r3, #64]	; 0x40
 80027b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027b6:	f003 0310 	and.w	r3, r3, #16
 80027ba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027bc:	a901      	add	r1, sp, #4
 80027be:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027c0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027c2:	f00a fb8d 	bl	800cee0 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80027c6:	f00a fb7b 	bl	800cec0 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80027ca:	4b0e      	ldr	r3, [pc, #56]	; (8002804 <HAL_InitTick+0x74>)
 80027cc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027ce:	f240 33e7 	movw	r3, #999	; 0x3e7
 80027d2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80027d4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027d6:	4b0c      	ldr	r3, [pc, #48]	; (8002808 <HAL_InitTick+0x78>)
 80027d8:	fbb0 f0f3 	udiv	r0, r0, r3
 80027dc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80027de:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80027e0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80027e2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027e4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80027e6:	f00b f8ef 	bl	800d9c8 <HAL_TIM_Base_Init>
 80027ea:	b920      	cbnz	r0, 80027f6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80027ec:	4620      	mov	r0, r4
 80027ee:	f00a ffa5 	bl	800d73c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80027f2:	b009      	add	sp, #36	; 0x24
 80027f4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80027f6:	2001      	movs	r0, #1
 80027f8:	e7fb      	b.n	80027f2 <HAL_InitTick+0x62>
 80027fa:	bf00      	nop
 80027fc:	40023800 	.word	0x40023800
 8002800:	20004c3c 	.word	0x20004c3c
 8002804:	40001000 	.word	0x40001000
 8002808:	000f4240 	.word	0x000f4240

0800280c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800280c:	4770      	bx	lr

0800280e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800280e:	e7fe      	b.n	800280e <HardFault_Handler>

08002810 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002810:	e7fe      	b.n	8002810 <MemManage_Handler>

08002812 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002812:	e7fe      	b.n	8002812 <BusFault_Handler>

08002814 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002814:	e7fe      	b.n	8002814 <UsageFault_Handler>

08002816 <DebugMon_Handler>:
 8002816:	4770      	bx	lr

08002818 <ADC_IRQHandler>:
void ADC_IRQHandler(void)
{
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 8002818:	4801      	ldr	r0, [pc, #4]	; (8002820 <ADC_IRQHandler+0x8>)
 800281a:	f008 b830 	b.w	800a87e <HAL_ADC_IRQHandler>
 800281e:	bf00      	nop
 8002820:	200049c0 	.word	0x200049c0

08002824 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002824:	4801      	ldr	r0, [pc, #4]	; (800282c <TIM6_DAC_IRQHandler+0x8>)
 8002826:	f00a bfc7 	b.w	800d7b8 <HAL_TIM_IRQHandler>
 800282a:	bf00      	nop
 800282c:	20004c3c 	.word	0x20004c3c

08002830 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002830:	4801      	ldr	r0, [pc, #4]	; (8002838 <LTDC_IRQHandler+0x8>)
 8002832:	f009 be64 	b.w	800c4fe <HAL_LTDC_IRQHandler>
 8002836:	bf00      	nop
 8002838:	20004ac0 	.word	0x20004ac0

0800283c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800283c:	4801      	ldr	r0, [pc, #4]	; (8002844 <DMA2D_IRQHandler+0x8>)
 800283e:	f008 baf3 	b.w	800ae28 <HAL_DMA2D_IRQHandler>
 8002842:	bf00      	nop
 8002844:	20004a10 	.word	0x20004a10

08002848 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8002848:	4801      	ldr	r0, [pc, #4]	; (8002850 <DSI_IRQHandler+0x8>)
 800284a:	f008 bcf4 	b.w	800b236 <HAL_DSI_IRQHandler>
 800284e:	bf00      	nop
 8002850:	20004a50 	.word	0x20004a50

08002854 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002854:	2001      	movs	r0, #1
 8002856:	4770      	bx	lr

08002858 <_kill>:

int _kill(int pid, int sig)
{
 8002858:	b508      	push	{r3, lr}
	errno = EINVAL;
 800285a:	f023 f8d1 	bl	8025a00 <__errno>
 800285e:	2316      	movs	r3, #22
 8002860:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002862:	f04f 30ff 	mov.w	r0, #4294967295
 8002866:	bd08      	pop	{r3, pc}

08002868 <_exit>:

void _exit (int status)
{
 8002868:	b508      	push	{r3, lr}
	errno = EINVAL;
 800286a:	f023 f8c9 	bl	8025a00 <__errno>
 800286e:	2316      	movs	r3, #22
 8002870:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002872:	e7fe      	b.n	8002872 <_exit+0xa>

08002874 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002874:	b570      	push	{r4, r5, r6, lr}
 8002876:	460d      	mov	r5, r1
 8002878:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800287a:	460e      	mov	r6, r1
 800287c:	1b73      	subs	r3, r6, r5
 800287e:	429c      	cmp	r4, r3
 8002880:	dc01      	bgt.n	8002886 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002882:	4620      	mov	r0, r4
 8002884:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002886:	f3af 8000 	nop.w
 800288a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800288e:	e7f5      	b.n	800287c <_read+0x8>

08002890 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002890:	b570      	push	{r4, r5, r6, lr}
 8002892:	460d      	mov	r5, r1
 8002894:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002896:	460e      	mov	r6, r1
 8002898:	1b73      	subs	r3, r6, r5
 800289a:	429c      	cmp	r4, r3
 800289c:	dc01      	bgt.n	80028a2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800289e:	4620      	mov	r0, r4
 80028a0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80028a2:	f816 0b01 	ldrb.w	r0, [r6], #1
 80028a6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028aa:	e7f5      	b.n	8002898 <_write+0x8>

080028ac <_close>:

int _close(int file)
{
	return -1;
}
 80028ac:	f04f 30ff 	mov.w	r0, #4294967295
 80028b0:	4770      	bx	lr

080028b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80028b2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80028b6:	604b      	str	r3, [r1, #4]
	return 0;
}
 80028b8:	2000      	movs	r0, #0
 80028ba:	4770      	bx	lr

080028bc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80028bc:	2001      	movs	r0, #1
 80028be:	4770      	bx	lr

080028c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80028c0:	2000      	movs	r0, #0
 80028c2:	4770      	bx	lr

080028c4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80028c4:	4a0a      	ldr	r2, [pc, #40]	; (80028f0 <_sbrk+0x2c>)
 80028c6:	6811      	ldr	r1, [r2, #0]
{
 80028c8:	b508      	push	{r3, lr}
 80028ca:	4603      	mov	r3, r0
	if (heap_end == 0)
 80028cc:	b909      	cbnz	r1, 80028d2 <_sbrk+0xe>
		heap_end = &end;
 80028ce:	4909      	ldr	r1, [pc, #36]	; (80028f4 <_sbrk+0x30>)
 80028d0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80028d2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80028d4:	4669      	mov	r1, sp
 80028d6:	4403      	add	r3, r0
 80028d8:	428b      	cmp	r3, r1
 80028da:	d906      	bls.n	80028ea <_sbrk+0x26>
	{
		errno = ENOMEM;
 80028dc:	f023 f890 	bl	8025a00 <__errno>
 80028e0:	230c      	movs	r3, #12
 80028e2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80028e4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80028e8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80028ea:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80028ec:	e7fc      	b.n	80028e8 <_sbrk+0x24>
 80028ee:	bf00      	nop
 80028f0:	20004c84 	.word	0x20004c84
 80028f4:	2000df20 	.word	0x2000df20

080028f8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80028f8:	4770      	bx	lr

080028fa <_ZN23ApplicationFontProviderD0Ev>:
 80028fa:	b510      	push	{r4, lr}
 80028fc:	2104      	movs	r1, #4
 80028fe:	4604      	mov	r4, r0
 8002900:	f023 f81d 	bl	802593e <_ZdlPvj>
 8002904:	4620      	mov	r0, r4
 8002906:	bd10      	pop	{r4, pc}

08002908 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002908:	2901      	cmp	r1, #1
{
 800290a:	b508      	push	{r3, lr}
    switch (typography)
 800290c:	d006      	beq.n	800291c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800290e:	2902      	cmp	r1, #2
 8002910:	d008      	beq.n	8002924 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002912:	b959      	cbnz	r1, 800292c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002914:	f006 fa9e 	bl	8008e54 <_ZN17TypedTextDatabase8getFontsEv>
 8002918:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800291a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800291c:	f006 fa9a 	bl	8008e54 <_ZN17TypedTextDatabase8getFontsEv>
 8002920:	6840      	ldr	r0, [r0, #4]
 8002922:	e7fa      	b.n	800291a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002924:	f006 fa96 	bl	8008e54 <_ZN17TypedTextDatabase8getFontsEv>
 8002928:	6880      	ldr	r0, [r0, #8]
 800292a:	e7f6      	b.n	800291a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800292c:	2000      	movs	r0, #0
 800292e:	e7f4      	b.n	800291a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002930 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002930:	4800      	ldr	r0, [pc, #0]	; (8002934 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002932:	4770      	bx	lr
 8002934:	0802725c 	.word	0x0802725c

08002938 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002938:	2008      	movs	r0, #8
 800293a:	4770      	bx	lr

0800293c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800293c:	b513      	push	{r0, r1, r4, lr}
 800293e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002940:	b151      	cbz	r1, 8002958 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002942:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002944:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002946:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800294a:	aa01      	add	r2, sp, #4
 800294c:	689c      	ldr	r4, [r3, #8]
 800294e:	f10d 0303 	add.w	r3, sp, #3
 8002952:	47a0      	blx	r4
        return glyph;
    }
 8002954:	b002      	add	sp, #8
 8002956:	bd10      	pop	{r4, pc}
            return 0;
 8002958:	4608      	mov	r0, r1
 800295a:	e7fb      	b.n	8002954 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800295c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800295c:	8940      	ldrh	r0, [r0, #10]
 800295e:	4770      	bx	lr

08002960 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002960:	8980      	ldrh	r0, [r0, #12]
 8002962:	4770      	bx	lr

08002964 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002964:	8880      	ldrh	r0, [r0, #4]
 8002966:	4770      	bx	lr

08002968 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002968:	7983      	ldrb	r3, [r0, #6]
 800296a:	8880      	ldrh	r0, [r0, #4]
 800296c:	4418      	add	r0, r3
    }
 800296e:	b280      	uxth	r0, r0
 8002970:	4770      	bx	lr

08002972 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002972:	79c0      	ldrb	r0, [r0, #7]
    }
 8002974:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002978:	4770      	bx	lr

0800297a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800297a:	79c0      	ldrb	r0, [r0, #7]
    }
 800297c:	09c0      	lsrs	r0, r0, #7
 800297e:	4770      	bx	lr

08002980 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002980:	4770      	bx	lr

08002982 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002982:	b510      	push	{r4, lr}
    }
 8002984:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002986:	4604      	mov	r4, r0
    }
 8002988:	f022 ffd9 	bl	802593e <_ZdlPvj>
 800298c:	4620      	mov	r0, r4
 800298e:	bd10      	pop	{r4, pc}

08002990 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002990:	4770      	bx	lr

08002992 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002992:	4770      	bx	lr

08002994 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002994:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002998:	6808      	ldr	r0, [r1, #0]
 800299a:	6849      	ldr	r1, [r1, #4]
 800299c:	c303      	stmia	r3!, {r0, r1}
    }
 800299e:	4770      	bx	lr

080029a0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80029a0:	4770      	bx	lr

080029a2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80029a2:	4770      	bx	lr

080029a4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80029a4:	6041      	str	r1, [r0, #4]
    }
 80029a6:	4770      	bx	lr

080029a8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80029a8:	4770      	bx	lr
	...

080029ac <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029ac:	4b06      	ldr	r3, [pc, #24]	; (80029c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80029ae:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80029b2:	2300      	movs	r3, #0
 80029b4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029b8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80029bc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80029c0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80029c4:	4770      	bx	lr
 80029c6:	bf00      	nop
 80029c8:	08002a6d 	.word	0x08002a6d

080029cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80029cc:	2301      	movs	r3, #1
 80029ce:	7203      	strb	r3, [r0, #8]
    }
 80029d0:	4770      	bx	lr

080029d2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80029d2:	4770      	bx	lr

080029d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80029d4:	4770      	bx	lr

080029d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80029d6:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80029d8:	68c2      	ldr	r2, [r0, #12]
 80029da:	6841      	ldr	r1, [r0, #4]
 80029dc:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80029de:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80029e0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80029e4:	07d2      	lsls	r2, r2, #31
 80029e6:	bf48      	it	mi
 80029e8:	590a      	ldrmi	r2, [r1, r4]
 80029ea:	689b      	ldr	r3, [r3, #8]
    }
 80029ec:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80029f0:	bf48      	it	mi
 80029f2:	58d3      	ldrmi	r3, [r2, r3]
 80029f4:	4718      	bx	r3

080029f6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80029f6:	6843      	ldr	r3, [r0, #4]
 80029f8:	b12b      	cbz	r3, 8002a06 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80029fa:	6883      	ldr	r3, [r0, #8]
 80029fc:	b92b      	cbnz	r3, 8002a0a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80029fe:	68c0      	ldr	r0, [r0, #12]
 8002a00:	f000 0001 	and.w	r0, r0, #1
 8002a04:	4770      	bx	lr
 8002a06:	4618      	mov	r0, r3
 8002a08:	4770      	bx	lr
 8002a0a:	2001      	movs	r0, #1
    }
 8002a0c:	4770      	bx	lr

08002a0e <_ZN8touchgfx12NoTransitionD0Ev>:
 8002a0e:	b510      	push	{r4, lr}
 8002a10:	210c      	movs	r1, #12
 8002a12:	4604      	mov	r4, r0
 8002a14:	f022 ff93 	bl	802593e <_ZdlPvj>
 8002a18:	4620      	mov	r0, r4
 8002a1a:	bd10      	pop	{r4, pc}

08002a1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a1c:	b510      	push	{r4, lr}
 8002a1e:	2110      	movs	r1, #16
 8002a20:	4604      	mov	r4, r0
 8002a22:	f022 ff8c 	bl	802593e <_ZdlPvj>
 8002a26:	4620      	mov	r0, r4
 8002a28:	bd10      	pop	{r4, pc}

08002a2a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002a2a:	b510      	push	{r4, lr}
 8002a2c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002a30:	4604      	mov	r4, r0
 8002a32:	f022 ff84 	bl	802593e <_ZdlPvj>
 8002a36:	4620      	mov	r0, r4
 8002a38:	bd10      	pop	{r4, pc}

08002a3a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002a3a:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002a3c:	f013 fe0c 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002a44:	f014 b9ac 	b.w	8016da0 <_ZN8touchgfx11Application10invalidateEv>

08002a48 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002a48:	b510      	push	{r4, lr}
 8002a4a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002a4c:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002a50:	b158      	cbz	r0, 8002a6a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002a52:	6803      	ldr	r3, [r0, #0]
 8002a54:	68db      	ldr	r3, [r3, #12]
 8002a56:	4798      	blx	r3
 8002a58:	b138      	cbz	r0, 8002a6a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002a5a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002a5e:	6803      	ldr	r3, [r0, #0]
 8002a60:	689b      	ldr	r3, [r3, #8]
 8002a62:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002a64:	2300      	movs	r3, #0
 8002a66:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002a6a:	bd10      	pop	{r4, pc}

08002a6c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002a6c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002a70:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002a74:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a76:	68a8      	ldr	r0, [r5, #8]
 8002a78:	6803      	ldr	r3, [r0, #0]
 8002a7a:	6a1b      	ldr	r3, [r3, #32]
 8002a7c:	4798      	blx	r3
 8002a7e:	f243 73db 	movw	r3, #14299	; 0x37db
 8002a82:	4298      	cmp	r0, r3
 8002a84:	d805      	bhi.n	8002a92 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8002a86:	4b45      	ldr	r3, [pc, #276]	; (8002b9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002a88:	4a45      	ldr	r2, [pc, #276]	; (8002ba0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002a8a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002a8c:	4845      	ldr	r0, [pc, #276]	; (8002ba4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002a8e:	f022 ff85 	bl	802599c <__assert_func>
 8002a92:	6868      	ldr	r0, [r5, #4]
 8002a94:	6803      	ldr	r3, [r0, #0]
 8002a96:	6a1b      	ldr	r3, [r3, #32]
 8002a98:	4798      	blx	r3
 8002a9a:	280f      	cmp	r0, #15
 8002a9c:	d803      	bhi.n	8002aa6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8002a9e:	4b42      	ldr	r3, [pc, #264]	; (8002ba8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002aa0:	4a3f      	ldr	r2, [pc, #252]	; (8002ba0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002aa2:	21a4      	movs	r1, #164	; 0xa4
 8002aa4:	e7f2      	b.n	8002a8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002aa6:	68e8      	ldr	r0, [r5, #12]
 8002aa8:	6803      	ldr	r3, [r0, #0]
 8002aaa:	6a1b      	ldr	r3, [r3, #32]
 8002aac:	4798      	blx	r3
 8002aae:	280b      	cmp	r0, #11
 8002ab0:	d803      	bhi.n	8002aba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 8002ab2:	4b3e      	ldr	r3, [pc, #248]	; (8002bac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002ab4:	4a3a      	ldr	r2, [pc, #232]	; (8002ba0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002ab6:	21a5      	movs	r1, #165	; 0xa5
 8002ab8:	e7e8      	b.n	8002a8c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8002aba:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002bb4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002abe:	f013 fdcb 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 8002ac2:	f013 fdcf 	bl	8016664 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8002aca:	b110      	cbz	r0, 8002ad2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002acc:	6803      	ldr	r3, [r0, #0]
 8002ace:	68db      	ldr	r3, [r3, #12]
 8002ad0:	4798      	blx	r3
    if (*currentTrans)
 8002ad2:	f8d9 0000 	ldr.w	r0, [r9]
 8002ad6:	b110      	cbz	r0, 8002ade <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002ad8:	6803      	ldr	r3, [r0, #0]
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	4798      	blx	r3
    if (*currentScreen)
 8002ade:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002bb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002ae2:	f8d8 0000 	ldr.w	r0, [r8]
 8002ae6:	b110      	cbz	r0, 8002aee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002ae8:	6803      	ldr	r3, [r0, #0]
 8002aea:	695b      	ldr	r3, [r3, #20]
 8002aec:	4798      	blx	r3
    if (*currentPresenter)
 8002aee:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002af2:	b110      	cbz	r0, 8002afa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002af4:	6803      	ldr	r3, [r0, #0]
 8002af6:	685b      	ldr	r3, [r3, #4]
 8002af8:	4798      	blx	r3
    if (*currentScreen)
 8002afa:	f8d8 0000 	ldr.w	r0, [r8]
 8002afe:	b110      	cbz	r0, 8002b06 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002b00:	6803      	ldr	r3, [r0, #0]
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	4798      	blx	r3
    if (*currentPresenter)
 8002b06:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002b0a:	b110      	cbz	r0, 8002b12 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002b0c:	6803      	ldr	r3, [r0, #0]
 8002b0e:	689b      	ldr	r3, [r3, #8]
 8002b10:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002b12:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002b14:	6803      	ldr	r3, [r0, #0]
 8002b16:	2100      	movs	r1, #0
 8002b18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b1a:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002b1c:	f04f 0b00 	mov.w	fp, #0
 8002b20:	4b23      	ldr	r3, [pc, #140]	; (8002bb0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002b22:	6003      	str	r3, [r0, #0]
 8002b24:	4604      	mov	r4, r0
 8002b26:	f8c0 b004 	str.w	fp, [r0, #4]
 8002b2a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002b2e:	68a8      	ldr	r0, [r5, #8]
 8002b30:	6803      	ldr	r3, [r0, #0]
 8002b32:	4659      	mov	r1, fp
 8002b34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b36:	4798      	blx	r3
 8002b38:	4606      	mov	r6, r0
 8002b3a:	f006 fc0b 	bl	8009354 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002b3e:	6868      	ldr	r0, [r5, #4]
 8002b40:	6803      	ldr	r3, [r0, #0]
 8002b42:	4659      	mov	r1, fp
 8002b44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b46:	4798      	blx	r3
 8002b48:	4631      	mov	r1, r6
 8002b4a:	4605      	mov	r5, r0
 8002b4c:	f006 fb44 	bl	80091d8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002b50:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002b54:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002b58:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002b5c:	b1e5      	cbz	r5, 8002b98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>
 8002b5e:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002b60:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002b64:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002b66:	f8c5 a008 	str.w	sl, [r5, #8]
 8002b6a:	4630      	mov	r0, r6
 8002b6c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002b6e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002b70:	4798      	blx	r3
    newPresenter->activate();
 8002b72:	682b      	ldr	r3, [r5, #0]
 8002b74:	4628      	mov	r0, r5
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002b7a:	4621      	mov	r1, r4
 8002b7c:	4630      	mov	r0, r6
 8002b7e:	f015 fa3b 	bl	8017ff8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002b82:	6823      	ldr	r3, [r4, #0]
 8002b84:	4620      	mov	r0, r4
 8002b86:	691b      	ldr	r3, [r3, #16]
 8002b88:	4798      	blx	r3
    newTransition->invalidate();
 8002b8a:	6823      	ldr	r3, [r4, #0]
 8002b8c:	695b      	ldr	r3, [r3, #20]
 8002b8e:	4620      	mov	r0, r4
}
 8002b90:	b001      	add	sp, #4
 8002b92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b96:	4718      	bx	r3
    model->bind(newPresenter);
 8002b98:	462b      	mov	r3, r5
 8002b9a:	e7e1      	b.n	8002b60 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf4>
 8002b9c:	0802730c 	.word	0x0802730c
 8002ba0:	0802739a 	.word	0x0802739a
 8002ba4:	0802749e 	.word	0x0802749e
 8002ba8:	080274e5 	.word	0x080274e5
 8002bac:	08027588 	.word	0x08027588
 8002bb0:	08027698 	.word	0x08027698
 8002bb4:	2000dcbc 	.word	0x2000dcbc
 8002bb8:	2000dcb8 	.word	0x2000dcb8

08002bbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bbe:	4604      	mov	r4, r0
 8002bc0:	4617      	mov	r7, r2
 8002bc2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002bc4:	f013 fd68 	bl	8016698 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002bc8:	4b10      	ldr	r3, [pc, #64]	; (8002c0c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002bca:	2500      	movs	r5, #0
      model(m)
 8002bcc:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002bd0:	4e0f      	ldr	r6, [pc, #60]	; (8002c10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8002bd2:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun(0)
 8002bd4:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002bd8:	4b0e      	ldr	r3, [pc, #56]	; (8002c14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002bda:	6830      	ldr	r0, [r6, #0]
 8002bdc:	6023      	str	r3, [r4, #0]
 8002bde:	4b0e      	ldr	r3, [pc, #56]	; (8002c18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002be0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002be4:	6803      	ldr	r3, [r0, #0]
 8002be6:	4629      	mov	r1, r5
 8002be8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002bea:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002bee:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002bf0:	4628      	mov	r0, r5
 8002bf2:	f006 f8e3 	bl	8008dbc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002bf6:	6833      	ldr	r3, [r6, #0]
 8002bf8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002bfc:	b10a      	cbz	r2, 8002c02 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002bfe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002c00:	b900      	cbnz	r0, 8002c04 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002c02:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002c04:	f01b fc6d 	bl	801e4e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002c08:	4620      	mov	r0, r4
 8002c0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002c0c:	2000dcc8 	.word	0x2000dcc8
 8002c10:	2000dc74 	.word	0x2000dc74
 8002c14:	0802764c 	.word	0x0802764c
 8002c18:	08027634 	.word	0x08027634

08002c1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002c1c:	4b06      	ldr	r3, [pc, #24]	; (8002c38 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002c1e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c22:	2300      	movs	r3, #0
 8002c24:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c28:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c2c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002c30:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002c34:	4770      	bx	lr
 8002c36:	bf00      	nop
 8002c38:	08002a6d 	.word	0x08002a6d

08002c3c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002c3c:	6a00      	ldr	r0, [r0, #32]
 8002c3e:	4770      	bx	lr

08002c40 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002c40:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002c42:	4770      	bx	lr

08002c44 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002c44:	4770      	bx	lr

08002c46 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002c46:	888b      	ldrh	r3, [r1, #4]
 8002c48:	6980      	ldr	r0, [r0, #24]
 8002c4a:	680a      	ldr	r2, [r1, #0]
 8002c4c:	0adb      	lsrs	r3, r3, #11
 8002c4e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002c52:	4410      	add	r0, r2
 8002c54:	4770      	bx	lr

08002c56 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002c56:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002c58:	b1c2      	cbz	r2, 8002c8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002c5a:	7b13      	ldrb	r3, [r2, #12]
 8002c5c:	b1b3      	cbz	r3, 8002c8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002c5e:	7b54      	ldrb	r4, [r2, #13]
 8002c60:	7ad2      	ldrb	r2, [r2, #11]
 8002c62:	0224      	lsls	r4, r4, #8
 8002c64:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002c68:	4314      	orrs	r4, r2
 8002c6a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002c6c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002c6e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002c72:	8813      	ldrh	r3, [r2, #0]
 8002c74:	428b      	cmp	r3, r1
 8002c76:	d102      	bne.n	8002c7e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002c78:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002c7c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002c7e:	d805      	bhi.n	8002c8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002c80:	3801      	subs	r0, #1
 8002c82:	b280      	uxth	r0, r0
 8002c84:	3204      	adds	r2, #4
 8002c86:	2800      	cmp	r0, #0
 8002c88:	d1f3      	bne.n	8002c72 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002c8a:	e7f7      	b.n	8002c7c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002c8c:	2000      	movs	r0, #0
 8002c8e:	e7f5      	b.n	8002c7c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002c90 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002c90:	b510      	push	{r4, lr}
 8002c92:	2128      	movs	r1, #40	; 0x28
 8002c94:	4604      	mov	r4, r0
 8002c96:	f022 fe52 	bl	802593e <_ZdlPvj>
 8002c9a:	4620      	mov	r0, r4
 8002c9c:	bd10      	pop	{r4, pc}
	...

08002ca0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002ca0:	b530      	push	{r4, r5, lr}
 8002ca2:	b089      	sub	sp, #36	; 0x24
 8002ca4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002ca6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002caa:	9506      	str	r5, [sp, #24]
 8002cac:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002cb0:	9505      	str	r5, [sp, #20]
 8002cb2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002cb6:	9504      	str	r5, [sp, #16]
 8002cb8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002cbc:	9503      	str	r5, [sp, #12]
 8002cbe:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002cc2:	9502      	str	r5, [sp, #8]
 8002cc4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002cc8:	9501      	str	r5, [sp, #4]
 8002cca:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002cce:	9500      	str	r5, [sp, #0]
 8002cd0:	f014 fd06 	bl	80176e0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002cd4:	4b06      	ldr	r3, [pc, #24]	; (8002cf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002cd6:	6023      	str	r3, [r4, #0]
 8002cd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002cda:	61a3      	str	r3, [r4, #24]
 8002cdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002cde:	61e3      	str	r3, [r4, #28]
 8002ce0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002ce2:	6223      	str	r3, [r4, #32]
 8002ce4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002ce6:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002ce8:	4620      	mov	r0, r4
 8002cea:	b009      	add	sp, #36	; 0x24
 8002cec:	bd30      	pop	{r4, r5, pc}
 8002cee:	bf00      	nop
 8002cf0:	080276bc 	.word	0x080276bc

08002cf4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002cf4:	2000      	movs	r0, #0
 8002cf6:	4770      	bx	lr

08002cf8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002cf8:	8081      	strh	r1, [r0, #4]
    }
 8002cfa:	4770      	bx	lr

08002cfc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002cfc:	80c1      	strh	r1, [r0, #6]
    }
 8002cfe:	4770      	bx	lr

08002d00 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002d00:	8101      	strh	r1, [r0, #8]
    }
 8002d02:	4770      	bx	lr

08002d04 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002d04:	8141      	strh	r1, [r0, #10]
    }
 8002d06:	4770      	bx	lr

08002d08 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002d08:	4770      	bx	lr

08002d0a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002d0a:	4770      	bx	lr

08002d0c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002d0c:	4770      	bx	lr

08002d0e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002d0e:	4770      	bx	lr

08002d10 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002d10:	4770      	bx	lr

08002d12 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002d12:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002d14:	88c4      	ldrh	r4, [r0, #6]
 8002d16:	6803      	ldr	r3, [r0, #0]
 8002d18:	1b12      	subs	r2, r2, r4
 8002d1a:	8884      	ldrh	r4, [r0, #4]
 8002d1c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d1e:	1b09      	subs	r1, r1, r4
 8002d20:	b212      	sxth	r2, r2
    }
 8002d22:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002d26:	b209      	sxth	r1, r1
 8002d28:	4718      	bx	r3

08002d2a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002d2a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d2e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002d30:	f04f 33ff 	mov.w	r3, #4294967295
 8002d34:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002d36:	6813      	ldr	r3, [r2, #0]
 8002d38:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002d3a:	6010      	str	r0, [r2, #0]
    }
 8002d3c:	4770      	bx	lr

08002d3e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002d3e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002d40:	4770      	bx	lr

08002d42 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002d42:	4770      	bx	lr

08002d44 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002d44:	4770      	bx	lr

08002d46 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002d46:	4770      	bx	lr

08002d48 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002d48:	4770      	bx	lr

08002d4a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002d4a:	4770      	bx	lr

08002d4c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002d4c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002d50:	b11a      	cbz	r2, 8002d5a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002d52:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002d56:	b102      	cbz	r2, 8002d5a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002d58:	6018      	str	r0, [r3, #0]
        }
    }
 8002d5a:	4770      	bx	lr

08002d5c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002d5c:	2000      	movs	r0, #0
 8002d5e:	4770      	bx	lr

08002d60 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002d60:	888b      	ldrh	r3, [r1, #4]
 8002d62:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002d64:	2001      	movs	r0, #1
 8002d66:	4770      	bx	lr

08002d68 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002d68:	4770      	bx	lr

08002d6a <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002d6a:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8002d6e:	4770      	bx	lr

08002d70 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8002d70:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8002d72:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8002d74:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8002d76:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8002d7a:	4362      	muls	r2, r4
 8002d7c:	4361      	muls	r1, r4
    }
 8002d7e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8002d82:	4718      	bx	r3

08002d84 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8002d84:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002d88:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002d8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002d8e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8002d92:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8002d96:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d9e:	db17      	blt.n	8002dd0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8002da0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8002da4:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002da8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002dac:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8002db0:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8002db4:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8002db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dbc:	db1c      	blt.n	8002df8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 8002dbe:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8002dc2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8002dc6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002dca:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8002dce:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002dd0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002dd4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8002dd8:	ee17 2a10 	vmov	r2, s14
 8002ddc:	ee30 0a66 	vsub.f32	s0, s0, s13
 8002de0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8002de4:	ee30 0a26 	vadd.f32	s0, s0, s13
 8002de8:	1e51      	subs	r1, r2, #1
 8002dea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002dee:	ee10 2a10 	vmov	r2, s0
 8002df2:	440a      	add	r2, r1
 8002df4:	4611      	mov	r1, r2
 8002df6:	e7db      	b.n	8002db0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8002df8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002dfc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002e00:	ee17 2a90 	vmov	r2, s15
 8002e04:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8002e08:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8002e0c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8002e10:	3a01      	subs	r2, #1
 8002e12:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8002e16:	ee10 ca90 	vmov	ip, s1
 8002e1a:	4494      	add	ip, r2
 8002e1c:	4662      	mov	r2, ip
 8002e1e:	e7d6      	b.n	8002dce <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08002e20 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8002e20:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8002e22:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8002e24:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8002e26:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8002e2a:	4362      	muls	r2, r4
    }
 8002e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8002e30:	4718      	bx	r3

08002e32 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8002e32:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002e36:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002e3c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8002e40:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002e44:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e4c:	db08      	blt.n	8002e60 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8002e4e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8002e52:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002e56:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002e5a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8002e5e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002e60:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002e64:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002e68:	ee17 2a90 	vmov	r2, s15
 8002e6c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002e70:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8002e74:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002e78:	3a01      	subs	r2, #1
 8002e7a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002e7e:	ee10 ca10 	vmov	ip, s0
 8002e82:	4494      	add	ip, r2
 8002e84:	4662      	mov	r2, ip
 8002e86:	e7ea      	b.n	8002e5e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08002e88 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8002e88:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002e8a:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8002e8c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002e8e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8002e92:	4362      	muls	r2, r4
 8002e94:	4361      	muls	r1, r4
    }
 8002e96:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8002e9a:	4718      	bx	r3

08002e9c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 8002e9c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8002ea0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002ea2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8002ea6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8002eaa:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8002eae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002eb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002eb6:	db17      	blt.n	8002ee8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8002eb8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8002ebc:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002ec0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002ec4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8002ec8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8002ecc:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8002ed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ed4:	db1c      	blt.n	8002f10 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8002ed6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8002eda:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8002ede:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002ee2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8002ee6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002ee8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8002eec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8002ef0:	ee17 2a10 	vmov	r2, s14
 8002ef4:	ee30 0a66 	vsub.f32	s0, s0, s13
 8002ef8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8002efc:	ee30 0a26 	vadd.f32	s0, s0, s13
 8002f00:	1e51      	subs	r1, r2, #1
 8002f02:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002f06:	ee10 2a10 	vmov	r2, s0
 8002f0a:	440a      	add	r2, r1
 8002f0c:	4611      	mov	r1, r2
 8002f0e:	e7db      	b.n	8002ec8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8002f10:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8002f14:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002f18:	ee17 2a90 	vmov	r2, s15
 8002f1c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8002f20:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8002f24:	ee70 0a87 	vadd.f32	s1, s1, s14
 8002f28:	3a01      	subs	r2, #1
 8002f2a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8002f2e:	ee10 ca90 	vmov	ip, s1
 8002f32:	4494      	add	ip, r2
 8002f34:	4662      	mov	r2, ip
 8002f36:	e7d6      	b.n	8002ee6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08002f38 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8002f38:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8002f3a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8002f3c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8002f3e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8002f42:	4362      	muls	r2, r4
    }
 8002f44:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8002f48:	4718      	bx	r3

08002f4a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8002f4a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002f4e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8002f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002f54:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8002f58:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8002f5c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002f60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f64:	db08      	blt.n	8002f78 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8002f66:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8002f6a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002f6e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002f72:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8002f76:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8002f78:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002f7c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002f80:	ee17 2a90 	vmov	r2, s15
 8002f84:	ee30 0a47 	vsub.f32	s0, s0, s14
 8002f88:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8002f8c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8002f90:	3a01      	subs	r2, #1
 8002f92:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8002f96:	ee10 ca10 	vmov	ip, s0
 8002f9a:	4494      	add	ip, r2
 8002f9c:	4662      	mov	r2, ip
 8002f9e:	e7ea      	b.n	8002f76 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08002fa0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8002fa0:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8002fa4:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	db07      	blt.n	8002fba <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002faa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8002fae:	fb93 f0f2 	sdiv	r0, r3, r2
 8002fb2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002fb6:	1040      	asrs	r0, r0, #1
 8002fb8:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8002fba:	f06f 0001 	mvn.w	r0, #1
 8002fbe:	fb00 2003 	mla	r0, r0, r3, r2
 8002fc2:	3801      	subs	r0, #1
 8002fc4:	fb90 f0f2 	sdiv	r0, r0, r2
 8002fc8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002fcc:	1040      	asrs	r0, r0, #1
 8002fce:	4240      	negs	r0, r0
    }
 8002fd0:	4770      	bx	lr

08002fd2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8002fd2:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8002fd6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8002fda:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8002fde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8002fe2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8002fe6:	4770      	bx	lr

08002fe8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8002fe8:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8002fec:	4770      	bx	lr

08002fee <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8002fee:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8002ff2:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	db07      	blt.n	8003008 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8002ff8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8002ffc:	fb93 f0f2 	sdiv	r0, r3, r2
 8003000:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003004:	1040      	asrs	r0, r0, #1
 8003006:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003008:	f06f 0001 	mvn.w	r0, #1
 800300c:	fb00 2003 	mla	r0, r0, r3, r2
 8003010:	3801      	subs	r0, #1
 8003012:	fb90 f0f2 	sdiv	r0, r0, r2
 8003016:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800301a:	1040      	asrs	r0, r0, #1
 800301c:	4240      	negs	r0, r0
    }
 800301e:	4770      	bx	lr

08003020 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003020:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003024:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003028:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800302c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003030:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003034:	4770      	bx	lr

08003036 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003036:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800303a:	4770      	bx	lr

0800303c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 800303c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003040:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003042:	2b00      	cmp	r3, #0
 8003044:	db07      	blt.n	8003056 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003046:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800304a:	fb93 f0f2 	sdiv	r0, r3, r2
 800304e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003052:	1040      	asrs	r0, r0, #1
 8003054:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003056:	f06f 0001 	mvn.w	r0, #1
 800305a:	fb00 2003 	mla	r0, r0, r3, r2
 800305e:	3801      	subs	r0, #1
 8003060:	fb90 f0f2 	sdiv	r0, r0, r2
 8003064:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003068:	1040      	asrs	r0, r0, #1
 800306a:	4240      	negs	r0, r0
    }
 800306c:	4770      	bx	lr

0800306e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 800306e:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003072:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003076:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800307a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800307e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003082:	4770      	bx	lr

08003084 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003084:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003088:	4770      	bx	lr

0800308a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800308a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 800308e:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003090:	2b00      	cmp	r3, #0
 8003092:	db07      	blt.n	80030a4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003094:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003098:	fb93 f0f2 	sdiv	r0, r3, r2
 800309c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80030a0:	1040      	asrs	r0, r0, #1
 80030a2:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80030a4:	f06f 0001 	mvn.w	r0, #1
 80030a8:	fb00 2003 	mla	r0, r0, r3, r2
 80030ac:	3801      	subs	r0, #1
 80030ae:	fb90 f0f2 	sdiv	r0, r0, r2
 80030b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80030b6:	1040      	asrs	r0, r0, #1
 80030b8:	4240      	negs	r0, r0
    }
 80030ba:	4770      	bx	lr

080030bc <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80030bc:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80030c0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80030c4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80030c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80030cc:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80030d0:	4770      	bx	lr

080030d2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80030d2:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80030d6:	4770      	bx	lr

080030d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80030d8:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80030da:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80030dc:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80030de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80030e2:	460d      	mov	r5, r1
 80030e4:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80030e6:	4798      	blx	r3
        setScaleY(scale, updateData);
 80030e8:	6823      	ldr	r3, [r4, #0]
 80030ea:	4632      	mov	r2, r6
 80030ec:	4629      	mov	r1, r5
 80030ee:	4620      	mov	r0, r4
 80030f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80030f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80030f8:	4718      	bx	r3

080030fa <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80030fa:	6803      	ldr	r3, [r0, #0]
 80030fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003100:	4718      	bx	r3

08003102 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003102:	6803      	ldr	r3, [r0, #0]
 8003104:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003108:	4718      	bx	r3

0800310a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800310a:	6803      	ldr	r3, [r0, #0]
 800310c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003110:	4718      	bx	r3

08003112 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003112:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003114:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003116:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003118:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 800311c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800311e:	db0e      	blt.n	800313e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003120:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003124:	fb92 f1f4 	sdiv	r1, r2, r4
 8003128:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800312c:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800312e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003132:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003136:	3a01      	subs	r2, #1
 8003138:	440a      	add	r2, r1
 800313a:	4249      	negs	r1, r1
 800313c:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800313e:	f06f 0101 	mvn.w	r1, #1
 8003142:	fb01 4102 	mla	r1, r1, r2, r4
 8003146:	3901      	subs	r1, #1
 8003148:	fb91 f1f4 	sdiv	r1, r1, r4
 800314c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003150:	1049      	asrs	r1, r1, #1
 8003152:	4249      	negs	r1, r1
 8003154:	e7eb      	b.n	800312e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003156 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003156:	6803      	ldr	r3, [r0, #0]
 8003158:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800315c:	4718      	bx	r3

0800315e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 800315e:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003160:	6803      	ldr	r3, [r0, #0]
 8003162:	4351      	muls	r1, r2
 8003164:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003168:	4718      	bx	r3

0800316a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800316a:	6803      	ldr	r3, [r0, #0]
 800316c:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003170:	4718      	bx	r3

08003172 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003172:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003176:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003178:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800317c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003180:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003184:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800318c:	db08      	blt.n	80031a0 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 800318e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003192:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003196:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800319a:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800319e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80031a0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80031a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80031a8:	ee17 2a90 	vmov	r2, s15
 80031ac:	ee30 0a47 	vsub.f32	s0, s0, s14
 80031b0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80031b4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80031b8:	1e51      	subs	r1, r2, #1
 80031ba:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80031be:	ee10 2a10 	vmov	r2, s0
 80031c2:	440a      	add	r2, r1
 80031c4:	4611      	mov	r1, r2
 80031c6:	e7ea      	b.n	800319e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080031c8 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80031c8:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80031cc:	4770      	bx	lr

080031ce <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80031ce:	6803      	ldr	r3, [r0, #0]
 80031d0:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80031d4:	4718      	bx	r3

080031d6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80031d6:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80031d8:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80031da:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80031de:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80031e0:	4798      	blx	r3
        if (i >= 0)
 80031e2:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80031e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80031e6:	db07      	blt.n	80031f8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80031e8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80031ec:	fb90 f0f3 	sdiv	r0, r0, r3
 80031f0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80031f4:	1040      	asrs	r0, r0, #1
    }
 80031f6:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80031f8:	f06f 0201 	mvn.w	r2, #1
 80031fc:	fb02 3000 	mla	r0, r2, r0, r3
 8003200:	3801      	subs	r0, #1
 8003202:	fb90 f0f3 	sdiv	r0, r0, r3
 8003206:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800320a:	1040      	asrs	r0, r0, #1
 800320c:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 800320e:	e7f2      	b.n	80031f6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003210 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003210:	6803      	ldr	r3, [r0, #0]
 8003212:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003216:	4718      	bx	r3

08003218 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003218:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 800321a:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 800321c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003220:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003222:	4798      	blx	r3
        return (float)i / (float)scale;
 8003224:	ee07 0a90 	vmov	s15, r0
 8003228:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800322c:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003234:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003238:	bd10      	pop	{r4, pc}

0800323a <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 800323a:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003240:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003242:	6803      	ldr	r3, [r0, #0]
 8003244:	4351      	muls	r1, r2
 8003246:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 800324a:	4718      	bx	r3

0800324c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 800324c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003250:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003252:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003256:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 800325a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800325e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003266:	db08      	blt.n	800327a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003268:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800326c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003270:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003274:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003278:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800327a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800327e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003282:	ee17 2a90 	vmov	r2, s15
 8003286:	ee30 0a47 	vsub.f32	s0, s0, s14
 800328a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800328e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003292:	1e51      	subs	r1, r2, #1
 8003294:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003298:	ee10 2a10 	vmov	r2, s0
 800329c:	440a      	add	r2, r1
 800329e:	4611      	mov	r1, r2
 80032a0:	e7ea      	b.n	8003278 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

080032a2 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 80032a2:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 80032a6:	4770      	bx	lr

080032a8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 80032a8:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 80032aa:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 80032ac:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 80032b0:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 80032b2:	4798      	blx	r3
        if (i >= 0)
 80032b4:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80032b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80032b8:	db07      	blt.n	80032ca <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80032ba:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80032be:	fb90 f0f3 	sdiv	r0, r0, r3
 80032c2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80032c6:	1040      	asrs	r0, r0, #1
    }
 80032c8:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80032ca:	f06f 0201 	mvn.w	r2, #1
 80032ce:	fb02 3000 	mla	r0, r2, r0, r3
 80032d2:	3801      	subs	r0, #1
 80032d4:	fb90 f0f3 	sdiv	r0, r0, r3
 80032d8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80032dc:	1040      	asrs	r0, r0, #1
 80032de:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 80032e0:	e7f2      	b.n	80032c8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

080032e2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 80032e2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 80032e4:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 80032e6:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 80032ea:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 80032ec:	4798      	blx	r3
        return (float)i / (float)scale;
 80032ee:	ee07 0a90 	vmov	s15, r0
 80032f2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80032f6:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 80032fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80032fe:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003302:	bd10      	pop	{r4, pc}

08003304 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003304:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003308:	4770      	bx	lr

0800330a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800330a:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 800330c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800330e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003312:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003314:	b510      	push	{r4, lr}
 8003316:	4604      	mov	r4, r0
        if (i >= 0)
 8003318:	db0e      	blt.n	8003338 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 800331a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800331e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003322:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003326:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003328:	b209      	sxth	r1, r1
 800332a:	4620      	mov	r0, r4
 800332c:	4798      	blx	r3
 800332e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003332:	fb02 3000 	mla	r0, r2, r0, r3
 8003336:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003338:	f06f 0001 	mvn.w	r0, #1
 800333c:	fb00 2101 	mla	r1, r0, r1, r2
 8003340:	3901      	subs	r1, #1
 8003342:	fb91 f1f2 	sdiv	r1, r1, r2
 8003346:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800334a:	1049      	asrs	r1, r1, #1
 800334c:	4249      	negs	r1, r1
 800334e:	e7eb      	b.n	8003328 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003350 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003350:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003352:	4770      	bx	lr

08003354 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003354:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003356:	4770      	bx	lr

08003358 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003358:	6803      	ldr	r3, [r0, #0]
 800335a:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 800335e:	4718      	bx	r3

08003360 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003360:	6803      	ldr	r3, [r0, #0]
 8003362:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003366:	4718      	bx	r3

08003368 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003368:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 800336a:	6803      	ldr	r3, [r0, #0]
 800336c:	4351      	muls	r1, r2
 800336e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003372:	4718      	bx	r3

08003374 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003374:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003376:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003378:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 800337c:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003380:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003384:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003386:	4798      	blx	r3
 8003388:	462b      	mov	r3, r5
 800338a:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 800338e:	4620      	mov	r0, r4
    }
 8003390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003394:	4718      	bx	r3

08003396 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003396:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800339a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800339e:	4293      	cmp	r3, r2
 80033a0:	db07      	blt.n	80033b2 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 80033a2:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 80033a6:	4419      	add	r1, r3
 80033a8:	fb91 f0f2 	sdiv	r0, r1, r2
 80033ac:	fb02 1110 	mls	r1, r2, r0, r1
 80033b0:	b209      	sxth	r1, r1
    }
 80033b2:	4608      	mov	r0, r1
 80033b4:	4770      	bx	lr

080033b6 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 80033b6:	0148      	lsls	r0, r1, #5
 80033b8:	4770      	bx	lr

080033ba <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80033ba:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80033be:	4770      	bx	lr

080033c0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80033c0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80033c4:	4770      	bx	lr

080033c6 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80033c6:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033c8:	2200      	movs	r2, #0
        return rect.width;
 80033ca:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80033ce:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80033d2:	8002      	strh	r2, [r0, #0]
 80033d4:	8042      	strh	r2, [r0, #2]
 80033d6:	8084      	strh	r4, [r0, #4]
 80033d8:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80033da:	bd10      	pop	{r4, pc}

080033dc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80033dc:	2200      	movs	r2, #0
 80033de:	8002      	strh	r2, [r0, #0]
 80033e0:	8042      	strh	r2, [r0, #2]
 80033e2:	8082      	strh	r2, [r0, #4]
 80033e4:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80033e6:	4770      	bx	lr

080033e8 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80033e8:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 80033ea:	4770      	bx	lr

080033ec <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80033ec:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80033ee:	4770      	bx	lr

080033f0 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80033f0:	2001      	movs	r0, #1
 80033f2:	4770      	bx	lr

080033f4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 80033f4:	4770      	bx	lr

080033f6 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80033f6:	4770      	bx	lr

080033f8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80033f8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80033fa:	b118      	cbz	r0, 8003404 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80033fc:	6803      	ldr	r3, [r0, #0]
 80033fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003402:	4718      	bx	r3
    }
 8003404:	4770      	bx	lr

08003406 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003406:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003408:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 800340c:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003410:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003414:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003418:	8044      	strh	r4, [r0, #2]
 800341a:	4421      	add	r1, r4
 800341c:	1a52      	subs	r2, r2, r1
 800341e:	2100      	movs	r1, #0
 8003420:	8001      	strh	r1, [r0, #0]
 8003422:	8085      	strh	r5, [r0, #4]
 8003424:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003426:	bd30      	pop	{r4, r5, pc}

08003428 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003428:	b510      	push	{r4, lr}
 800342a:	8042      	strh	r2, [r0, #2]
 800342c:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003430:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003434:	8004      	strh	r4, [r0, #0]
 8003436:	8082      	strh	r2, [r0, #4]
 8003438:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 800343a:	bd10      	pop	{r4, pc}

0800343c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 800343c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 800343e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003440:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003444:	4718      	bx	r3

08003446 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003446:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003448:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 800344a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800344e:	4718      	bx	r3

08003450 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003450:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003454:	4770      	bx	lr

08003456 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003456:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 800345a:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 800345e:	4403      	add	r3, r0
 8003460:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003464:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003466:	b200      	sxth	r0, r0
 8003468:	4770      	bx	lr

0800346a <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 800346a:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 800346e:	4770      	bx	lr

08003470 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003470:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003474:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003478:	4403      	add	r3, r0
 800347a:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 800347e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003480:	b200      	sxth	r0, r0
 8003482:	4770      	bx	lr

08003484 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003484:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003486:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003488:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800348c:	4611      	mov	r1, r2
 800348e:	4718      	bx	r3

08003490 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003490:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003494:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003496:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 800349a:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800349c:	186c      	adds	r4, r5, r1
 800349e:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 80034a2:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 80034a6:	80c2      	strh	r2, [r0, #6]
 80034a8:	1b09      	subs	r1, r1, r4
 80034aa:	2400      	movs	r4, #0
 80034ac:	8044      	strh	r4, [r0, #2]
 80034ae:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 80034b0:	bd30      	pop	{r4, r5, pc}

080034b2 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 80034b2:	8002      	strh	r2, [r0, #0]
 80034b4:	8083      	strh	r3, [r0, #4]
 80034b6:	f9bd 2000 	ldrsh.w	r2, [sp]
 80034ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80034be:	8042      	strh	r2, [r0, #2]
 80034c0:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 80034c2:	4770      	bx	lr

080034c4 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 80034c4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80034c6:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 80034c8:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80034cc:	4718      	bx	r3

080034ce <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 80034ce:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80034d0:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 80034d2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80034d6:	4718      	bx	r3

080034d8 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80034d8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80034dc:	4770      	bx	lr

080034de <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80034de:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80034e2:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80034e6:	4403      	add	r3, r0
 80034e8:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80034ec:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80034ee:	b200      	sxth	r0, r0
 80034f0:	4770      	bx	lr

080034f2 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80034f2:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80034f6:	4770      	bx	lr

080034f8 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80034f8:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80034fc:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003500:	4403      	add	r3, r0
 8003502:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003506:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003508:	b200      	sxth	r0, r0
 800350a:	4770      	bx	lr

0800350c <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 800350c:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800350e:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003510:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003514:	4611      	mov	r1, r2
 8003516:	4718      	bx	r3

08003518 <_ZN15Screen1ViewBase13graph1ClickedEN8touchgfx17AbstractDataGraph15GraphClickEventE>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void graph1Clicked(AbstractDataGraph::GraphClickEvent value)
 8003518:	b082      	sub	sp, #8
 800351a:	ab02      	add	r3, sp, #8
 800351c:	e903 0006 	stmdb	r3, {r1, r2}
    {
        // Override and implement this function in Screen1
    }
 8003520:	b002      	add	sp, #8
 8003522:	4770      	bx	lr

08003524 <_ZN15Screen1ViewBase13graph1DraggedEN8touchgfx17AbstractDataGraph14GraphDragEventE>:

    virtual void graph1Dragged(AbstractDataGraph::GraphDragEvent value)
 8003524:	b082      	sub	sp, #8
 8003526:	ab02      	add	r3, sp, #8
 8003528:	e903 0006 	stmdb	r3, {r1, r2}
    {
        // Override and implement this function in Screen1
    }
 800352c:	b002      	add	sp, #8
 800352e:	4770      	bx	lr

08003530 <_ZN15Screen1ViewBase18ResetButtonClickedEv>:

    virtual void ResetButtonClicked()
    {
        // Override and implement this function in Screen1
    }
 8003530:	4770      	bx	lr

08003532 <_ZN15Screen1ViewBase16XupButtonClickedEv>:

    virtual void XupButtonClicked()
    {
        // Override and implement this function in Screen1
    }
 8003532:	4770      	bx	lr

08003534 <_ZN15Screen1ViewBase18XdownButtonClickedEv>:

    virtual void XdownButtonClicked()
    {
        // Override and implement this function in Screen1
    }
 8003534:	4770      	bx	lr

08003536 <_ZN15Screen1ViewBase16YupButtonClickedEv>:

    virtual void YupButtonClicked()
    {
        // Override and implement this function in Screen1
    }
 8003536:	4770      	bx	lr

08003538 <_ZN15Screen1ViewBase18YdownButtonClickedEv>:

    virtual void YdownButtonClicked()
    {
        // Override and implement this function in Screen1
    }
 8003538:	4770      	bx	lr

0800353a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 800353a:	4770      	bx	lr

0800353c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvED1Ev>:
 800353c:	4770      	bx	lr

0800353e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800353e:	4770      	bx	lr

08003540 <_ZN8touchgfx11GraphScrollILs200EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003540:	4770      	bx	lr

08003542 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003542:	4770      	bx	lr

08003544 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003544:	4770      	bx	lr

08003546 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
 8003546:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8003548:	68c4      	ldr	r4, [r0, #12]
 800354a:	6845      	ldr	r5, [r0, #4]
 800354c:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 800354e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8003550:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8003554:	07e4      	lsls	r4, r4, #31
 8003556:	bf48      	it	mi
 8003558:	59ac      	ldrmi	r4, [r5, r6]
 800355a:	689b      	ldr	r3, [r3, #8]
 800355c:	bf48      	it	mi
 800355e:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003560:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8003562:	4718      	bx	r3

08003564 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003564:	6843      	ldr	r3, [r0, #4]
 8003566:	b12b      	cbz	r3, 8003574 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvE7isValidEv+0x10>
 8003568:	6883      	ldr	r3, [r0, #8]
 800356a:	b92b      	cbnz	r3, 8003578 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvE7isValidEv+0x14>
 800356c:	68c0      	ldr	r0, [r0, #12]
 800356e:	f000 0001 	and.w	r0, r0, #1
 8003572:	4770      	bx	lr
 8003574:	4618      	mov	r0, r3
 8003576:	4770      	bx	lr
 8003578:	2001      	movs	r0, #1
    }
 800357a:	4770      	bx	lr

0800357c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
 800357c:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 800357e:	68c4      	ldr	r4, [r0, #12]
 8003580:	6845      	ldr	r5, [r0, #4]
 8003582:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8003584:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8003586:	eb05 0064 	add.w	r0, r5, r4, asr #1
 800358a:	07e4      	lsls	r4, r4, #31
 800358c:	bf48      	it	mi
 800358e:	59ac      	ldrmi	r4, [r5, r6]
 8003590:	689b      	ldr	r3, [r3, #8]
 8003592:	bf48      	it	mi
 8003594:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003596:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8003598:	4718      	bx	r3

0800359a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800359a:	6843      	ldr	r3, [r0, #4]
 800359c:	b12b      	cbz	r3, 80035aa <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv+0x10>
 800359e:	6883      	ldr	r3, [r0, #8]
 80035a0:	b92b      	cbnz	r3, 80035ae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv+0x14>
 80035a2:	68c0      	ldr	r0, [r0, #12]
 80035a4:	f000 0001 	and.w	r0, r0, #1
 80035a8:	4770      	bx	lr
 80035aa:	4618      	mov	r0, r3
 80035ac:	4770      	bx	lr
 80035ae:	2001      	movs	r0, #1
    }
 80035b0:	4770      	bx	lr

080035b2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80035b2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035b4:	68c2      	ldr	r2, [r0, #12]
 80035b6:	6844      	ldr	r4, [r0, #4]
 80035b8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80035ba:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80035bc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80035c0:	07d2      	lsls	r2, r2, #31
 80035c2:	bf48      	it	mi
 80035c4:	5962      	ldrmi	r2, [r4, r5]
 80035c6:	689b      	ldr	r3, [r3, #8]
    }
 80035c8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035ca:	bf48      	it	mi
 80035cc:	58d3      	ldrmi	r3, [r2, r3]
 80035ce:	4718      	bx	r3

080035d0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80035d0:	6843      	ldr	r3, [r0, #4]
 80035d2:	b12b      	cbz	r3, 80035e0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80035d4:	6883      	ldr	r3, [r0, #8]
 80035d6:	b92b      	cbnz	r3, 80035e4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80035d8:	68c0      	ldr	r0, [r0, #12]
 80035da:	f000 0001 	and.w	r0, r0, #1
 80035de:	4770      	bx	lr
 80035e0:	4618      	mov	r0, r3
 80035e2:	4770      	bx	lr
 80035e4:	2001      	movs	r0, #1
    }
 80035e6:	4770      	bx	lr

080035e8 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 80035e8:	b510      	push	{r4, lr}
 80035ea:	2140      	movs	r1, #64	; 0x40
 80035ec:	4604      	mov	r4, r0
 80035ee:	f022 f9a6 	bl	802593e <_ZdlPvj>
 80035f2:	4620      	mov	r0, r4
 80035f4:	bd10      	pop	{r4, pc}

080035f6 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 80035f6:	b510      	push	{r4, lr}
 80035f8:	2140      	movs	r1, #64	; 0x40
 80035fa:	4604      	mov	r4, r0
 80035fc:	f022 f99f 	bl	802593e <_ZdlPvj>
 8003600:	4620      	mov	r0, r4
 8003602:	bd10      	pop	{r4, pc}

08003604 <_ZN8touchgfx11GraphScrollILs200EED0Ev>:
 8003604:	b510      	push	{r4, lr}
 8003606:	f44f 618e 	mov.w	r1, #1136	; 0x470
 800360a:	4604      	mov	r4, r0
 800360c:	f022 f997 	bl	802593e <_ZdlPvj>
 8003610:	4620      	mov	r0, r4
 8003612:	bd10      	pop	{r4, pc}

08003614 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003614:	b510      	push	{r4, lr}
 8003616:	2110      	movs	r1, #16
 8003618:	4604      	mov	r4, r0
 800361a:	f022 f990 	bl	802593e <_ZdlPvj>
 800361e:	4620      	mov	r0, r4
 8003620:	bd10      	pop	{r4, pc}

08003622 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003622:	b510      	push	{r4, lr}
 8003624:	2110      	movs	r1, #16
 8003626:	4604      	mov	r4, r0
 8003628:	f022 f989 	bl	802593e <_ZdlPvj>
 800362c:	4620      	mov	r0, r4
 800362e:	bd10      	pop	{r4, pc}

08003630 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_17AbstractDataGraphERKNS2_14GraphDragEventEvED0Ev>:
 8003630:	b510      	push	{r4, lr}
 8003632:	2110      	movs	r1, #16
 8003634:	4604      	mov	r4, r0
 8003636:	f022 f982 	bl	802593e <_ZdlPvj>
 800363a:	4620      	mov	r0, r4
 800363c:	bd10      	pop	{r4, pc}

0800363e <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 800363e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003642:	b10b      	cbz	r3, 8003648 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003644:	f00c bdcd 	b.w	80101e2 <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003648:	4770      	bx	lr

0800364a <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 800364a:	b513      	push	{r0, r1, r4, lr}
 800364c:	4603      	mov	r3, r0
 800364e:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003650:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003654:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003656:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003658:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800365c:	4798      	blx	r3
 800365e:	9901      	ldr	r1, [sp, #4]
 8003660:	4602      	mov	r2, r0
 8003662:	4620      	mov	r0, r4
    }
 8003664:	b002      	add	sp, #8
 8003666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 800366a:	f00e bc01 	b.w	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800366e <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 800366e:	b513      	push	{r0, r1, r4, lr}
 8003670:	4603      	mov	r3, r0
 8003672:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003674:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003678:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 800367a:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 800367c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003680:	4798      	blx	r3
 8003682:	9901      	ldr	r1, [sp, #4]
 8003684:	4602      	mov	r2, r0
 8003686:	4620      	mov	r0, r4
    }
 8003688:	b002      	add	sp, #8
 800368a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 800368e:	f00e bbef 	b.w	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003692 <_ZN15Screen1ViewBase11setupScreenEv>:
    add(textArea2);
}

void Screen1ViewBase::setupScreen()
{
    infoWidget1.initialize();
 8003692:	f200 6064 	addw	r0, r0, #1636	; 0x664
 8003696:	f005 bf9d 	b.w	80095d4 <_ZN10infoWidget10initializeEv>

0800369a <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800369a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800369e:	b112      	cbz	r2, 80036a6 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80036a0:	6803      	ldr	r3, [r0, #0]
 80036a2:	695b      	ldr	r3, [r3, #20]
 80036a4:	4718      	bx	r3
    }
 80036a6:	4770      	bx	lr

080036a8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ResetButton)
 80036a8:	f200 721c 	addw	r2, r0, #1820	; 0x71c
 80036ac:	4291      	cmp	r1, r2
 80036ae:	d102      	bne.n	80036b6 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //ResetButtonClicked
        //When ResetButton clicked call virtual function
        //Call ResetButtonClicked
        ResetButtonClicked();
 80036b0:	6803      	ldr	r3, [r0, #0]
 80036b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    else if (&src == &YDownButton)
    {
        //YdownButtonIsClicked
        //When YDownButton clicked call virtual function
        //Call YdownButtonClicked
        YdownButtonClicked();
 80036b4:	4718      	bx	r3
    else if (&src == &XUpButton)
 80036b6:	f200 7264 	addw	r2, r0, #1892	; 0x764
 80036ba:	4291      	cmp	r1, r2
 80036bc:	d102      	bne.n	80036c4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
        XupButtonClicked();
 80036be:	6803      	ldr	r3, [r0, #0]
 80036c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80036c2:	e7f7      	b.n	80036b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    else if (&src == &YUpButton)
 80036c4:	f500 62f3 	add.w	r2, r0, #1944	; 0x798
 80036c8:	4291      	cmp	r1, r2
 80036ca:	d102      	bne.n	80036d2 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        YupButtonClicked();
 80036cc:	6803      	ldr	r3, [r0, #0]
 80036ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036d0:	e7f0      	b.n	80036b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    else if (&src == &XDownButton)
 80036d2:	f200 72cc 	addw	r2, r0, #1996	; 0x7cc
 80036d6:	4291      	cmp	r1, r2
 80036d8:	d102      	bne.n	80036e0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        XdownButtonClicked();
 80036da:	6803      	ldr	r3, [r0, #0]
 80036dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80036de:	e7e9      	b.n	80036b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    else if (&src == &YDownButton)
 80036e0:	f500 6200 	add.w	r2, r0, #2048	; 0x800
 80036e4:	4291      	cmp	r1, r2
 80036e6:	d102      	bne.n	80036ee <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
        YdownButtonClicked();
 80036e8:	6803      	ldr	r3, [r0, #0]
 80036ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036ec:	e7e2      	b.n	80036b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    }
}
 80036ee:	4770      	bx	lr

080036f0 <_ZN15Screen1ViewBase27graphClickedCallbackHandlerERKN8touchgfx17AbstractDataGraphERKNS1_15GraphClickEventE>:

void Screen1ViewBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
 80036f0:	b410      	push	{r4}
    if (&src == &dynamicGraph1)
 80036f2:	f100 0498 	add.w	r4, r0, #152	; 0x98
 80036f6:	428c      	cmp	r4, r1
 80036f8:	d105      	bne.n	8003706 <_ZN15Screen1ViewBase27graphClickedCallbackHandlerERKN8touchgfx17AbstractDataGraphERKNS1_15GraphClickEventE+0x16>
    {
        //Interaction1
        //When dynamicGraph1 clicked call virtual function
        //Call graph1Clicked
        graph1Clicked(value);
 80036fa:	6803      	ldr	r3, [r0, #0]
    }
}
 80036fc:	f85d 4b04 	ldr.w	r4, [sp], #4
        graph1Clicked(value);
 8003700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003702:	ca06      	ldmia	r2, {r1, r2}
 8003704:	4718      	bx	r3
}
 8003706:	f85d 4b04 	ldr.w	r4, [sp], #4
 800370a:	4770      	bx	lr

0800370c <_ZN15Screen1ViewBase27graphDraggedCallbackHandlerERKN8touchgfx17AbstractDataGraphERKNS1_14GraphDragEventE>:

void Screen1ViewBase::graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value)
{
 800370c:	b410      	push	{r4}
    if (&src == &dynamicGraph1)
 800370e:	f100 0498 	add.w	r4, r0, #152	; 0x98
 8003712:	428c      	cmp	r4, r1
 8003714:	d105      	bne.n	8003722 <_ZN15Screen1ViewBase27graphDraggedCallbackHandlerERKN8touchgfx17AbstractDataGraphERKNS1_14GraphDragEventE+0x16>
    {
        //Interaction2
        //When dynamicGraph1 dragged call virtual function
        //Call graph1Dragged
        graph1Dragged(value);
 8003716:	6803      	ldr	r3, [r0, #0]
    }
}
 8003718:	f85d 4b04 	ldr.w	r4, [sp], #4
        graph1Dragged(value);
 800371c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800371e:	ca06      	ldmia	r2, {r1, r2}
 8003720:	4718      	bx	r3
}
 8003722:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003726:	4770      	bx	lr

08003728 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003728:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 800372a:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 800372c:	db03      	blt.n	8003736 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 800372e:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003732:	4294      	cmp	r4, r2
 8003734:	dc06      	bgt.n	8003744 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003736:	4b08      	ldr	r3, [pc, #32]	; (8003758 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003738:	4a08      	ldr	r2, [pc, #32]	; (800375c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 800373a:	4809      	ldr	r0, [pc, #36]	; (8003760 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 800373c:	f240 6133 	movw	r1, #1587	; 0x633
 8003740:	f022 f92c 	bl	802599c <__assert_func>
        return yValues[dataIndex(index)];
 8003744:	6803      	ldr	r3, [r0, #0]
 8003746:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 800374a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800374e:	4798      	blx	r3
    }
 8003750:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003754:	bd10      	pop	{r4, pc}
 8003756:	bf00      	nop
 8003758:	0802770c 	.word	0x0802770c
 800375c:	0802772f 	.word	0x0802772f
 8003760:	0802777e 	.word	0x0802777e

08003764 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003764:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003766:	b510      	push	{r4, lr}
 8003768:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 800376a:	db03      	blt.n	8003774 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 800376c:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003770:	429a      	cmp	r2, r3
 8003772:	dc06      	bgt.n	8003782 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003774:	4b07      	ldr	r3, [pc, #28]	; (8003794 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003776:	4a08      	ldr	r2, [pc, #32]	; (8003798 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003778:	4808      	ldr	r0, [pc, #32]	; (800379c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 800377a:	f240 612d 	movw	r1, #1581	; 0x62d
 800377e:	f022 f90d 	bl	802599c <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003782:	6803      	ldr	r3, [r0, #0]
 8003784:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003788:	4798      	blx	r3
 800378a:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 800378e:	fb02 3000 	mla	r0, r2, r0, r3
 8003792:	bd10      	pop	{r4, pc}
 8003794:	0802770c 	.word	0x0802770c
 8003798:	080277db 	.word	0x080277db
 800379c:	0802777e 	.word	0x0802777e

080037a0 <_ZN15Screen1ViewBaseD1Ev>:
    virtual ~Screen1ViewBase() {}
 80037a0:	b510      	push	{r4, lr}
 80037a2:	4b06      	ldr	r3, [pc, #24]	; (80037bc <_ZN15Screen1ViewBaseD1Ev+0x1c>)
 80037a4:	6003      	str	r3, [r0, #0]

class infoWidget : public infoWidgetBase
{
public:
    infoWidget();
    virtual ~infoWidget() {}
 80037a6:	4b06      	ldr	r3, [pc, #24]	; (80037c0 <_ZN15Screen1ViewBaseD1Ev+0x20>)
 80037a8:	f8c0 3664 	str.w	r3, [r0, #1636]	; 0x664
 80037ac:	4604      	mov	r4, r0
 80037ae:	f200 6064 	addw	r0, r0, #1636	; 0x664
 80037b2:	f005 fb9f 	bl	8008ef4 <_ZN14infoWidgetBaseD1Ev>
 80037b6:	4620      	mov	r0, r4
 80037b8:	bd10      	pop	{r4, pc}
 80037ba:	bf00      	nop
 80037bc:	08027dcc 	.word	0x08027dcc
 80037c0:	0802826c 	.word	0x0802826c

080037c4 <_ZN15Screen1ViewBaseD0Ev>:
 80037c4:	b510      	push	{r4, lr}
 80037c6:	4604      	mov	r4, r0
 80037c8:	f7ff ffea 	bl	80037a0 <_ZN15Screen1ViewBaseD1Ev>
 80037cc:	4620      	mov	r0, r4
 80037ce:	f243 71d4 	movw	r1, #14292	; 0x37d4
 80037d2:	f022 f8b4 	bl	802593e <_ZdlPvj>
 80037d6:	4620      	mov	r0, r4
 80037d8:	bd10      	pop	{r4, pc}

080037da <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80037da:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80037dc:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80037de:	4604      	mov	r4, r0
        setX(x);
 80037e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80037e2:	4615      	mov	r5, r2
        setX(x);
 80037e4:	4798      	blx	r3
        setY(y);
 80037e6:	6823      	ldr	r3, [r4, #0]
 80037e8:	4629      	mov	r1, r5
 80037ea:	4620      	mov	r0, r4
 80037ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80037ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80037f2:	4718      	bx	r3

080037f4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80037f4:	b570      	push	{r4, r5, r6, lr}
 80037f6:	4604      	mov	r4, r0
 80037f8:	461d      	mov	r5, r3
 80037fa:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80037fe:	f7ff ffec 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003802:	6823      	ldr	r3, [r4, #0]
 8003804:	4629      	mov	r1, r5
 8003806:	4620      	mov	r0, r4
 8003808:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800380a:	4798      	blx	r3
        setHeight(height);
 800380c:	6823      	ldr	r3, [r4, #0]
 800380e:	4631      	mov	r1, r6
 8003810:	4620      	mov	r0, r4
 8003812:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003814:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003818:	4718      	bx	r3
	...

0800381c <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 800381c:	2200      	movs	r2, #0
 800381e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003822:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8003826:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800382a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800382e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003832:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003834:	4a01      	ldr	r2, [pc, #4]	; (800383c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003836:	6002      	str	r2, [r0, #0]
 8003838:	4770      	bx	lr
 800383a:	bf00      	nop
 800383c:	080279f0 	.word	0x080279f0

08003840 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003840:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003842:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003844:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003846:	f014 f862 	bl	801790e <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800384a:	2800      	cmp	r0, #0
 800384c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003850:	9901      	ldr	r1, [sp, #4]
 8003852:	462a      	mov	r2, r5
 8003854:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003858:	db04      	blt.n	8003864 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800385a:	f014 f877 	bl	801794c <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800385e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003860:	b003      	add	sp, #12
 8003862:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003864:	f014 f872 	bl	801794c <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003868:	1a20      	subs	r0, r4, r0
 800386a:	e7f9      	b.n	8003860 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800386c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800386c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800386e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003872:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003876:	1963      	adds	r3, r4, r5
 8003878:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 800387c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800387e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003882:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003884:	b22d      	sxth	r5, r5
 8003886:	1ad2      	subs	r2, r2, r3
 8003888:	1e69      	subs	r1, r5, #1
 800388a:	1af0      	subs	r0, r6, r3
 800388c:	f7ff ffd8 	bl	8003840 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003890:	442c      	add	r4, r5
 8003892:	3c01      	subs	r4, #1
    }
 8003894:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003898:	bd70      	pop	{r4, r5, r6, pc}

0800389a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 800389a:	b538      	push	{r3, r4, r5, lr}
 800389c:	4604      	mov	r4, r0
 800389e:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80038a0:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 80038a4:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 80038a8:	440b      	add	r3, r1
 80038aa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80038ae:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80038b2:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80038b4:	b209      	sxth	r1, r1
 80038b6:	1b52      	subs	r2, r2, r5
 80038b8:	3901      	subs	r1, #1
 80038ba:	1b40      	subs	r0, r0, r5
 80038bc:	f7ff ffc0 	bl	8003840 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80038c0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80038c4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80038c8:	bd38      	pop	{r3, r4, r5, pc}
	...

080038cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80038cc:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80038ce:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80038d0:	4e12      	ldr	r6, [pc, #72]	; (800391c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80038d2:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80038d4:	4b12      	ldr	r3, [pc, #72]	; (8003920 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80038d6:	6003      	str	r3, [r0, #0]
 80038d8:	6833      	ldr	r3, [r6, #0]
 80038da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 80038de:	4605      	mov	r5, r0
 80038e0:	b10a      	cbz	r2, 80038e6 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80038e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80038e4:	b900      	cbnz	r0, 80038e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80038e6:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80038e8:	6803      	ldr	r3, [r0, #0]
 80038ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038ec:	4798      	blx	r3
        return auxiliaryLCD;
 80038ee:	6833      	ldr	r3, [r6, #0]
 80038f0:	fab0 f480 	clz	r4, r0
 80038f4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80038f6:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80038f8:	b130      	cbz	r0, 8003908 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038fe:	4798      	blx	r3
 8003900:	2800      	cmp	r0, #0
 8003902:	bf08      	it	eq
 8003904:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003908:	b92c      	cbnz	r4, 8003916 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800390a:	4b06      	ldr	r3, [pc, #24]	; (8003924 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800390c:	4a06      	ldr	r2, [pc, #24]	; (8003928 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800390e:	4807      	ldr	r0, [pc, #28]	; (800392c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003910:	212c      	movs	r1, #44	; 0x2c
 8003912:	f022 f843 	bl	802599c <__assert_func>
    }
 8003916:	4628      	mov	r0, r5
 8003918:	bd70      	pop	{r4, r5, r6, pc}
 800391a:	bf00      	nop
 800391c:	2000dc74 	.word	0x2000dc74
 8003920:	08027bc8 	.word	0x08027bc8
 8003924:	0802782a 	.word	0x0802782a
 8003928:	08027888 	.word	0x08027888
 800392c:	080278c1 	.word	0x080278c1

08003930 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 8003930:	4b06      	ldr	r3, [pc, #24]	; (800394c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003932:	60c1      	str	r1, [r0, #12]
 8003934:	094a      	lsrs	r2, r1, #5
 8003936:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800393a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800393e:	4313      	orrs	r3, r2
 8003940:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8003944:	4319      	orrs	r1, r3
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003946:	8201      	strh	r1, [r0, #16]
    }
 8003948:	4770      	bx	lr
 800394a:	bf00      	nop
 800394c:	fffff800 	.word	0xfffff800

08003950 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 8003950:	f1a0 0008 	sub.w	r0, r0, #8
 8003954:	e7ec      	b.n	8003930 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8003956:	bf00      	nop

08003958 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003958:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800395a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 800395c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800395e:	2100      	movs	r1, #0
 8003960:	f022 f8a8 	bl	8025ab4 <memset>
 8003964:	4620      	mov	r0, r4
 8003966:	f7ff ff59 	bl	800381c <_ZN8touchgfx6WidgetC1Ev>
 800396a:	4b0a      	ldr	r3, [pc, #40]	; (8003994 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800396c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800396e:	4b0a      	ldr	r3, [pc, #40]	; (8003998 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003970:	62a3      	str	r3, [r4, #40]	; 0x28
 8003972:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003976:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003978:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800397c:	2300      	movs	r3, #0
 800397e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003982:	f04f 32ff 	mov.w	r2, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003986:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800398a:	8723      	strh	r3, [r4, #56]	; 0x38
 800398c:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800398e:	4620      	mov	r0, r4
 8003990:	bd10      	pop	{r4, pc}
 8003992:	bf00      	nop
 8003994:	08028ad8 	.word	0x08028ad8
 8003998:	08027304 	.word	0x08027304

0800399c <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800399c:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800399e:	2226      	movs	r2, #38	; 0x26
 80039a0:	4604      	mov	r4, r0
 80039a2:	2100      	movs	r1, #0
 80039a4:	f022 f886 	bl	8025ab4 <memset>
 80039a8:	4620      	mov	r0, r4
 80039aa:	f7ff ff37 	bl	800381c <_ZN8touchgfx6WidgetC1Ev>
 80039ae:	2300      	movs	r3, #0
 80039b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80039b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80039b6:	2301      	movs	r3, #1
 80039b8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButton(), up(), down(), alpha(255)
 80039bc:	4b04      	ldr	r3, [pc, #16]	; (80039d0 <_ZN8touchgfx6ButtonC1Ev+0x34>)
 80039be:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80039c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80039c4:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80039c6:	8623      	strh	r3, [r4, #48]	; 0x30
 80039c8:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
    {
    }
 80039cc:	4620      	mov	r0, r4
 80039ce:	bd10      	pop	{r4, pc}
 80039d0:	08028bd0 	.word	0x08028bd0

080039d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80039d4:	4b1b      	ldr	r3, [pc, #108]	; (8003a44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80039d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80039d8:	881b      	ldrh	r3, [r3, #0]
 80039da:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80039dc:	428b      	cmp	r3, r1
    void updateTextPosition()
 80039de:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80039e0:	d92b      	bls.n	8003a3a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039e2:	4b19      	ldr	r3, [pc, #100]	; (8003a48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	b92b      	cbnz	r3, 80039f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80039e8:	4b18      	ldr	r3, [pc, #96]	; (8003a4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80039ea:	4a19      	ldr	r2, [pc, #100]	; (8003a50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80039ec:	4819      	ldr	r0, [pc, #100]	; (8003a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80039ee:	216c      	movs	r1, #108	; 0x6c
 80039f0:	f021 ffd4 	bl	802599c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80039f4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80039f8:	4b17      	ldr	r3, [pc, #92]	; (8003a58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003a00:	4b16      	ldr	r3, [pc, #88]	; (8003a5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8003a02:	6818      	ldr	r0, [r3, #0]
 8003a04:	f005 fa16 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003a08:	682b      	ldr	r3, [r5, #0]
 8003a0a:	9001      	str	r0, [sp, #4]
 8003a0c:	4601      	mov	r1, r0
 8003a0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a10:	4628      	mov	r0, r5
 8003a12:	4798      	blx	r3
 8003a14:	682b      	ldr	r3, [r5, #0]
 8003a16:	9901      	ldr	r1, [sp, #4]
 8003a18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a1a:	4604      	mov	r4, r0
 8003a1c:	4628      	mov	r0, r5
 8003a1e:	4798      	blx	r3
 8003a20:	682b      	ldr	r3, [r5, #0]
 8003a22:	9901      	ldr	r1, [sp, #4]
 8003a24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a26:	fb14 f400 	smulbb	r4, r4, r0
 8003a2a:	4628      	mov	r0, r5
 8003a2c:	4798      	blx	r3
 8003a2e:	b2e4      	uxtb	r4, r4
 8003a30:	4404      	add	r4, r0
 8003a32:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003a36:	b002      	add	sp, #8
 8003a38:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8003a3a:	2300      	movs	r3, #0
 8003a3c:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8003a40:	e7f9      	b.n	8003a36 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8003a42:	bf00      	nop
 8003a44:	2000dcd0 	.word	0x2000dcd0
 8003a48:	2000dccc 	.word	0x2000dccc
 8003a4c:	08027923 	.word	0x08027923
 8003a50:	08027965 	.word	0x08027965
 8003a54:	080279a0 	.word	0x080279a0
 8003a58:	2000dcd4 	.word	0x2000dcd4
 8003a5c:	2000dcd8 	.word	0x2000dcd8

08003a60 <_ZN8touchgfx12GraphLabelsYC1Ev>:

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003a60:	b510      	push	{r4, lr}
 8003a62:	4604      	mov	r4, r0
        : CanvasWidget()
 8003a64:	f00d fdfe 	bl	8011664 <_ZN8touchgfx12CanvasWidgetC1Ev>
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003a68:	2300      	movs	r3, #0
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	e9c4 320b 	strd	r3, r2, [r4, #44]	; 0x2c
        : typedTextId(id)
 8003a70:	4a08      	ldr	r2, [pc, #32]	; (8003a94 <_ZN8touchgfx12GraphLabelsYC1Ev+0x34>)
 8003a72:	63a2      	str	r2, [r4, #56]	; 0x38
 8003a74:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003a78:	6363      	str	r3, [r4, #52]	; 0x34
 8003a7a:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8003a7c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8003a80:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8003a84:	222e      	movs	r2, #46	; 0x2e
 8003a86:	64a3      	str	r3, [r4, #72]	; 0x48
class GraphLabelsY : public GraphLabelsBase
 8003a88:	4b03      	ldr	r3, [pc, #12]	; (8003a98 <_ZN8touchgfx12GraphLabelsYC1Ev+0x38>)
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003a8a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
class GraphLabelsY : public GraphLabelsBase
 8003a8e:	6023      	str	r3, [r4, #0]
 8003a90:	4620      	mov	r0, r4
 8003a92:	bd10      	pop	{r4, pc}
 8003a94:	08027304 	.word	0x08027304
 8003a98:	080289c4 	.word	0x080289c4

08003a9c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003aa0:	ed2d 8b0e 	vpush	{d8-d14}
 8003aa4:	4604      	mov	r4, r0
 8003aa6:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8003aa8:	f014 f8fa 	bl	8017ca0 <_ZN8touchgfx6ScreenC1Ev>
    graphDraggedCallback(this, &Screen1ViewBase::graphDraggedCallbackHandler)
 8003aac:	4622      	mov	r2, r4
 8003aae:	2600      	movs	r6, #0
 8003ab0:	4bec      	ldr	r3, [pc, #944]	; (8003e64 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003ab2:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003ab4:	f842 3b40 	str.w	r3, [r2], #64
 8003ab8:	ee08 2a10 	vmov	s16, r2
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003abc:	4631      	mov	r1, r6
 8003abe:	2226      	movs	r2, #38	; 0x26
 8003ac0:	ee18 0a10 	vmov	r0, s16
 8003ac4:	f021 fff6 	bl	8025ab4 <memset>
 8003ac8:	ee18 0a10 	vmov	r0, s16
 8003acc:	f7ff fea6 	bl	800381c <_ZN8touchgfx6WidgetC1Ev>
 8003ad0:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8003ad4:	25ff      	movs	r5, #255	; 0xff
 8003ad6:	4be4      	ldr	r3, [pc, #912]	; (8003e68 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003ad8:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003ada:	2226      	movs	r2, #38	; 0x26
 8003adc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003ae0:	4631      	mov	r1, r6
 8003ae2:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
        : color(col)
 8003ae6:	66a6      	str	r6, [r4, #104]	; 0x68
 8003ae8:	4648      	mov	r0, r9
 8003aea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003aee:	f021 ffe1 	bl	8025ab4 <memset>
 8003af2:	4648      	mov	r0, r9
 8003af4:	f7ff fe92 	bl	800381c <_ZN8touchgfx6WidgetC1Ev>
 8003af8:	4bdc      	ldr	r3, [pc, #880]	; (8003e6c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003afa:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003afc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003b00:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8003b04:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
    {
        Image::setBitmap(bmp);
 8003b08:	a90a      	add	r1, sp, #40	; 0x28
 8003b0a:	f104 0598 	add.w	r5, r4, #152	; 0x98
 8003b0e:	4648      	mov	r0, r9
 8003b10:	f010 f8e3 	bl	8013cda <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003b14:	21c8      	movs	r1, #200	; 0xc8
 8003b16:	4628      	mov	r0, r5
 8003b18:	f00e f946 	bl	8011da8 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003b1c:	4bd4      	ldr	r3, [pc, #848]	; (8003e70 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003b1e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003b22:	2701      	movs	r7, #1
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003b24:	f504 73f4 	add.w	r3, r4, #488	; 0x1e8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003b28:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003b2a:	e9c4 3677 	strd	r3, r6, [r4, #476]	; 0x1dc
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003b2e:	22c7      	movs	r2, #199	; 0xc7
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003b30:	e9c4 7675 	strd	r7, r6, [r4, #468]	; 0x1d4
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003b34:	4628      	mov	r0, r5
 8003b36:	f7ff f91b 	bl	8002d70 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003b3a:	4bce      	ldr	r3, [pc, #824]	; (8003e74 <_ZN15Screen1ViewBaseC1Ev+0x3d8>)
 8003b3c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003b40:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
        : DynamicDataGraph(capacity, values), current(0)
 8003b44:	f8a4 61e4 	strh.w	r6, [r4, #484]	; 0x1e4
 8003b48:	4618      	mov	r0, r3
 8003b4a:	ee0c 3a90 	vmov	s25, r3
 8003b4e:	f00d fd89 	bl	8011664 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003b52:	4bc9      	ldr	r3, [pc, #804]	; (8003e78 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
 8003b54:	f8c4 3508 	str.w	r3, [r4, #1288]	; 0x508
 8003b58:	f504 62a7 	add.w	r2, r4, #1336	; 0x538
 8003b5c:	f04f 0302 	mov.w	r3, #2
 8003b60:	f884 3534 	strb.w	r3, [r4, #1332]	; 0x534
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003b64:	4610      	mov	r0, r2
 8003b66:	ee0b 2a10 	vmov	s22, r2
 8003b6a:	f7ff feaf 	bl	80038cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003b6e:	4bc3      	ldr	r3, [pc, #780]	; (8003e7c <_ZN15Screen1ViewBaseC1Ev+0x3e0>)
 8003b70:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
 8003b74:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 8003b78:	3324      	adds	r3, #36	; 0x24
 8003b7a:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
 8003b7e:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
        : CanvasWidget()
 8003b82:	4610      	mov	r0, r2
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003b84:	f04f 080a 	mov.w	r8, #10
 8003b88:	ee0d 2a10 	vmov	s26, r2
        : CanvasWidget()
 8003b8c:	f00d fd6a 	bl	8011664 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8003b90:	f204 528c 	addw	r2, r4, #1420	; 0x58c
class GraphElementGridX : public GraphElementGridBase
 8003b94:	4bba      	ldr	r3, [pc, #744]	; (8003e80 <_ZN15Screen1ViewBaseC1Ev+0x3e4>)
 8003b96:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003b9a:	f8c4 8580 	str.w	r8, [r4, #1408]	; 0x580
 8003b9e:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
class GraphElementGridX : public GraphElementGridBase
 8003ba2:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
        : CanvasWidget()
 8003ba6:	4610      	mov	r0, r2
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003ba8:	f8c4 757c 	str.w	r7, [r4, #1404]	; 0x57c
 8003bac:	f884 7584 	strb.w	r7, [r4, #1412]	; 0x584
 8003bb0:	ee0d 2a90 	vmov	s27, r2
        : CanvasWidget()
 8003bb4:	f00d fd56 	bl	8011664 <_ZN8touchgfx12CanvasWidgetC1Ev>
class GraphElementGridY : public GraphElementGridBase
 8003bb8:	4bb2      	ldr	r3, [pc, #712]	; (8003e84 <_ZN15Screen1ViewBaseC1Ev+0x3e8>)
 8003bba:	f8c4 358c 	str.w	r3, [r4, #1420]	; 0x58c
 8003bbe:	f204 52cc 	addw	r2, r4, #1484	; 0x5cc
 8003bc2:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003bc6:	f8c4 85c0 	str.w	r8, [r4, #1472]	; 0x5c0
 8003bca:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
 8003bce:	4610      	mov	r0, r2
 8003bd0:	f8c4 75bc 	str.w	r7, [r4, #1468]	; 0x5bc
 8003bd4:	f884 75c4 	strb.w	r7, [r4, #1476]	; 0x5c4
 8003bd8:	ee0e 2a10 	vmov	s28, r2
 8003bdc:	f7ff ff40 	bl	8003a60 <_ZN8touchgfx12GraphLabelsYC1Ev>
 8003be0:	f504 62c3 	add.w	r2, r4, #1560	; 0x618
 8003be4:	4610      	mov	r0, r2
 8003be6:	ee0b 2a90 	vmov	s23, r2
 8003bea:	f7ff ff39 	bl	8003a60 <_ZN8touchgfx12GraphLabelsYC1Ev>
 8003bee:	f204 6264 	addw	r2, r4, #1636	; 0x664
 8003bf2:	4610      	mov	r0, r2
 8003bf4:	ee0c 2a10 	vmov	s24, r2
 8003bf8:	f005 fcca 	bl	8009590 <_ZN10infoWidgetC1Ev>
 8003bfc:	f204 721c 	addw	r2, r4, #1820	; 0x71c
 8003c00:	4610      	mov	r0, r2
 8003c02:	ee08 2a90 	vmov	s17, r2
 8003c06:	f010 f98f 	bl	8013f28 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003c0a:	f204 7264 	addw	r2, r4, #1892	; 0x764
 8003c0e:	4610      	mov	r0, r2
 8003c10:	ee09 2a10 	vmov	s18, r2
 8003c14:	f7ff fec2 	bl	800399c <_ZN8touchgfx6ButtonC1Ev>
 8003c18:	f504 62f3 	add.w	r2, r4, #1944	; 0x798
 8003c1c:	4610      	mov	r0, r2
 8003c1e:	ee09 2a90 	vmov	s19, r2
 8003c22:	f7ff febb 	bl	800399c <_ZN8touchgfx6ButtonC1Ev>
 8003c26:	f204 72cc 	addw	r2, r4, #1996	; 0x7cc
 8003c2a:	4610      	mov	r0, r2
 8003c2c:	ee0a 2a10 	vmov	s20, r2
 8003c30:	f7ff feb4 	bl	800399c <_ZN8touchgfx6ButtonC1Ev>
 8003c34:	f504 6200 	add.w	r2, r4, #2048	; 0x800
 8003c38:	4610      	mov	r0, r2
 8003c3a:	f604 0a34 	addw	sl, r4, #2100	; 0x834
 8003c3e:	ee0a 2a90 	vmov	s21, r2
 8003c42:	f604 0b7c 	addw	fp, r4, #2172	; 0x87c
 8003c46:	f7ff fea9 	bl	800399c <_ZN8touchgfx6ButtonC1Ev>
 8003c4a:	4650      	mov	r0, sl
 8003c4c:	f7ff fe84 	bl	8003958 <_ZN8touchgfx8TextAreaC1Ev>
 8003c50:	4658      	mov	r0, fp
 8003c52:	f7ff fe81 	bl	8003958 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c56:	4b8c      	ldr	r3, [pc, #560]	; (8003e88 <_ZN15Screen1ViewBaseC1Ev+0x3ec>)
 8003c58:	f8c4 38c4 	str.w	r3, [r4, #2244]	; 0x8c4
 8003c5c:	4b8b      	ldr	r3, [pc, #556]	; (8003e8c <_ZN15Screen1ViewBaseC1Ev+0x3f0>)
 8003c5e:	f8c4 38cc 	str.w	r3, [r4, #2252]	; 0x8cc
        : pobject(pObject), pmemfun(pmemfun_2)
 8003c62:	4b8b      	ldr	r3, [pc, #556]	; (8003e90 <_ZN15Screen1ViewBaseC1Ev+0x3f4>)
 8003c64:	f8c4 38d4 	str.w	r3, [r4, #2260]	; 0x8d4
 8003c68:	4b8a      	ldr	r3, [pc, #552]	; (8003e94 <_ZN15Screen1ViewBaseC1Ev+0x3f8>)
 8003c6a:	f8c4 38dc 	str.w	r3, [r4, #2268]	; 0x8dc
 8003c6e:	4b8a      	ldr	r3, [pc, #552]	; (8003e98 <_ZN15Screen1ViewBaseC1Ev+0x3fc>)
 8003c70:	f8c4 38e4 	str.w	r3, [r4, #2276]	; 0x8e4
 8003c74:	4b89      	ldr	r3, [pc, #548]	; (8003e9c <_ZN15Screen1ViewBaseC1Ev+0x400>)
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c76:	f8c4 68d0 	str.w	r6, [r4, #2256]	; 0x8d0
 8003c7a:	f604 02c4 	addw	r2, r4, #2244	; 0x8c4
        : pobject(pObject), pmemfun(pmemfun_2)
 8003c7e:	f8c4 68e0 	str.w	r6, [r4, #2272]	; 0x8e0
 8003c82:	f8c4 38ec 	str.w	r3, [r4, #2284]	; 0x8ec
 8003c86:	f8c4 68f0 	str.w	r6, [r4, #2288]	; 0x8f0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003c8a:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8003c8e:	f604 00f4 	addw	r0, r4, #2292	; 0x8f4
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c92:	f8c4 48c8 	str.w	r4, [r4, #2248]	; 0x8c8
        : pobject(pObject), pmemfun(pmemfun_2)
 8003c96:	f8c4 48d8 	str.w	r4, [r4, #2264]	; 0x8d8
 8003c9a:	f8c4 48e8 	str.w	r4, [r4, #2280]	; 0x8e8
    graphDraggedCallback(this, &Screen1ViewBase::graphDraggedCallbackHandler)
 8003c9e:	9203      	str	r2, [sp, #12]
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003ca0:	f010 fffe 	bl	8014ca0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8003ca4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003ca8:	4632      	mov	r2, r6
 8003caa:	4631      	mov	r1, r6
 8003cac:	ee18 0a10 	vmov	r0, s16
 8003cb0:	9300      	str	r3, [sp, #0]
 8003cb2:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003cb6:	f7ff fd9d 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003cba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003cbe:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003cc0:	4632      	mov	r2, r6
 8003cc2:	4631      	mov	r1, r6
 8003cc4:	4648      	mov	r0, r9
 8003cc6:	f7ff fd88 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BACKGROUND_ID));
 8003cca:	a90a      	add	r1, sp, #40	; 0x28
 8003ccc:	4648      	mov	r0, r9
 8003cce:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003cd2:	f010 f802 	bl	8013cda <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    dynamicGraph1.setScale(100);
 8003cd6:	4632      	mov	r2, r6
 8003cd8:	2164      	movs	r1, #100	; 0x64
 8003cda:	4628      	mov	r0, r5
 8003cdc:	f7ff f9fc 	bl	80030d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 800, 246);
 8003ce0:	23f6      	movs	r3, #246	; 0xf6
 8003ce2:	4632      	mov	r2, r6
 8003ce4:	4631      	mov	r1, r6
 8003ce6:	9300      	str	r3, [sp, #0]
 8003ce8:	4628      	mov	r0, r5
 8003cea:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003cee:	f7ff fd81 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(10, 30, 0, 30);
 8003cf2:	221e      	movs	r2, #30
 8003cf4:	4633      	mov	r3, r6
 8003cf6:	4641      	mov	r1, r8
 8003cf8:	9200      	str	r2, [sp, #0]
 8003cfa:	4628      	mov	r0, r5
 8003cfc:	f00e f806 	bl	8011d0c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8003d00:	4633      	mov	r3, r6
 8003d02:	4632      	mov	r2, r6
 8003d04:	4631      	mov	r1, r6
 8003d06:	9600      	str	r6, [sp, #0]
 8003d08:	4628      	mov	r0, r5
 8003d0a:	f00d ff14 	bl	8011b36 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(0.0f, 3.5f);
 8003d0e:	ed9f 0a64 	vldr	s0, [pc, #400]	; 8003ea0 <_ZN15Screen1ViewBaseC1Ev+0x404>
 8003d12:	eef0 0a0c 	vmov.f32	s1, #12	; 0x40600000  3.5
 8003d16:	4628      	mov	r0, r5
 8003d18:	f7ff f8c0 	bl	8002e9c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
    graphDraggedCallback(this, &Screen1ViewBase::graphDraggedCallbackHandler)
 8003d1c:	f604 03d4 	addw	r3, r4, #2260	; 0x8d4
        clickAction = &callback;
 8003d20:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
 8003d24:	f604 03e4 	addw	r3, r4, #2276	; 0x8e4
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003d28:	2264      	movs	r2, #100	; 0x64
 8003d2a:	f8d4 157c 	ldr.w	r1, [r4, #1404]	; 0x57c
        dragAction = &callback;
 8003d2e:	f8c4 31c0 	str.w	r3, [r4, #448]	; 0x1c0
 8003d32:	f8d4 0580 	ldr.w	r0, [r4, #1408]	; 0x580
 8003d36:	f00e f89b 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003d3a:	4b5a      	ldr	r3, [pc, #360]	; (8003ea4 <_ZN15Screen1ViewBaseC1Ev+0x408>)
 8003d3c:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
        dataScale = scale;
 8003d40:	f04f 0864 	mov.w	r8, #100	; 0x64
        gridInterval = abs(interval);
 8003d44:	f44f 63c8 	mov.w	r3, #1600	; 0x640
 8003d48:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8003d4c:	ee1d 1a10 	vmov	r1, s26
 8003d50:	4628      	mov	r0, r5
        dataScale = scale;
 8003d52:	f8c4 857c 	str.w	r8, [r4, #1404]	; 0x57c
        lineWidth = width;
 8003d56:	f884 7584 	strb.w	r7, [r4, #1412]	; 0x584
 8003d5a:	f00d fef7 	bl	8011b4c <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003d5e:	4642      	mov	r2, r8
 8003d60:	f8d4 15bc 	ldr.w	r1, [r4, #1468]	; 0x5bc
 8003d64:	f8d4 05c0 	ldr.w	r0, [r4, #1472]	; 0x5c0
 8003d68:	f00e f882 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003d6c:	4b4d      	ldr	r3, [pc, #308]	; (8003ea4 <_ZN15Screen1ViewBaseC1Ev+0x408>)
 8003d6e:	f8c4 35b8 	str.w	r3, [r4, #1464]	; 0x5b8
        gridInterval = abs(interval);
 8003d72:	233c      	movs	r3, #60	; 0x3c
 8003d74:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8003d78:	ee1d 1a90 	vmov	r1, s27
 8003d7c:	4628      	mov	r0, r5
        dataScale = scale;
 8003d7e:	f8c4 85bc 	str.w	r8, [r4, #1468]	; 0x5bc
        lineWidth = width;
 8003d82:	f884 75c4 	strb.w	r7, [r4, #1476]	; 0x5c4
 8003d86:	f00d fee1 	bl	8011b4c <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003d8a:	4642      	mov	r2, r8
 8003d8c:	f8d4 15fc 	ldr.w	r1, [r4, #1532]	; 0x5fc
 8003d90:	f8d4 0600 	ldr.w	r0, [r4, #1536]	; 0x600
 8003d94:	f00e f86c 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8003d98:	2332      	movs	r3, #50	; 0x32
 8003d9a:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
        majorLabel = &major;
 8003d9e:	ee1b 3a90 	vmov	r3, s23
class TypedText
 8003da2:	f8a4 6608 	strh.w	r6, [r4, #1544]	; 0x608
        color = newColor;
 8003da6:	4e3f      	ldr	r6, [pc, #252]	; (8003ea4 <_ZN15Screen1ViewBaseC1Ev+0x408>)
 8003da8:	f8c4 3614 	str.w	r3, [r4, #1556]	; 0x614
    dynamicGraph1.addLeftElement(dynamicGraph1MinorYAxisLabel);
 8003dac:	ee1e 1a10 	vmov	r1, s28
 8003db0:	4628      	mov	r0, r5
        dataScale = scale;
 8003db2:	f8c4 85fc 	str.w	r8, [r4, #1532]	; 0x5fc
        labelDecimals = decimals;
 8003db6:	f8a4 760e 	strh.w	r7, [r4, #1550]	; 0x60e
 8003dba:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
 8003dbe:	f00d fed7 	bl	8011b70 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003dc2:	4642      	mov	r2, r8
 8003dc4:	f8d4 1648 	ldr.w	r1, [r4, #1608]	; 0x648
 8003dc8:	f8d4 064c 	ldr.w	r0, [r4, #1612]	; 0x64c
 8003dcc:	f00e f850 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8003dd0:	2306      	movs	r3, #6
 8003dd2:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8003dd6:	ee1b 1a90 	vmov	r1, s23
 8003dda:	4628      	mov	r0, r5
        dataScale = scale;
 8003ddc:	f8c4 8648 	str.w	r8, [r4, #1608]	; 0x648
        labelInterval = abs(interval);
 8003de0:	f8c4 864c 	str.w	r8, [r4, #1612]	; 0x64c
        labelDecimals = decimals;
 8003de4:	f8a4 765a 	strh.w	r7, [r4, #1626]	; 0x65a
 8003de8:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
 8003dec:	f00d fec0 	bl	8011b70 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(194, 23, 60));
 8003df0:	492d      	ldr	r1, [pc, #180]	; (8003ea8 <_ZN15Screen1ViewBaseC1Ev+0x40c>)
 8003df2:	ee1b 0a10 	vmov	r0, s22
 8003df6:	f7ff fd9b 	bl	8003930 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        canvasPainter = &painter;
 8003dfa:	ee1b 3a10 	vmov	r3, s22
 8003dfe:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8003e02:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8003e06:	ee1c 1a90 	vmov	r1, s25
 8003e0a:	f884 3534 	strb.w	r3, [r4, #1332]	; 0x534
 8003e0e:	4628      	mov	r0, r5
 8003e10:	f00d fe9c 	bl	8011b4c <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * (float)scale;
 8003e14:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003e18:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8003eac <_ZN15Screen1ViewBaseC1Ev+0x410>
 8003e1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e20:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003e24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e2c:	f2c2 8634 	blt.w	8006a98 <_ZN15Screen1ViewBaseC1Ev+0x2ffc>
            return (int)(fs + 0.5f);
 8003e30:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003e34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003e38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003e3c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003e40:	4628      	mov	r0, r5
 8003e42:	f00e f86f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003e46:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003e4a:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8003eb0 <_ZN15Screen1ViewBaseC1Ev+0x414>
 8003e4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003e56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e5e:	f2c2 8630 	blt.w	8006ac2 <_ZN15Screen1ViewBaseC1Ev+0x3026>
 8003e62:	e04d      	b.n	8003f00 <_ZN15Screen1ViewBaseC1Ev+0x464>
 8003e64:	08027dcc 	.word	0x08027dcc
 8003e68:	08028b68 	.word	0x08028b68
 8003e6c:	08028c44 	.word	0x08028c44
 8003e70:	0802866c 	.word	0x0802866c
 8003e74:	08027be8 	.word	0x08027be8
 8003e78:	08028944 	.word	0x08028944
 8003e7c:	080285bc 	.word	0x080285bc
 8003e80:	08027a58 	.word	0x08027a58
 8003e84:	08027b10 	.word	0x08027b10
 8003e88:	08027d84 	.word	0x08027d84
 8003e8c:	080036a9 	.word	0x080036a9
 8003e90:	08027d9c 	.word	0x08027d9c
 8003e94:	080036f1 	.word	0x080036f1
 8003e98:	08027db4 	.word	0x08027db4
 8003e9c:	0800370d 	.word	0x0800370d
 8003ea0:	00000000 	.word	0x00000000
 8003ea4:	ff1497c5 	.word	0xff1497c5
 8003ea8:	ffc2173c 	.word	0xffc2173c
 8003eac:	400f59de 	.word	0x400f59de
 8003eb0:	4018a10e 	.word	0x4018a10e
 8003eb4:	4020e560 	.word	0x4020e560
 8003eb8:	4027613d 	.word	0x4027613d
 8003ebc:	402b6873 	.word	0x402b6873
 8003ec0:	402c7382 	.word	0x402c7382
 8003ec4:	402a284e 	.word	0x402a284e
 8003ec8:	402460d4 	.word	0x402460d4
 8003ecc:	401b2e73 	.word	0x401b2e73
 8003ed0:	400ed917 	.word	0x400ed917
 8003ed4:	3fffb7e9 	.word	0x3fffb7e9
 8003ed8:	3fddbc56 	.word	0x3fddbc56
 8003edc:	3fb95326 	.word	0x3fb95326
 8003ee0:	3f943c9f 	.word	0x3f943c9f
 8003ee4:	3f6098b3 	.word	0x3f6098b3
 8003ee8:	3f1e9985 	.word	0x3f1e9985
 8003eec:	3ecb8bac 	.word	0x3ecb8bac
 8003ef0:	3e63b795 	.word	0x3e63b795
 8003ef4:	3dd1dbcb 	.word	0x3dd1dbcb
 8003ef8:	3d310774 	.word	0x3d310774
 8003efc:	3d3f3e03 	.word	0x3d3f3e03
            return (int)(fs + 0.5f);
 8003f00:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003f04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f0c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003f10:	4628      	mov	r0, r5
 8003f12:	f00e f807 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003f16:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003f1a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8003eb4 <_ZN15Screen1ViewBaseC1Ev+0x418>
 8003f1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003f22:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003f26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003f2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f2e:	f2c2 85dd 	blt.w	8006aec <_ZN15Screen1ViewBaseC1Ev+0x3050>
            return (int)(fs + 0.5f);
 8003f32:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003f36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f3e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003f42:	4628      	mov	r0, r5
 8003f44:	f00d ffee 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003f48:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003f4c:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8003eb8 <_ZN15Screen1ViewBaseC1Ev+0x41c>
 8003f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003f54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003f58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f60:	f2c2 85d9 	blt.w	8006b16 <_ZN15Screen1ViewBaseC1Ev+0x307a>
            return (int)(fs + 0.5f);
 8003f64:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003f68:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f70:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003f74:	4628      	mov	r0, r5
 8003f76:	f00d ffd5 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003f7a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003f7e:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8003ebc <_ZN15Screen1ViewBaseC1Ev+0x420>
 8003f82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003f86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003f8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003f8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f92:	f2c2 85d5 	blt.w	8006b40 <_ZN15Screen1ViewBaseC1Ev+0x30a4>
            return (int)(fs + 0.5f);
 8003f96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003f9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003fa2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003fa6:	4628      	mov	r0, r5
 8003fa8:	f00d ffbc 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003fac:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003fb0:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8003ec0 <_ZN15Screen1ViewBaseC1Ev+0x424>
 8003fb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003fb8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003fbc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003fc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fc4:	f2c2 85d1 	blt.w	8006b6a <_ZN15Screen1ViewBaseC1Ev+0x30ce>
            return (int)(fs + 0.5f);
 8003fc8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003fcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003fd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003fd4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003fd8:	4628      	mov	r0, r5
 8003fda:	f00d ffa3 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003fde:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8003fe2:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8003ec4 <_ZN15Screen1ViewBaseC1Ev+0x428>
 8003fe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003fea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003fee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ff6:	f2c2 85cd 	blt.w	8006b94 <_ZN15Screen1ViewBaseC1Ev+0x30f8>
            return (int)(fs + 0.5f);
 8003ffa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003ffe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004002:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004006:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800400a:	4628      	mov	r0, r5
 800400c:	f00d ff8a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004010:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004014:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8003ec8 <_ZN15Screen1ViewBaseC1Ev+0x42c>
 8004018:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800401c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004020:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004028:	f2c2 85c9 	blt.w	8006bbe <_ZN15Screen1ViewBaseC1Ev+0x3122>
            return (int)(fs + 0.5f);
 800402c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004030:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004034:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004038:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800403c:	4628      	mov	r0, r5
 800403e:	f00d ff71 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004042:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004046:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8003ecc <_ZN15Screen1ViewBaseC1Ev+0x430>
 800404a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800404e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004052:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800405a:	f2c2 85c5 	blt.w	8006be8 <_ZN15Screen1ViewBaseC1Ev+0x314c>
            return (int)(fs + 0.5f);
 800405e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004062:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004066:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800406a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800406e:	4628      	mov	r0, r5
 8004070:	f00d ff58 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004074:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004078:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8003ed0 <_ZN15Screen1ViewBaseC1Ev+0x434>
 800407c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004080:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004084:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800408c:	f2c2 85c1 	blt.w	8006c12 <_ZN15Screen1ViewBaseC1Ev+0x3176>
            return (int)(fs + 0.5f);
 8004090:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004094:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004098:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800409c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80040a0:	4628      	mov	r0, r5
 80040a2:	f00d ff3f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80040a6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80040aa:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8003ed4 <_ZN15Screen1ViewBaseC1Ev+0x438>
 80040ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80040b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80040b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80040ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80040be:	f2c2 85bd 	blt.w	8006c3c <_ZN15Screen1ViewBaseC1Ev+0x31a0>
            return (int)(fs + 0.5f);
 80040c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80040c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80040ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80040ce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80040d2:	4628      	mov	r0, r5
 80040d4:	f00d ff26 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80040d8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80040dc:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8003ed8 <_ZN15Screen1ViewBaseC1Ev+0x43c>
 80040e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80040e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80040e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80040ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80040f0:	f2c2 85b9 	blt.w	8006c66 <_ZN15Screen1ViewBaseC1Ev+0x31ca>
            return (int)(fs + 0.5f);
 80040f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80040f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80040fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004100:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004104:	4628      	mov	r0, r5
 8004106:	f00d ff0d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800410a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800410e:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8003edc <_ZN15Screen1ViewBaseC1Ev+0x440>
 8004112:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004116:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800411a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800411e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004122:	f2c2 85b5 	blt.w	8006c90 <_ZN15Screen1ViewBaseC1Ev+0x31f4>
            return (int)(fs + 0.5f);
 8004126:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800412a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800412e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004132:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004136:	4628      	mov	r0, r5
 8004138:	f00d fef4 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800413c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004140:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8003ee0 <_ZN15Screen1ViewBaseC1Ev+0x444>
 8004144:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004148:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800414c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004154:	f2c2 85b1 	blt.w	8006cba <_ZN15Screen1ViewBaseC1Ev+0x321e>
            return (int)(fs + 0.5f);
 8004158:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800415c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004160:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004164:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004168:	4628      	mov	r0, r5
 800416a:	f00d fedb 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800416e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004172:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8003ee4 <_ZN15Screen1ViewBaseC1Ev+0x448>
 8004176:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800417a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800417e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004186:	f2c2 85ad 	blt.w	8006ce4 <_ZN15Screen1ViewBaseC1Ev+0x3248>
            return (int)(fs + 0.5f);
 800418a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800418e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004192:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004196:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800419a:	4628      	mov	r0, r5
 800419c:	f00d fec2 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80041a0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80041a4:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8003ee8 <_ZN15Screen1ViewBaseC1Ev+0x44c>
 80041a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80041b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80041b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80041b8:	f2c2 85a9 	blt.w	8006d0e <_ZN15Screen1ViewBaseC1Ev+0x3272>
            return (int)(fs + 0.5f);
 80041bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80041c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80041c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80041cc:	4628      	mov	r0, r5
 80041ce:	f00d fea9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80041d2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80041d6:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8003eec <_ZN15Screen1ViewBaseC1Ev+0x450>
 80041da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80041e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80041e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80041ea:	f2c2 85a5 	blt.w	8006d38 <_ZN15Screen1ViewBaseC1Ev+0x329c>
            return (int)(fs + 0.5f);
 80041ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80041f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80041f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041fa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80041fe:	4628      	mov	r0, r5
 8004200:	f00d fe90 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004204:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004208:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8003ef0 <_ZN15Screen1ViewBaseC1Ev+0x454>
 800420c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004210:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004214:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800421c:	f2c2 85a1 	blt.w	8006d62 <_ZN15Screen1ViewBaseC1Ev+0x32c6>
            return (int)(fs + 0.5f);
 8004220:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004224:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004228:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800422c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004230:	4628      	mov	r0, r5
 8004232:	f00d fe77 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004236:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800423a:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8003ef4 <_ZN15Screen1ViewBaseC1Ev+0x458>
 800423e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004242:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004246:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800424a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800424e:	f2c2 85a3 	blt.w	8006d98 <_ZN15Screen1ViewBaseC1Ev+0x32fc>
            return (int)(fs + 0.5f);
 8004252:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004256:	ee77 7a87 	vadd.f32	s15, s15, s14
 800425a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800425e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004262:	4628      	mov	r0, r5
 8004264:	f00d fe5e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004268:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800426c:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8003ef8 <_ZN15Screen1ViewBaseC1Ev+0x45c>
 8004270:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004274:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004278:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800427c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004280:	f2c2 859f 	blt.w	8006dc2 <_ZN15Screen1ViewBaseC1Ev+0x3326>
            return (int)(fs + 0.5f);
 8004284:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004288:	ee77 7a87 	vadd.f32	s15, s15, s14
 800428c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004290:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004294:	4628      	mov	r0, r5
 8004296:	f00d fe45 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800429a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800429e:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8003efc <_ZN15Screen1ViewBaseC1Ev+0x460>
 80042a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042a6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042b2:	f2c2 859b 	blt.w	8006dec <_ZN15Screen1ViewBaseC1Ev+0x3350>
            return (int)(fs + 0.5f);
 80042b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042c2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042c6:	4628      	mov	r0, r5
 80042c8:	f00d fe2c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042cc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80042d0:	ed9f 7af3 	vldr	s14, [pc, #972]	; 80046a0 <_ZN15Screen1ViewBaseC1Ev+0xc04>
 80042d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042e4:	f2c2 8597 	blt.w	8006e16 <_ZN15Screen1ViewBaseC1Ev+0x337a>
            return (int)(fs + 0.5f);
 80042e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042f4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042f8:	4628      	mov	r0, r5
 80042fa:	f00d fe13 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042fe:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004302:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80046a4 <_ZN15Screen1ViewBaseC1Ev+0xc08>
 8004306:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800430a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800430e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004316:	f2c2 8593 	blt.w	8006e40 <_ZN15Screen1ViewBaseC1Ev+0x33a4>
            return (int)(fs + 0.5f);
 800431a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800431e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004322:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004326:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800432a:	4628      	mov	r0, r5
 800432c:	f00d fdfa 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004330:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004334:	ed9f 7adc 	vldr	s14, [pc, #880]	; 80046a8 <_ZN15Screen1ViewBaseC1Ev+0xc0c>
 8004338:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800433c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004340:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004348:	f2c2 858f 	blt.w	8006e6a <_ZN15Screen1ViewBaseC1Ev+0x33ce>
            return (int)(fs + 0.5f);
 800434c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004350:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004354:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004358:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800435c:	4628      	mov	r0, r5
 800435e:	f00d fde1 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004362:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004366:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80046ac <_ZN15Screen1ViewBaseC1Ev+0xc10>
 800436a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800436e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004372:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800437a:	f2c2 858b 	blt.w	8006e94 <_ZN15Screen1ViewBaseC1Ev+0x33f8>
            return (int)(fs + 0.5f);
 800437e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004382:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004386:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800438a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800438e:	4628      	mov	r0, r5
 8004390:	f00d fdc8 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004394:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004398:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 80046b0 <_ZN15Screen1ViewBaseC1Ev+0xc14>
 800439c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043ac:	f2c2 8587 	blt.w	8006ebe <_ZN15Screen1ViewBaseC1Ev+0x3422>
            return (int)(fs + 0.5f);
 80043b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043bc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043c0:	4628      	mov	r0, r5
 80043c2:	f00d fdaf 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043c6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80043ca:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80046b4 <_ZN15Screen1ViewBaseC1Ev+0xc18>
 80043ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043de:	f2c2 8583 	blt.w	8006ee8 <_ZN15Screen1ViewBaseC1Ev+0x344c>
            return (int)(fs + 0.5f);
 80043e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043ee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043f2:	4628      	mov	r0, r5
 80043f4:	f00d fd96 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043f8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80043fc:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80046b8 <_ZN15Screen1ViewBaseC1Ev+0xc1c>
 8004400:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004404:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004408:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800440c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004410:	f2c2 857f 	blt.w	8006f12 <_ZN15Screen1ViewBaseC1Ev+0x3476>
            return (int)(fs + 0.5f);
 8004414:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004418:	ee77 7a87 	vadd.f32	s15, s15, s14
 800441c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004420:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004424:	4628      	mov	r0, r5
 8004426:	f00d fd7d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800442a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800442e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80046bc <_ZN15Screen1ViewBaseC1Ev+0xc20>
 8004432:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004436:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800443a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800443e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004442:	f2c2 857b 	blt.w	8006f3c <_ZN15Screen1ViewBaseC1Ev+0x34a0>
            return (int)(fs + 0.5f);
 8004446:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800444a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800444e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004452:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004456:	4628      	mov	r0, r5
 8004458:	f00d fd64 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800445c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004460:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80046c0 <_ZN15Screen1ViewBaseC1Ev+0xc24>
 8004464:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004468:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800446c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004474:	f2c2 8577 	blt.w	8006f66 <_ZN15Screen1ViewBaseC1Ev+0x34ca>
            return (int)(fs + 0.5f);
 8004478:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800447c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004480:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004484:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004488:	4628      	mov	r0, r5
 800448a:	f00d fd4b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800448e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004492:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80046c4 <_ZN15Screen1ViewBaseC1Ev+0xc28>
 8004496:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800449a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800449e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044a6:	f2c2 8573 	blt.w	8006f90 <_ZN15Screen1ViewBaseC1Ev+0x34f4>
            return (int)(fs + 0.5f);
 80044aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044ba:	4628      	mov	r0, r5
 80044bc:	f00d fd32 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044c0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80044c4:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80046c8 <_ZN15Screen1ViewBaseC1Ev+0xc2c>
 80044c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044d8:	f2c2 856f 	blt.w	8006fba <_ZN15Screen1ViewBaseC1Ev+0x351e>
            return (int)(fs + 0.5f);
 80044dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044ec:	4628      	mov	r0, r5
 80044ee:	f00d fd19 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044f2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80044f6:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80046cc <_ZN15Screen1ViewBaseC1Ev+0xc30>
 80044fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004502:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800450a:	f2c2 856b 	blt.w	8006fe4 <_ZN15Screen1ViewBaseC1Ev+0x3548>
            return (int)(fs + 0.5f);
 800450e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004512:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004516:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800451a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800451e:	4628      	mov	r0, r5
 8004520:	f00d fd00 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004524:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004528:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80046d0 <_ZN15Screen1ViewBaseC1Ev+0xc34>
 800452c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004530:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004534:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800453c:	f2c2 8567 	blt.w	800700e <_ZN15Screen1ViewBaseC1Ev+0x3572>
            return (int)(fs + 0.5f);
 8004540:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004544:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004548:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800454c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004550:	4628      	mov	r0, r5
 8004552:	f00d fce7 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004556:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800455a:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80046d4 <_ZN15Screen1ViewBaseC1Ev+0xc38>
 800455e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004562:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004566:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800456a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800456e:	f2c2 8563 	blt.w	8007038 <_ZN15Screen1ViewBaseC1Ev+0x359c>
            return (int)(fs + 0.5f);
 8004572:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004576:	ee77 7a87 	vadd.f32	s15, s15, s14
 800457a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800457e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004582:	4628      	mov	r0, r5
 8004584:	f00d fcce 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004588:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800458c:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80046d8 <_ZN15Screen1ViewBaseC1Ev+0xc3c>
 8004590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004594:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004598:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800459c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045a0:	f2c2 855f 	blt.w	8007062 <_ZN15Screen1ViewBaseC1Ev+0x35c6>
            return (int)(fs + 0.5f);
 80045a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045b4:	4628      	mov	r0, r5
 80045b6:	f00d fcb5 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045ba:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80045be:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80046dc <_ZN15Screen1ViewBaseC1Ev+0xc40>
 80045c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045d2:	f2c2 855b 	blt.w	800708c <_ZN15Screen1ViewBaseC1Ev+0x35f0>
            return (int)(fs + 0.5f);
 80045d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045e6:	4628      	mov	r0, r5
 80045e8:	f00d fc9c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045ec:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80045f0:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80046e0 <_ZN15Screen1ViewBaseC1Ev+0xc44>
 80045f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004604:	f2c2 8557 	blt.w	80070b6 <_ZN15Screen1ViewBaseC1Ev+0x361a>
            return (int)(fs + 0.5f);
 8004608:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800460c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004610:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004614:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004618:	4628      	mov	r0, r5
 800461a:	f00d fc83 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800461e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004622:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80046e4 <_ZN15Screen1ViewBaseC1Ev+0xc48>
 8004626:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800462a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800462e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004632:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004636:	f2c2 8553 	blt.w	80070e0 <_ZN15Screen1ViewBaseC1Ev+0x3644>
            return (int)(fs + 0.5f);
 800463a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800463e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004642:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004646:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800464a:	4628      	mov	r0, r5
 800464c:	f00d fc6a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004650:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004654:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80046e8 <_ZN15Screen1ViewBaseC1Ev+0xc4c>
 8004658:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800465c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004660:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004668:	f2c2 854f 	blt.w	800710a <_ZN15Screen1ViewBaseC1Ev+0x366e>
            return (int)(fs + 0.5f);
 800466c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004670:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004674:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004678:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800467c:	4628      	mov	r0, r5
 800467e:	f00d fc51 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004682:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004686:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80046ec <_ZN15Screen1ViewBaseC1Ev+0xc50>
 800468a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800468e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004692:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800469a:	f2c2 854b 	blt.w	8007134 <_ZN15Screen1ViewBaseC1Ev+0x3698>
 800469e:	e04d      	b.n	800473c <_ZN15Screen1ViewBaseC1Ev+0xca0>
 80046a0:	3de43fe6 	.word	0x3de43fe6
 80046a4:	3e6e50c6 	.word	0x3e6e50c6
 80046a8:	3ece2eb2 	.word	0x3ece2eb2
 80046ac:	3f1c6690 	.word	0x3f1c6690
 80046b0:	3f585921 	.word	0x3f585921
 80046b4:	3f8bbd7b 	.word	0x3f8bbd7b
 80046b8:	3fab2032 	.word	0x3fab2032
 80046bc:	3fc8a0e4 	.word	0x3fc8a0e4
 80046c0:	3fe2b55f 	.word	0x3fe2b55f
 80046c4:	3ff81798 	.word	0x3ff81798
 80046c8:	4003ebaf 	.word	0x4003ebaf
 80046cc:	4008b463 	.word	0x4008b463
 80046d0:	400a55da 	.word	0x400a55da
 80046d4:	4008f66a 	.word	0x4008f66a
 80046d8:	4004efb3 	.word	0x4004efb3
 80046dc:	3ffd9115 	.word	0x3ffd9115
 80046e0:	3fee56ac 	.word	0x3fee56ac
 80046e4:	3fddb717 	.word	0x3fddb717
 80046e8:	3fcd5033 	.word	0x3fcd5033
 80046ec:	3fbebc41 	.word	0x3fbebc41
 80046f0:	3fb37708 	.word	0x3fb37708
 80046f4:	3facc448 	.word	0x3facc448
 80046f8:	3fab9a17 	.word	0x3fab9a17
 80046fc:	3fb0912a 	.word	0x3fb0912a
 8004700:	3fbbd902 	.word	0x3fbbd902
 8004704:	3fcd335d 	.word	0x3fcd335d
 8004708:	3fe3f877 	.word	0x3fe3f877
 800470c:	3fff1e8e 	.word	0x3fff1e8e
 8004710:	400ea5ce 	.word	0x400ea5ce
 8004714:	401e73d6 	.word	0x401e73d6
 8004718:	402e1b33 	.word	0x402e1b33
 800471c:	403cb9a1 	.word	0x403cb9a1
 8004720:	404975b8 	.word	0x404975b8
 8004724:	40538ca8 	.word	0x40538ca8
 8004728:	405a5eb3 	.word	0x405a5eb3
 800472c:	405d7803 	.word	0x405d7803
 8004730:	405c9907 	.word	0x405c9907
 8004734:	4057ba34 	.word	0x4057ba34
 8004738:	404f0c5f 	.word	0x404f0c5f
            return (int)(fs + 0.5f);
 800473c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004740:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004744:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004748:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800474c:	4628      	mov	r0, r5
 800474e:	f00d fbe9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004752:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004756:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 80046f0 <_ZN15Screen1ViewBaseC1Ev+0xc54>
 800475a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800475e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004762:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800476a:	f2c2 84f8 	blt.w	800715e <_ZN15Screen1ViewBaseC1Ev+0x36c2>
            return (int)(fs + 0.5f);
 800476e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004772:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004776:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800477a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800477e:	4628      	mov	r0, r5
 8004780:	f00d fbd0 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004784:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004788:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 80046f4 <_ZN15Screen1ViewBaseC1Ev+0xc58>
 800478c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004790:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004794:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800479c:	f2c2 84f4 	blt.w	8007188 <_ZN15Screen1ViewBaseC1Ev+0x36ec>
            return (int)(fs + 0.5f);
 80047a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047ac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047b0:	4628      	mov	r0, r5
 80047b2:	f00d fbb7 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047b6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80047ba:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 80046f8 <_ZN15Screen1ViewBaseC1Ev+0xc5c>
 80047be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047c2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047ce:	f2c2 84f0 	blt.w	80071b2 <_ZN15Screen1ViewBaseC1Ev+0x3716>
            return (int)(fs + 0.5f);
 80047d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047de:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047e2:	4628      	mov	r0, r5
 80047e4:	f00d fb9e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047e8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80047ec:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 80046fc <_ZN15Screen1ViewBaseC1Ev+0xc60>
 80047f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004800:	f2c2 84ec 	blt.w	80071dc <_ZN15Screen1ViewBaseC1Ev+0x3740>
            return (int)(fs + 0.5f);
 8004804:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004808:	ee77 7a87 	vadd.f32	s15, s15, s14
 800480c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004810:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004814:	4628      	mov	r0, r5
 8004816:	f00d fb85 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800481a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800481e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8004700 <_ZN15Screen1ViewBaseC1Ev+0xc64>
 8004822:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004826:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800482a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800482e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004832:	f2c2 84e8 	blt.w	8007206 <_ZN15Screen1ViewBaseC1Ev+0x376a>
            return (int)(fs + 0.5f);
 8004836:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800483a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800483e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004842:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004846:	4628      	mov	r0, r5
 8004848:	f00d fb6c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800484c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004850:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8004704 <_ZN15Screen1ViewBaseC1Ev+0xc68>
 8004854:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004858:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800485c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004864:	f2c2 84e4 	blt.w	8007230 <_ZN15Screen1ViewBaseC1Ev+0x3794>
            return (int)(fs + 0.5f);
 8004868:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800486c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004870:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004874:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004878:	4628      	mov	r0, r5
 800487a:	f00d fb53 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800487e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004882:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8004708 <_ZN15Screen1ViewBaseC1Ev+0xc6c>
 8004886:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800488a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800488e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004896:	f2c2 84e0 	blt.w	800725a <_ZN15Screen1ViewBaseC1Ev+0x37be>
            return (int)(fs + 0.5f);
 800489a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800489e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048a6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048aa:	4628      	mov	r0, r5
 80048ac:	f00d fb3a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048b0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80048b4:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800470c <_ZN15Screen1ViewBaseC1Ev+0xc70>
 80048b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048bc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048c8:	f2c2 84dc 	blt.w	8007284 <_ZN15Screen1ViewBaseC1Ev+0x37e8>
            return (int)(fs + 0.5f);
 80048cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048d8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048dc:	4628      	mov	r0, r5
 80048de:	f00d fb21 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048e2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80048e6:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8004710 <_ZN15Screen1ViewBaseC1Ev+0xc74>
 80048ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048fa:	f2c2 84d8 	blt.w	80072ae <_ZN15Screen1ViewBaseC1Ev+0x3812>
            return (int)(fs + 0.5f);
 80048fe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004902:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004906:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800490a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800490e:	4628      	mov	r0, r5
 8004910:	f00d fb08 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004914:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004918:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8004714 <_ZN15Screen1ViewBaseC1Ev+0xc78>
 800491c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004920:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004924:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800492c:	f2c2 84d4 	blt.w	80072d8 <_ZN15Screen1ViewBaseC1Ev+0x383c>
            return (int)(fs + 0.5f);
 8004930:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004934:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004938:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800493c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004940:	4628      	mov	r0, r5
 8004942:	f00d faef 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004946:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800494a:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8004718 <_ZN15Screen1ViewBaseC1Ev+0xc7c>
 800494e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004952:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004956:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800495a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800495e:	f2c2 84d0 	blt.w	8007302 <_ZN15Screen1ViewBaseC1Ev+0x3866>
            return (int)(fs + 0.5f);
 8004962:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004966:	ee77 7a87 	vadd.f32	s15, s15, s14
 800496a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800496e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004972:	4628      	mov	r0, r5
 8004974:	f00d fad6 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004978:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800497c:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800471c <_ZN15Screen1ViewBaseC1Ev+0xc80>
 8004980:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004984:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004988:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800498c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004990:	f2c2 84cc 	blt.w	800732c <_ZN15Screen1ViewBaseC1Ev+0x3890>
            return (int)(fs + 0.5f);
 8004994:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004998:	ee77 7a87 	vadd.f32	s15, s15, s14
 800499c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80049a4:	4628      	mov	r0, r5
 80049a6:	f00d fabd 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049aa:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80049ae:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8004720 <_ZN15Screen1ViewBaseC1Ev+0xc84>
 80049b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049c2:	f2c2 84c8 	blt.w	8007356 <_ZN15Screen1ViewBaseC1Ev+0x38ba>
            return (int)(fs + 0.5f);
 80049c6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049d2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80049d6:	4628      	mov	r0, r5
 80049d8:	f00d faa4 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049dc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80049e0:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8004724 <_ZN15Screen1ViewBaseC1Ev+0xc88>
 80049e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049f4:	f2c2 84c4 	blt.w	8007380 <_ZN15Screen1ViewBaseC1Ev+0x38e4>
            return (int)(fs + 0.5f);
 80049f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a04:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a08:	4628      	mov	r0, r5
 8004a0a:	f00d fa8b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a0e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004a12:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8004728 <_ZN15Screen1ViewBaseC1Ev+0xc8c>
 8004a16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a26:	f2c2 84c0 	blt.w	80073aa <_ZN15Screen1ViewBaseC1Ev+0x390e>
            return (int)(fs + 0.5f);
 8004a2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a36:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a3a:	4628      	mov	r0, r5
 8004a3c:	f00d fa72 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a40:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004a44:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800472c <_ZN15Screen1ViewBaseC1Ev+0xc90>
 8004a48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a4c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a58:	f2c2 84bc 	blt.w	80073d4 <_ZN15Screen1ViewBaseC1Ev+0x3938>
            return (int)(fs + 0.5f);
 8004a5c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a68:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	f00d fa59 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a72:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004a76:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8004730 <_ZN15Screen1ViewBaseC1Ev+0xc94>
 8004a7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a7e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a8a:	f2c2 84b8 	blt.w	80073fe <_ZN15Screen1ViewBaseC1Ev+0x3962>
            return (int)(fs + 0.5f);
 8004a8e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a92:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a9a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a9e:	4628      	mov	r0, r5
 8004aa0:	f00d fa40 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004aa4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004aa8:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8004734 <_ZN15Screen1ViewBaseC1Ev+0xc98>
 8004aac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ab0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ab4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ab8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004abc:	f2c2 84b4 	blt.w	8007428 <_ZN15Screen1ViewBaseC1Ev+0x398c>
            return (int)(fs + 0.5f);
 8004ac0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ac4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ac8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004acc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	f00d fa27 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ad6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004ada:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8004738 <_ZN15Screen1ViewBaseC1Ev+0xc9c>
 8004ade:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ae2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ae6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004aee:	f2c2 84b0 	blt.w	8007452 <_ZN15Screen1ViewBaseC1Ev+0x39b6>
            return (int)(fs + 0.5f);
 8004af2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004af6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004afa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004afe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b02:	4628      	mov	r0, r5
 8004b04:	f00d fa0e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b08:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004b0c:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8004edc <_ZN15Screen1ViewBaseC1Ev+0x1440>
 8004b10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b14:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b18:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b20:	f2c2 84ac 	blt.w	800747c <_ZN15Screen1ViewBaseC1Ev+0x39e0>
            return (int)(fs + 0.5f);
 8004b24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b30:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b34:	4628      	mov	r0, r5
 8004b36:	f00d f9f5 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b3a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004b3e:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8004ee0 <_ZN15Screen1ViewBaseC1Ev+0x1444>
 8004b42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b46:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b52:	f2c2 84a8 	blt.w	80074a6 <_ZN15Screen1ViewBaseC1Ev+0x3a0a>
            return (int)(fs + 0.5f);
 8004b56:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b62:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b66:	4628      	mov	r0, r5
 8004b68:	f00d f9dc 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b6c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004b70:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8004ee4 <_ZN15Screen1ViewBaseC1Ev+0x1448>
 8004b74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b84:	f2c2 84a4 	blt.w	80074d0 <_ZN15Screen1ViewBaseC1Ev+0x3a34>
            return (int)(fs + 0.5f);
 8004b88:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b94:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b98:	4628      	mov	r0, r5
 8004b9a:	f00d f9c3 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b9e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004ba2:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8004ee8 <_ZN15Screen1ViewBaseC1Ev+0x144c>
 8004ba6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004baa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bb6:	f2c2 84a0 	blt.w	80074fa <_ZN15Screen1ViewBaseC1Ev+0x3a5e>
            return (int)(fs + 0.5f);
 8004bba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bbe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bc6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bca:	4628      	mov	r0, r5
 8004bcc:	f00d f9aa 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bd0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004bd4:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8004eec <_ZN15Screen1ViewBaseC1Ev+0x1450>
 8004bd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bdc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004be0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004be8:	f2c2 849c 	blt.w	8007524 <_ZN15Screen1ViewBaseC1Ev+0x3a88>
            return (int)(fs + 0.5f);
 8004bec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bf0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bf8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bfc:	4628      	mov	r0, r5
 8004bfe:	f00d f991 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c02:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004c06:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8004ef0 <_ZN15Screen1ViewBaseC1Ev+0x1454>
 8004c0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c1a:	f2c2 8498 	blt.w	800754e <_ZN15Screen1ViewBaseC1Ev+0x3ab2>
            return (int)(fs + 0.5f);
 8004c1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c2a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c2e:	4628      	mov	r0, r5
 8004c30:	f00d f978 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c34:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004c38:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8004ef4 <_ZN15Screen1ViewBaseC1Ev+0x1458>
 8004c3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c40:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c4c:	f2c2 8494 	blt.w	8007578 <_ZN15Screen1ViewBaseC1Ev+0x3adc>
            return (int)(fs + 0.5f);
 8004c50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c5c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c60:	4628      	mov	r0, r5
 8004c62:	f00d f95f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c66:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004c6a:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8004ef8 <_ZN15Screen1ViewBaseC1Ev+0x145c>
 8004c6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c72:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c7e:	f2c2 8490 	blt.w	80075a2 <_ZN15Screen1ViewBaseC1Ev+0x3b06>
            return (int)(fs + 0.5f);
 8004c82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c8e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c92:	4628      	mov	r0, r5
 8004c94:	f00d f946 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c98:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004c9c:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8004efc <_ZN15Screen1ViewBaseC1Ev+0x1460>
 8004ca0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ca4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ca8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cb0:	f2c2 848c 	blt.w	80075cc <_ZN15Screen1ViewBaseC1Ev+0x3b30>
            return (int)(fs + 0.5f);
 8004cb4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004cb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cc0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004cc4:	4628      	mov	r0, r5
 8004cc6:	f00d f92d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004cca:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004cce:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8004f00 <_ZN15Screen1ViewBaseC1Ev+0x1464>
 8004cd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004cd6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004cda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ce2:	f2c2 8488 	blt.w	80075f6 <_ZN15Screen1ViewBaseC1Ev+0x3b5a>
            return (int)(fs + 0.5f);
 8004ce6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004cea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cf2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004cf6:	4628      	mov	r0, r5
 8004cf8:	f00d f914 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004cfc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004d00:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8004f04 <_ZN15Screen1ViewBaseC1Ev+0x1468>
 8004d04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d08:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d14:	f2c2 8484 	blt.w	8007620 <_ZN15Screen1ViewBaseC1Ev+0x3b84>
            return (int)(fs + 0.5f);
 8004d18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d24:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d28:	4628      	mov	r0, r5
 8004d2a:	f00d f8fb 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d2e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004d32:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004f08 <_ZN15Screen1ViewBaseC1Ev+0x146c>
 8004d36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d3a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d46:	f2c2 8480 	blt.w	800764a <_ZN15Screen1ViewBaseC1Ev+0x3bae>
            return (int)(fs + 0.5f);
 8004d4a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d56:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d5a:	4628      	mov	r0, r5
 8004d5c:	f00d f8e2 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d60:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004d64:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8004f0c <_ZN15Screen1ViewBaseC1Ev+0x1470>
 8004d68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d6c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d78:	f2c2 847c 	blt.w	8007674 <_ZN15Screen1ViewBaseC1Ev+0x3bd8>
            return (int)(fs + 0.5f);
 8004d7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d88:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d8c:	4628      	mov	r0, r5
 8004d8e:	f00d f8c9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d92:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004d96:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8004f10 <_ZN15Screen1ViewBaseC1Ev+0x1474>
 8004d9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d9e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004da2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004da6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004daa:	f2c2 8478 	blt.w	800769e <_ZN15Screen1ViewBaseC1Ev+0x3c02>
            return (int)(fs + 0.5f);
 8004dae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004db2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004db6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004dbe:	4628      	mov	r0, r5
 8004dc0:	f00d f8b0 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004dc4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004dc8:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8004f14 <_ZN15Screen1ViewBaseC1Ev+0x1478>
 8004dcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004dd0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004dd4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ddc:	f2c2 8474 	blt.w	80076c8 <_ZN15Screen1ViewBaseC1Ev+0x3c2c>
            return (int)(fs + 0.5f);
 8004de0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004de4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004de8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004df0:	4628      	mov	r0, r5
 8004df2:	f00d f897 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004df6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004dfa:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8004f18 <_ZN15Screen1ViewBaseC1Ev+0x147c>
 8004dfe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e02:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e0e:	f2c2 8470 	blt.w	80076f2 <_ZN15Screen1ViewBaseC1Ev+0x3c56>
            return (int)(fs + 0.5f);
 8004e12:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e16:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e1e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e22:	4628      	mov	r0, r5
 8004e24:	f00d f87e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e28:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004e2c:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8004f1c <_ZN15Screen1ViewBaseC1Ev+0x1480>
 8004e30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e34:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e40:	f2c2 846c 	blt.w	800771c <_ZN15Screen1ViewBaseC1Ev+0x3c80>
            return (int)(fs + 0.5f);
 8004e44:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e50:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e54:	4628      	mov	r0, r5
 8004e56:	f00d f865 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e5a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004e5e:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004f20 <_ZN15Screen1ViewBaseC1Ev+0x1484>
 8004e62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e66:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e72:	f2c2 8468 	blt.w	8007746 <_ZN15Screen1ViewBaseC1Ev+0x3caa>
            return (int)(fs + 0.5f);
 8004e76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e82:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e86:	4628      	mov	r0, r5
 8004e88:	f00d f84c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e8c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004e90:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8004f24 <_ZN15Screen1ViewBaseC1Ev+0x1488>
 8004e94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e98:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e9c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ea4:	f2c2 8464 	blt.w	8007770 <_ZN15Screen1ViewBaseC1Ev+0x3cd4>
            return (int)(fs + 0.5f);
 8004ea8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004eac:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004eb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004eb4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004eb8:	4628      	mov	r0, r5
 8004eba:	f00d f833 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ebe:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004ec2:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8004f28 <_ZN15Screen1ViewBaseC1Ev+0x148c>
 8004ec6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004eca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ece:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ed6:	f2c2 8460 	blt.w	800779a <_ZN15Screen1ViewBaseC1Ev+0x3cfe>
 8004eda:	e04d      	b.n	8004f78 <_ZN15Screen1ViewBaseC1Ev+0x14dc>
 8004edc:	4042f616 	.word	0x4042f616
 8004ee0:	40340e41 	.word	0x40340e41
 8004ee4:	4023121b 	.word	0x4023121b
 8004ee8:	4010dae4 	.word	0x4010dae4
 8004eec:	3ffca090 	.word	0x3ffca090
 8004ef0:	3fd8b535 	.word	0x3fd8b535
 8004ef4:	3fb7ab22 	.word	0x3fb7ab22
 8004ef8:	3f9b04ff 	.word	0x3f9b04ff
 8004efc:	3f83fb16 	.word	0x3f83fb16
 8004f00:	3f66d139 	.word	0x3f66d139
 8004f04:	3f538130 	.word	0x3f538130
 8004f08:	3f4e0ded 	.word	0x3f4e0ded
 8004f0c:	3f55a512 	.word	0x3f55a512
 8004f10:	3f68ab0d 	.word	0x3f68ab0d
 8004f14:	3f826a55 	.word	0x3f826a55
 8004f18:	3f93a82f 	.word	0x3f93a82f
 8004f1c:	3fa67bb3 	.word	0x3fa67bb3
 8004f20:	3fb93ed5 	.word	0x3fb93ed5
 8004f24:	3fca5754 	.word	0x3fca5754
 8004f28:	3fd84ea5 	.word	0x3fd84ea5
 8004f2c:	3fe1ecd5 	.word	0x3fe1ecd5
 8004f30:	3fe64a8c 	.word	0x3fe64a8c
 8004f34:	3fe4e11e 	.word	0x3fe4e11e
 8004f38:	3fdd945b 	.word	0x3fdd945b
 8004f3c:	3fd0b2ea 	.word	0x3fd0b2ea
 8004f40:	3fbef49d 	.word	0x3fbef49d
 8004f44:	3fa96bba 	.word	0x3fa96bba
 8004f48:	3f917732 	.word	0x3f917732
 8004f4c:	3f715571 	.word	0x3f715571
 8004f50:	3f416bba 	.word	0x3f416bba
 8004f54:	3f16939f 	.word	0x3f16939f
 8004f58:	3ee7f38c 	.word	0x3ee7f38c
 8004f5c:	3eb8c005 	.word	0x3eb8c005
 8004f60:	3ea3e964 	.word	0x3ea3e964
 8004f64:	3eac5437 	.word	0x3eac5437
 8004f68:	3ed339c1 	.word	0x3ed339c1
 8004f6c:	3f0c0b78 	.word	0x3f0c0b78
 8004f70:	3f3c5586 	.word	0x3f3c5586
 8004f74:	3f788c3f 	.word	0x3f788c3f
            return (int)(fs + 0.5f);
 8004f78:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004f7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f84:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004f88:	4628      	mov	r0, r5
 8004f8a:	f00c ffcb 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f8e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004f92:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8004f2c <_ZN15Screen1ViewBaseC1Ev+0x1490>
 8004f96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004f9a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004f9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fa6:	f2c2 840d 	blt.w	80077c4 <_ZN15Screen1ViewBaseC1Ev+0x3d28>
            return (int)(fs + 0.5f);
 8004faa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fae:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004fb2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fb6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004fba:	4628      	mov	r0, r5
 8004fbc:	f00c ffb2 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004fc0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004fc4:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8004f30 <_ZN15Screen1ViewBaseC1Ev+0x1494>
 8004fc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004fcc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004fd0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004fd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fd8:	f2c2 8409 	blt.w	80077ee <_ZN15Screen1ViewBaseC1Ev+0x3d52>
            return (int)(fs + 0.5f);
 8004fdc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fe0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004fe4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fe8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004fec:	4628      	mov	r0, r5
 8004fee:	f00c ff99 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ff2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8004ff6:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8004f34 <_ZN15Screen1ViewBaseC1Ev+0x1498>
 8004ffa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ffe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005002:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005006:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800500a:	f2c2 8405 	blt.w	8007818 <_ZN15Screen1ViewBaseC1Ev+0x3d7c>
            return (int)(fs + 0.5f);
 800500e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005012:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005016:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800501a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800501e:	4628      	mov	r0, r5
 8005020:	f00c ff80 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005024:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005028:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8004f38 <_ZN15Screen1ViewBaseC1Ev+0x149c>
 800502c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005030:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005034:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800503c:	f2c2 8401 	blt.w	8007842 <_ZN15Screen1ViewBaseC1Ev+0x3da6>
            return (int)(fs + 0.5f);
 8005040:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005044:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005048:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800504c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005050:	4628      	mov	r0, r5
 8005052:	f00c ff67 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005056:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800505a:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8004f3c <_ZN15Screen1ViewBaseC1Ev+0x14a0>
 800505e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005062:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005066:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800506a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800506e:	f2c2 83fd 	blt.w	800786c <_ZN15Screen1ViewBaseC1Ev+0x3dd0>
            return (int)(fs + 0.5f);
 8005072:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005076:	ee77 7a87 	vadd.f32	s15, s15, s14
 800507a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800507e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005082:	4628      	mov	r0, r5
 8005084:	f00c ff4e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005088:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800508c:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8004f40 <_ZN15Screen1ViewBaseC1Ev+0x14a4>
 8005090:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005094:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005098:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800509c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050a0:	f2c2 83f9 	blt.w	8007896 <_ZN15Screen1ViewBaseC1Ev+0x3dfa>
            return (int)(fs + 0.5f);
 80050a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050b4:	4628      	mov	r0, r5
 80050b6:	f00c ff35 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050ba:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80050be:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8004f44 <_ZN15Screen1ViewBaseC1Ev+0x14a8>
 80050c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80050c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050d2:	f2c2 83f5 	blt.w	80078c0 <_ZN15Screen1ViewBaseC1Ev+0x3e24>
            return (int)(fs + 0.5f);
 80050d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050e6:	4628      	mov	r0, r5
 80050e8:	f00c ff1c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050ec:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80050f0:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8004f48 <_ZN15Screen1ViewBaseC1Ev+0x14ac>
 80050f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80050f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005104:	f2c2 83f1 	blt.w	80078ea <_ZN15Screen1ViewBaseC1Ev+0x3e4e>
            return (int)(fs + 0.5f);
 8005108:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800510c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005110:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005114:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005118:	4628      	mov	r0, r5
 800511a:	f00c ff03 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800511e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005122:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8004f4c <_ZN15Screen1ViewBaseC1Ev+0x14b0>
 8005126:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800512a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800512e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005136:	f2c2 83ed 	blt.w	8007914 <_ZN15Screen1ViewBaseC1Ev+0x3e78>
            return (int)(fs + 0.5f);
 800513a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800513e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005142:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005146:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800514a:	4628      	mov	r0, r5
 800514c:	f00c feea 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005150:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005154:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8004f50 <_ZN15Screen1ViewBaseC1Ev+0x14b4>
 8005158:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800515c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005160:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005168:	f2c2 83e9 	blt.w	800793e <_ZN15Screen1ViewBaseC1Ev+0x3ea2>
            return (int)(fs + 0.5f);
 800516c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005170:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005174:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005178:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800517c:	4628      	mov	r0, r5
 800517e:	f00c fed1 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005182:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005186:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8004f54 <_ZN15Screen1ViewBaseC1Ev+0x14b8>
 800518a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800518e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005192:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800519a:	f2c2 83e5 	blt.w	8007968 <_ZN15Screen1ViewBaseC1Ev+0x3ecc>
            return (int)(fs + 0.5f);
 800519e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80051a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80051ae:	4628      	mov	r0, r5
 80051b0:	f00c feb8 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80051b4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80051b8:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8004f58 <_ZN15Screen1ViewBaseC1Ev+0x14bc>
 80051bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051cc:	f2c2 83e1 	blt.w	8007992 <_ZN15Screen1ViewBaseC1Ev+0x3ef6>
            return (int)(fs + 0.5f);
 80051d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80051d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80051e0:	4628      	mov	r0, r5
 80051e2:	f00c fe9f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80051e6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80051ea:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8004f5c <_ZN15Screen1ViewBaseC1Ev+0x14c0>
 80051ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051fe:	f2c2 83dd 	blt.w	80079bc <_ZN15Screen1ViewBaseC1Ev+0x3f20>
            return (int)(fs + 0.5f);
 8005202:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005206:	ee77 7a87 	vadd.f32	s15, s15, s14
 800520a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800520e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005212:	4628      	mov	r0, r5
 8005214:	f00c fe86 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005218:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800521c:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8004f60 <_ZN15Screen1ViewBaseC1Ev+0x14c4>
 8005220:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005224:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005228:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800522c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005230:	f2c2 83d9 	blt.w	80079e6 <_ZN15Screen1ViewBaseC1Ev+0x3f4a>
            return (int)(fs + 0.5f);
 8005234:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005238:	ee77 7a87 	vadd.f32	s15, s15, s14
 800523c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005240:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005244:	4628      	mov	r0, r5
 8005246:	f00c fe6d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800524a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800524e:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8004f64 <_ZN15Screen1ViewBaseC1Ev+0x14c8>
 8005252:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005256:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800525a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800525e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005262:	f2c2 83d5 	blt.w	8007a10 <_ZN15Screen1ViewBaseC1Ev+0x3f74>
            return (int)(fs + 0.5f);
 8005266:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800526a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800526e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005272:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005276:	4628      	mov	r0, r5
 8005278:	f00c fe54 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800527c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005280:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8004f68 <_ZN15Screen1ViewBaseC1Ev+0x14cc>
 8005284:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005288:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800528c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005294:	f2c2 83d1 	blt.w	8007a3a <_ZN15Screen1ViewBaseC1Ev+0x3f9e>
            return (int)(fs + 0.5f);
 8005298:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800529c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052a8:	4628      	mov	r0, r5
 80052aa:	f00c fe3b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052ae:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80052b2:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8004f6c <_ZN15Screen1ViewBaseC1Ev+0x14d0>
 80052b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80052be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052c6:	f2c2 83cd 	blt.w	8007a64 <_ZN15Screen1ViewBaseC1Ev+0x3fc8>
            return (int)(fs + 0.5f);
 80052ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052da:	4628      	mov	r0, r5
 80052dc:	f00c fe22 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052e0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80052e4:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8004f70 <_ZN15Screen1ViewBaseC1Ev+0x14d4>
 80052e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80052f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052f8:	f2c2 83c9 	blt.w	8007a8e <_ZN15Screen1ViewBaseC1Ev+0x3ff2>
            return (int)(fs + 0.5f);
 80052fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005300:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005304:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005308:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800530c:	4628      	mov	r0, r5
 800530e:	f00c fe09 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005312:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005316:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8004f74 <_ZN15Screen1ViewBaseC1Ev+0x14d8>
 800531a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800531e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005322:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800532a:	f2c2 83c5 	blt.w	8007ab8 <_ZN15Screen1ViewBaseC1Ev+0x401c>
            return (int)(fs + 0.5f);
 800532e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005332:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005336:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800533a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800533e:	4628      	mov	r0, r5
 8005340:	f00c fdf0 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005344:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005348:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8005718 <_ZN15Screen1ViewBaseC1Ev+0x1c7c>
 800534c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005350:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005354:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800535c:	f2c2 83c1 	blt.w	8007ae2 <_ZN15Screen1ViewBaseC1Ev+0x4046>
            return (int)(fs + 0.5f);
 8005360:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005364:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005368:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800536c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005370:	4628      	mov	r0, r5
 8005372:	f00c fdd7 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005376:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800537a:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800571c <_ZN15Screen1ViewBaseC1Ev+0x1c80>
 800537e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005382:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005386:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800538a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800538e:	f2c2 83bd 	blt.w	8007b0c <_ZN15Screen1ViewBaseC1Ev+0x4070>
            return (int)(fs + 0.5f);
 8005392:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005396:	ee77 7a87 	vadd.f32	s15, s15, s14
 800539a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800539e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053a2:	4628      	mov	r0, r5
 80053a4:	f00c fdbe 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053a8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80053ac:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8005720 <_ZN15Screen1ViewBaseC1Ev+0x1c84>
 80053b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053c0:	f2c2 83b9 	blt.w	8007b36 <_ZN15Screen1ViewBaseC1Ev+0x409a>
            return (int)(fs + 0.5f);
 80053c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053d4:	4628      	mov	r0, r5
 80053d6:	f00c fda5 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053da:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80053de:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8005724 <_ZN15Screen1ViewBaseC1Ev+0x1c88>
 80053e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053f2:	f2c2 83b5 	blt.w	8007b60 <_ZN15Screen1ViewBaseC1Ev+0x40c4>
            return (int)(fs + 0.5f);
 80053f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005402:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005406:	4628      	mov	r0, r5
 8005408:	f00c fd8c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800540c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005410:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8005728 <_ZN15Screen1ViewBaseC1Ev+0x1c8c>
 8005414:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005418:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800541c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005420:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005424:	f2c2 83b1 	blt.w	8007b8a <_ZN15Screen1ViewBaseC1Ev+0x40ee>
            return (int)(fs + 0.5f);
 8005428:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800542c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005430:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005434:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005438:	4628      	mov	r0, r5
 800543a:	f00c fd73 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800543e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005442:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800572c <_ZN15Screen1ViewBaseC1Ev+0x1c90>
 8005446:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800544a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800544e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005456:	f2c2 83ad 	blt.w	8007bb4 <_ZN15Screen1ViewBaseC1Ev+0x4118>
            return (int)(fs + 0.5f);
 800545a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800545e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005462:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005466:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800546a:	4628      	mov	r0, r5
 800546c:	f00c fd5a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005470:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005474:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8005730 <_ZN15Screen1ViewBaseC1Ev+0x1c94>
 8005478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800547c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005480:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005488:	f2c2 83a9 	blt.w	8007bde <_ZN15Screen1ViewBaseC1Ev+0x4142>
            return (int)(fs + 0.5f);
 800548c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005490:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005494:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005498:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800549c:	4628      	mov	r0, r5
 800549e:	f00c fd41 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054a2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80054a6:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8005734 <_ZN15Screen1ViewBaseC1Ev+0x1c98>
 80054aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054ba:	f2c2 83a5 	blt.w	8007c08 <_ZN15Screen1ViewBaseC1Ev+0x416c>
            return (int)(fs + 0.5f);
 80054be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80054ce:	4628      	mov	r0, r5
 80054d0:	f00c fd28 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054d4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80054d8:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8005738 <_ZN15Screen1ViewBaseC1Ev+0x1c9c>
 80054dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054ec:	f2c2 83a1 	blt.w	8007c32 <_ZN15Screen1ViewBaseC1Ev+0x4196>
            return (int)(fs + 0.5f);
 80054f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005500:	4628      	mov	r0, r5
 8005502:	f00c fd0f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005506:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800550a:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800573c <_ZN15Screen1ViewBaseC1Ev+0x1ca0>
 800550e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005512:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005516:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800551a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800551e:	f2c2 839d 	blt.w	8007c5c <_ZN15Screen1ViewBaseC1Ev+0x41c0>
            return (int)(fs + 0.5f);
 8005522:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005526:	ee77 7a87 	vadd.f32	s15, s15, s14
 800552a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800552e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005532:	4628      	mov	r0, r5
 8005534:	f00c fcf6 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005538:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800553c:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005740 <_ZN15Screen1ViewBaseC1Ev+0x1ca4>
 8005540:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005544:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005548:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800554c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005550:	f2c2 8399 	blt.w	8007c86 <_ZN15Screen1ViewBaseC1Ev+0x41ea>
            return (int)(fs + 0.5f);
 8005554:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005558:	ee77 7a87 	vadd.f32	s15, s15, s14
 800555c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005560:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005564:	4628      	mov	r0, r5
 8005566:	f00c fcdd 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800556a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800556e:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8005744 <_ZN15Screen1ViewBaseC1Ev+0x1ca8>
 8005572:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005576:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800557a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800557e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005582:	f2c2 8395 	blt.w	8007cb0 <_ZN15Screen1ViewBaseC1Ev+0x4214>
            return (int)(fs + 0.5f);
 8005586:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800558a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800558e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005592:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005596:	4628      	mov	r0, r5
 8005598:	f00c fcc4 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800559c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80055a0:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8005748 <_ZN15Screen1ViewBaseC1Ev+0x1cac>
 80055a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055b4:	f2c2 8391 	blt.w	8007cda <_ZN15Screen1ViewBaseC1Ev+0x423e>
            return (int)(fs + 0.5f);
 80055b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055c4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055c8:	4628      	mov	r0, r5
 80055ca:	f00c fcab 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80055ce:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80055d2:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800574c <_ZN15Screen1ViewBaseC1Ev+0x1cb0>
 80055d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055e6:	f2c2 838d 	blt.w	8007d04 <_ZN15Screen1ViewBaseC1Ev+0x4268>
            return (int)(fs + 0.5f);
 80055ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055f6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055fa:	4628      	mov	r0, r5
 80055fc:	f00c fc92 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005600:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005604:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005750 <_ZN15Screen1ViewBaseC1Ev+0x1cb4>
 8005608:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800560c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005610:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005618:	f2c2 8389 	blt.w	8007d2e <_ZN15Screen1ViewBaseC1Ev+0x4292>
            return (int)(fs + 0.5f);
 800561c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005620:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005624:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005628:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800562c:	4628      	mov	r0, r5
 800562e:	f00c fc79 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005632:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005636:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005754 <_ZN15Screen1ViewBaseC1Ev+0x1cb8>
 800563a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800563e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005642:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800564a:	f2c2 8385 	blt.w	8007d58 <_ZN15Screen1ViewBaseC1Ev+0x42bc>
            return (int)(fs + 0.5f);
 800564e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005652:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005656:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800565a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800565e:	4628      	mov	r0, r5
 8005660:	f00c fc60 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005664:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005668:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8005758 <_ZN15Screen1ViewBaseC1Ev+0x1cbc>
 800566c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005670:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005674:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800567c:	f2c2 8381 	blt.w	8007d82 <_ZN15Screen1ViewBaseC1Ev+0x42e6>
            return (int)(fs + 0.5f);
 8005680:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005684:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005688:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800568c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005690:	4628      	mov	r0, r5
 8005692:	f00c fc47 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005696:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800569a:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800575c <_ZN15Screen1ViewBaseC1Ev+0x1cc0>
 800569e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80056a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056ae:	f2c2 837d 	blt.w	8007dac <_ZN15Screen1ViewBaseC1Ev+0x4310>
            return (int)(fs + 0.5f);
 80056b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80056b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80056ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056be:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056c2:	4628      	mov	r0, r5
 80056c4:	f00c fc2e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80056c8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80056cc:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8005760 <_ZN15Screen1ViewBaseC1Ev+0x1cc4>
 80056d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80056d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056e0:	f2c2 8379 	blt.w	8007dd6 <_ZN15Screen1ViewBaseC1Ev+0x433a>
            return (int)(fs + 0.5f);
 80056e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80056e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80056ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056f0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056f4:	4628      	mov	r0, r5
 80056f6:	f00c fc15 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80056fa:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80056fe:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8005764 <_ZN15Screen1ViewBaseC1Ev+0x1cc8>
 8005702:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005706:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800570a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800570e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005712:	f2c2 8375 	blt.w	8007e00 <_ZN15Screen1ViewBaseC1Ev+0x4364>
 8005716:	e04d      	b.n	80057b4 <_ZN15Screen1ViewBaseC1Ev+0x1d18>
 8005718:	3f9f064f 	.word	0x3f9f064f
 800571c:	3fc4d402 	.word	0x3fc4d402
 8005720:	3febea60 	.word	0x3febea60
 8005724:	4009381d 	.word	0x4009381d
 8005728:	401b4b1f 	.word	0x401b4b1f
 800572c:	402b57bc 	.word	0x402b57bc
 8005730:	4038a6a0 	.word	0x4038a6a0
 8005734:	4042a93f 	.word	0x4042a93f
 8005738:	404902b4 	.word	0x404902b4
 800573c:	404b8c2a 	.word	0x404b8c2a
 8005740:	404a57d1 	.word	0x404a57d1
 8005744:	4045ad97 	.word	0x4045ad97
 8005748:	403e07b3 	.word	0x403e07b3
 800574c:	4034092d 	.word	0x4034092d
 8005750:	4028747e 	.word	0x4028747e
 8005754:	401c1e79 	.word	0x401c1e79
 8005758:	400fe0b5 	.word	0x400fe0b5
 800575c:	40048c69 	.word	0x40048c69
 8005760:	3ff5b90f 	.word	0x3ff5b90f
 8005764:	3fe6d4d4 	.word	0x3fe6d4d4
 8005768:	3fdd4952 	.word	0x3fdd4952
 800576c:	3fd98ec9 	.word	0x3fd98ec9
 8005770:	3fdbb3a7 	.word	0x3fdbb3a7
 8005774:	3fe3598a 	.word	0x3fe3598a
 8005778:	3fefbe23 	.word	0x3fefbe23
 800577c:	3fffc6a8 	.word	0x3fffc6a8
 8005780:	40090918 	.word	0x40090918
 8005784:	401288a4 	.word	0x401288a4
 8005788:	401b8fef 	.word	0x401b8fef
 800578c:	40234fb5 	.word	0x40234fb5
 8005790:	402909c0 	.word	0x402909c0
 8005794:	402c1d00 	.word	0x402c1d00
 8005798:	402c1062 	.word	0x402c1062
 800579c:	40289aaa 	.word	0x40289aaa
 80057a0:	4021a82f 	.word	0x4021a82f
 80057a4:	40175d25 	.word	0x40175d25
 80057a8:	400a132b 	.word	0x400a132b
 80057ac:	3ff4a9bd 	.word	0x3ff4a9bd
 80057b0:	3fd1ad43 	.word	0x3fd1ad43
            return (int)(fs + 0.5f);
 80057b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057c0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80057c4:	4628      	mov	r0, r5
 80057c6:	f00c fbad 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80057ca:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80057ce:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8005768 <_ZN15Screen1ViewBaseC1Ev+0x1ccc>
 80057d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80057d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80057da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80057de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057e2:	f2c2 8322 	blt.w	8007e2a <_ZN15Screen1ViewBaseC1Ev+0x438e>
            return (int)(fs + 0.5f);
 80057e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057f2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80057f6:	4628      	mov	r0, r5
 80057f8:	f00c fb94 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80057fc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005800:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 800576c <_ZN15Screen1ViewBaseC1Ev+0x1cd0>
 8005804:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005808:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800580c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005814:	f2c2 831e 	blt.w	8007e54 <_ZN15Screen1ViewBaseC1Ev+0x43b8>
            return (int)(fs + 0.5f);
 8005818:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800581c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005820:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005824:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005828:	4628      	mov	r0, r5
 800582a:	f00c fb7b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800582e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005832:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8005770 <_ZN15Screen1ViewBaseC1Ev+0x1cd4>
 8005836:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800583a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800583e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005846:	f2c2 831a 	blt.w	8007e7e <_ZN15Screen1ViewBaseC1Ev+0x43e2>
            return (int)(fs + 0.5f);
 800584a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800584e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005852:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005856:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800585a:	4628      	mov	r0, r5
 800585c:	f00c fb62 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005860:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005864:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8005774 <_ZN15Screen1ViewBaseC1Ev+0x1cd8>
 8005868:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800586c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005870:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005878:	f2c2 8316 	blt.w	8007ea8 <_ZN15Screen1ViewBaseC1Ev+0x440c>
            return (int)(fs + 0.5f);
 800587c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005880:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005884:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005888:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800588c:	4628      	mov	r0, r5
 800588e:	f00c fb49 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005892:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005896:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8005778 <_ZN15Screen1ViewBaseC1Ev+0x1cdc>
 800589a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800589e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80058a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80058a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058aa:	f2c2 8312 	blt.w	8007ed2 <_ZN15Screen1ViewBaseC1Ev+0x4436>
            return (int)(fs + 0.5f);
 80058ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80058b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80058b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058ba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80058be:	4628      	mov	r0, r5
 80058c0:	f00c fb30 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80058c4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80058c8:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 800577c <_ZN15Screen1ViewBaseC1Ev+0x1ce0>
 80058cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80058d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80058d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80058d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058dc:	f2c2 830e 	blt.w	8007efc <_ZN15Screen1ViewBaseC1Ev+0x4460>
            return (int)(fs + 0.5f);
 80058e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80058e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80058e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058ec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80058f0:	4628      	mov	r0, r5
 80058f2:	f00c fb17 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80058f6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80058fa:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8005780 <_ZN15Screen1ViewBaseC1Ev+0x1ce4>
 80058fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005902:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005906:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800590a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800590e:	f2c2 830a 	blt.w	8007f26 <_ZN15Screen1ViewBaseC1Ev+0x448a>
            return (int)(fs + 0.5f);
 8005912:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005916:	ee77 7a87 	vadd.f32	s15, s15, s14
 800591a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800591e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005922:	4628      	mov	r0, r5
 8005924:	f00c fafe 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005928:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800592c:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8005784 <_ZN15Screen1ViewBaseC1Ev+0x1ce8>
 8005930:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005934:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005938:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800593c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005940:	f2c2 8306 	blt.w	8007f50 <_ZN15Screen1ViewBaseC1Ev+0x44b4>
            return (int)(fs + 0.5f);
 8005944:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005948:	ee77 7a87 	vadd.f32	s15, s15, s14
 800594c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005950:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005954:	4628      	mov	r0, r5
 8005956:	f00c fae5 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800595a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800595e:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8005788 <_ZN15Screen1ViewBaseC1Ev+0x1cec>
 8005962:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005966:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800596a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800596e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005972:	f2c2 8302 	blt.w	8007f7a <_ZN15Screen1ViewBaseC1Ev+0x44de>
            return (int)(fs + 0.5f);
 8005976:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800597a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800597e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005982:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005986:	4628      	mov	r0, r5
 8005988:	f00c facc 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800598c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005990:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800578c <_ZN15Screen1ViewBaseC1Ev+0x1cf0>
 8005994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005998:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800599c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80059a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059a4:	f2c2 82fe 	blt.w	8007fa4 <_ZN15Screen1ViewBaseC1Ev+0x4508>
            return (int)(fs + 0.5f);
 80059a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80059ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80059b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059b4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80059b8:	4628      	mov	r0, r5
 80059ba:	f00c fab3 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80059be:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80059c2:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8005790 <_ZN15Screen1ViewBaseC1Ev+0x1cf4>
 80059c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80059ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80059ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80059d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059d6:	f2c2 82fa 	blt.w	8007fce <_ZN15Screen1ViewBaseC1Ev+0x4532>
            return (int)(fs + 0.5f);
 80059da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80059de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80059e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059e6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80059ea:	4628      	mov	r0, r5
 80059ec:	f00c fa9a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80059f0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80059f4:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8005794 <_ZN15Screen1ViewBaseC1Ev+0x1cf8>
 80059f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80059fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a08:	f2c2 82f6 	blt.w	8007ff8 <_ZN15Screen1ViewBaseC1Ev+0x455c>
            return (int)(fs + 0.5f);
 8005a0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a18:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a1c:	4628      	mov	r0, r5
 8005a1e:	f00c fa81 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a22:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005a26:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8005798 <_ZN15Screen1ViewBaseC1Ev+0x1cfc>
 8005a2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a2e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a3a:	f2c2 82f2 	blt.w	8008022 <_ZN15Screen1ViewBaseC1Ev+0x4586>
            return (int)(fs + 0.5f);
 8005a3e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a42:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a4a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a4e:	4628      	mov	r0, r5
 8005a50:	f00c fa68 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a54:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005a58:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800579c <_ZN15Screen1ViewBaseC1Ev+0x1d00>
 8005a5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a60:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a6c:	f2c2 82ee 	blt.w	800804c <_ZN15Screen1ViewBaseC1Ev+0x45b0>
            return (int)(fs + 0.5f);
 8005a70:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a74:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a7c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a80:	4628      	mov	r0, r5
 8005a82:	f00c fa4f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a86:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005a8a:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 80057a0 <_ZN15Screen1ViewBaseC1Ev+0x1d04>
 8005a8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a92:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a9e:	f2c2 82ea 	blt.w	8008076 <_ZN15Screen1ViewBaseC1Ev+0x45da>
            return (int)(fs + 0.5f);
 8005aa2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005aa6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005aaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005aae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ab2:	4628      	mov	r0, r5
 8005ab4:	f00c fa36 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ab8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005abc:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 80057a4 <_ZN15Screen1ViewBaseC1Ev+0x1d08>
 8005ac0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ac4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005ac8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ad0:	f2c2 82e6 	blt.w	80080a0 <_ZN15Screen1ViewBaseC1Ev+0x4604>
            return (int)(fs + 0.5f);
 8005ad4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ad8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005adc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ae0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ae4:	4628      	mov	r0, r5
 8005ae6:	f00c fa1d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005aea:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005aee:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 80057a8 <_ZN15Screen1ViewBaseC1Ev+0x1d0c>
 8005af2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005af6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005afa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b02:	f2c2 82e2 	blt.w	80080ca <_ZN15Screen1ViewBaseC1Ev+0x462e>
            return (int)(fs + 0.5f);
 8005b06:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b12:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b16:	4628      	mov	r0, r5
 8005b18:	f00c fa04 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b1c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005b20:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 80057ac <_ZN15Screen1ViewBaseC1Ev+0x1d10>
 8005b24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b28:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b34:	f2c2 82de 	blt.w	80080f4 <_ZN15Screen1ViewBaseC1Ev+0x4658>
            return (int)(fs + 0.5f);
 8005b38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b44:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b48:	4628      	mov	r0, r5
 8005b4a:	f00c f9eb 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b4e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005b52:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 80057b0 <_ZN15Screen1ViewBaseC1Ev+0x1d14>
 8005b56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b5a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b66:	f2c2 82da 	blt.w	800811e <_ZN15Screen1ViewBaseC1Ev+0x4682>
            return (int)(fs + 0.5f);
 8005b6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b76:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b7a:	4628      	mov	r0, r5
 8005b7c:	f00c f9d2 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b80:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005b84:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8005f54 <_ZN15Screen1ViewBaseC1Ev+0x24b8>
 8005b88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b8c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b98:	f2c2 82d6 	blt.w	8008148 <_ZN15Screen1ViewBaseC1Ev+0x46ac>
            return (int)(fs + 0.5f);
 8005b9c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ba0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ba4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ba8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005bac:	4628      	mov	r0, r5
 8005bae:	f00c f9b9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005bb2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005bb6:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8005f58 <_ZN15Screen1ViewBaseC1Ev+0x24bc>
 8005bba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005bbe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005bc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bca:	f2c2 82d2 	blt.w	8008172 <_ZN15Screen1ViewBaseC1Ev+0x46d6>
            return (int)(fs + 0.5f);
 8005bce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005bd2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005bd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005bda:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005bde:	4628      	mov	r0, r5
 8005be0:	f00c f9a0 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005be4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005be8:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8005f5c <_ZN15Screen1ViewBaseC1Ev+0x24c0>
 8005bec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005bf0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005bf4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005bf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bfc:	f2c2 82ce 	blt.w	800819c <_ZN15Screen1ViewBaseC1Ev+0x4700>
            return (int)(fs + 0.5f);
 8005c00:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c0c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c10:	4628      	mov	r0, r5
 8005c12:	f00c f987 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c16:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005c1a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8005f60 <_ZN15Screen1ViewBaseC1Ev+0x24c4>
 8005c1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c22:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c2e:	f2c2 82ca 	blt.w	80081c6 <_ZN15Screen1ViewBaseC1Ev+0x472a>
            return (int)(fs + 0.5f);
 8005c32:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c3e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c42:	4628      	mov	r0, r5
 8005c44:	f00c f96e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c48:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005c4c:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8005f64 <_ZN15Screen1ViewBaseC1Ev+0x24c8>
 8005c50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c60:	f2c2 82c6 	blt.w	80081f0 <_ZN15Screen1ViewBaseC1Ev+0x4754>
            return (int)(fs + 0.5f);
 8005c64:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c68:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c70:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c74:	4628      	mov	r0, r5
 8005c76:	f00c f955 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c7a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005c7e:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8005f68 <_ZN15Screen1ViewBaseC1Ev+0x24cc>
 8005c82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c92:	f2c2 82c2 	blt.w	800821a <_ZN15Screen1ViewBaseC1Ev+0x477e>
            return (int)(fs + 0.5f);
 8005c96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ca2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ca6:	4628      	mov	r0, r5
 8005ca8:	f00c f93c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005cac:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005cb0:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8005f6c <_ZN15Screen1ViewBaseC1Ev+0x24d0>
 8005cb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005cb8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005cbc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cc4:	f2c2 82be 	blt.w	8008244 <_ZN15Screen1ViewBaseC1Ev+0x47a8>
            return (int)(fs + 0.5f);
 8005cc8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ccc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005cd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005cd4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005cd8:	4628      	mov	r0, r5
 8005cda:	f00c f923 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005cde:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005ce2:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8005f70 <_ZN15Screen1ViewBaseC1Ev+0x24d4>
 8005ce6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005cea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005cee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cf6:	f2c2 82ba 	blt.w	800826e <_ZN15Screen1ViewBaseC1Ev+0x47d2>
            return (int)(fs + 0.5f);
 8005cfa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005cfe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d06:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d0a:	4628      	mov	r0, r5
 8005d0c:	f00c f90a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d10:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005d14:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8005f74 <_ZN15Screen1ViewBaseC1Ev+0x24d8>
 8005d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d1c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d28:	f2c2 82b6 	blt.w	8008298 <_ZN15Screen1ViewBaseC1Ev+0x47fc>
            return (int)(fs + 0.5f);
 8005d2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d38:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d3c:	4628      	mov	r0, r5
 8005d3e:	f00c f8f1 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d42:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005d46:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8005f78 <_ZN15Screen1ViewBaseC1Ev+0x24dc>
 8005d4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d4e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d5a:	f2c2 82b2 	blt.w	80082c2 <_ZN15Screen1ViewBaseC1Ev+0x4826>
            return (int)(fs + 0.5f);
 8005d5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d6a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d6e:	4628      	mov	r0, r5
 8005d70:	f00c f8d8 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d74:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005d78:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005f7c <_ZN15Screen1ViewBaseC1Ev+0x24e0>
 8005d7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d80:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d8c:	f2c2 82ae 	blt.w	80082ec <_ZN15Screen1ViewBaseC1Ev+0x4850>
            return (int)(fs + 0.5f);
 8005d90:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d9c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005da0:	4628      	mov	r0, r5
 8005da2:	f00c f8bf 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005da6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005daa:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8005f80 <_ZN15Screen1ViewBaseC1Ev+0x24e4>
 8005dae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005db2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005db6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005dbe:	f2c2 82aa 	blt.w	8008316 <_ZN15Screen1ViewBaseC1Ev+0x487a>
            return (int)(fs + 0.5f);
 8005dc2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005dc6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005dce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005dd2:	4628      	mov	r0, r5
 8005dd4:	f00c f8a6 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005dd8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005ddc:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8005f84 <_ZN15Screen1ViewBaseC1Ev+0x24e8>
 8005de0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005de4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005de8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005dec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005df0:	f2c2 82a6 	blt.w	8008340 <_ZN15Screen1ViewBaseC1Ev+0x48a4>
            return (int)(fs + 0.5f);
 8005df4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005df8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e00:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e04:	4628      	mov	r0, r5
 8005e06:	f00c f88d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e0a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005e0e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8005f88 <_ZN15Screen1ViewBaseC1Ev+0x24ec>
 8005e12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e16:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e22:	f2c2 82a2 	blt.w	800836a <_ZN15Screen1ViewBaseC1Ev+0x48ce>
            return (int)(fs + 0.5f);
 8005e26:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e32:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e36:	4628      	mov	r0, r5
 8005e38:	f00c f874 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e3c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005e40:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005f8c <_ZN15Screen1ViewBaseC1Ev+0x24f0>
 8005e44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e48:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e54:	f2c2 829e 	blt.w	8008394 <_ZN15Screen1ViewBaseC1Ev+0x48f8>
            return (int)(fs + 0.5f);
 8005e58:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e5c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e64:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e68:	4628      	mov	r0, r5
 8005e6a:	f00c f85b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e6e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005e72:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005f90 <_ZN15Screen1ViewBaseC1Ev+0x24f4>
 8005e76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e7a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e86:	f2c2 829a 	blt.w	80083be <_ZN15Screen1ViewBaseC1Ev+0x4922>
            return (int)(fs + 0.5f);
 8005e8a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e96:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e9a:	4628      	mov	r0, r5
 8005e9c:	f00c f842 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ea0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005ea4:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8005f94 <_ZN15Screen1ViewBaseC1Ev+0x24f8>
 8005ea8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005eac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005eb0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005eb8:	f2c2 8296 	blt.w	80083e8 <_ZN15Screen1ViewBaseC1Ev+0x494c>
            return (int)(fs + 0.5f);
 8005ebc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ec0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ec4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ec8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ecc:	4628      	mov	r0, r5
 8005ece:	f00c f829 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ed2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005ed6:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8005f98 <_ZN15Screen1ViewBaseC1Ev+0x24fc>
 8005eda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ede:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005ee2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005ee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005eea:	f2c2 8292 	blt.w	8008412 <_ZN15Screen1ViewBaseC1Ev+0x4976>
            return (int)(fs + 0.5f);
 8005eee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ef2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ef6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005efa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005efe:	4628      	mov	r0, r5
 8005f00:	f00c f810 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005f04:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005f08:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8005f9c <_ZN15Screen1ViewBaseC1Ev+0x2500>
 8005f0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005f10:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005f14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005f18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f1c:	f2c2 828e 	blt.w	800843c <_ZN15Screen1ViewBaseC1Ev+0x49a0>
            return (int)(fs + 0.5f);
 8005f20:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005f24:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005f28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f2c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005f30:	4628      	mov	r0, r5
 8005f32:	f00b fff7 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005f36:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8005f3a:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8005fa0 <_ZN15Screen1ViewBaseC1Ev+0x2504>
 8005f3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005f42:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005f46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005f4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f4e:	f2c2 828a 	blt.w	8008466 <_ZN15Screen1ViewBaseC1Ev+0x49ca>
 8005f52:	e04d      	b.n	8005ff0 <_ZN15Screen1ViewBaseC1Ev+0x2554>
 8005f54:	3facd64d 	.word	0x3facd64d
 8005f58:	3f87eea2 	.word	0x3f87eea2
 8005f5c:	3f49930c 	.word	0x3f49930c
 8005f60:	3f0a5072 	.word	0x3f0a5072
 8005f64:	3eaa771d 	.word	0x3eaa771d
 8005f68:	3e33c600 	.word	0x3e33c600
 8005f6c:	3d9ad42c 	.word	0x3d9ad42c
 8005f70:	3d192642 	.word	0x3d192642
 8005f74:	3d7d1783 	.word	0x3d7d1783
 8005f78:	3e15c52e 	.word	0x3e15c52e
 8005f7c:	3e91e258 	.word	0x3e91e258
 8005f80:	3ef02603 	.word	0x3ef02603
 8005f84:	3f2ffcb9 	.word	0x3f2ffcb9
 8005f88:	3f6d6627 	.word	0x3f6d6627
 8005f8c:	3f96670e 	.word	0x3f96670e
 8005f90:	3fb556c1 	.word	0x3fb556c1
 8005f94:	3fd1d9d3 	.word	0x3fd1d9d3
 8005f98:	3fea7a63 	.word	0x3fea7a63
 8005f9c:	3ffe0d99 	.word	0x3ffe0d99
 8005fa0:	4005e1b1 	.word	0x4005e1b1
 8005fa4:	400999ed 	.word	0x400999ed
 8005fa8:	400a31f9 	.word	0x400a31f9
 8005fac:	4007e1da 	.word	0x4007e1da
 8005fb0:	400312ec 	.word	0x400312ec
 8005fb4:	3ff8b2ea 	.word	0x3ff8b2ea
 8005fb8:	3fe8d307 	.word	0x3fe8d307
 8005fbc:	3fd817ec 	.word	0x3fd817ec
 8005fc0:	3fc8216c 	.word	0x3fc8216c
 8005fc4:	3fba81ed 	.word	0x3fba81ed
 8005fc8:	3fb0a5ce 	.word	0x3fb0a5ce
 8005fcc:	3fabb83d 	.word	0x3fabb83d
 8005fd0:	3fac91d1 	.word	0x3fac91d1
 8005fd4:	3fb3a8d6 	.word	0x3fb3a8d6
 8005fd8:	3fc10774 	.word	0x3fc10774
 8005fdc:	3fd44c06 	.word	0x3fd44c06
 8005fe0:	3fecac5c 	.word	0x3fecac5c
 8005fe4:	4004809d 	.word	0x4004809d
 8005fe8:	4013ecd5 	.word	0x4013ecd5
 8005fec:	4023c6fc 	.word	0x4023c6fc
            return (int)(fs + 0.5f);
 8005ff0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ff4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ff8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ffc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006000:	4628      	mov	r0, r5
 8006002:	f00b ff8f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006006:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800600a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8005fa4 <_ZN15Screen1ViewBaseC1Ev+0x2508>
 800600e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006012:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800601a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800601e:	f2c2 8237 	blt.w	8008490 <_ZN15Screen1ViewBaseC1Ev+0x49f4>
            return (int)(fs + 0.5f);
 8006022:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006026:	ee77 7a87 	vadd.f32	s15, s15, s14
 800602a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800602e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006032:	4628      	mov	r0, r5
 8006034:	f00b ff76 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006038:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800603c:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8005fa8 <_ZN15Screen1ViewBaseC1Ev+0x250c>
 8006040:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006044:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006048:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800604c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006050:	f2c2 8233 	blt.w	80084ba <_ZN15Screen1ViewBaseC1Ev+0x4a1e>
            return (int)(fs + 0.5f);
 8006054:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006058:	ee77 7a87 	vadd.f32	s15, s15, s14
 800605c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006060:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006064:	4628      	mov	r0, r5
 8006066:	f00b ff5d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800606a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800606e:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8005fac <_ZN15Screen1ViewBaseC1Ev+0x2510>
 8006072:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006076:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800607a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800607e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006082:	f2c2 822f 	blt.w	80084e4 <_ZN15Screen1ViewBaseC1Ev+0x4a48>
            return (int)(fs + 0.5f);
 8006086:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800608a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800608e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006092:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006096:	4628      	mov	r0, r5
 8006098:	f00b ff44 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800609c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80060a0:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8005fb0 <_ZN15Screen1ViewBaseC1Ev+0x2514>
 80060a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80060a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80060ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80060b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80060b4:	f2c2 822b 	blt.w	800850e <_ZN15Screen1ViewBaseC1Ev+0x4a72>
            return (int)(fs + 0.5f);
 80060b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80060bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060c4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80060c8:	4628      	mov	r0, r5
 80060ca:	f00b ff2b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80060ce:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80060d2:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8005fb4 <_ZN15Screen1ViewBaseC1Ev+0x2518>
 80060d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80060da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80060de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80060e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80060e6:	f2c2 8227 	blt.w	8008538 <_ZN15Screen1ViewBaseC1Ev+0x4a9c>
            return (int)(fs + 0.5f);
 80060ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80060ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060f6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80060fa:	4628      	mov	r0, r5
 80060fc:	f00b ff12 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006100:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006104:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8005fb8 <_ZN15Screen1ViewBaseC1Ev+0x251c>
 8006108:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800610c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006110:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006118:	f2c2 8223 	blt.w	8008562 <_ZN15Screen1ViewBaseC1Ev+0x4ac6>
            return (int)(fs + 0.5f);
 800611c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006120:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006124:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006128:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800612c:	4628      	mov	r0, r5
 800612e:	f00b fef9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006132:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006136:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8005fbc <_ZN15Screen1ViewBaseC1Ev+0x2520>
 800613a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800613e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006142:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800614a:	f2c2 821f 	blt.w	800858c <_ZN15Screen1ViewBaseC1Ev+0x4af0>
            return (int)(fs + 0.5f);
 800614e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006152:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006156:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800615a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800615e:	4628      	mov	r0, r5
 8006160:	f00b fee0 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006164:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006168:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8005fc0 <_ZN15Screen1ViewBaseC1Ev+0x2524>
 800616c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006170:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006174:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800617c:	f2c2 821b 	blt.w	80085b6 <_ZN15Screen1ViewBaseC1Ev+0x4b1a>
            return (int)(fs + 0.5f);
 8006180:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006184:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006188:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800618c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006190:	4628      	mov	r0, r5
 8006192:	f00b fec7 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006196:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800619a:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8005fc4 <_ZN15Screen1ViewBaseC1Ev+0x2528>
 800619e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80061a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80061aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80061ae:	f2c2 8217 	blt.w	80085e0 <_ZN15Screen1ViewBaseC1Ev+0x4b44>
            return (int)(fs + 0.5f);
 80061b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80061b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80061ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061be:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80061c2:	4628      	mov	r0, r5
 80061c4:	f00b feae 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80061c8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80061cc:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8005fc8 <_ZN15Screen1ViewBaseC1Ev+0x252c>
 80061d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80061d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80061dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80061e0:	f2c2 8213 	blt.w	800860a <_ZN15Screen1ViewBaseC1Ev+0x4b6e>
            return (int)(fs + 0.5f);
 80061e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80061e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80061ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061f0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80061f4:	4628      	mov	r0, r5
 80061f6:	f00b fe95 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80061fa:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80061fe:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8005fcc <_ZN15Screen1ViewBaseC1Ev+0x2530>
 8006202:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006206:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800620a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800620e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006212:	f2c2 820f 	blt.w	8008634 <_ZN15Screen1ViewBaseC1Ev+0x4b98>
            return (int)(fs + 0.5f);
 8006216:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800621a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800621e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006222:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006226:	4628      	mov	r0, r5
 8006228:	f00b fe7c 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800622c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006230:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8005fd0 <_ZN15Screen1ViewBaseC1Ev+0x2534>
 8006234:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006238:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800623c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006244:	f2c2 820b 	blt.w	800865e <_ZN15Screen1ViewBaseC1Ev+0x4bc2>
            return (int)(fs + 0.5f);
 8006248:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800624c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006250:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006254:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006258:	4628      	mov	r0, r5
 800625a:	f00b fe63 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800625e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006262:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8005fd4 <_ZN15Screen1ViewBaseC1Ev+0x2538>
 8006266:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800626a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800626e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006276:	f2c2 8207 	blt.w	8008688 <_ZN15Screen1ViewBaseC1Ev+0x4bec>
            return (int)(fs + 0.5f);
 800627a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800627e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006282:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006286:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800628a:	4628      	mov	r0, r5
 800628c:	f00b fe4a 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006290:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006294:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8005fd8 <_ZN15Screen1ViewBaseC1Ev+0x253c>
 8006298:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800629c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80062a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80062a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062a8:	f2c2 8203 	blt.w	80086b2 <_ZN15Screen1ViewBaseC1Ev+0x4c16>
            return (int)(fs + 0.5f);
 80062ac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80062b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80062b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062b8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80062bc:	4628      	mov	r0, r5
 80062be:	f00b fe31 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80062c2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80062c6:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8005fdc <_ZN15Screen1ViewBaseC1Ev+0x2540>
 80062ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80062ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80062d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80062d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062da:	f2c2 81ff 	blt.w	80086dc <_ZN15Screen1ViewBaseC1Ev+0x4c40>
            return (int)(fs + 0.5f);
 80062de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80062e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80062e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062ea:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80062ee:	4628      	mov	r0, r5
 80062f0:	f00b fe18 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80062f4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80062f8:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8005fe0 <_ZN15Screen1ViewBaseC1Ev+0x2544>
 80062fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006300:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006304:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800630c:	f2c2 81fb 	blt.w	8008706 <_ZN15Screen1ViewBaseC1Ev+0x4c6a>
            return (int)(fs + 0.5f);
 8006310:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006314:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006318:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800631c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006320:	4628      	mov	r0, r5
 8006322:	f00b fdff 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006326:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800632a:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8005fe4 <_ZN15Screen1ViewBaseC1Ev+0x2548>
 800632e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006332:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006336:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800633a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800633e:	f2c2 81f7 	blt.w	8008730 <_ZN15Screen1ViewBaseC1Ev+0x4c94>
            return (int)(fs + 0.5f);
 8006342:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006346:	ee77 7a87 	vadd.f32	s15, s15, s14
 800634a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800634e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006352:	4628      	mov	r0, r5
 8006354:	f00b fde6 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006358:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800635c:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8005fe8 <_ZN15Screen1ViewBaseC1Ev+0x254c>
 8006360:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006364:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006368:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800636c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006370:	f2c2 81f3 	blt.w	800875a <_ZN15Screen1ViewBaseC1Ev+0x4cbe>
            return (int)(fs + 0.5f);
 8006374:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006378:	ee77 7a87 	vadd.f32	s15, s15, s14
 800637c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006380:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006384:	4628      	mov	r0, r5
 8006386:	f00b fdcd 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800638a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800638e:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8005fec <_ZN15Screen1ViewBaseC1Ev+0x2550>
 8006392:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006396:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800639a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800639e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063a2:	f2c2 81ef 	blt.w	8008784 <_ZN15Screen1ViewBaseC1Ev+0x4ce8>
            return (int)(fs + 0.5f);
 80063a6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80063aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80063ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063b2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80063b6:	4628      	mov	r0, r5
 80063b8:	f00b fdb4 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80063bc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80063c0:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8006790 <_ZN15Screen1ViewBaseC1Ev+0x2cf4>
 80063c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80063c8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80063cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80063d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063d4:	f2c2 81eb 	blt.w	80087ae <_ZN15Screen1ViewBaseC1Ev+0x4d12>
            return (int)(fs + 0.5f);
 80063d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80063dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80063e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063e4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80063e8:	4628      	mov	r0, r5
 80063ea:	f00b fd9b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80063ee:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80063f2:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8006794 <_ZN15Screen1ViewBaseC1Ev+0x2cf8>
 80063f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80063fa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80063fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006406:	f2c2 81e7 	blt.w	80087d8 <_ZN15Screen1ViewBaseC1Ev+0x4d3c>
            return (int)(fs + 0.5f);
 800640a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800640e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006412:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006416:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800641a:	4628      	mov	r0, r5
 800641c:	f00b fd82 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006420:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006424:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8006798 <_ZN15Screen1ViewBaseC1Ev+0x2cfc>
 8006428:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800642c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006430:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006438:	f2c2 81e3 	blt.w	8008802 <_ZN15Screen1ViewBaseC1Ev+0x4d66>
            return (int)(fs + 0.5f);
 800643c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006440:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006444:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006448:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800644c:	4628      	mov	r0, r5
 800644e:	f00b fd69 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006452:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006456:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800679c <_ZN15Screen1ViewBaseC1Ev+0x2d00>
 800645a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800645e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006462:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800646a:	f2c2 81df 	blt.w	800882c <_ZN15Screen1ViewBaseC1Ev+0x4d90>
            return (int)(fs + 0.5f);
 800646e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006472:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006476:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800647a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800647e:	4628      	mov	r0, r5
 8006480:	f00b fd50 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006484:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006488:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 80067a0 <_ZN15Screen1ViewBaseC1Ev+0x2d04>
 800648c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006490:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006494:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800649c:	f2c2 81db 	blt.w	8008856 <_ZN15Screen1ViewBaseC1Ev+0x4dba>
            return (int)(fs + 0.5f);
 80064a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80064a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80064a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064ac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80064b0:	4628      	mov	r0, r5
 80064b2:	f00b fd37 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80064b6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80064ba:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80067a4 <_ZN15Screen1ViewBaseC1Ev+0x2d08>
 80064be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80064c2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80064c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80064ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80064ce:	f2c2 81d7 	blt.w	8008880 <_ZN15Screen1ViewBaseC1Ev+0x4de4>
            return (int)(fs + 0.5f);
 80064d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80064d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80064da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064de:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80064e2:	4628      	mov	r0, r5
 80064e4:	f00b fd1e 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80064e8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80064ec:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80067a8 <_ZN15Screen1ViewBaseC1Ev+0x2d0c>
 80064f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80064f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80064f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80064fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006500:	f2c2 81d3 	blt.w	80088aa <_ZN15Screen1ViewBaseC1Ev+0x4e0e>
            return (int)(fs + 0.5f);
 8006504:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006508:	ee77 7a87 	vadd.f32	s15, s15, s14
 800650c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006510:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006514:	4628      	mov	r0, r5
 8006516:	f00b fd05 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800651a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800651e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80067ac <_ZN15Screen1ViewBaseC1Ev+0x2d10>
 8006522:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006526:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800652a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800652e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006532:	f2c2 81cf 	blt.w	80088d4 <_ZN15Screen1ViewBaseC1Ev+0x4e38>
            return (int)(fs + 0.5f);
 8006536:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800653a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800653e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006542:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006546:	4628      	mov	r0, r5
 8006548:	f00b fcec 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800654c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006550:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80067b0 <_ZN15Screen1ViewBaseC1Ev+0x2d14>
 8006554:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006558:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800655c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006564:	f2c2 81cb 	blt.w	80088fe <_ZN15Screen1ViewBaseC1Ev+0x4e62>
            return (int)(fs + 0.5f);
 8006568:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800656c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006570:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006574:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006578:	4628      	mov	r0, r5
 800657a:	f00b fcd3 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800657e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006582:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80067b4 <_ZN15Screen1ViewBaseC1Ev+0x2d18>
 8006586:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800658a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800658e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006596:	f2c2 81c7 	blt.w	8008928 <_ZN15Screen1ViewBaseC1Ev+0x4e8c>
            return (int)(fs + 0.5f);
 800659a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800659e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80065a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065a6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80065aa:	4628      	mov	r0, r5
 80065ac:	f00b fcba 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80065b0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80065b4:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80067b8 <_ZN15Screen1ViewBaseC1Ev+0x2d1c>
 80065b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80065bc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80065c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80065c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065c8:	f2c2 81c3 	blt.w	8008952 <_ZN15Screen1ViewBaseC1Ev+0x4eb6>
            return (int)(fs + 0.5f);
 80065cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80065d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80065d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065d8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80065dc:	4628      	mov	r0, r5
 80065de:	f00b fca1 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80065e2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80065e6:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80067bc <_ZN15Screen1ViewBaseC1Ev+0x2d20>
 80065ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80065ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80065f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80065f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065fa:	f2c2 81bf 	blt.w	800897c <_ZN15Screen1ViewBaseC1Ev+0x4ee0>
            return (int)(fs + 0.5f);
 80065fe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006602:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006606:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800660a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800660e:	4628      	mov	r0, r5
 8006610:	f00b fc88 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006614:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006618:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80067c0 <_ZN15Screen1ViewBaseC1Ev+0x2d24>
 800661c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006620:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006624:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800662c:	f2c2 81bb 	blt.w	80089a6 <_ZN15Screen1ViewBaseC1Ev+0x4f0a>
            return (int)(fs + 0.5f);
 8006630:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006634:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006638:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800663c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006640:	4628      	mov	r0, r5
 8006642:	f00b fc6f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006646:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800664a:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80067c4 <_ZN15Screen1ViewBaseC1Ev+0x2d28>
 800664e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006652:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006656:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800665a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800665e:	f2c2 81b7 	blt.w	80089d0 <_ZN15Screen1ViewBaseC1Ev+0x4f34>
            return (int)(fs + 0.5f);
 8006662:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006666:	ee77 7a87 	vadd.f32	s15, s15, s14
 800666a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800666e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006672:	4628      	mov	r0, r5
 8006674:	f00b fc56 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006678:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800667c:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80067c8 <_ZN15Screen1ViewBaseC1Ev+0x2d2c>
 8006680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006684:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006688:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800668c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006690:	f2c2 81b3 	blt.w	80089fa <_ZN15Screen1ViewBaseC1Ev+0x4f5e>
            return (int)(fs + 0.5f);
 8006694:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006698:	ee77 7a87 	vadd.f32	s15, s15, s14
 800669c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80066a4:	4628      	mov	r0, r5
 80066a6:	f00b fc3d 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80066aa:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80066ae:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80067cc <_ZN15Screen1ViewBaseC1Ev+0x2d30>
 80066b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80066ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80066be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066c2:	f2c2 81af 	blt.w	8008a24 <_ZN15Screen1ViewBaseC1Ev+0x4f88>
            return (int)(fs + 0.5f);
 80066c6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80066ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80066ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066d2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80066d6:	4628      	mov	r0, r5
 80066d8:	f00b fc24 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80066dc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80066e0:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80067d0 <_ZN15Screen1ViewBaseC1Ev+0x2d34>
 80066e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80066ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80066f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066f4:	f2c2 81ab 	blt.w	8008a4e <_ZN15Screen1ViewBaseC1Ev+0x4fb2>
            return (int)(fs + 0.5f);
 80066f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80066fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006700:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006704:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006708:	4628      	mov	r0, r5
 800670a:	f00b fc0b 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800670e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006712:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80067d4 <_ZN15Screen1ViewBaseC1Ev+0x2d38>
 8006716:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800671a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800671e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006726:	f2c2 81a7 	blt.w	8008a78 <_ZN15Screen1ViewBaseC1Ev+0x4fdc>
            return (int)(fs + 0.5f);
 800672a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800672e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006732:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006736:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800673a:	4628      	mov	r0, r5
 800673c:	f00b fbf2 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006740:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006744:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80067d8 <_ZN15Screen1ViewBaseC1Ev+0x2d3c>
 8006748:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800674c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006750:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006758:	f2c2 81a3 	blt.w	8008aa2 <_ZN15Screen1ViewBaseC1Ev+0x5006>
            return (int)(fs + 0.5f);
 800675c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006760:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006764:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006768:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800676c:	4628      	mov	r0, r5
 800676e:	f00b fbd9 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006772:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006776:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80067dc <_ZN15Screen1ViewBaseC1Ev+0x2d40>
 800677a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800677e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006782:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800678a:	f2c2 819f 	blt.w	8008acc <_ZN15Screen1ViewBaseC1Ev+0x5030>
 800678e:	e02d      	b.n	80067ec <_ZN15Screen1ViewBaseC1Ev+0x2d50>
 8006790:	40332e73 	.word	0x40332e73
 8006794:	4041421c 	.word	0x4041421c
 8006798:	404d2ec7 	.word	0x404d2ec7
 800679c:	40563bf7 	.word	0x40563bf7
 80067a0:	405bd806 	.word	0x405bd806
 80067a4:	405d9ffd 	.word	0x405d9ffd
 80067a8:	405b66cf 	.word	0x405b66cf
 80067ac:	405537ca 	.word	0x405537ca
 80067b0:	404b5697 	.word	0x404b5697
 80067b4:	403e3aa8 	.word	0x403e3aa8
 80067b8:	402e88f8 	.word	0x402e88f8
 80067bc:	401d09c0 	.word	0x401d09c0
 80067c0:	400a9c4e 	.word	0x400a9c4e
 80067c4:	3ff05437 	.word	0x3ff05437
 80067c8:	3fcd320e 	.word	0x3fcd320e
 80067cc:	3fad7a25 	.word	0x3fad7a25
 80067d0:	3f929835 	.word	0x3f929835
 80067d4:	3f7b4f61 	.word	0x3f7b4f61
 80067d8:	3f5ec227 	.word	0x3f5ec227
 80067dc:	3f50255b 	.word	0x3f50255b
 80067e0:	3f4f3776 	.word	0x3f4f3776
 80067e4:	3f5ade01 	.word	0x3f5ade01
 80067e8:	3f713fd1 	.word	0x3f713fd1
            return (int)(fs + 0.5f);
 80067ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80067f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80067f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80067f8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80067fc:	4628      	mov	r0, r5
 80067fe:	f00b fb91 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006802:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006806:	ed1f 7a0a 	vldr	s14, [pc, #-40]	; 80067e0 <_ZN15Screen1ViewBaseC1Ev+0x2d44>
 800680a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800680e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006812:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800681a:	f2c2 816c 	blt.w	8008af6 <_ZN15Screen1ViewBaseC1Ev+0x505a>
            return (int)(fs + 0.5f);
 800681e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006822:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006826:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800682a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800682e:	4628      	mov	r0, r5
 8006830:	f00b fb78 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006834:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8006838:	ed1f 7a16 	vldr	s14, [pc, #-88]	; 80067e4 <_ZN15Screen1ViewBaseC1Ev+0x2d48>
 800683c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006840:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006844:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800684c:	f2c2 8168 	blt.w	8008b20 <_ZN15Screen1ViewBaseC1Ev+0x5084>
            return (int)(fs + 0.5f);
 8006850:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006854:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006858:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800685c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006860:	4628      	mov	r0, r5
 8006862:	f00b fb5f 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006866:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800686a:	ed1f 7a21 	vldr	s14, [pc, #-132]	; 80067e8 <_ZN15Screen1ViewBaseC1Ev+0x2d4c>
 800686e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006872:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006876:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800687a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800687e:	f2c2 8164 	blt.w	8008b4a <_ZN15Screen1ViewBaseC1Ev+0x50ae>
            return (int)(fs + 0.5f);
 8006882:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006886:	ee77 7a87 	vadd.f32	s15, s15, s14
 800688a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800688e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006892:	4628      	mov	r0, r5
 8006894:	f00b fb46 	bl	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    infoWidget1.setXY(0, -44);
 8006898:	ee1c 0a10 	vmov	r0, s24
 800689c:	f06f 022b 	mvn.w	r2, #43	; 0x2b
 80068a0:	2100      	movs	r1, #0
 80068a2:	f7fc ff9a 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
    ResetButton.setXY(24, 270);
 80068a6:	ee18 0a90 	vmov	r0, s17
 80068aa:	f44f 7287 	mov.w	r2, #270	; 0x10e
 80068ae:	2118      	movs	r1, #24
 80068b0:	f7fc ff93 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 80068b4:	2701      	movs	r7, #1
    ResetButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80068b6:	aa0a      	add	r2, sp, #40	; 0x28
 80068b8:	a909      	add	r1, sp, #36	; 0x24
 80068ba:	ee18 0a90 	vmov	r0, s17
 80068be:	f04f 0302 	mov.w	r3, #2
 80068c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068c6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80068ca:	f00d f85d 	bl	8013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80068ce:	2303      	movs	r3, #3
        updateTextPosition();
 80068d0:	ee18 0a90 	vmov	r0, s17
 80068d4:	f8a4 3754 	strh.w	r3, [r4, #1876]	; 0x754
 80068d8:	f7fd f87c 	bl	80039d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80068dc:	f04f 33ff 	mov.w	r3, #4294967295
 80068e0:	f8c4 3758 	str.w	r3, [r4, #1880]	; 0x758
        colorPressed = col;
 80068e4:	f8c4 375c 	str.w	r3, [r4, #1884]	; 0x75c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80068e8:	9b03      	ldr	r3, [sp, #12]
 80068ea:	f8c4 3744 	str.w	r3, [r4, #1860]	; 0x744
    XUpButton.setXY(362, 274);
 80068ee:	ee19 0a10 	vmov	r0, s18
 80068f2:	f44f 7289 	mov.w	r2, #274	; 0x112
 80068f6:	f44f 71b5 	mov.w	r1, #362	; 0x16a
 80068fa:	f7fc ff6e 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 80068fe:	f04f 0807 	mov.w	r8, #7
    XUpButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UP_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_UP_PRESSED_ID));
 8006902:	ee19 0a10 	vmov	r0, s18
 8006906:	2606      	movs	r6, #6
 8006908:	aa0a      	add	r2, sp, #40	; 0x28
 800690a:	a909      	add	r1, sp, #36	; 0x24
 800690c:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8006910:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8006914:	f00d f838 	bl	8013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006918:	9b03      	ldr	r3, [sp, #12]
 800691a:	f8c4 378c 	str.w	r3, [r4, #1932]	; 0x78c
    YUpButton.setXY(632, 274);
 800691e:	ee19 0a90 	vmov	r0, s19
 8006922:	f44f 7289 	mov.w	r2, #274	; 0x112
 8006926:	f44f 711e 	mov.w	r1, #632	; 0x278
 800692a:	f7fc ff56 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
    YUpButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UP_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_UP_PRESSED_ID));
 800692e:	ee19 0a90 	vmov	r0, s19
 8006932:	aa0a      	add	r2, sp, #40	; 0x28
 8006934:	a909      	add	r1, sp, #36	; 0x24
 8006936:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 800693a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800693e:	f00d f823 	bl	8013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006942:	9b03      	ldr	r3, [sp, #12]
 8006944:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    XDownButton.setXY(362, 350);
 8006948:	ee1a 0a10 	vmov	r0, s20
 800694c:	f44f 72af 	mov.w	r2, #350	; 0x15e
 8006950:	f44f 71b5 	mov.w	r1, #362	; 0x16a
 8006954:	f7fc ff41 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 8006958:	f04f 0805 	mov.w	r8, #5
    XDownButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_DOWN_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_DOWN_PRESSED_ID));
 800695c:	ee1a 0a10 	vmov	r0, s20
 8006960:	2604      	movs	r6, #4
 8006962:	aa0a      	add	r2, sp, #40	; 0x28
 8006964:	a909      	add	r1, sp, #36	; 0x24
 8006966:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 800696a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800696e:	f00d f80b 	bl	8013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006972:	9b03      	ldr	r3, [sp, #12]
 8006974:	f8c4 37f4 	str.w	r3, [r4, #2036]	; 0x7f4
    YDownButton.setXY(632, 350);
 8006978:	ee1a 0a90 	vmov	r0, s21
 800697c:	f44f 72af 	mov.w	r2, #350	; 0x15e
 8006980:	f44f 711e 	mov.w	r1, #632	; 0x278
 8006984:	f7fc ff29 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
    YDownButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_DOWN_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_DOWN_PRESSED_ID));
 8006988:	ee1a 0a90 	vmov	r0, s21
 800698c:	aa0a      	add	r2, sp, #40	; 0x28
 800698e:	a909      	add	r1, sp, #36	; 0x24
 8006990:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8006994:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8006998:	f00c fff6 	bl	8013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800699c:	9b03      	ldr	r3, [sp, #12]
 800699e:	f8c4 3828 	str.w	r3, [r4, #2088]	; 0x828
    textArea1.setXY(265, 288);
 80069a2:	f44f 7290 	mov.w	r2, #288	; 0x120
 80069a6:	4650      	mov	r0, sl
 80069a8:	f240 1109 	movw	r1, #265	; 0x109
 80069ac:	f7fc ff15 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80069b0:	ae04      	add	r6, sp, #16
        color = newColor;
 80069b2:	4bf6      	ldr	r3, [pc, #984]	; (8006d8c <_ZN15Screen1ViewBaseC1Ev+0x32f0>)
 80069b4:	f8c4 3864 	str.w	r3, [r4, #2148]	; 0x864
        linespace = space;
 80069b8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80069bc:	4651      	mov	r1, sl
 80069be:	4630      	mov	r0, r6
        linespace = space;
 80069c0:	f8a4 8868 	strh.w	r8, [r4, #2152]	; 0x868
        boundingArea = calculateBoundingArea();
 80069c4:	f00c fcf2 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80069cc:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80069d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80069d4:	4bee      	ldr	r3, [pc, #952]	; (8006d90 <_ZN15Screen1ViewBaseC1Ev+0x32f4>)
 80069d6:	930a      	str	r3, [sp, #40]	; 0x28
 80069d8:	f04f 0202 	mov.w	r2, #2
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCN9));
 80069dc:	a90a      	add	r1, sp, #40	; 0x28
 80069de:	4650      	mov	r0, sl
 80069e0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80069e4:	f00c ff72 	bl	80138cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2.setXY(531, 290);
 80069e8:	f44f 7291 	mov.w	r2, #290	; 0x122
 80069ec:	4658      	mov	r0, fp
 80069ee:	f240 2113 	movw	r1, #531	; 0x213
 80069f2:	f7fc fef2 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80069f6:	4be7      	ldr	r3, [pc, #924]	; (8006d94 <_ZN15Screen1ViewBaseC1Ev+0x32f8>)
 80069f8:	f8c4 38ac 	str.w	r3, [r4, #2220]	; 0x8ac
        boundingArea = calculateBoundingArea();
 80069fc:	4659      	mov	r1, fp
 80069fe:	4630      	mov	r0, r6
        linespace = space;
 8006a00:	f8a4 88b0 	strh.w	r8, [r4, #2224]	; 0x8b0
        boundingArea = calculateBoundingArea();
 8006a04:	f00c fcd2 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a08:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006a0c:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006a10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8006a14:	1d26      	adds	r6, r4, #4
 8006a16:	4bde      	ldr	r3, [pc, #888]	; (8006d90 <_ZN15Screen1ViewBaseC1Ev+0x32f4>)
 8006a18:	930a      	str	r3, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_36Y6));
 8006a1a:	a90a      	add	r1, sp, #40	; 0x28
 8006a1c:	4658      	mov	r0, fp
 8006a1e:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006a22:	f00c ff53 	bl	80138cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a26:	ee18 1a10 	vmov	r1, s16
 8006a2a:	4630      	mov	r0, r6
 8006a2c:	f009 fba0 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a30:	4649      	mov	r1, r9
 8006a32:	4630      	mov	r0, r6
 8006a34:	f009 fb9c 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a38:	4629      	mov	r1, r5
 8006a3a:	4630      	mov	r0, r6
 8006a3c:	f009 fb98 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a40:	ee1c 1a10 	vmov	r1, s24
 8006a44:	4630      	mov	r0, r6
 8006a46:	f009 fb93 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a4a:	ee18 1a90 	vmov	r1, s17
 8006a4e:	4630      	mov	r0, r6
 8006a50:	f009 fb8e 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a54:	ee19 1a10 	vmov	r1, s18
 8006a58:	4630      	mov	r0, r6
 8006a5a:	f009 fb89 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a5e:	ee19 1a90 	vmov	r1, s19
 8006a62:	4630      	mov	r0, r6
 8006a64:	f009 fb84 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a68:	ee1a 1a10 	vmov	r1, s20
 8006a6c:	4630      	mov	r0, r6
 8006a6e:	f009 fb7f 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a72:	ee1a 1a90 	vmov	r1, s21
 8006a76:	4630      	mov	r0, r6
 8006a78:	f009 fb7a 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a7c:	4651      	mov	r1, sl
 8006a7e:	4630      	mov	r0, r6
 8006a80:	f009 fb76 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a84:	4630      	mov	r0, r6
 8006a86:	4659      	mov	r1, fp
 8006a88:	f009 fb72 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a8c:	4620      	mov	r0, r4
 8006a8e:	b00d      	add	sp, #52	; 0x34
 8006a90:	ecbd 8b0e 	vpop	{d8-d14}
 8006a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8006a98:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006a9c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006aa0:	ee17 3a10 	vmov	r3, s14
 8006aa4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006aa8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006aac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ab0:	1e59      	subs	r1, r3, #1
 8006ab2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ab6:	ee17 3a90 	vmov	r3, s15
 8006aba:	440b      	add	r3, r1
 8006abc:	4619      	mov	r1, r3
 8006abe:	f7fd b9bf 	b.w	8003e40 <_ZN15Screen1ViewBaseC1Ev+0x3a4>
 8006ac2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006ac6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006aca:	ee17 3a10 	vmov	r3, s14
 8006ace:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ad2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ad6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ada:	1e59      	subs	r1, r3, #1
 8006adc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ae0:	ee17 3a90 	vmov	r3, s15
 8006ae4:	440b      	add	r3, r1
 8006ae6:	4619      	mov	r1, r3
 8006ae8:	f7fd ba12 	b.w	8003f10 <_ZN15Screen1ViewBaseC1Ev+0x474>
 8006aec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006af0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006af4:	ee17 3a10 	vmov	r3, s14
 8006af8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006afc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006b00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006b04:	1e59      	subs	r1, r3, #1
 8006b06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b0a:	ee17 3a90 	vmov	r3, s15
 8006b0e:	440b      	add	r3, r1
 8006b10:	4619      	mov	r1, r3
 8006b12:	f7fd ba16 	b.w	8003f42 <_ZN15Screen1ViewBaseC1Ev+0x4a6>
 8006b16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006b1a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006b1e:	ee17 3a10 	vmov	r3, s14
 8006b22:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006b26:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006b2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006b2e:	1e59      	subs	r1, r3, #1
 8006b30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b34:	ee17 3a90 	vmov	r3, s15
 8006b38:	440b      	add	r3, r1
 8006b3a:	4619      	mov	r1, r3
 8006b3c:	f7fd ba1a 	b.w	8003f74 <_ZN15Screen1ViewBaseC1Ev+0x4d8>
 8006b40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006b44:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006b48:	ee17 3a10 	vmov	r3, s14
 8006b4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006b50:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006b54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006b58:	1e59      	subs	r1, r3, #1
 8006b5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b5e:	ee17 3a90 	vmov	r3, s15
 8006b62:	440b      	add	r3, r1
 8006b64:	4619      	mov	r1, r3
 8006b66:	f7fd ba1e 	b.w	8003fa6 <_ZN15Screen1ViewBaseC1Ev+0x50a>
 8006b6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006b6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006b72:	ee17 3a10 	vmov	r3, s14
 8006b76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006b7a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006b7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006b82:	1e59      	subs	r1, r3, #1
 8006b84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b88:	ee17 3a90 	vmov	r3, s15
 8006b8c:	440b      	add	r3, r1
 8006b8e:	4619      	mov	r1, r3
 8006b90:	f7fd ba22 	b.w	8003fd8 <_ZN15Screen1ViewBaseC1Ev+0x53c>
 8006b94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006b98:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006b9c:	ee17 3a10 	vmov	r3, s14
 8006ba0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ba4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ba8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006bac:	1e59      	subs	r1, r3, #1
 8006bae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006bb2:	ee17 3a90 	vmov	r3, s15
 8006bb6:	440b      	add	r3, r1
 8006bb8:	4619      	mov	r1, r3
 8006bba:	f7fd ba26 	b.w	800400a <_ZN15Screen1ViewBaseC1Ev+0x56e>
 8006bbe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006bc2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006bc6:	ee17 3a10 	vmov	r3, s14
 8006bca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006bce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006bd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006bd6:	1e59      	subs	r1, r3, #1
 8006bd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006bdc:	ee17 3a90 	vmov	r3, s15
 8006be0:	440b      	add	r3, r1
 8006be2:	4619      	mov	r1, r3
 8006be4:	f7fd ba2a 	b.w	800403c <_ZN15Screen1ViewBaseC1Ev+0x5a0>
 8006be8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006bec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006bf0:	ee17 3a10 	vmov	r3, s14
 8006bf4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006bf8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006bfc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006c00:	1e59      	subs	r1, r3, #1
 8006c02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c06:	ee17 3a90 	vmov	r3, s15
 8006c0a:	440b      	add	r3, r1
 8006c0c:	4619      	mov	r1, r3
 8006c0e:	f7fd ba2e 	b.w	800406e <_ZN15Screen1ViewBaseC1Ev+0x5d2>
 8006c12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006c16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006c1a:	ee17 3a10 	vmov	r3, s14
 8006c1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006c22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006c26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006c2a:	1e59      	subs	r1, r3, #1
 8006c2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c30:	ee17 3a90 	vmov	r3, s15
 8006c34:	440b      	add	r3, r1
 8006c36:	4619      	mov	r1, r3
 8006c38:	f7fd ba32 	b.w	80040a0 <_ZN15Screen1ViewBaseC1Ev+0x604>
 8006c3c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006c40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006c44:	ee17 3a10 	vmov	r3, s14
 8006c48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006c4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006c50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006c54:	1e59      	subs	r1, r3, #1
 8006c56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c5a:	ee17 3a90 	vmov	r3, s15
 8006c5e:	440b      	add	r3, r1
 8006c60:	4619      	mov	r1, r3
 8006c62:	f7fd ba36 	b.w	80040d2 <_ZN15Screen1ViewBaseC1Ev+0x636>
 8006c66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006c6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006c6e:	ee17 3a10 	vmov	r3, s14
 8006c72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006c76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006c7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006c7e:	1e59      	subs	r1, r3, #1
 8006c80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c84:	ee17 3a90 	vmov	r3, s15
 8006c88:	440b      	add	r3, r1
 8006c8a:	4619      	mov	r1, r3
 8006c8c:	f7fd ba3a 	b.w	8004104 <_ZN15Screen1ViewBaseC1Ev+0x668>
 8006c90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006c94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006c98:	ee17 3a10 	vmov	r3, s14
 8006c9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ca0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ca4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ca8:	1e59      	subs	r1, r3, #1
 8006caa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006cae:	ee17 3a90 	vmov	r3, s15
 8006cb2:	440b      	add	r3, r1
 8006cb4:	4619      	mov	r1, r3
 8006cb6:	f7fd ba3e 	b.w	8004136 <_ZN15Screen1ViewBaseC1Ev+0x69a>
 8006cba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006cbe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006cc2:	ee17 3a10 	vmov	r3, s14
 8006cc6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006cca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006cce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006cd2:	1e59      	subs	r1, r3, #1
 8006cd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006cd8:	ee17 3a90 	vmov	r3, s15
 8006cdc:	440b      	add	r3, r1
 8006cde:	4619      	mov	r1, r3
 8006ce0:	f7fd ba42 	b.w	8004168 <_ZN15Screen1ViewBaseC1Ev+0x6cc>
 8006ce4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006ce8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006cec:	ee17 3a10 	vmov	r3, s14
 8006cf0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006cf4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006cf8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006cfc:	1e59      	subs	r1, r3, #1
 8006cfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d02:	ee17 3a90 	vmov	r3, s15
 8006d06:	440b      	add	r3, r1
 8006d08:	4619      	mov	r1, r3
 8006d0a:	f7fd ba46 	b.w	800419a <_ZN15Screen1ViewBaseC1Ev+0x6fe>
 8006d0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006d12:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006d16:	ee17 3a10 	vmov	r3, s14
 8006d1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006d1e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006d22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006d26:	1e59      	subs	r1, r3, #1
 8006d28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d2c:	ee17 3a90 	vmov	r3, s15
 8006d30:	440b      	add	r3, r1
 8006d32:	4619      	mov	r1, r3
 8006d34:	f7fd ba4a 	b.w	80041cc <_ZN15Screen1ViewBaseC1Ev+0x730>
 8006d38:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006d3c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006d40:	ee17 3a10 	vmov	r3, s14
 8006d44:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006d48:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006d4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006d50:	1e59      	subs	r1, r3, #1
 8006d52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d56:	ee17 3a90 	vmov	r3, s15
 8006d5a:	440b      	add	r3, r1
 8006d5c:	4619      	mov	r1, r3
 8006d5e:	f7fd ba4e 	b.w	80041fe <_ZN15Screen1ViewBaseC1Ev+0x762>
 8006d62:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006d66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006d6a:	ee17 3a10 	vmov	r3, s14
 8006d6e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006d72:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006d76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006d7a:	1e59      	subs	r1, r3, #1
 8006d7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d80:	ee17 3a90 	vmov	r3, s15
 8006d84:	440b      	add	r3, r1
 8006d86:	4619      	mov	r1, r3
 8006d88:	f7fd ba52 	b.w	8004230 <_ZN15Screen1ViewBaseC1Ev+0x794>
 8006d8c:	fffaf5f5 	.word	0xfffaf5f5
 8006d90:	08027304 	.word	0x08027304
 8006d94:	fff7f0f0 	.word	0xfff7f0f0
 8006d98:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006d9c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006da0:	ee17 3a10 	vmov	r3, s14
 8006da4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006da8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006dac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006db0:	1e59      	subs	r1, r3, #1
 8006db2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006db6:	ee17 3a90 	vmov	r3, s15
 8006dba:	440b      	add	r3, r1
 8006dbc:	4619      	mov	r1, r3
 8006dbe:	f7fd ba50 	b.w	8004262 <_ZN15Screen1ViewBaseC1Ev+0x7c6>
 8006dc2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006dc6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006dca:	ee17 3a10 	vmov	r3, s14
 8006dce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006dd2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006dd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006dda:	1e59      	subs	r1, r3, #1
 8006ddc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006de0:	ee17 3a90 	vmov	r3, s15
 8006de4:	440b      	add	r3, r1
 8006de6:	4619      	mov	r1, r3
 8006de8:	f7fd ba54 	b.w	8004294 <_ZN15Screen1ViewBaseC1Ev+0x7f8>
 8006dec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006df0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006df4:	ee17 3a10 	vmov	r3, s14
 8006df8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006dfc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006e00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e04:	1e59      	subs	r1, r3, #1
 8006e06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e0a:	ee17 3a90 	vmov	r3, s15
 8006e0e:	440b      	add	r3, r1
 8006e10:	4619      	mov	r1, r3
 8006e12:	f7fd ba58 	b.w	80042c6 <_ZN15Screen1ViewBaseC1Ev+0x82a>
 8006e16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006e1a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e1e:	ee17 3a10 	vmov	r3, s14
 8006e22:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006e26:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006e2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e2e:	1e59      	subs	r1, r3, #1
 8006e30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e34:	ee17 3a90 	vmov	r3, s15
 8006e38:	440b      	add	r3, r1
 8006e3a:	4619      	mov	r1, r3
 8006e3c:	f7fd ba5c 	b.w	80042f8 <_ZN15Screen1ViewBaseC1Ev+0x85c>
 8006e40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006e44:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e48:	ee17 3a10 	vmov	r3, s14
 8006e4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006e50:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006e54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e58:	1e59      	subs	r1, r3, #1
 8006e5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e5e:	ee17 3a90 	vmov	r3, s15
 8006e62:	440b      	add	r3, r1
 8006e64:	4619      	mov	r1, r3
 8006e66:	f7fd ba60 	b.w	800432a <_ZN15Screen1ViewBaseC1Ev+0x88e>
 8006e6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006e6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e72:	ee17 3a10 	vmov	r3, s14
 8006e76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006e7a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006e7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e82:	1e59      	subs	r1, r3, #1
 8006e84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e88:	ee17 3a90 	vmov	r3, s15
 8006e8c:	440b      	add	r3, r1
 8006e8e:	4619      	mov	r1, r3
 8006e90:	f7fd ba64 	b.w	800435c <_ZN15Screen1ViewBaseC1Ev+0x8c0>
 8006e94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006e98:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e9c:	ee17 3a10 	vmov	r3, s14
 8006ea0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ea4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ea8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006eac:	1e59      	subs	r1, r3, #1
 8006eae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006eb2:	ee17 3a90 	vmov	r3, s15
 8006eb6:	440b      	add	r3, r1
 8006eb8:	4619      	mov	r1, r3
 8006eba:	f7fd ba68 	b.w	800438e <_ZN15Screen1ViewBaseC1Ev+0x8f2>
 8006ebe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006ec2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006ec6:	ee17 3a10 	vmov	r3, s14
 8006eca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ece:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ed2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ed6:	1e59      	subs	r1, r3, #1
 8006ed8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006edc:	ee17 3a90 	vmov	r3, s15
 8006ee0:	440b      	add	r3, r1
 8006ee2:	4619      	mov	r1, r3
 8006ee4:	f7fd ba6c 	b.w	80043c0 <_ZN15Screen1ViewBaseC1Ev+0x924>
 8006ee8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006eec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006ef0:	ee17 3a10 	vmov	r3, s14
 8006ef4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ef8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006efc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006f00:	1e59      	subs	r1, r3, #1
 8006f02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f06:	ee17 3a90 	vmov	r3, s15
 8006f0a:	440b      	add	r3, r1
 8006f0c:	4619      	mov	r1, r3
 8006f0e:	f7fd ba70 	b.w	80043f2 <_ZN15Screen1ViewBaseC1Ev+0x956>
 8006f12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006f16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006f1a:	ee17 3a10 	vmov	r3, s14
 8006f1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006f22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006f26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006f2a:	1e59      	subs	r1, r3, #1
 8006f2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f30:	ee17 3a90 	vmov	r3, s15
 8006f34:	440b      	add	r3, r1
 8006f36:	4619      	mov	r1, r3
 8006f38:	f7fd ba74 	b.w	8004424 <_ZN15Screen1ViewBaseC1Ev+0x988>
 8006f3c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006f40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006f44:	ee17 3a10 	vmov	r3, s14
 8006f48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006f4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006f50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006f54:	1e59      	subs	r1, r3, #1
 8006f56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f5a:	ee17 3a90 	vmov	r3, s15
 8006f5e:	440b      	add	r3, r1
 8006f60:	4619      	mov	r1, r3
 8006f62:	f7fd ba78 	b.w	8004456 <_ZN15Screen1ViewBaseC1Ev+0x9ba>
 8006f66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006f6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006f6e:	ee17 3a10 	vmov	r3, s14
 8006f72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006f76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006f7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006f7e:	1e59      	subs	r1, r3, #1
 8006f80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f84:	ee17 3a90 	vmov	r3, s15
 8006f88:	440b      	add	r3, r1
 8006f8a:	4619      	mov	r1, r3
 8006f8c:	f7fd ba7c 	b.w	8004488 <_ZN15Screen1ViewBaseC1Ev+0x9ec>
 8006f90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006f94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006f98:	ee17 3a10 	vmov	r3, s14
 8006f9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006fa0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006fa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006fa8:	1e59      	subs	r1, r3, #1
 8006faa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006fae:	ee17 3a90 	vmov	r3, s15
 8006fb2:	440b      	add	r3, r1
 8006fb4:	4619      	mov	r1, r3
 8006fb6:	f7fd ba80 	b.w	80044ba <_ZN15Screen1ViewBaseC1Ev+0xa1e>
 8006fba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006fbe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006fc2:	ee17 3a10 	vmov	r3, s14
 8006fc6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006fca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006fce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006fd2:	1e59      	subs	r1, r3, #1
 8006fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006fd8:	ee17 3a90 	vmov	r3, s15
 8006fdc:	440b      	add	r3, r1
 8006fde:	4619      	mov	r1, r3
 8006fe0:	f7fd ba84 	b.w	80044ec <_ZN15Screen1ViewBaseC1Ev+0xa50>
 8006fe4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006fe8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006fec:	ee17 3a10 	vmov	r3, s14
 8006ff0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006ff4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006ff8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ffc:	1e59      	subs	r1, r3, #1
 8006ffe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007002:	ee17 3a90 	vmov	r3, s15
 8007006:	440b      	add	r3, r1
 8007008:	4619      	mov	r1, r3
 800700a:	f7fd ba88 	b.w	800451e <_ZN15Screen1ViewBaseC1Ev+0xa82>
 800700e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007012:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007016:	ee17 3a10 	vmov	r3, s14
 800701a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800701e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007022:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007026:	1e59      	subs	r1, r3, #1
 8007028:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800702c:	ee17 3a90 	vmov	r3, s15
 8007030:	440b      	add	r3, r1
 8007032:	4619      	mov	r1, r3
 8007034:	f7fd ba8c 	b.w	8004550 <_ZN15Screen1ViewBaseC1Ev+0xab4>
 8007038:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800703c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007040:	ee17 3a10 	vmov	r3, s14
 8007044:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007048:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800704c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007050:	1e59      	subs	r1, r3, #1
 8007052:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007056:	ee17 3a90 	vmov	r3, s15
 800705a:	440b      	add	r3, r1
 800705c:	4619      	mov	r1, r3
 800705e:	f7fd ba90 	b.w	8004582 <_ZN15Screen1ViewBaseC1Ev+0xae6>
 8007062:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007066:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800706a:	ee17 3a10 	vmov	r3, s14
 800706e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007072:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007076:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800707a:	1e59      	subs	r1, r3, #1
 800707c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007080:	ee17 3a90 	vmov	r3, s15
 8007084:	440b      	add	r3, r1
 8007086:	4619      	mov	r1, r3
 8007088:	f7fd ba94 	b.w	80045b4 <_ZN15Screen1ViewBaseC1Ev+0xb18>
 800708c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007090:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007094:	ee17 3a10 	vmov	r3, s14
 8007098:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800709c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80070a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070a4:	1e59      	subs	r1, r3, #1
 80070a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80070aa:	ee17 3a90 	vmov	r3, s15
 80070ae:	440b      	add	r3, r1
 80070b0:	4619      	mov	r1, r3
 80070b2:	f7fd ba98 	b.w	80045e6 <_ZN15Screen1ViewBaseC1Ev+0xb4a>
 80070b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80070ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80070be:	ee17 3a10 	vmov	r3, s14
 80070c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80070c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80070ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070ce:	1e59      	subs	r1, r3, #1
 80070d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80070d4:	ee17 3a90 	vmov	r3, s15
 80070d8:	440b      	add	r3, r1
 80070da:	4619      	mov	r1, r3
 80070dc:	f7fd ba9c 	b.w	8004618 <_ZN15Screen1ViewBaseC1Ev+0xb7c>
 80070e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80070e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80070e8:	ee17 3a10 	vmov	r3, s14
 80070ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80070f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80070f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070f8:	1e59      	subs	r1, r3, #1
 80070fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80070fe:	ee17 3a90 	vmov	r3, s15
 8007102:	440b      	add	r3, r1
 8007104:	4619      	mov	r1, r3
 8007106:	f7fd baa0 	b.w	800464a <_ZN15Screen1ViewBaseC1Ev+0xbae>
 800710a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800710e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007112:	ee17 3a10 	vmov	r3, s14
 8007116:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800711a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800711e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007122:	1e59      	subs	r1, r3, #1
 8007124:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007128:	ee17 3a90 	vmov	r3, s15
 800712c:	440b      	add	r3, r1
 800712e:	4619      	mov	r1, r3
 8007130:	f7fd baa4 	b.w	800467c <_ZN15Screen1ViewBaseC1Ev+0xbe0>
 8007134:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007138:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800713c:	ee17 3a10 	vmov	r3, s14
 8007140:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007144:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007148:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800714c:	1e59      	subs	r1, r3, #1
 800714e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007152:	ee17 3a90 	vmov	r3, s15
 8007156:	440b      	add	r3, r1
 8007158:	4619      	mov	r1, r3
 800715a:	f7fd baf7 	b.w	800474c <_ZN15Screen1ViewBaseC1Ev+0xcb0>
 800715e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007162:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007166:	ee17 3a10 	vmov	r3, s14
 800716a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800716e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007172:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007176:	1e59      	subs	r1, r3, #1
 8007178:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800717c:	ee17 3a90 	vmov	r3, s15
 8007180:	440b      	add	r3, r1
 8007182:	4619      	mov	r1, r3
 8007184:	f7fd bafb 	b.w	800477e <_ZN15Screen1ViewBaseC1Ev+0xce2>
 8007188:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800718c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007190:	ee17 3a10 	vmov	r3, s14
 8007194:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007198:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800719c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80071a0:	1e59      	subs	r1, r3, #1
 80071a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071a6:	ee17 3a90 	vmov	r3, s15
 80071aa:	440b      	add	r3, r1
 80071ac:	4619      	mov	r1, r3
 80071ae:	f7fd baff 	b.w	80047b0 <_ZN15Screen1ViewBaseC1Ev+0xd14>
 80071b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80071b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80071ba:	ee17 3a10 	vmov	r3, s14
 80071be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80071c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80071c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80071ca:	1e59      	subs	r1, r3, #1
 80071cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071d0:	ee17 3a90 	vmov	r3, s15
 80071d4:	440b      	add	r3, r1
 80071d6:	4619      	mov	r1, r3
 80071d8:	f7fd bb03 	b.w	80047e2 <_ZN15Screen1ViewBaseC1Ev+0xd46>
 80071dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80071e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80071e4:	ee17 3a10 	vmov	r3, s14
 80071e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80071ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80071f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80071f4:	1e59      	subs	r1, r3, #1
 80071f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071fa:	ee17 3a90 	vmov	r3, s15
 80071fe:	440b      	add	r3, r1
 8007200:	4619      	mov	r1, r3
 8007202:	f7fd bb07 	b.w	8004814 <_ZN15Screen1ViewBaseC1Ev+0xd78>
 8007206:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800720a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800720e:	ee17 3a10 	vmov	r3, s14
 8007212:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007216:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800721a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800721e:	1e59      	subs	r1, r3, #1
 8007220:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007224:	ee17 3a90 	vmov	r3, s15
 8007228:	440b      	add	r3, r1
 800722a:	4619      	mov	r1, r3
 800722c:	f7fd bb0b 	b.w	8004846 <_ZN15Screen1ViewBaseC1Ev+0xdaa>
 8007230:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007234:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007238:	ee17 3a10 	vmov	r3, s14
 800723c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007240:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007244:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007248:	1e59      	subs	r1, r3, #1
 800724a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800724e:	ee17 3a90 	vmov	r3, s15
 8007252:	440b      	add	r3, r1
 8007254:	4619      	mov	r1, r3
 8007256:	f7fd bb0f 	b.w	8004878 <_ZN15Screen1ViewBaseC1Ev+0xddc>
 800725a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800725e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007262:	ee17 3a10 	vmov	r3, s14
 8007266:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800726a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800726e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007272:	1e59      	subs	r1, r3, #1
 8007274:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007278:	ee17 3a90 	vmov	r3, s15
 800727c:	440b      	add	r3, r1
 800727e:	4619      	mov	r1, r3
 8007280:	f7fd bb13 	b.w	80048aa <_ZN15Screen1ViewBaseC1Ev+0xe0e>
 8007284:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007288:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800728c:	ee17 3a10 	vmov	r3, s14
 8007290:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007294:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007298:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800729c:	1e59      	subs	r1, r3, #1
 800729e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072a2:	ee17 3a90 	vmov	r3, s15
 80072a6:	440b      	add	r3, r1
 80072a8:	4619      	mov	r1, r3
 80072aa:	f7fd bb17 	b.w	80048dc <_ZN15Screen1ViewBaseC1Ev+0xe40>
 80072ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80072b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80072b6:	ee17 3a10 	vmov	r3, s14
 80072ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80072be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80072c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80072c6:	1e59      	subs	r1, r3, #1
 80072c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072cc:	ee17 3a90 	vmov	r3, s15
 80072d0:	440b      	add	r3, r1
 80072d2:	4619      	mov	r1, r3
 80072d4:	f7fd bb1b 	b.w	800490e <_ZN15Screen1ViewBaseC1Ev+0xe72>
 80072d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80072dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80072e0:	ee17 3a10 	vmov	r3, s14
 80072e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80072e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80072ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80072f0:	1e59      	subs	r1, r3, #1
 80072f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072f6:	ee17 3a90 	vmov	r3, s15
 80072fa:	440b      	add	r3, r1
 80072fc:	4619      	mov	r1, r3
 80072fe:	f7fd bb1f 	b.w	8004940 <_ZN15Screen1ViewBaseC1Ev+0xea4>
 8007302:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007306:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800730a:	ee17 3a10 	vmov	r3, s14
 800730e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007312:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007316:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800731a:	1e59      	subs	r1, r3, #1
 800731c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007320:	ee17 3a90 	vmov	r3, s15
 8007324:	440b      	add	r3, r1
 8007326:	4619      	mov	r1, r3
 8007328:	f7fd bb23 	b.w	8004972 <_ZN15Screen1ViewBaseC1Ev+0xed6>
 800732c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007330:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007334:	ee17 3a10 	vmov	r3, s14
 8007338:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800733c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007340:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007344:	1e59      	subs	r1, r3, #1
 8007346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800734a:	ee17 3a90 	vmov	r3, s15
 800734e:	440b      	add	r3, r1
 8007350:	4619      	mov	r1, r3
 8007352:	f7fd bb27 	b.w	80049a4 <_ZN15Screen1ViewBaseC1Ev+0xf08>
 8007356:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800735a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800735e:	ee17 3a10 	vmov	r3, s14
 8007362:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007366:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800736a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800736e:	1e59      	subs	r1, r3, #1
 8007370:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007374:	ee17 3a90 	vmov	r3, s15
 8007378:	440b      	add	r3, r1
 800737a:	4619      	mov	r1, r3
 800737c:	f7fd bb2b 	b.w	80049d6 <_ZN15Screen1ViewBaseC1Ev+0xf3a>
 8007380:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007384:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007388:	ee17 3a10 	vmov	r3, s14
 800738c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007390:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007394:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007398:	1e59      	subs	r1, r3, #1
 800739a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800739e:	ee17 3a90 	vmov	r3, s15
 80073a2:	440b      	add	r3, r1
 80073a4:	4619      	mov	r1, r3
 80073a6:	f7fd bb2f 	b.w	8004a08 <_ZN15Screen1ViewBaseC1Ev+0xf6c>
 80073aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80073ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80073b2:	ee17 3a10 	vmov	r3, s14
 80073b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80073ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80073be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80073c2:	1e59      	subs	r1, r3, #1
 80073c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80073c8:	ee17 3a90 	vmov	r3, s15
 80073cc:	440b      	add	r3, r1
 80073ce:	4619      	mov	r1, r3
 80073d0:	f7fd bb33 	b.w	8004a3a <_ZN15Screen1ViewBaseC1Ev+0xf9e>
 80073d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80073d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80073dc:	ee17 3a10 	vmov	r3, s14
 80073e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80073e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80073e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80073ec:	1e59      	subs	r1, r3, #1
 80073ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80073f2:	ee17 3a90 	vmov	r3, s15
 80073f6:	440b      	add	r3, r1
 80073f8:	4619      	mov	r1, r3
 80073fa:	f7fd bb37 	b.w	8004a6c <_ZN15Screen1ViewBaseC1Ev+0xfd0>
 80073fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007402:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007406:	ee17 3a10 	vmov	r3, s14
 800740a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800740e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007412:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007416:	1e59      	subs	r1, r3, #1
 8007418:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800741c:	ee17 3a90 	vmov	r3, s15
 8007420:	440b      	add	r3, r1
 8007422:	4619      	mov	r1, r3
 8007424:	f7fd bb3b 	b.w	8004a9e <_ZN15Screen1ViewBaseC1Ev+0x1002>
 8007428:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800742c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007430:	ee17 3a10 	vmov	r3, s14
 8007434:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007438:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800743c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007440:	1e59      	subs	r1, r3, #1
 8007442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007446:	ee17 3a90 	vmov	r3, s15
 800744a:	440b      	add	r3, r1
 800744c:	4619      	mov	r1, r3
 800744e:	f7fd bb3f 	b.w	8004ad0 <_ZN15Screen1ViewBaseC1Ev+0x1034>
 8007452:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007456:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800745a:	ee17 3a10 	vmov	r3, s14
 800745e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007462:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007466:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800746a:	1e59      	subs	r1, r3, #1
 800746c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007470:	ee17 3a90 	vmov	r3, s15
 8007474:	440b      	add	r3, r1
 8007476:	4619      	mov	r1, r3
 8007478:	f7fd bb43 	b.w	8004b02 <_ZN15Screen1ViewBaseC1Ev+0x1066>
 800747c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007480:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007484:	ee17 3a10 	vmov	r3, s14
 8007488:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800748c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007490:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007494:	1e59      	subs	r1, r3, #1
 8007496:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800749a:	ee17 3a90 	vmov	r3, s15
 800749e:	440b      	add	r3, r1
 80074a0:	4619      	mov	r1, r3
 80074a2:	f7fd bb47 	b.w	8004b34 <_ZN15Screen1ViewBaseC1Ev+0x1098>
 80074a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80074aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80074ae:	ee17 3a10 	vmov	r3, s14
 80074b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80074b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80074ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80074be:	1e59      	subs	r1, r3, #1
 80074c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80074c4:	ee17 3a90 	vmov	r3, s15
 80074c8:	440b      	add	r3, r1
 80074ca:	4619      	mov	r1, r3
 80074cc:	f7fd bb4b 	b.w	8004b66 <_ZN15Screen1ViewBaseC1Ev+0x10ca>
 80074d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80074d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80074d8:	ee17 3a10 	vmov	r3, s14
 80074dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80074e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80074e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80074e8:	1e59      	subs	r1, r3, #1
 80074ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80074ee:	ee17 3a90 	vmov	r3, s15
 80074f2:	440b      	add	r3, r1
 80074f4:	4619      	mov	r1, r3
 80074f6:	f7fd bb4f 	b.w	8004b98 <_ZN15Screen1ViewBaseC1Ev+0x10fc>
 80074fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80074fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007502:	ee17 3a10 	vmov	r3, s14
 8007506:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800750a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800750e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007512:	1e59      	subs	r1, r3, #1
 8007514:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007518:	ee17 3a90 	vmov	r3, s15
 800751c:	440b      	add	r3, r1
 800751e:	4619      	mov	r1, r3
 8007520:	f7fd bb53 	b.w	8004bca <_ZN15Screen1ViewBaseC1Ev+0x112e>
 8007524:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007528:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800752c:	ee17 3a10 	vmov	r3, s14
 8007530:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007534:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007538:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800753c:	1e59      	subs	r1, r3, #1
 800753e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007542:	ee17 3a90 	vmov	r3, s15
 8007546:	440b      	add	r3, r1
 8007548:	4619      	mov	r1, r3
 800754a:	f7fd bb57 	b.w	8004bfc <_ZN15Screen1ViewBaseC1Ev+0x1160>
 800754e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007552:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007556:	ee17 3a10 	vmov	r3, s14
 800755a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800755e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007562:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007566:	1e59      	subs	r1, r3, #1
 8007568:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800756c:	ee17 3a90 	vmov	r3, s15
 8007570:	440b      	add	r3, r1
 8007572:	4619      	mov	r1, r3
 8007574:	f7fd bb5b 	b.w	8004c2e <_ZN15Screen1ViewBaseC1Ev+0x1192>
 8007578:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800757c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007580:	ee17 3a10 	vmov	r3, s14
 8007584:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007588:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800758c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007590:	1e59      	subs	r1, r3, #1
 8007592:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007596:	ee17 3a90 	vmov	r3, s15
 800759a:	440b      	add	r3, r1
 800759c:	4619      	mov	r1, r3
 800759e:	f7fd bb5f 	b.w	8004c60 <_ZN15Screen1ViewBaseC1Ev+0x11c4>
 80075a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80075a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80075aa:	ee17 3a10 	vmov	r3, s14
 80075ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80075b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80075b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80075ba:	1e59      	subs	r1, r3, #1
 80075bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80075c0:	ee17 3a90 	vmov	r3, s15
 80075c4:	440b      	add	r3, r1
 80075c6:	4619      	mov	r1, r3
 80075c8:	f7fd bb63 	b.w	8004c92 <_ZN15Screen1ViewBaseC1Ev+0x11f6>
 80075cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80075d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80075d4:	ee17 3a10 	vmov	r3, s14
 80075d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80075dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80075e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80075e4:	1e59      	subs	r1, r3, #1
 80075e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80075ea:	ee17 3a90 	vmov	r3, s15
 80075ee:	440b      	add	r3, r1
 80075f0:	4619      	mov	r1, r3
 80075f2:	f7fd bb67 	b.w	8004cc4 <_ZN15Screen1ViewBaseC1Ev+0x1228>
 80075f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80075fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80075fe:	ee17 3a10 	vmov	r3, s14
 8007602:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007606:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800760a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800760e:	1e59      	subs	r1, r3, #1
 8007610:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007614:	ee17 3a90 	vmov	r3, s15
 8007618:	440b      	add	r3, r1
 800761a:	4619      	mov	r1, r3
 800761c:	f7fd bb6b 	b.w	8004cf6 <_ZN15Screen1ViewBaseC1Ev+0x125a>
 8007620:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007624:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007628:	ee17 3a10 	vmov	r3, s14
 800762c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007630:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007634:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007638:	1e59      	subs	r1, r3, #1
 800763a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800763e:	ee17 3a90 	vmov	r3, s15
 8007642:	440b      	add	r3, r1
 8007644:	4619      	mov	r1, r3
 8007646:	f7fd bb6f 	b.w	8004d28 <_ZN15Screen1ViewBaseC1Ev+0x128c>
 800764a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800764e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007652:	ee17 3a10 	vmov	r3, s14
 8007656:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800765a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800765e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007662:	1e59      	subs	r1, r3, #1
 8007664:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007668:	ee17 3a90 	vmov	r3, s15
 800766c:	440b      	add	r3, r1
 800766e:	4619      	mov	r1, r3
 8007670:	f7fd bb73 	b.w	8004d5a <_ZN15Screen1ViewBaseC1Ev+0x12be>
 8007674:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007678:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800767c:	ee17 3a10 	vmov	r3, s14
 8007680:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007684:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007688:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800768c:	1e59      	subs	r1, r3, #1
 800768e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007692:	ee17 3a90 	vmov	r3, s15
 8007696:	440b      	add	r3, r1
 8007698:	4619      	mov	r1, r3
 800769a:	f7fd bb77 	b.w	8004d8c <_ZN15Screen1ViewBaseC1Ev+0x12f0>
 800769e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80076a2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80076a6:	ee17 3a10 	vmov	r3, s14
 80076aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80076ae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80076b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80076b6:	1e59      	subs	r1, r3, #1
 80076b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80076bc:	ee17 3a90 	vmov	r3, s15
 80076c0:	440b      	add	r3, r1
 80076c2:	4619      	mov	r1, r3
 80076c4:	f7fd bb7b 	b.w	8004dbe <_ZN15Screen1ViewBaseC1Ev+0x1322>
 80076c8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80076cc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80076d0:	ee17 3a10 	vmov	r3, s14
 80076d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80076d8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80076dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80076e0:	1e59      	subs	r1, r3, #1
 80076e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80076e6:	ee17 3a90 	vmov	r3, s15
 80076ea:	440b      	add	r3, r1
 80076ec:	4619      	mov	r1, r3
 80076ee:	f7fd bb7f 	b.w	8004df0 <_ZN15Screen1ViewBaseC1Ev+0x1354>
 80076f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80076f6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80076fa:	ee17 3a10 	vmov	r3, s14
 80076fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007702:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007706:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800770a:	1e59      	subs	r1, r3, #1
 800770c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007710:	ee17 3a90 	vmov	r3, s15
 8007714:	440b      	add	r3, r1
 8007716:	4619      	mov	r1, r3
 8007718:	f7fd bb83 	b.w	8004e22 <_ZN15Screen1ViewBaseC1Ev+0x1386>
 800771c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007720:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007724:	ee17 3a10 	vmov	r3, s14
 8007728:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800772c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007730:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007734:	1e59      	subs	r1, r3, #1
 8007736:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800773a:	ee17 3a90 	vmov	r3, s15
 800773e:	440b      	add	r3, r1
 8007740:	4619      	mov	r1, r3
 8007742:	f7fd bb87 	b.w	8004e54 <_ZN15Screen1ViewBaseC1Ev+0x13b8>
 8007746:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800774a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800774e:	ee17 3a10 	vmov	r3, s14
 8007752:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007756:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800775a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800775e:	1e59      	subs	r1, r3, #1
 8007760:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007764:	ee17 3a90 	vmov	r3, s15
 8007768:	440b      	add	r3, r1
 800776a:	4619      	mov	r1, r3
 800776c:	f7fd bb8b 	b.w	8004e86 <_ZN15Screen1ViewBaseC1Ev+0x13ea>
 8007770:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007774:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007778:	ee17 3a10 	vmov	r3, s14
 800777c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007780:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007784:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007788:	1e59      	subs	r1, r3, #1
 800778a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800778e:	ee17 3a90 	vmov	r3, s15
 8007792:	440b      	add	r3, r1
 8007794:	4619      	mov	r1, r3
 8007796:	f7fd bb8f 	b.w	8004eb8 <_ZN15Screen1ViewBaseC1Ev+0x141c>
 800779a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800779e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80077a2:	ee17 3a10 	vmov	r3, s14
 80077a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80077aa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80077ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80077b2:	1e59      	subs	r1, r3, #1
 80077b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80077b8:	ee17 3a90 	vmov	r3, s15
 80077bc:	440b      	add	r3, r1
 80077be:	4619      	mov	r1, r3
 80077c0:	f7fd bbe2 	b.w	8004f88 <_ZN15Screen1ViewBaseC1Ev+0x14ec>
 80077c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80077c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80077cc:	ee17 3a10 	vmov	r3, s14
 80077d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80077d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80077d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80077dc:	1e59      	subs	r1, r3, #1
 80077de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80077e2:	ee17 3a90 	vmov	r3, s15
 80077e6:	440b      	add	r3, r1
 80077e8:	4619      	mov	r1, r3
 80077ea:	f7fd bbe6 	b.w	8004fba <_ZN15Screen1ViewBaseC1Ev+0x151e>
 80077ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80077f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80077f6:	ee17 3a10 	vmov	r3, s14
 80077fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80077fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007802:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007806:	1e59      	subs	r1, r3, #1
 8007808:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800780c:	ee17 3a90 	vmov	r3, s15
 8007810:	440b      	add	r3, r1
 8007812:	4619      	mov	r1, r3
 8007814:	f7fd bbea 	b.w	8004fec <_ZN15Screen1ViewBaseC1Ev+0x1550>
 8007818:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800781c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007820:	ee17 3a10 	vmov	r3, s14
 8007824:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007828:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800782c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007830:	1e59      	subs	r1, r3, #1
 8007832:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007836:	ee17 3a90 	vmov	r3, s15
 800783a:	440b      	add	r3, r1
 800783c:	4619      	mov	r1, r3
 800783e:	f7fd bbee 	b.w	800501e <_ZN15Screen1ViewBaseC1Ev+0x1582>
 8007842:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007846:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800784a:	ee17 3a10 	vmov	r3, s14
 800784e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007852:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007856:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800785a:	1e59      	subs	r1, r3, #1
 800785c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007860:	ee17 3a90 	vmov	r3, s15
 8007864:	440b      	add	r3, r1
 8007866:	4619      	mov	r1, r3
 8007868:	f7fd bbf2 	b.w	8005050 <_ZN15Screen1ViewBaseC1Ev+0x15b4>
 800786c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007870:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007874:	ee17 3a10 	vmov	r3, s14
 8007878:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800787c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007880:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007884:	1e59      	subs	r1, r3, #1
 8007886:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800788a:	ee17 3a90 	vmov	r3, s15
 800788e:	440b      	add	r3, r1
 8007890:	4619      	mov	r1, r3
 8007892:	f7fd bbf6 	b.w	8005082 <_ZN15Screen1ViewBaseC1Ev+0x15e6>
 8007896:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800789a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800789e:	ee17 3a10 	vmov	r3, s14
 80078a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80078a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80078aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80078ae:	1e59      	subs	r1, r3, #1
 80078b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078b4:	ee17 3a90 	vmov	r3, s15
 80078b8:	440b      	add	r3, r1
 80078ba:	4619      	mov	r1, r3
 80078bc:	f7fd bbfa 	b.w	80050b4 <_ZN15Screen1ViewBaseC1Ev+0x1618>
 80078c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80078c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80078c8:	ee17 3a10 	vmov	r3, s14
 80078cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80078d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80078d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80078d8:	1e59      	subs	r1, r3, #1
 80078da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078de:	ee17 3a90 	vmov	r3, s15
 80078e2:	440b      	add	r3, r1
 80078e4:	4619      	mov	r1, r3
 80078e6:	f7fd bbfe 	b.w	80050e6 <_ZN15Screen1ViewBaseC1Ev+0x164a>
 80078ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80078ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80078f2:	ee17 3a10 	vmov	r3, s14
 80078f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80078fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80078fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007902:	1e59      	subs	r1, r3, #1
 8007904:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007908:	ee17 3a90 	vmov	r3, s15
 800790c:	440b      	add	r3, r1
 800790e:	4619      	mov	r1, r3
 8007910:	f7fd bc02 	b.w	8005118 <_ZN15Screen1ViewBaseC1Ev+0x167c>
 8007914:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007918:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800791c:	ee17 3a10 	vmov	r3, s14
 8007920:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007924:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007928:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800792c:	1e59      	subs	r1, r3, #1
 800792e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007932:	ee17 3a90 	vmov	r3, s15
 8007936:	440b      	add	r3, r1
 8007938:	4619      	mov	r1, r3
 800793a:	f7fd bc06 	b.w	800514a <_ZN15Screen1ViewBaseC1Ev+0x16ae>
 800793e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007942:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007946:	ee17 3a10 	vmov	r3, s14
 800794a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800794e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007952:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007956:	1e59      	subs	r1, r3, #1
 8007958:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800795c:	ee17 3a90 	vmov	r3, s15
 8007960:	440b      	add	r3, r1
 8007962:	4619      	mov	r1, r3
 8007964:	f7fd bc0a 	b.w	800517c <_ZN15Screen1ViewBaseC1Ev+0x16e0>
 8007968:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800796c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007970:	ee17 3a10 	vmov	r3, s14
 8007974:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007978:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800797c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007980:	1e59      	subs	r1, r3, #1
 8007982:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007986:	ee17 3a90 	vmov	r3, s15
 800798a:	440b      	add	r3, r1
 800798c:	4619      	mov	r1, r3
 800798e:	f7fd bc0e 	b.w	80051ae <_ZN15Screen1ViewBaseC1Ev+0x1712>
 8007992:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007996:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800799a:	ee17 3a10 	vmov	r3, s14
 800799e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80079a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80079a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80079aa:	1e59      	subs	r1, r3, #1
 80079ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079b0:	ee17 3a90 	vmov	r3, s15
 80079b4:	440b      	add	r3, r1
 80079b6:	4619      	mov	r1, r3
 80079b8:	f7fd bc12 	b.w	80051e0 <_ZN15Screen1ViewBaseC1Ev+0x1744>
 80079bc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80079c0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80079c4:	ee17 3a10 	vmov	r3, s14
 80079c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80079cc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80079d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80079d4:	1e59      	subs	r1, r3, #1
 80079d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079da:	ee17 3a90 	vmov	r3, s15
 80079de:	440b      	add	r3, r1
 80079e0:	4619      	mov	r1, r3
 80079e2:	f7fd bc16 	b.w	8005212 <_ZN15Screen1ViewBaseC1Ev+0x1776>
 80079e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80079ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80079ee:	ee17 3a10 	vmov	r3, s14
 80079f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80079f6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80079fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80079fe:	1e59      	subs	r1, r3, #1
 8007a00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a04:	ee17 3a90 	vmov	r3, s15
 8007a08:	440b      	add	r3, r1
 8007a0a:	4619      	mov	r1, r3
 8007a0c:	f7fd bc1a 	b.w	8005244 <_ZN15Screen1ViewBaseC1Ev+0x17a8>
 8007a10:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007a14:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007a18:	ee17 3a10 	vmov	r3, s14
 8007a1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007a20:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007a24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a28:	1e59      	subs	r1, r3, #1
 8007a2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a2e:	ee17 3a90 	vmov	r3, s15
 8007a32:	440b      	add	r3, r1
 8007a34:	4619      	mov	r1, r3
 8007a36:	f7fd bc1e 	b.w	8005276 <_ZN15Screen1ViewBaseC1Ev+0x17da>
 8007a3a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007a3e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007a42:	ee17 3a10 	vmov	r3, s14
 8007a46:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007a4a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007a4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a52:	1e59      	subs	r1, r3, #1
 8007a54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a58:	ee17 3a90 	vmov	r3, s15
 8007a5c:	440b      	add	r3, r1
 8007a5e:	4619      	mov	r1, r3
 8007a60:	f7fd bc22 	b.w	80052a8 <_ZN15Screen1ViewBaseC1Ev+0x180c>
 8007a64:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007a68:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007a6c:	ee17 3a10 	vmov	r3, s14
 8007a70:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007a74:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007a78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a7c:	1e59      	subs	r1, r3, #1
 8007a7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a82:	ee17 3a90 	vmov	r3, s15
 8007a86:	440b      	add	r3, r1
 8007a88:	4619      	mov	r1, r3
 8007a8a:	f7fd bc26 	b.w	80052da <_ZN15Screen1ViewBaseC1Ev+0x183e>
 8007a8e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007a92:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007a96:	ee17 3a10 	vmov	r3, s14
 8007a9a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007a9e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007aa2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007aa6:	1e59      	subs	r1, r3, #1
 8007aa8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007aac:	ee17 3a90 	vmov	r3, s15
 8007ab0:	440b      	add	r3, r1
 8007ab2:	4619      	mov	r1, r3
 8007ab4:	f7fd bc2a 	b.w	800530c <_ZN15Screen1ViewBaseC1Ev+0x1870>
 8007ab8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007abc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007ac0:	ee17 3a10 	vmov	r3, s14
 8007ac4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007ac8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007acc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007ad0:	1e59      	subs	r1, r3, #1
 8007ad2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ad6:	ee17 3a90 	vmov	r3, s15
 8007ada:	440b      	add	r3, r1
 8007adc:	4619      	mov	r1, r3
 8007ade:	f7fd bc2e 	b.w	800533e <_ZN15Screen1ViewBaseC1Ev+0x18a2>
 8007ae2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007ae6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007aea:	ee17 3a10 	vmov	r3, s14
 8007aee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007af2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007af6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007afa:	1e59      	subs	r1, r3, #1
 8007afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b00:	ee17 3a90 	vmov	r3, s15
 8007b04:	440b      	add	r3, r1
 8007b06:	4619      	mov	r1, r3
 8007b08:	f7fd bc32 	b.w	8005370 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
 8007b0c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007b10:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007b14:	ee17 3a10 	vmov	r3, s14
 8007b18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007b1c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007b20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b24:	1e59      	subs	r1, r3, #1
 8007b26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b2a:	ee17 3a90 	vmov	r3, s15
 8007b2e:	440b      	add	r3, r1
 8007b30:	4619      	mov	r1, r3
 8007b32:	f7fd bc36 	b.w	80053a2 <_ZN15Screen1ViewBaseC1Ev+0x1906>
 8007b36:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007b3a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007b3e:	ee17 3a10 	vmov	r3, s14
 8007b42:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007b46:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007b4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b4e:	1e59      	subs	r1, r3, #1
 8007b50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b54:	ee17 3a90 	vmov	r3, s15
 8007b58:	440b      	add	r3, r1
 8007b5a:	4619      	mov	r1, r3
 8007b5c:	f7fd bc3a 	b.w	80053d4 <_ZN15Screen1ViewBaseC1Ev+0x1938>
 8007b60:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007b64:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007b68:	ee17 3a10 	vmov	r3, s14
 8007b6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007b70:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007b74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b78:	1e59      	subs	r1, r3, #1
 8007b7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b7e:	ee17 3a90 	vmov	r3, s15
 8007b82:	440b      	add	r3, r1
 8007b84:	4619      	mov	r1, r3
 8007b86:	f7fd bc3e 	b.w	8005406 <_ZN15Screen1ViewBaseC1Ev+0x196a>
 8007b8a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007b8e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007b92:	ee17 3a10 	vmov	r3, s14
 8007b96:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007b9a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007b9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007ba2:	1e59      	subs	r1, r3, #1
 8007ba4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ba8:	ee17 3a90 	vmov	r3, s15
 8007bac:	440b      	add	r3, r1
 8007bae:	4619      	mov	r1, r3
 8007bb0:	f7fd bc42 	b.w	8005438 <_ZN15Screen1ViewBaseC1Ev+0x199c>
 8007bb4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007bb8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007bbc:	ee17 3a10 	vmov	r3, s14
 8007bc0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007bc4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007bc8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007bcc:	1e59      	subs	r1, r3, #1
 8007bce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bd2:	ee17 3a90 	vmov	r3, s15
 8007bd6:	440b      	add	r3, r1
 8007bd8:	4619      	mov	r1, r3
 8007bda:	f7fd bc46 	b.w	800546a <_ZN15Screen1ViewBaseC1Ev+0x19ce>
 8007bde:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007be2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007be6:	ee17 3a10 	vmov	r3, s14
 8007bea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007bee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007bf2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007bf6:	1e59      	subs	r1, r3, #1
 8007bf8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bfc:	ee17 3a90 	vmov	r3, s15
 8007c00:	440b      	add	r3, r1
 8007c02:	4619      	mov	r1, r3
 8007c04:	f7fd bc4a 	b.w	800549c <_ZN15Screen1ViewBaseC1Ev+0x1a00>
 8007c08:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c0c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007c10:	ee17 3a10 	vmov	r3, s14
 8007c14:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007c18:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007c1c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007c20:	1e59      	subs	r1, r3, #1
 8007c22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c26:	ee17 3a90 	vmov	r3, s15
 8007c2a:	440b      	add	r3, r1
 8007c2c:	4619      	mov	r1, r3
 8007c2e:	f7fd bc4e 	b.w	80054ce <_ZN15Screen1ViewBaseC1Ev+0x1a32>
 8007c32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c36:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007c3a:	ee17 3a10 	vmov	r3, s14
 8007c3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007c42:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007c46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007c4a:	1e59      	subs	r1, r3, #1
 8007c4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c50:	ee17 3a90 	vmov	r3, s15
 8007c54:	440b      	add	r3, r1
 8007c56:	4619      	mov	r1, r3
 8007c58:	f7fd bc52 	b.w	8005500 <_ZN15Screen1ViewBaseC1Ev+0x1a64>
 8007c5c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007c64:	ee17 3a10 	vmov	r3, s14
 8007c68:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007c6c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007c70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007c74:	1e59      	subs	r1, r3, #1
 8007c76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c7a:	ee17 3a90 	vmov	r3, s15
 8007c7e:	440b      	add	r3, r1
 8007c80:	4619      	mov	r1, r3
 8007c82:	f7fd bc56 	b.w	8005532 <_ZN15Screen1ViewBaseC1Ev+0x1a96>
 8007c86:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c8a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007c8e:	ee17 3a10 	vmov	r3, s14
 8007c92:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007c96:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007c9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007c9e:	1e59      	subs	r1, r3, #1
 8007ca0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ca4:	ee17 3a90 	vmov	r3, s15
 8007ca8:	440b      	add	r3, r1
 8007caa:	4619      	mov	r1, r3
 8007cac:	f7fd bc5a 	b.w	8005564 <_ZN15Screen1ViewBaseC1Ev+0x1ac8>
 8007cb0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007cb4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007cb8:	ee17 3a10 	vmov	r3, s14
 8007cbc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007cc0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007cc4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007cc8:	1e59      	subs	r1, r3, #1
 8007cca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cce:	ee17 3a90 	vmov	r3, s15
 8007cd2:	440b      	add	r3, r1
 8007cd4:	4619      	mov	r1, r3
 8007cd6:	f7fd bc5e 	b.w	8005596 <_ZN15Screen1ViewBaseC1Ev+0x1afa>
 8007cda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007cde:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007ce2:	ee17 3a10 	vmov	r3, s14
 8007ce6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007cea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007cee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007cf2:	1e59      	subs	r1, r3, #1
 8007cf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cf8:	ee17 3a90 	vmov	r3, s15
 8007cfc:	440b      	add	r3, r1
 8007cfe:	4619      	mov	r1, r3
 8007d00:	f7fd bc62 	b.w	80055c8 <_ZN15Screen1ViewBaseC1Ev+0x1b2c>
 8007d04:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d08:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007d0c:	ee17 3a10 	vmov	r3, s14
 8007d10:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007d14:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007d18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007d1c:	1e59      	subs	r1, r3, #1
 8007d1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d22:	ee17 3a90 	vmov	r3, s15
 8007d26:	440b      	add	r3, r1
 8007d28:	4619      	mov	r1, r3
 8007d2a:	f7fd bc66 	b.w	80055fa <_ZN15Screen1ViewBaseC1Ev+0x1b5e>
 8007d2e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d32:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007d36:	ee17 3a10 	vmov	r3, s14
 8007d3a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007d3e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007d42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007d46:	1e59      	subs	r1, r3, #1
 8007d48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d4c:	ee17 3a90 	vmov	r3, s15
 8007d50:	440b      	add	r3, r1
 8007d52:	4619      	mov	r1, r3
 8007d54:	f7fd bc6a 	b.w	800562c <_ZN15Screen1ViewBaseC1Ev+0x1b90>
 8007d58:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d5c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007d60:	ee17 3a10 	vmov	r3, s14
 8007d64:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007d68:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007d6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007d70:	1e59      	subs	r1, r3, #1
 8007d72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d76:	ee17 3a90 	vmov	r3, s15
 8007d7a:	440b      	add	r3, r1
 8007d7c:	4619      	mov	r1, r3
 8007d7e:	f7fd bc6e 	b.w	800565e <_ZN15Screen1ViewBaseC1Ev+0x1bc2>
 8007d82:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d86:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007d8a:	ee17 3a10 	vmov	r3, s14
 8007d8e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007d92:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007d96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007d9a:	1e59      	subs	r1, r3, #1
 8007d9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007da0:	ee17 3a90 	vmov	r3, s15
 8007da4:	440b      	add	r3, r1
 8007da6:	4619      	mov	r1, r3
 8007da8:	f7fd bc72 	b.w	8005690 <_ZN15Screen1ViewBaseC1Ev+0x1bf4>
 8007dac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007db0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007db4:	ee17 3a10 	vmov	r3, s14
 8007db8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007dbc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007dc0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007dc4:	1e59      	subs	r1, r3, #1
 8007dc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dca:	ee17 3a90 	vmov	r3, s15
 8007dce:	440b      	add	r3, r1
 8007dd0:	4619      	mov	r1, r3
 8007dd2:	f7fd bc76 	b.w	80056c2 <_ZN15Screen1ViewBaseC1Ev+0x1c26>
 8007dd6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007dda:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007dde:	ee17 3a10 	vmov	r3, s14
 8007de2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007de6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007dea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007dee:	1e59      	subs	r1, r3, #1
 8007df0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007df4:	ee17 3a90 	vmov	r3, s15
 8007df8:	440b      	add	r3, r1
 8007dfa:	4619      	mov	r1, r3
 8007dfc:	f7fd bc7a 	b.w	80056f4 <_ZN15Screen1ViewBaseC1Ev+0x1c58>
 8007e00:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e04:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007e08:	ee17 3a10 	vmov	r3, s14
 8007e0c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007e10:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007e14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e18:	1e59      	subs	r1, r3, #1
 8007e1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e1e:	ee17 3a90 	vmov	r3, s15
 8007e22:	440b      	add	r3, r1
 8007e24:	4619      	mov	r1, r3
 8007e26:	f7fd bccd 	b.w	80057c4 <_ZN15Screen1ViewBaseC1Ev+0x1d28>
 8007e2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e2e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007e32:	ee17 3a10 	vmov	r3, s14
 8007e36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007e3a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007e3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e42:	1e59      	subs	r1, r3, #1
 8007e44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e48:	ee17 3a90 	vmov	r3, s15
 8007e4c:	440b      	add	r3, r1
 8007e4e:	4619      	mov	r1, r3
 8007e50:	f7fd bcd1 	b.w	80057f6 <_ZN15Screen1ViewBaseC1Ev+0x1d5a>
 8007e54:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e58:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007e5c:	ee17 3a10 	vmov	r3, s14
 8007e60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007e64:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007e68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e6c:	1e59      	subs	r1, r3, #1
 8007e6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e72:	ee17 3a90 	vmov	r3, s15
 8007e76:	440b      	add	r3, r1
 8007e78:	4619      	mov	r1, r3
 8007e7a:	f7fd bcd5 	b.w	8005828 <_ZN15Screen1ViewBaseC1Ev+0x1d8c>
 8007e7e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007e86:	ee17 3a10 	vmov	r3, s14
 8007e8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007e8e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007e92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e96:	1e59      	subs	r1, r3, #1
 8007e98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e9c:	ee17 3a90 	vmov	r3, s15
 8007ea0:	440b      	add	r3, r1
 8007ea2:	4619      	mov	r1, r3
 8007ea4:	f7fd bcd9 	b.w	800585a <_ZN15Screen1ViewBaseC1Ev+0x1dbe>
 8007ea8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007eac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007eb0:	ee17 3a10 	vmov	r3, s14
 8007eb4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007eb8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007ebc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007ec0:	1e59      	subs	r1, r3, #1
 8007ec2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ec6:	ee17 3a90 	vmov	r3, s15
 8007eca:	440b      	add	r3, r1
 8007ecc:	4619      	mov	r1, r3
 8007ece:	f7fd bcdd 	b.w	800588c <_ZN15Screen1ViewBaseC1Ev+0x1df0>
 8007ed2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007ed6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007eda:	ee17 3a10 	vmov	r3, s14
 8007ede:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007ee2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007ee6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007eea:	1e59      	subs	r1, r3, #1
 8007eec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ef0:	ee17 3a90 	vmov	r3, s15
 8007ef4:	440b      	add	r3, r1
 8007ef6:	4619      	mov	r1, r3
 8007ef8:	f7fd bce1 	b.w	80058be <_ZN15Screen1ViewBaseC1Ev+0x1e22>
 8007efc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007f04:	ee17 3a10 	vmov	r3, s14
 8007f08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007f0c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007f10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007f14:	1e59      	subs	r1, r3, #1
 8007f16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f1a:	ee17 3a90 	vmov	r3, s15
 8007f1e:	440b      	add	r3, r1
 8007f20:	4619      	mov	r1, r3
 8007f22:	f7fd bce5 	b.w	80058f0 <_ZN15Screen1ViewBaseC1Ev+0x1e54>
 8007f26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007f2e:	ee17 3a10 	vmov	r3, s14
 8007f32:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007f36:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007f3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007f3e:	1e59      	subs	r1, r3, #1
 8007f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f44:	ee17 3a90 	vmov	r3, s15
 8007f48:	440b      	add	r3, r1
 8007f4a:	4619      	mov	r1, r3
 8007f4c:	f7fd bce9 	b.w	8005922 <_ZN15Screen1ViewBaseC1Ev+0x1e86>
 8007f50:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007f58:	ee17 3a10 	vmov	r3, s14
 8007f5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007f60:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007f64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007f68:	1e59      	subs	r1, r3, #1
 8007f6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f6e:	ee17 3a90 	vmov	r3, s15
 8007f72:	440b      	add	r3, r1
 8007f74:	4619      	mov	r1, r3
 8007f76:	f7fd bced 	b.w	8005954 <_ZN15Screen1ViewBaseC1Ev+0x1eb8>
 8007f7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007f82:	ee17 3a10 	vmov	r3, s14
 8007f86:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007f8a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007f8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007f92:	1e59      	subs	r1, r3, #1
 8007f94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f98:	ee17 3a90 	vmov	r3, s15
 8007f9c:	440b      	add	r3, r1
 8007f9e:	4619      	mov	r1, r3
 8007fa0:	f7fd bcf1 	b.w	8005986 <_ZN15Screen1ViewBaseC1Ev+0x1eea>
 8007fa4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007fa8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007fac:	ee17 3a10 	vmov	r3, s14
 8007fb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007fb4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007fb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007fbc:	1e59      	subs	r1, r3, #1
 8007fbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fc2:	ee17 3a90 	vmov	r3, s15
 8007fc6:	440b      	add	r3, r1
 8007fc8:	4619      	mov	r1, r3
 8007fca:	f7fd bcf5 	b.w	80059b8 <_ZN15Screen1ViewBaseC1Ev+0x1f1c>
 8007fce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007fd2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007fd6:	ee17 3a10 	vmov	r3, s14
 8007fda:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007fde:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007fe2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007fe6:	1e59      	subs	r1, r3, #1
 8007fe8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fec:	ee17 3a90 	vmov	r3, s15
 8007ff0:	440b      	add	r3, r1
 8007ff2:	4619      	mov	r1, r3
 8007ff4:	f7fd bcf9 	b.w	80059ea <_ZN15Screen1ViewBaseC1Ev+0x1f4e>
 8007ff8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007ffc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008000:	ee17 3a10 	vmov	r3, s14
 8008004:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008008:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800800c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008010:	1e59      	subs	r1, r3, #1
 8008012:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008016:	ee17 3a90 	vmov	r3, s15
 800801a:	440b      	add	r3, r1
 800801c:	4619      	mov	r1, r3
 800801e:	f7fd bcfd 	b.w	8005a1c <_ZN15Screen1ViewBaseC1Ev+0x1f80>
 8008022:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008026:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800802a:	ee17 3a10 	vmov	r3, s14
 800802e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008032:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008036:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800803a:	1e59      	subs	r1, r3, #1
 800803c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008040:	ee17 3a90 	vmov	r3, s15
 8008044:	440b      	add	r3, r1
 8008046:	4619      	mov	r1, r3
 8008048:	f7fd bd01 	b.w	8005a4e <_ZN15Screen1ViewBaseC1Ev+0x1fb2>
 800804c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008050:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008054:	ee17 3a10 	vmov	r3, s14
 8008058:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800805c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008060:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008064:	1e59      	subs	r1, r3, #1
 8008066:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800806a:	ee17 3a90 	vmov	r3, s15
 800806e:	440b      	add	r3, r1
 8008070:	4619      	mov	r1, r3
 8008072:	f7fd bd05 	b.w	8005a80 <_ZN15Screen1ViewBaseC1Ev+0x1fe4>
 8008076:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800807a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800807e:	ee17 3a10 	vmov	r3, s14
 8008082:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008086:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800808a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800808e:	1e59      	subs	r1, r3, #1
 8008090:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008094:	ee17 3a90 	vmov	r3, s15
 8008098:	440b      	add	r3, r1
 800809a:	4619      	mov	r1, r3
 800809c:	f7fd bd09 	b.w	8005ab2 <_ZN15Screen1ViewBaseC1Ev+0x2016>
 80080a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80080a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80080a8:	ee17 3a10 	vmov	r3, s14
 80080ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80080b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80080b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80080b8:	1e59      	subs	r1, r3, #1
 80080ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080be:	ee17 3a90 	vmov	r3, s15
 80080c2:	440b      	add	r3, r1
 80080c4:	4619      	mov	r1, r3
 80080c6:	f7fd bd0d 	b.w	8005ae4 <_ZN15Screen1ViewBaseC1Ev+0x2048>
 80080ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80080ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80080d2:	ee17 3a10 	vmov	r3, s14
 80080d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80080da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80080de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80080e2:	1e59      	subs	r1, r3, #1
 80080e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080e8:	ee17 3a90 	vmov	r3, s15
 80080ec:	440b      	add	r3, r1
 80080ee:	4619      	mov	r1, r3
 80080f0:	f7fd bd11 	b.w	8005b16 <_ZN15Screen1ViewBaseC1Ev+0x207a>
 80080f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80080f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80080fc:	ee17 3a10 	vmov	r3, s14
 8008100:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008104:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008108:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800810c:	1e59      	subs	r1, r3, #1
 800810e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008112:	ee17 3a90 	vmov	r3, s15
 8008116:	440b      	add	r3, r1
 8008118:	4619      	mov	r1, r3
 800811a:	f7fd bd15 	b.w	8005b48 <_ZN15Screen1ViewBaseC1Ev+0x20ac>
 800811e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008122:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008126:	ee17 3a10 	vmov	r3, s14
 800812a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800812e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008132:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008136:	1e59      	subs	r1, r3, #1
 8008138:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800813c:	ee17 3a90 	vmov	r3, s15
 8008140:	440b      	add	r3, r1
 8008142:	4619      	mov	r1, r3
 8008144:	f7fd bd19 	b.w	8005b7a <_ZN15Screen1ViewBaseC1Ev+0x20de>
 8008148:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800814c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008150:	ee17 3a10 	vmov	r3, s14
 8008154:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008158:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800815c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008160:	1e59      	subs	r1, r3, #1
 8008162:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008166:	ee17 3a90 	vmov	r3, s15
 800816a:	440b      	add	r3, r1
 800816c:	4619      	mov	r1, r3
 800816e:	f7fd bd1d 	b.w	8005bac <_ZN15Screen1ViewBaseC1Ev+0x2110>
 8008172:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008176:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800817a:	ee17 3a10 	vmov	r3, s14
 800817e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008182:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008186:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800818a:	1e59      	subs	r1, r3, #1
 800818c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008190:	ee17 3a90 	vmov	r3, s15
 8008194:	440b      	add	r3, r1
 8008196:	4619      	mov	r1, r3
 8008198:	f7fd bd21 	b.w	8005bde <_ZN15Screen1ViewBaseC1Ev+0x2142>
 800819c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80081a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80081a4:	ee17 3a10 	vmov	r3, s14
 80081a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80081ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80081b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80081b4:	1e59      	subs	r1, r3, #1
 80081b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081ba:	ee17 3a90 	vmov	r3, s15
 80081be:	440b      	add	r3, r1
 80081c0:	4619      	mov	r1, r3
 80081c2:	f7fd bd25 	b.w	8005c10 <_ZN15Screen1ViewBaseC1Ev+0x2174>
 80081c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80081ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80081ce:	ee17 3a10 	vmov	r3, s14
 80081d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80081d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80081da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80081de:	1e59      	subs	r1, r3, #1
 80081e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081e4:	ee17 3a90 	vmov	r3, s15
 80081e8:	440b      	add	r3, r1
 80081ea:	4619      	mov	r1, r3
 80081ec:	f7fd bd29 	b.w	8005c42 <_ZN15Screen1ViewBaseC1Ev+0x21a6>
 80081f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80081f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80081f8:	ee17 3a10 	vmov	r3, s14
 80081fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008200:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008204:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008208:	1e59      	subs	r1, r3, #1
 800820a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800820e:	ee17 3a90 	vmov	r3, s15
 8008212:	440b      	add	r3, r1
 8008214:	4619      	mov	r1, r3
 8008216:	f7fd bd2d 	b.w	8005c74 <_ZN15Screen1ViewBaseC1Ev+0x21d8>
 800821a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800821e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008222:	ee17 3a10 	vmov	r3, s14
 8008226:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800822a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800822e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008232:	1e59      	subs	r1, r3, #1
 8008234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008238:	ee17 3a90 	vmov	r3, s15
 800823c:	440b      	add	r3, r1
 800823e:	4619      	mov	r1, r3
 8008240:	f7fd bd31 	b.w	8005ca6 <_ZN15Screen1ViewBaseC1Ev+0x220a>
 8008244:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008248:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800824c:	ee17 3a10 	vmov	r3, s14
 8008250:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008254:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008258:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800825c:	1e59      	subs	r1, r3, #1
 800825e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008262:	ee17 3a90 	vmov	r3, s15
 8008266:	440b      	add	r3, r1
 8008268:	4619      	mov	r1, r3
 800826a:	f7fd bd35 	b.w	8005cd8 <_ZN15Screen1ViewBaseC1Ev+0x223c>
 800826e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008272:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008276:	ee17 3a10 	vmov	r3, s14
 800827a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800827e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008282:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008286:	1e59      	subs	r1, r3, #1
 8008288:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800828c:	ee17 3a90 	vmov	r3, s15
 8008290:	440b      	add	r3, r1
 8008292:	4619      	mov	r1, r3
 8008294:	f7fd bd39 	b.w	8005d0a <_ZN15Screen1ViewBaseC1Ev+0x226e>
 8008298:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800829c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80082a0:	ee17 3a10 	vmov	r3, s14
 80082a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80082a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80082ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80082b0:	1e59      	subs	r1, r3, #1
 80082b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082b6:	ee17 3a90 	vmov	r3, s15
 80082ba:	440b      	add	r3, r1
 80082bc:	4619      	mov	r1, r3
 80082be:	f7fd bd3d 	b.w	8005d3c <_ZN15Screen1ViewBaseC1Ev+0x22a0>
 80082c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80082c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80082ca:	ee17 3a10 	vmov	r3, s14
 80082ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80082d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80082d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80082da:	1e59      	subs	r1, r3, #1
 80082dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082e0:	ee17 3a90 	vmov	r3, s15
 80082e4:	440b      	add	r3, r1
 80082e6:	4619      	mov	r1, r3
 80082e8:	f7fd bd41 	b.w	8005d6e <_ZN15Screen1ViewBaseC1Ev+0x22d2>
 80082ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80082f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80082f4:	ee17 3a10 	vmov	r3, s14
 80082f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80082fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008300:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008304:	1e59      	subs	r1, r3, #1
 8008306:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800830a:	ee17 3a90 	vmov	r3, s15
 800830e:	440b      	add	r3, r1
 8008310:	4619      	mov	r1, r3
 8008312:	f7fd bd45 	b.w	8005da0 <_ZN15Screen1ViewBaseC1Ev+0x2304>
 8008316:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800831a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800831e:	ee17 3a10 	vmov	r3, s14
 8008322:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008326:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800832a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800832e:	1e59      	subs	r1, r3, #1
 8008330:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008334:	ee17 3a90 	vmov	r3, s15
 8008338:	440b      	add	r3, r1
 800833a:	4619      	mov	r1, r3
 800833c:	f7fd bd49 	b.w	8005dd2 <_ZN15Screen1ViewBaseC1Ev+0x2336>
 8008340:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008344:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008348:	ee17 3a10 	vmov	r3, s14
 800834c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008350:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008354:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008358:	1e59      	subs	r1, r3, #1
 800835a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800835e:	ee17 3a90 	vmov	r3, s15
 8008362:	440b      	add	r3, r1
 8008364:	4619      	mov	r1, r3
 8008366:	f7fd bd4d 	b.w	8005e04 <_ZN15Screen1ViewBaseC1Ev+0x2368>
 800836a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800836e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008372:	ee17 3a10 	vmov	r3, s14
 8008376:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800837a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800837e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008382:	1e59      	subs	r1, r3, #1
 8008384:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008388:	ee17 3a90 	vmov	r3, s15
 800838c:	440b      	add	r3, r1
 800838e:	4619      	mov	r1, r3
 8008390:	f7fd bd51 	b.w	8005e36 <_ZN15Screen1ViewBaseC1Ev+0x239a>
 8008394:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008398:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800839c:	ee17 3a10 	vmov	r3, s14
 80083a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083a4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083ac:	1e59      	subs	r1, r3, #1
 80083ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083b2:	ee17 3a90 	vmov	r3, s15
 80083b6:	440b      	add	r3, r1
 80083b8:	4619      	mov	r1, r3
 80083ba:	f7fd bd55 	b.w	8005e68 <_ZN15Screen1ViewBaseC1Ev+0x23cc>
 80083be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083c2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083c6:	ee17 3a10 	vmov	r3, s14
 80083ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083ce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083d6:	1e59      	subs	r1, r3, #1
 80083d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083dc:	ee17 3a90 	vmov	r3, s15
 80083e0:	440b      	add	r3, r1
 80083e2:	4619      	mov	r1, r3
 80083e4:	f7fd bd59 	b.w	8005e9a <_ZN15Screen1ViewBaseC1Ev+0x23fe>
 80083e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083f0:	ee17 3a10 	vmov	r3, s14
 80083f4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008400:	1e59      	subs	r1, r3, #1
 8008402:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008406:	ee17 3a90 	vmov	r3, s15
 800840a:	440b      	add	r3, r1
 800840c:	4619      	mov	r1, r3
 800840e:	f7fd bd5d 	b.w	8005ecc <_ZN15Screen1ViewBaseC1Ev+0x2430>
 8008412:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008416:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800841a:	ee17 3a10 	vmov	r3, s14
 800841e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008422:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008426:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800842a:	1e59      	subs	r1, r3, #1
 800842c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008430:	ee17 3a90 	vmov	r3, s15
 8008434:	440b      	add	r3, r1
 8008436:	4619      	mov	r1, r3
 8008438:	f7fd bd61 	b.w	8005efe <_ZN15Screen1ViewBaseC1Ev+0x2462>
 800843c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008440:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008444:	ee17 3a10 	vmov	r3, s14
 8008448:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800844c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008450:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008454:	1e59      	subs	r1, r3, #1
 8008456:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800845a:	ee17 3a90 	vmov	r3, s15
 800845e:	440b      	add	r3, r1
 8008460:	4619      	mov	r1, r3
 8008462:	f7fd bd65 	b.w	8005f30 <_ZN15Screen1ViewBaseC1Ev+0x2494>
 8008466:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800846a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800846e:	ee17 3a10 	vmov	r3, s14
 8008472:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008476:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800847a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800847e:	1e59      	subs	r1, r3, #1
 8008480:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008484:	ee17 3a90 	vmov	r3, s15
 8008488:	440b      	add	r3, r1
 800848a:	4619      	mov	r1, r3
 800848c:	f7fd bdb8 	b.w	8006000 <_ZN15Screen1ViewBaseC1Ev+0x2564>
 8008490:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008494:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008498:	ee17 3a10 	vmov	r3, s14
 800849c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084a8:	1e59      	subs	r1, r3, #1
 80084aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084ae:	ee17 3a90 	vmov	r3, s15
 80084b2:	440b      	add	r3, r1
 80084b4:	4619      	mov	r1, r3
 80084b6:	f7fd bdbc 	b.w	8006032 <_ZN15Screen1ViewBaseC1Ev+0x2596>
 80084ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084c2:	ee17 3a10 	vmov	r3, s14
 80084c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084d2:	1e59      	subs	r1, r3, #1
 80084d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084d8:	ee17 3a90 	vmov	r3, s15
 80084dc:	440b      	add	r3, r1
 80084de:	4619      	mov	r1, r3
 80084e0:	f7fd bdc0 	b.w	8006064 <_ZN15Screen1ViewBaseC1Ev+0x25c8>
 80084e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084ec:	ee17 3a10 	vmov	r3, s14
 80084f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084fc:	1e59      	subs	r1, r3, #1
 80084fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008502:	ee17 3a90 	vmov	r3, s15
 8008506:	440b      	add	r3, r1
 8008508:	4619      	mov	r1, r3
 800850a:	f7fd bdc4 	b.w	8006096 <_ZN15Screen1ViewBaseC1Ev+0x25fa>
 800850e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008512:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008516:	ee17 3a10 	vmov	r3, s14
 800851a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800851e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008522:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008526:	1e59      	subs	r1, r3, #1
 8008528:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800852c:	ee17 3a90 	vmov	r3, s15
 8008530:	440b      	add	r3, r1
 8008532:	4619      	mov	r1, r3
 8008534:	f7fd bdc8 	b.w	80060c8 <_ZN15Screen1ViewBaseC1Ev+0x262c>
 8008538:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800853c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008540:	ee17 3a10 	vmov	r3, s14
 8008544:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008548:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800854c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008550:	1e59      	subs	r1, r3, #1
 8008552:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008556:	ee17 3a90 	vmov	r3, s15
 800855a:	440b      	add	r3, r1
 800855c:	4619      	mov	r1, r3
 800855e:	f7fd bdcc 	b.w	80060fa <_ZN15Screen1ViewBaseC1Ev+0x265e>
 8008562:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008566:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800856a:	ee17 3a10 	vmov	r3, s14
 800856e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008572:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008576:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800857a:	1e59      	subs	r1, r3, #1
 800857c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008580:	ee17 3a90 	vmov	r3, s15
 8008584:	440b      	add	r3, r1
 8008586:	4619      	mov	r1, r3
 8008588:	f7fd bdd0 	b.w	800612c <_ZN15Screen1ViewBaseC1Ev+0x2690>
 800858c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008590:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008594:	ee17 3a10 	vmov	r3, s14
 8008598:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800859c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085a4:	1e59      	subs	r1, r3, #1
 80085a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085aa:	ee17 3a90 	vmov	r3, s15
 80085ae:	440b      	add	r3, r1
 80085b0:	4619      	mov	r1, r3
 80085b2:	f7fd bdd4 	b.w	800615e <_ZN15Screen1ViewBaseC1Ev+0x26c2>
 80085b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085be:	ee17 3a10 	vmov	r3, s14
 80085c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085ce:	1e59      	subs	r1, r3, #1
 80085d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085d4:	ee17 3a90 	vmov	r3, s15
 80085d8:	440b      	add	r3, r1
 80085da:	4619      	mov	r1, r3
 80085dc:	f7fd bdd8 	b.w	8006190 <_ZN15Screen1ViewBaseC1Ev+0x26f4>
 80085e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085e8:	ee17 3a10 	vmov	r3, s14
 80085ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085f8:	1e59      	subs	r1, r3, #1
 80085fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085fe:	ee17 3a90 	vmov	r3, s15
 8008602:	440b      	add	r3, r1
 8008604:	4619      	mov	r1, r3
 8008606:	f7fd bddc 	b.w	80061c2 <_ZN15Screen1ViewBaseC1Ev+0x2726>
 800860a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800860e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008612:	ee17 3a10 	vmov	r3, s14
 8008616:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800861a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800861e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008622:	1e59      	subs	r1, r3, #1
 8008624:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008628:	ee17 3a90 	vmov	r3, s15
 800862c:	440b      	add	r3, r1
 800862e:	4619      	mov	r1, r3
 8008630:	f7fd bde0 	b.w	80061f4 <_ZN15Screen1ViewBaseC1Ev+0x2758>
 8008634:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008638:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800863c:	ee17 3a10 	vmov	r3, s14
 8008640:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008644:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008648:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800864c:	1e59      	subs	r1, r3, #1
 800864e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008652:	ee17 3a90 	vmov	r3, s15
 8008656:	440b      	add	r3, r1
 8008658:	4619      	mov	r1, r3
 800865a:	f7fd bde4 	b.w	8006226 <_ZN15Screen1ViewBaseC1Ev+0x278a>
 800865e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008662:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008666:	ee17 3a10 	vmov	r3, s14
 800866a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800866e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008672:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008676:	1e59      	subs	r1, r3, #1
 8008678:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800867c:	ee17 3a90 	vmov	r3, s15
 8008680:	440b      	add	r3, r1
 8008682:	4619      	mov	r1, r3
 8008684:	f7fd bde8 	b.w	8006258 <_ZN15Screen1ViewBaseC1Ev+0x27bc>
 8008688:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800868c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008690:	ee17 3a10 	vmov	r3, s14
 8008694:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008698:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800869c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086a0:	1e59      	subs	r1, r3, #1
 80086a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086a6:	ee17 3a90 	vmov	r3, s15
 80086aa:	440b      	add	r3, r1
 80086ac:	4619      	mov	r1, r3
 80086ae:	f7fd bdec 	b.w	800628a <_ZN15Screen1ViewBaseC1Ev+0x27ee>
 80086b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086ba:	ee17 3a10 	vmov	r3, s14
 80086be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086ca:	1e59      	subs	r1, r3, #1
 80086cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086d0:	ee17 3a90 	vmov	r3, s15
 80086d4:	440b      	add	r3, r1
 80086d6:	4619      	mov	r1, r3
 80086d8:	f7fd bdf0 	b.w	80062bc <_ZN15Screen1ViewBaseC1Ev+0x2820>
 80086dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086e4:	ee17 3a10 	vmov	r3, s14
 80086e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086f4:	1e59      	subs	r1, r3, #1
 80086f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086fa:	ee17 3a90 	vmov	r3, s15
 80086fe:	440b      	add	r3, r1
 8008700:	4619      	mov	r1, r3
 8008702:	f7fd bdf4 	b.w	80062ee <_ZN15Screen1ViewBaseC1Ev+0x2852>
 8008706:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800870a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800870e:	ee17 3a10 	vmov	r3, s14
 8008712:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008716:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800871a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800871e:	1e59      	subs	r1, r3, #1
 8008720:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008724:	ee17 3a90 	vmov	r3, s15
 8008728:	440b      	add	r3, r1
 800872a:	4619      	mov	r1, r3
 800872c:	f7fd bdf8 	b.w	8006320 <_ZN15Screen1ViewBaseC1Ev+0x2884>
 8008730:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008734:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008738:	ee17 3a10 	vmov	r3, s14
 800873c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008740:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008744:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008748:	1e59      	subs	r1, r3, #1
 800874a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800874e:	ee17 3a90 	vmov	r3, s15
 8008752:	440b      	add	r3, r1
 8008754:	4619      	mov	r1, r3
 8008756:	f7fd bdfc 	b.w	8006352 <_ZN15Screen1ViewBaseC1Ev+0x28b6>
 800875a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800875e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008762:	ee17 3a10 	vmov	r3, s14
 8008766:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800876a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800876e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008772:	1e59      	subs	r1, r3, #1
 8008774:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008778:	ee17 3a90 	vmov	r3, s15
 800877c:	440b      	add	r3, r1
 800877e:	4619      	mov	r1, r3
 8008780:	f7fd be00 	b.w	8006384 <_ZN15Screen1ViewBaseC1Ev+0x28e8>
 8008784:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008788:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800878c:	ee17 3a10 	vmov	r3, s14
 8008790:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008794:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008798:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800879c:	1e59      	subs	r1, r3, #1
 800879e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087a2:	ee17 3a90 	vmov	r3, s15
 80087a6:	440b      	add	r3, r1
 80087a8:	4619      	mov	r1, r3
 80087aa:	f7fd be04 	b.w	80063b6 <_ZN15Screen1ViewBaseC1Ev+0x291a>
 80087ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087b6:	ee17 3a10 	vmov	r3, s14
 80087ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087c6:	1e59      	subs	r1, r3, #1
 80087c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087cc:	ee17 3a90 	vmov	r3, s15
 80087d0:	440b      	add	r3, r1
 80087d2:	4619      	mov	r1, r3
 80087d4:	f7fd be08 	b.w	80063e8 <_ZN15Screen1ViewBaseC1Ev+0x294c>
 80087d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087e0:	ee17 3a10 	vmov	r3, s14
 80087e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087f0:	1e59      	subs	r1, r3, #1
 80087f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087f6:	ee17 3a90 	vmov	r3, s15
 80087fa:	440b      	add	r3, r1
 80087fc:	4619      	mov	r1, r3
 80087fe:	f7fd be0c 	b.w	800641a <_ZN15Screen1ViewBaseC1Ev+0x297e>
 8008802:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008806:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800880a:	ee17 3a10 	vmov	r3, s14
 800880e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008812:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008816:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800881a:	1e59      	subs	r1, r3, #1
 800881c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008820:	ee17 3a90 	vmov	r3, s15
 8008824:	440b      	add	r3, r1
 8008826:	4619      	mov	r1, r3
 8008828:	f7fd be10 	b.w	800644c <_ZN15Screen1ViewBaseC1Ev+0x29b0>
 800882c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008830:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008834:	ee17 3a10 	vmov	r3, s14
 8008838:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800883c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008840:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008844:	1e59      	subs	r1, r3, #1
 8008846:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800884a:	ee17 3a90 	vmov	r3, s15
 800884e:	440b      	add	r3, r1
 8008850:	4619      	mov	r1, r3
 8008852:	f7fd be14 	b.w	800647e <_ZN15Screen1ViewBaseC1Ev+0x29e2>
 8008856:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800885a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800885e:	ee17 3a10 	vmov	r3, s14
 8008862:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008866:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800886a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800886e:	1e59      	subs	r1, r3, #1
 8008870:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008874:	ee17 3a90 	vmov	r3, s15
 8008878:	440b      	add	r3, r1
 800887a:	4619      	mov	r1, r3
 800887c:	f7fd be18 	b.w	80064b0 <_ZN15Screen1ViewBaseC1Ev+0x2a14>
 8008880:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008884:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008888:	ee17 3a10 	vmov	r3, s14
 800888c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008890:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008894:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008898:	1e59      	subs	r1, r3, #1
 800889a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800889e:	ee17 3a90 	vmov	r3, s15
 80088a2:	440b      	add	r3, r1
 80088a4:	4619      	mov	r1, r3
 80088a6:	f7fd be1c 	b.w	80064e2 <_ZN15Screen1ViewBaseC1Ev+0x2a46>
 80088aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088b2:	ee17 3a10 	vmov	r3, s14
 80088b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088c2:	1e59      	subs	r1, r3, #1
 80088c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088c8:	ee17 3a90 	vmov	r3, s15
 80088cc:	440b      	add	r3, r1
 80088ce:	4619      	mov	r1, r3
 80088d0:	f7fd be20 	b.w	8006514 <_ZN15Screen1ViewBaseC1Ev+0x2a78>
 80088d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088dc:	ee17 3a10 	vmov	r3, s14
 80088e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088ec:	1e59      	subs	r1, r3, #1
 80088ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088f2:	ee17 3a90 	vmov	r3, s15
 80088f6:	440b      	add	r3, r1
 80088f8:	4619      	mov	r1, r3
 80088fa:	f7fd be24 	b.w	8006546 <_ZN15Screen1ViewBaseC1Ev+0x2aaa>
 80088fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008902:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008906:	ee17 3a10 	vmov	r3, s14
 800890a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800890e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008912:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008916:	1e59      	subs	r1, r3, #1
 8008918:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800891c:	ee17 3a90 	vmov	r3, s15
 8008920:	440b      	add	r3, r1
 8008922:	4619      	mov	r1, r3
 8008924:	f7fd be28 	b.w	8006578 <_ZN15Screen1ViewBaseC1Ev+0x2adc>
 8008928:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800892c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008930:	ee17 3a10 	vmov	r3, s14
 8008934:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008938:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800893c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008940:	1e59      	subs	r1, r3, #1
 8008942:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008946:	ee17 3a90 	vmov	r3, s15
 800894a:	440b      	add	r3, r1
 800894c:	4619      	mov	r1, r3
 800894e:	f7fd be2c 	b.w	80065aa <_ZN15Screen1ViewBaseC1Ev+0x2b0e>
 8008952:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008956:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800895a:	ee17 3a10 	vmov	r3, s14
 800895e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008962:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008966:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800896a:	1e59      	subs	r1, r3, #1
 800896c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008970:	ee17 3a90 	vmov	r3, s15
 8008974:	440b      	add	r3, r1
 8008976:	4619      	mov	r1, r3
 8008978:	f7fd be30 	b.w	80065dc <_ZN15Screen1ViewBaseC1Ev+0x2b40>
 800897c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008980:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008984:	ee17 3a10 	vmov	r3, s14
 8008988:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800898c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008990:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008994:	1e59      	subs	r1, r3, #1
 8008996:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800899a:	ee17 3a90 	vmov	r3, s15
 800899e:	440b      	add	r3, r1
 80089a0:	4619      	mov	r1, r3
 80089a2:	f7fd be34 	b.w	800660e <_ZN15Screen1ViewBaseC1Ev+0x2b72>
 80089a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089ae:	ee17 3a10 	vmov	r3, s14
 80089b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089be:	1e59      	subs	r1, r3, #1
 80089c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089c4:	ee17 3a90 	vmov	r3, s15
 80089c8:	440b      	add	r3, r1
 80089ca:	4619      	mov	r1, r3
 80089cc:	f7fd be38 	b.w	8006640 <_ZN15Screen1ViewBaseC1Ev+0x2ba4>
 80089d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089d8:	ee17 3a10 	vmov	r3, s14
 80089dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089e8:	1e59      	subs	r1, r3, #1
 80089ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089ee:	ee17 3a90 	vmov	r3, s15
 80089f2:	440b      	add	r3, r1
 80089f4:	4619      	mov	r1, r3
 80089f6:	f7fd be3c 	b.w	8006672 <_ZN15Screen1ViewBaseC1Ev+0x2bd6>
 80089fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a02:	ee17 3a10 	vmov	r3, s14
 8008a06:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a0a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a12:	1e59      	subs	r1, r3, #1
 8008a14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a18:	ee17 3a90 	vmov	r3, s15
 8008a1c:	440b      	add	r3, r1
 8008a1e:	4619      	mov	r1, r3
 8008a20:	f7fd be40 	b.w	80066a4 <_ZN15Screen1ViewBaseC1Ev+0x2c08>
 8008a24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a28:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a2c:	ee17 3a10 	vmov	r3, s14
 8008a30:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a34:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a3c:	1e59      	subs	r1, r3, #1
 8008a3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a42:	ee17 3a90 	vmov	r3, s15
 8008a46:	440b      	add	r3, r1
 8008a48:	4619      	mov	r1, r3
 8008a4a:	f7fd be44 	b.w	80066d6 <_ZN15Screen1ViewBaseC1Ev+0x2c3a>
 8008a4e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a52:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a56:	ee17 3a10 	vmov	r3, s14
 8008a5a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a5e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a66:	1e59      	subs	r1, r3, #1
 8008a68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a6c:	ee17 3a90 	vmov	r3, s15
 8008a70:	440b      	add	r3, r1
 8008a72:	4619      	mov	r1, r3
 8008a74:	f7fd be48 	b.w	8006708 <_ZN15Screen1ViewBaseC1Ev+0x2c6c>
 8008a78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a7c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a80:	ee17 3a10 	vmov	r3, s14
 8008a84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a88:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a90:	1e59      	subs	r1, r3, #1
 8008a92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a96:	ee17 3a90 	vmov	r3, s15
 8008a9a:	440b      	add	r3, r1
 8008a9c:	4619      	mov	r1, r3
 8008a9e:	f7fd be4c 	b.w	800673a <_ZN15Screen1ViewBaseC1Ev+0x2c9e>
 8008aa2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008aa6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008aaa:	ee17 3a10 	vmov	r3, s14
 8008aae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008ab2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008ab6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008aba:	1e59      	subs	r1, r3, #1
 8008abc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ac0:	ee17 3a90 	vmov	r3, s15
 8008ac4:	440b      	add	r3, r1
 8008ac6:	4619      	mov	r1, r3
 8008ac8:	f7fd be50 	b.w	800676c <_ZN15Screen1ViewBaseC1Ev+0x2cd0>
 8008acc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ad0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008ad4:	ee17 3a10 	vmov	r3, s14
 8008ad8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008adc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008ae0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ae4:	1e59      	subs	r1, r3, #1
 8008ae6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008aea:	ee17 3a90 	vmov	r3, s15
 8008aee:	440b      	add	r3, r1
 8008af0:	4619      	mov	r1, r3
 8008af2:	f7fd be83 	b.w	80067fc <_ZN15Screen1ViewBaseC1Ev+0x2d60>
 8008af6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008afa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008afe:	ee17 3a10 	vmov	r3, s14
 8008b02:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b06:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b0e:	1e59      	subs	r1, r3, #1
 8008b10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b14:	ee17 3a90 	vmov	r3, s15
 8008b18:	440b      	add	r3, r1
 8008b1a:	4619      	mov	r1, r3
 8008b1c:	f7fd be87 	b.w	800682e <_ZN15Screen1ViewBaseC1Ev+0x2d92>
 8008b20:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b24:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b28:	ee17 3a10 	vmov	r3, s14
 8008b2c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b30:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b38:	1e59      	subs	r1, r3, #1
 8008b3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b3e:	ee17 3a90 	vmov	r3, s15
 8008b42:	440b      	add	r3, r1
 8008b44:	4619      	mov	r1, r3
 8008b46:	f7fd be8b 	b.w	8006860 <_ZN15Screen1ViewBaseC1Ev+0x2dc4>
 8008b4a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b4e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b52:	ee17 3a10 	vmov	r3, s14
 8008b56:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b5a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b62:	1e59      	subs	r1, r3, #1
 8008b64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b68:	ee17 3a90 	vmov	r3, s15
 8008b6c:	440b      	add	r3, r1
 8008b6e:	4619      	mov	r1, r3
 8008b70:	f7fd be8f 	b.w	8006892 <_ZN15Screen1ViewBaseC1Ev+0x2df6>

08008b74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008b74:	4770      	bx	lr
	...

08008b78 <_Z23getFont_verdana_10_4bppv>:
{
 8008b78:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008b7a:	4d15      	ldr	r5, [pc, #84]	; (8008bd0 <_Z23getFont_verdana_10_4bppv+0x58>)
 8008b7c:	782c      	ldrb	r4, [r5, #0]
 8008b7e:	f3bf 8f5b 	dmb	ish
 8008b82:	f014 0401 	ands.w	r4, r4, #1
{
 8008b86:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008b88:	d11e      	bne.n	8008bc8 <_Z23getFont_verdana_10_4bppv+0x50>
 8008b8a:	4628      	mov	r0, r5
 8008b8c:	f01c fed9 	bl	8025942 <__cxa_guard_acquire>
 8008b90:	b1d0      	cbz	r0, 8008bc8 <_Z23getFont_verdana_10_4bppv+0x50>
 8008b92:	233f      	movs	r3, #63	; 0x3f
 8008b94:	9307      	str	r3, [sp, #28]
 8008b96:	4b0f      	ldr	r3, [pc, #60]	; (8008bd4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8008b98:	9306      	str	r3, [sp, #24]
 8008b9a:	4b0f      	ldr	r3, [pc, #60]	; (8008bd8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008b9c:	490f      	ldr	r1, [pc, #60]	; (8008bdc <_Z23getFont_verdana_10_4bppv+0x64>)
 8008b9e:	4810      	ldr	r0, [pc, #64]	; (8008be0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008ba0:	9408      	str	r4, [sp, #32]
 8008ba2:	2201      	movs	r2, #1
 8008ba4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8008ba8:	2304      	movs	r3, #4
 8008baa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008bae:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8008bb2:	230a      	movs	r3, #10
 8008bb4:	9403      	str	r4, [sp, #12]
 8008bb6:	9400      	str	r4, [sp, #0]
 8008bb8:	f7fa f872 	bl	8002ca0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008bbc:	4809      	ldr	r0, [pc, #36]	; (8008be4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008bbe:	f01c ff0b 	bl	80259d8 <atexit>
 8008bc2:	4628      	mov	r0, r5
 8008bc4:	f01c fec9 	bl	802595a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008bc8:	4805      	ldr	r0, [pc, #20]	; (8008be0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008bca:	b00d      	add	sp, #52	; 0x34
 8008bcc:	bd30      	pop	{r4, r5, pc}
 8008bce:	bf00      	nop
 8008bd0:	20004c88 	.word	0x20004c88
 8008bd4:	080291a0 	.word	0x080291a0
 8008bd8:	080291e0 	.word	0x080291e0
 8008bdc:	900ee378 	.word	0x900ee378
 8008be0:	20004c8c 	.word	0x20004c8c
 8008be4:	08008b75 	.word	0x08008b75

08008be8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 25, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8008be8:	4770      	bx	lr
	...

08008bec <_Z23getFont_verdana_20_4bppv>:
{
 8008bec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 25, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8008bee:	4d15      	ldr	r5, [pc, #84]	; (8008c44 <_Z23getFont_verdana_20_4bppv+0x58>)
 8008bf0:	782c      	ldrb	r4, [r5, #0]
 8008bf2:	f3bf 8f5b 	dmb	ish
 8008bf6:	f014 0401 	ands.w	r4, r4, #1
{
 8008bfa:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 25, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8008bfc:	d11f      	bne.n	8008c3e <_Z23getFont_verdana_20_4bppv+0x52>
 8008bfe:	4628      	mov	r0, r5
 8008c00:	f01c fe9f 	bl	8025942 <__cxa_guard_acquire>
 8008c04:	b1d8      	cbz	r0, 8008c3e <_Z23getFont_verdana_20_4bppv+0x52>
 8008c06:	233f      	movs	r3, #63	; 0x3f
 8008c08:	9307      	str	r3, [sp, #28]
 8008c0a:	4b0f      	ldr	r3, [pc, #60]	; (8008c48 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8008c0c:	9306      	str	r3, [sp, #24]
 8008c0e:	4b0f      	ldr	r3, [pc, #60]	; (8008c4c <_Z23getFont_verdana_20_4bppv+0x60>)
 8008c10:	9305      	str	r3, [sp, #20]
 8008c12:	2301      	movs	r3, #1
 8008c14:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8008c18:	9302      	str	r3, [sp, #8]
 8008c1a:	2304      	movs	r3, #4
 8008c1c:	e9cd 3300 	strd	r3, r3, [sp]
 8008c20:	490b      	ldr	r1, [pc, #44]	; (8008c50 <_Z23getFont_verdana_20_4bppv+0x64>)
 8008c22:	480c      	ldr	r0, [pc, #48]	; (8008c54 <_Z23getFont_verdana_20_4bppv+0x68>)
 8008c24:	9408      	str	r4, [sp, #32]
 8008c26:	2314      	movs	r3, #20
 8008c28:	2219      	movs	r2, #25
 8008c2a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8008c2e:	f7fa f837 	bl	8002ca0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008c32:	4809      	ldr	r0, [pc, #36]	; (8008c58 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8008c34:	f01c fed0 	bl	80259d8 <atexit>
 8008c38:	4628      	mov	r0, r5
 8008c3a:	f01c fe8e 	bl	802595a <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8008c3e:	4805      	ldr	r0, [pc, #20]	; (8008c54 <_Z23getFont_verdana_20_4bppv+0x68>)
 8008c40:	b00d      	add	sp, #52	; 0x34
 8008c42:	bd30      	pop	{r4, r5, pc}
 8008c44:	20004cb4 	.word	0x20004cb4
 8008c48:	080291a4 	.word	0x080291a4
 8008c4c:	080291e4 	.word	0x080291e4
 8008c50:	900ee388 	.word	0x900ee388
 8008c54:	20004cb8 	.word	0x20004cb8
 8008c58:	08008be9 	.word	0x08008be9

08008c5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008c5c:	4770      	bx	lr
	...

08008c60 <_Z23getFont_verdana_40_4bppv>:
{
 8008c60:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008c62:	4d15      	ldr	r5, [pc, #84]	; (8008cb8 <_Z23getFont_verdana_40_4bppv+0x58>)
 8008c64:	782c      	ldrb	r4, [r5, #0]
 8008c66:	f3bf 8f5b 	dmb	ish
 8008c6a:	f014 0401 	ands.w	r4, r4, #1
{
 8008c6e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008c70:	d11e      	bne.n	8008cb0 <_Z23getFont_verdana_40_4bppv+0x50>
 8008c72:	4628      	mov	r0, r5
 8008c74:	f01c fe65 	bl	8025942 <__cxa_guard_acquire>
 8008c78:	b1d0      	cbz	r0, 8008cb0 <_Z23getFont_verdana_40_4bppv+0x50>
 8008c7a:	233f      	movs	r3, #63	; 0x3f
 8008c7c:	9307      	str	r3, [sp, #28]
 8008c7e:	4b0f      	ldr	r3, [pc, #60]	; (8008cbc <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008c80:	9306      	str	r3, [sp, #24]
 8008c82:	4b0f      	ldr	r3, [pc, #60]	; (8008cc0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008c84:	490f      	ldr	r1, [pc, #60]	; (8008cc4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008c86:	4810      	ldr	r0, [pc, #64]	; (8008cc8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008c88:	9408      	str	r4, [sp, #32]
 8008c8a:	2201      	movs	r2, #1
 8008c8c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8008c90:	2304      	movs	r3, #4
 8008c92:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008c96:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8008c9a:	2328      	movs	r3, #40	; 0x28
 8008c9c:	9403      	str	r4, [sp, #12]
 8008c9e:	9400      	str	r4, [sp, #0]
 8008ca0:	f7f9 fffe 	bl	8002ca0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008ca4:	4809      	ldr	r0, [pc, #36]	; (8008ccc <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008ca6:	f01c fe97 	bl	80259d8 <atexit>
 8008caa:	4628      	mov	r0, r5
 8008cac:	f01c fe55 	bl	802595a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008cb0:	4805      	ldr	r0, [pc, #20]	; (8008cc8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008cb2:	b00d      	add	sp, #52	; 0x34
 8008cb4:	bd30      	pop	{r4, r5, pc}
 8008cb6:	bf00      	nop
 8008cb8:	20004ce0 	.word	0x20004ce0
 8008cbc:	080291dc 	.word	0x080291dc
 8008cc0:	080291e8 	.word	0x080291e8
 8008cc4:	900ee4e8 	.word	0x900ee4e8
 8008cc8:	20004ce4 	.word	0x20004ce4
 8008ccc:	08008c5d 	.word	0x08008c5d

08008cd0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008cd0:	2000      	movs	r0, #0
 8008cd2:	4770      	bx	lr

08008cd4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008cd4:	2000      	movs	r0, #0
 8008cd6:	4770      	bx	lr

08008cd8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008cd8:	b40e      	push	{r1, r2, r3}
 8008cda:	b503      	push	{r0, r1, lr}
 8008cdc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008cde:	2100      	movs	r1, #0
{
 8008ce0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008ce4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008ce6:	f00e fb2d 	bl	8017344 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008cea:	b002      	add	sp, #8
 8008cec:	f85d eb04 	ldr.w	lr, [sp], #4
 8008cf0:	b003      	add	sp, #12
 8008cf2:	4770      	bx	lr

08008cf4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008cf4:	b40c      	push	{r2, r3}
 8008cf6:	b507      	push	{r0, r1, r2, lr}
 8008cf8:	ab04      	add	r3, sp, #16
 8008cfa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008cfe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008d00:	f00e fb20 	bl	8017344 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008d04:	b003      	add	sp, #12
 8008d06:	f85d eb04 	ldr.w	lr, [sp], #4
 8008d0a:	b002      	add	sp, #8
 8008d0c:	4770      	bx	lr
	...

08008d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008d10:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008d12:	b510      	push	{r4, lr}
 8008d14:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008d16:	b373      	cbz	r3, 8008d76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008d18:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008d1a:	b92b      	cbnz	r3, 8008d28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008d1c:	4b18      	ldr	r3, [pc, #96]	; (8008d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008d1e:	4a19      	ldr	r2, [pc, #100]	; (8008d84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008d20:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008d22:	4819      	ldr	r0, [pc, #100]	; (8008d88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008d24:	f01c fe3a 	bl	802599c <__assert_func>
            return buffer[pos];
 8008d28:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008d2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008d2e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008d30:	b30b      	cbz	r3, 8008d76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008d32:	f00f fe90 	bl	8018a56 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008d36:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008d38:	2b01      	cmp	r3, #1
 8008d3a:	d803      	bhi.n	8008d44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008d3c:	4b13      	ldr	r3, [pc, #76]	; (8008d8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008d3e:	4a14      	ldr	r2, [pc, #80]	; (8008d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008d40:	21c5      	movs	r1, #197	; 0xc5
 8008d42:	e7ee      	b.n	8008d22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008d44:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008d46:	1c53      	adds	r3, r2, #1
 8008d48:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008d4a:	2b09      	cmp	r3, #9
 8008d4c:	4619      	mov	r1, r3
 8008d4e:	bf88      	it	hi
 8008d50:	f1a3 010a 	subhi.w	r1, r3, #10
 8008d54:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008d58:	f640 103f 	movw	r0, #2367	; 0x93f
 8008d5c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008d5e:	4281      	cmp	r1, r0
 8008d60:	d109      	bne.n	8008d76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008d62:	2b0a      	cmp	r3, #10
 8008d64:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008d68:	bf28      	it	cs
 8008d6a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008d6c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008d70:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008d72:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008d74:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008d76:	4620      	mov	r0, r4
}
 8008d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008d7c:	f00f bd6e 	b.w	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008d80:	08027e14 	.word	0x08027e14
 8008d84:	08027e1d 	.word	0x08027e1d
 8008d88:	08027ec8 	.word	0x08027ec8
 8008d8c:	08027f12 	.word	0x08027f12
 8008d90:	08027f20 	.word	0x08027f20

08008d94 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008d94:	f00f bd29 	b.w	80187ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008d98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008d98:	b510      	push	{r4, lr}
 8008d9a:	b086      	sub	sp, #24
 8008d9c:	ac02      	add	r4, sp, #8
 8008d9e:	e884 0006 	stmia.w	r4, {r1, r2}
 8008da2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008da4:	ab0a      	add	r3, sp, #40	; 0x28
 8008da6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008da8:	9301      	str	r3, [sp, #4]
 8008daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008dac:	9300      	str	r3, [sp, #0]
 8008dae:	4621      	mov	r1, r4
 8008db0:	9b08      	ldr	r3, [sp, #32]
 8008db2:	f00c ffb0 	bl	8015d16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008db6:	b006      	add	sp, #24
 8008db8:	bd10      	pop	{r4, pc}
	...

08008dbc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008dbc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008dbe:	bb18      	cbnz	r0, 8008e08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008dc0:	4b12      	ldr	r3, [pc, #72]	; (8008e0c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008dc2:	4813      	ldr	r0, [pc, #76]	; (8008e10 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	4913      	ldr	r1, [pc, #76]	; (8008e14 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008dc8:	b1b3      	cbz	r3, 8008df8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008dca:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008dcc:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008dce:	441a      	add	r2, r3
 8008dd0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008dd2:	685a      	ldr	r2, [r3, #4]
 8008dd4:	441a      	add	r2, r3
 8008dd6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008dd8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008dda:	4b0f      	ldr	r3, [pc, #60]	; (8008e18 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008ddc:	2200      	movs	r2, #0
 8008dde:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008de0:	f000 f838 	bl	8008e54 <_ZN17TypedTextDatabase8getFontsEv>
 8008de4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008de6:	f000 f833 	bl	8008e50 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008dea:	4b0c      	ldr	r3, [pc, #48]	; (8008e1c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008dec:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008dee:	4b0c      	ldr	r3, [pc, #48]	; (8008e20 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008df0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008df2:	4b0c      	ldr	r3, [pc, #48]	; (8008e24 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008df4:	8018      	strh	r0, [r3, #0]
    }
}
 8008df6:	e007      	b.n	8008e08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008df8:	4b0b      	ldr	r3, [pc, #44]	; (8008e28 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008dfa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008dfc:	4b0b      	ldr	r3, [pc, #44]	; (8008e2c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008dfe:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008e00:	4b0b      	ldr	r3, [pc, #44]	; (8008e30 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008e02:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008e04:	2c00      	cmp	r4, #0
 8008e06:	d1e8      	bne.n	8008dda <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008e08:	bd38      	pop	{r3, r4, r5, pc}
 8008e0a:	bf00      	nop
 8008e0c:	20004d0c 	.word	0x20004d0c
 8008e10:	20004d10 	.word	0x20004d10
 8008e14:	20004d14 	.word	0x20004d14
 8008e18:	20004d18 	.word	0x20004d18
 8008e1c:	2000dccc 	.word	0x2000dccc
 8008e20:	2000dcd4 	.word	0x2000dcd4
 8008e24:	2000dcd0 	.word	0x2000dcd0
 8008e28:	900ee514 	.word	0x900ee514
 8008e2c:	900ee4f8 	.word	0x900ee4f8
 8008e30:	900ee558 	.word	0x900ee558

08008e34 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008e34:	4b04      	ldr	r3, [pc, #16]	; (8008e48 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008e36:	681b      	ldr	r3, [r3, #0]
 8008e38:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008e3c:	4b03      	ldr	r3, [pc, #12]	; (8008e4c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008e3e:	681b      	ldr	r3, [r3, #0]
}
 8008e40:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008e44:	4770      	bx	lr
 8008e46:	bf00      	nop
 8008e48:	20004d14 	.word	0x20004d14
 8008e4c:	20004d10 	.word	0x20004d10

08008e50 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008e50:	2007      	movs	r0, #7
 8008e52:	4770      	bx	lr

08008e54 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008e54:	4800      	ldr	r0, [pc, #0]	; (8008e58 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008e56:	4770      	bx	lr
 8008e58:	20004d1c 	.word	0x20004d1c

08008e5c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008e5c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8008e5e:	f7ff fec5 	bl	8008bec <_Z23getFont_verdana_20_4bppv>
};
 8008e62:	4c04      	ldr	r4, [pc, #16]	; (8008e74 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8008e64:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008e66:	f7ff fefb 	bl	8008c60 <_Z23getFont_verdana_40_4bppv>
};
 8008e6a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8008e6c:	f7ff fe84 	bl	8008b78 <_Z23getFont_verdana_10_4bppv>
};
 8008e70:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8008e72:	bd10      	pop	{r4, pc}
 8008e74:	20004d1c 	.word	0x20004d1c

08008e78 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 8008e78:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8008e7a:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8008e7c:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8008e7e:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8008e80:	466d      	mov	r5, sp
 8008e82:	4601      	mov	r1, r0
 8008e84:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8008e88:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8008e8a:	4628      	mov	r0, r5
 8008e8c:	4798      	blx	r3
 8008e8e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008e92:	343c      	adds	r4, #60	; 0x3c
 8008e94:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8008e98:	b005      	add	sp, #20
 8008e9a:	bd30      	pop	{r4, r5, pc}

08008e9c <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 8008e9c:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8008e9e:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8008ea0:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8008ea2:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8008ea4:	466d      	mov	r5, sp
 8008ea6:	4601      	mov	r1, r0
 8008ea8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8008eac:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8008eae:	4628      	mov	r0, r5
 8008eb0:	4798      	blx	r3
 8008eb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008eb6:	343c      	adds	r4, #60	; 0x3c
 8008eb8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8008ebc:	b005      	add	sp, #20
 8008ebe:	bd30      	pop	{r4, r5, pc}

08008ec0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8008ec0:	2200      	movs	r2, #0
 8008ec2:	8002      	strh	r2, [r0, #0]
 8008ec4:	8042      	strh	r2, [r0, #2]
 8008ec6:	8082      	strh	r2, [r0, #4]
 8008ec8:	80c2      	strh	r2, [r0, #6]
    }
 8008eca:	4770      	bx	lr

08008ecc <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 8008ecc:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8008ed0:	4770      	bx	lr

08008ed2 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008ed2:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8008ed4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008ed6:	4604      	mov	r4, r0
        setX(x);
 8008ed8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008eda:	4615      	mov	r5, r2
        setX(x);
 8008edc:	4798      	blx	r3
        setBaselineY(baselineY);
 8008ede:	6823      	ldr	r3, [r4, #0]
 8008ee0:	4629      	mov	r1, r5
 8008ee2:	4620      	mov	r0, r4
 8008ee4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8008ee6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8008eea:	4718      	bx	r3

08008eec <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
 8008eec:	2000      	movs	r0, #0
 8008eee:	4770      	bx	lr

08008ef0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8008ef0:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8008ef2:	4770      	bx	lr

08008ef4 <_ZN14infoWidgetBaseD1Ev>:
}

infoWidgetBase::~infoWidgetBase()
{

}
 8008ef4:	4770      	bx	lr

08008ef6 <_ZN14infoWidgetBase10initializeEv>:

void infoWidgetBase::initialize()
{

}
 8008ef6:	4770      	bx	lr

08008ef8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8008ef8:	4770      	bx	lr

08008efa <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8008efa:	b510      	push	{r4, lr}
 8008efc:	214c      	movs	r1, #76	; 0x4c
 8008efe:	4604      	mov	r4, r0
 8008f00:	f01c fd1d 	bl	802593e <_ZdlPvj>
 8008f04:	4620      	mov	r0, r4
 8008f06:	bd10      	pop	{r4, pc}

08008f08 <_ZN14infoWidgetBaseD0Ev>:
infoWidgetBase::~infoWidgetBase()
 8008f08:	b510      	push	{r4, lr}
}
 8008f0a:	21b8      	movs	r1, #184	; 0xb8
infoWidgetBase::~infoWidgetBase()
 8008f0c:	4604      	mov	r4, r0
}
 8008f0e:	f01c fd16 	bl	802593e <_ZdlPvj>
 8008f12:	4620      	mov	r0, r4
 8008f14:	bd10      	pop	{r4, pc}
	...

08008f18 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8008f18:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8008f1a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8008f1c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008f1e:	4b12      	ldr	r3, [pc, #72]	; (8008f68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8008f20:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8008f22:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8008f24:	b28d      	uxth	r5, r1
 8008f26:	b92b      	cbnz	r3, 8008f34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8008f28:	4b10      	ldr	r3, [pc, #64]	; (8008f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8008f2a:	4a11      	ldr	r2, [pc, #68]	; (8008f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8008f2c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008f2e:	4811      	ldr	r0, [pc, #68]	; (8008f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8008f30:	f01c fd34 	bl	802599c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008f34:	4910      	ldr	r1, [pc, #64]	; (8008f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8008f36:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008f38:	8809      	ldrh	r1, [r1, #0]
 8008f3a:	4291      	cmp	r1, r2
 8008f3c:	d803      	bhi.n	8008f46 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8008f3e:	4b0f      	ldr	r3, [pc, #60]	; (8008f7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8008f40:	4a0b      	ldr	r2, [pc, #44]	; (8008f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8008f42:	216d      	movs	r1, #109	; 0x6d
 8008f44:	e7f3      	b.n	8008f2e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8008f46:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8008f4a:	4b0d      	ldr	r3, [pc, #52]	; (8008f80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008f52:	6803      	ldr	r3, [r0, #0]
 8008f54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f56:	4798      	blx	r3
 8008f58:	1a28      	subs	r0, r5, r0
 8008f5a:	b201      	sxth	r1, r0
 8008f5c:	4633      	mov	r3, r6
 8008f5e:	4620      	mov	r0, r4
    }
 8008f60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8008f64:	4718      	bx	r3
 8008f66:	bf00      	nop
 8008f68:	2000dccc 	.word	0x2000dccc
 8008f6c:	08027923 	.word	0x08027923
 8008f70:	08027965 	.word	0x08027965
 8008f74:	080279a0 	.word	0x080279a0
 8008f78:	2000dcd0 	.word	0x2000dcd0
 8008f7c:	08027ff2 	.word	0x08027ff2
 8008f80:	2000dcd4 	.word	0x2000dcd4

08008f84 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8008f84:	2200      	movs	r2, #0
 8008f86:	f04f 31ff 	mov.w	r1, #4294967295
 8008f8a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8008f8e:	6082      	str	r2, [r0, #8]
    }
 8008f90:	4770      	bx	lr
	...

08008f94 <_ZN14infoWidgetBaseC1Ev>:
infoWidgetBase::infoWidgetBase()
 8008f94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f98:	4606      	mov	r6, r0
 8008f9a:	2500      	movs	r5, #0
 8008f9c:	4b52      	ldr	r3, [pc, #328]	; (80090e8 <_ZN14infoWidgetBaseC1Ev+0x154>)
          firstChild(0)
 8008f9e:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8008fa0:	f44f 7880 	mov.w	r8, #256	; 0x100
 8008fa4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8008fa8:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8008fac:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8008fb0:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8008fb4:	f8a0 8024 	strh.w	r8, [r0, #36]	; 0x24
 8008fb8:	f846 3b2c 	str.w	r3, [r6], #44
 8008fbc:	b089      	sub	sp, #36	; 0x24
 8008fbe:	4604      	mov	r4, r0
 8008fc0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8008fc4:	a906      	add	r1, sp, #24
 8008fc6:	4630      	mov	r0, r6
 8008fc8:	f8ad 9018 	strh.w	r9, [sp, #24]
 8008fcc:	f009 ff1a 	bl	8012e04 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8008fd0:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8008fd4:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
        : TextAreaWithWildcardBase(), wc1(0)
 8008fd8:	4b44      	ldr	r3, [pc, #272]	; (80090ec <_ZN14infoWidgetBaseC1Ev+0x158>)
 8008fda:	65a3      	str	r3, [r4, #88]	; 0x58
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8008fdc:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8008fe0:	e9c4 3526 	strd	r3, r5, [r4, #152]	; 0x98
 8008fe4:	f8a4 807c 	strh.w	r8, [r4, #124]	; 0x7c
        rect.width = width;
 8008fe8:	4b41      	ldr	r3, [pc, #260]	; (80090f0 <_ZN14infoWidgetBaseC1Ev+0x15c>)
        : typedTextId(id)
 8008fea:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8009114 <_ZN14infoWidgetBaseC1Ev+0x180>
 8008fee:	f8a4 9084 	strh.w	r9, [r4, #132]	; 0x84
        : x(0), y(0), width(0), height(0)
 8008ff2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8008ff6:	e9c4 5519 	strd	r5, r5, [r4, #100]	; 0x64
          visible(true)
 8008ffa:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
 8008ffe:	e9c4 551d 	strd	r5, r5, [r4, #116]	; 0x74
        : color(col)
 8009002:	f8c4 5088 	str.w	r5, [r4, #136]	; 0x88
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009006:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800900a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 800900e:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
        rect.width = width;
 8009012:	60a3      	str	r3, [r4, #8]
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_RE_MARK_INACTIVE_ID));
 8009014:	a906      	add	r1, sp, #24
 8009016:	2303      	movs	r3, #3
 8009018:	4630      	mov	r0, r6
    scalableImage1.setPosition(0, 0, 89, 44);
 800901a:	f04f 092c 	mov.w	r9, #44	; 0x2c
 800901e:	f8c4 8080 	str.w	r8, [r4, #128]	; 0x80
 8009022:	f8ad 3018 	strh.w	r3, [sp, #24]
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_RE_MARK_INACTIVE_ID));
 8009026:	f00a fe58 	bl	8013cda <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 89, 44);
 800902a:	462a      	mov	r2, r5
 800902c:	2359      	movs	r3, #89	; 0x59
 800902e:	4629      	mov	r1, r5
 8009030:	4630      	mov	r0, r6
 8009032:	f8cd 9000 	str.w	r9, [sp]
 8009036:	f7fa fbdd 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
infoWidgetBase::infoWidgetBase()
 800903a:	f104 0758 	add.w	r7, r4, #88	; 0x58
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800903e:	4629      	mov	r1, r5
 8009040:	4630      	mov	r0, r6
 8009042:	f009 fea6 	bl	8012d92 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    textArea1.setPosition(7, 10, 74, 44);
 8009046:	220a      	movs	r2, #10
 8009048:	234a      	movs	r3, #74	; 0x4a
 800904a:	2107      	movs	r1, #7
 800904c:	4638      	mov	r0, r7
 800904e:	f8cd 9000 	str.w	r9, [sp]
 8009052:	f7fa fbcf 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8009056:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800905a:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
        boundingArea = calculateBoundingArea();
 800905e:	6da3      	ldr	r3, [r4, #88]	; 0x58
        linespace = space;
 8009060:	f8a4 508c 	strh.w	r5, [r4, #140]	; 0x8c
        boundingArea = calculateBoundingArea();
 8009064:	ad02      	add	r5, sp, #8
 8009066:	4628      	mov	r0, r5
 8009068:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800906c:	4639      	mov	r1, r7
 800906e:	4798      	blx	r3
 8009070:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009074:	f104 0394 	add.w	r3, r4, #148	; 0x94
 8009078:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800907c:	4b1d      	ldr	r3, [pc, #116]	; (80090f4 <_ZN14infoWidgetBaseC1Ev+0x160>)
 800907e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CSJJ).getText());
 8009080:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8009084:	b92b      	cbnz	r3, 8009092 <_ZN14infoWidgetBaseC1Ev+0xfe>
 8009086:	4b1c      	ldr	r3, [pc, #112]	; (80090f8 <_ZN14infoWidgetBaseC1Ev+0x164>)
 8009088:	4a1c      	ldr	r2, [pc, #112]	; (80090fc <_ZN14infoWidgetBaseC1Ev+0x168>)
 800908a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800908c:	481c      	ldr	r0, [pc, #112]	; (8009100 <_ZN14infoWidgetBaseC1Ev+0x16c>)
 800908e:	f01c fc85 	bl	802599c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009092:	4b1c      	ldr	r3, [pc, #112]	; (8009104 <_ZN14infoWidgetBaseC1Ev+0x170>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009094:	881b      	ldrh	r3, [r3, #0]
 8009096:	2b04      	cmp	r3, #4
 8009098:	d803      	bhi.n	80090a2 <_ZN14infoWidgetBaseC1Ev+0x10e>
 800909a:	4b1b      	ldr	r3, [pc, #108]	; (8009108 <_ZN14infoWidgetBaseC1Ev+0x174>)
 800909c:	4a17      	ldr	r2, [pc, #92]	; (80090fc <_ZN14infoWidgetBaseC1Ev+0x168>)
 800909e:	2161      	movs	r1, #97	; 0x61
 80090a0:	e7f4      	b.n	800908c <_ZN14infoWidgetBaseC1Ev+0xf8>
        return texts->getText(typedTextId);
 80090a2:	4b1a      	ldr	r3, [pc, #104]	; (800910c <_ZN14infoWidgetBaseC1Ev+0x178>)
 80090a4:	2104      	movs	r1, #4
 80090a6:	6818      	ldr	r0, [r3, #0]
 80090a8:	f7ff fec4 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 80090ac:	4a18      	ldr	r2, [pc, #96]	; (8009110 <_ZN14infoWidgetBaseC1Ev+0x17c>)
 80090ae:	4603      	mov	r3, r0
 80090b0:	210a      	movs	r1, #10
 80090b2:	4628      	mov	r0, r5
 80090b4:	f010 fa7e 	bl	80195b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80090b8:	2305      	movs	r3, #5
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6CTR));
 80090ba:	a906      	add	r1, sp, #24
 80090bc:	4638      	mov	r0, r7
        wc1 = value;
 80090be:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
 80090c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80090c6:	f8cd 8018 	str.w	r8, [sp, #24]
 80090ca:	f00a fbff 	bl	80138cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(scalableImage1);
 80090ce:	4631      	mov	r1, r6
 80090d0:	4620      	mov	r0, r4
 80090d2:	f007 f84d 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 80090d6:	4620      	mov	r0, r4
 80090d8:	4639      	mov	r1, r7
 80090da:	f007 f849 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80090de:	4620      	mov	r0, r4
 80090e0:	b009      	add	sp, #36	; 0x24
 80090e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80090e6:	bf00      	nop
 80090e8:	08028104 	.word	0x08028104
 80090ec:	08028074 	.word	0x08028074
 80090f0:	002c0060 	.word	0x002c0060
 80090f4:	2000dccc 	.word	0x2000dccc
 80090f8:	08027923 	.word	0x08027923
 80090fc:	08028030 	.word	0x08028030
 8009100:	080279a0 	.word	0x080279a0
 8009104:	2000dcd0 	.word	0x2000dcd0
 8009108:	08027ff2 	.word	0x08027ff2
 800910c:	2000dcd8 	.word	0x2000dcd8
 8009110:	08028068 	.word	0x08028068
 8009114:	08027304 	.word	0x08027304

08009118 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009118:	4770      	bx	lr

0800911a <_ZN19FrontendApplicationD0Ev>:
 800911a:	b510      	push	{r4, lr}
 800911c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8009120:	4604      	mov	r4, r0
 8009122:	f01c fc0c 	bl	802593e <_ZdlPvj>
 8009126:	4620      	mov	r0, r4
 8009128:	bd10      	pop	{r4, pc}

0800912a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800912a:	b510      	push	{r4, lr}
 800912c:	4604      	mov	r4, r0
    {
        model.tick();
 800912e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8009132:	f000 f815 	bl	8009160 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009136:	4620      	mov	r0, r4
    }
 8009138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800913c:	f00d b980 	b.w	8016440 <_ZN8touchgfx11Application15handleTickEventEv>

08009140 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009140:	b510      	push	{r4, lr}
 8009142:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009144:	f7f9 fd3a 	bl	8002bbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009148:	4b01      	ldr	r3, [pc, #4]	; (8009150 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800914a:	6023      	str	r3, [r4, #0]
{

}
 800914c:	4620      	mov	r0, r4
 800914e:	bd10      	pop	{r4, pc}
 8009150:	08028198 	.word	0x08028198

08009154 <_ZN5ModelC1Ev>:
#include "stm32f4xx_hal.h"

extern __IO uint16_t uhADCxConvertedData;
float voltage;

Model::Model() : modelListener(0)
 8009154:	2200      	movs	r2, #0
 8009156:	6002      	str	r2, [r0, #0]
{

}
 8009158:	4770      	bx	lr
 800915a:	0000      	movs	r0, r0
 800915c:	0000      	movs	r0, r0
	...

08009160 <_ZN5Model4tickEv>:

void Model::tick()
{
	voltage = uhADCxConvertedData*3.3/4096;
 8009160:	4b0f      	ldr	r3, [pc, #60]	; (80091a0 <_ZN5Model4tickEv+0x40>)
{
 8009162:	b510      	push	{r4, lr}
 8009164:	4604      	mov	r4, r0
	voltage = uhADCxConvertedData*3.3/4096;
 8009166:	8818      	ldrh	r0, [r3, #0]
 8009168:	b280      	uxth	r0, r0
 800916a:	f7f7 fb15 	bl	8000798 <__aeabi_i2d>
 800916e:	a30a      	add	r3, pc, #40	; (adr r3, 8009198 <_ZN5Model4tickEv+0x38>)
 8009170:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009174:	f7f7 f894 	bl	80002a0 <__aeabi_dmul>
 8009178:	4b0a      	ldr	r3, [pc, #40]	; (80091a4 <_ZN5Model4tickEv+0x44>)
 800917a:	2200      	movs	r2, #0
 800917c:	f7f7 f890 	bl	80002a0 <__aeabi_dmul>
 8009180:	f7f7 fb74 	bl	800086c <__aeabi_d2f>
 8009184:	4b08      	ldr	r3, [pc, #32]	; (80091a8 <_ZN5Model4tickEv+0x48>)
 8009186:	ee00 0a10 	vmov	s0, r0
 800918a:	6018      	str	r0, [r3, #0]
	modelListener->UpdateGraph(voltage);
 800918c:	6820      	ldr	r0, [r4, #0]
 800918e:	6803      	ldr	r3, [r0, #0]
}
 8009190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	modelListener->UpdateGraph(voltage);
 8009194:	689b      	ldr	r3, [r3, #8]
 8009196:	4718      	bx	r3
 8009198:	66666666 	.word	0x66666666
 800919c:	400a6666 	.word	0x400a6666
 80091a0:	20004c30 	.word	0x20004c30
 80091a4:	3f300000 	.word	0x3f300000
 80091a8:	20004d28 	.word	0x20004d28

080091ac <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80091ac:	4770      	bx	lr

080091ae <_ZThn4_N16Screen1PresenterD1Ev>:
 80091ae:	3804      	subs	r0, #4
 80091b0:	4770      	bx	lr

080091b2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80091b2:	4770      	bx	lr

080091b4 <_ZN16Screen1PresenterD0Ev>:
 80091b4:	b510      	push	{r4, lr}
 80091b6:	2110      	movs	r1, #16
 80091b8:	4604      	mov	r4, r0
 80091ba:	f01c fbc0 	bl	802593e <_ZdlPvj>
 80091be:	4620      	mov	r0, r4
 80091c0:	bd10      	pop	{r4, pc}

080091c2 <_ZThn4_N16Screen1PresenterD0Ev>:
 80091c2:	f1a0 0004 	sub.w	r0, r0, #4
 80091c6:	e7f5      	b.n	80091b4 <_ZN16Screen1PresenterD0Ev>

080091c8 <_ZN16Screen1Presenter11UpdateGraphEf>:

}

void Screen1Presenter::UpdateGraph(float value)
{
	view.UpdateGraph(value);
 80091c8:	68c0      	ldr	r0, [r0, #12]
 80091ca:	f000 b8d7 	b.w	800937c <_ZN11Screen1View11UpdateGraphEf>

080091ce <_ZThn4_N16Screen1Presenter11UpdateGraphEf>:
    void UpdateGraph(float value);
 80091ce:	f1a0 0004 	sub.w	r0, r0, #4
 80091d2:	f7ff bff9 	b.w	80091c8 <_ZN16Screen1Presenter11UpdateGraphEf>
	...

080091d8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80091d8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80091da:	2200      	movs	r2, #0
 80091dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80091de:	4a04      	ldr	r2, [pc, #16]	; (80091f0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80091e0:	60c1      	str	r1, [r0, #12]
 80091e2:	f102 0408 	add.w	r4, r2, #8
 80091e6:	3224      	adds	r2, #36	; 0x24
 80091e8:	6004      	str	r4, [r0, #0]
 80091ea:	6042      	str	r2, [r0, #4]
}
 80091ec:	bd10      	pop	{r4, pc}
 80091ee:	bf00      	nop
 80091f0:	080281dc 	.word	0x080281dc

080091f4 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80091f4:	4770      	bx	lr

080091f6 <_ZN11Screen1View18ResetButtonClickedEv>:
	infoWidget1.updateString(dynamicGraph1.indexToDataPointYAsFloat(index));
}

void Screen1View::ResetButtonClicked()
{
	dynamicGraph1.clear();
 80091f6:	3098      	adds	r0, #152	; 0x98
 80091f8:	f009 bd7a 	b.w	8012cf0 <_ZN8touchgfx15GraphScrollData5clearEv>

080091fc <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80091fc:	b510      	push	{r4, lr}
 80091fe:	4b06      	ldr	r3, [pc, #24]	; (8009218 <_ZN11Screen1ViewD1Ev+0x1c>)
 8009200:	6003      	str	r3, [r0, #0]
 8009202:	4b06      	ldr	r3, [pc, #24]	; (800921c <_ZN11Screen1ViewD1Ev+0x20>)
 8009204:	f8c0 3664 	str.w	r3, [r0, #1636]	; 0x664
 8009208:	4604      	mov	r4, r0
 800920a:	f200 6064 	addw	r0, r0, #1636	; 0x664
 800920e:	f7ff fe71 	bl	8008ef4 <_ZN14infoWidgetBaseD1Ev>
 8009212:	4620      	mov	r0, r4
 8009214:	bd10      	pop	{r4, pc}
 8009216:	bf00      	nop
 8009218:	08027dcc 	.word	0x08027dcc
 800921c:	0802826c 	.word	0x0802826c

08009220 <_ZN11Screen1ViewD0Ev>:
 8009220:	b510      	push	{r4, lr}
 8009222:	4604      	mov	r4, r0
 8009224:	f7ff ffea 	bl	80091fc <_ZN11Screen1ViewD1Ev>
 8009228:	4620      	mov	r0, r4
 800922a:	f243 71dc 	movw	r1, #14300	; 0x37dc
 800922e:	f01c fb86 	bl	802593e <_ZdlPvj>
 8009232:	4620      	mov	r0, r4
 8009234:	bd10      	pop	{r4, pc}

08009236 <_ZN11Screen1View16XupButtonClickedEv>:
}

void Screen1View::XupButtonClicked()
{
 8009236:	b510      	push	{r4, lr}
	XRange +=5;
 8009238:	f500 5440 	add.w	r4, r0, #12288	; 0x3000
	dynamicGraph1.setGraphRangeX(0,XRange);
 800923c:	2100      	movs	r1, #0
	XRange +=5;
 800923e:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 8009242:	3205      	adds	r2, #5
 8009244:	f8c4 27d8 	str.w	r2, [r4, #2008]	; 0x7d8
	dynamicGraph1.setGraphRangeX(0,XRange);
 8009248:	3098      	adds	r0, #152	; 0x98
 800924a:	f7f9 fd91 	bl	8002d70 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>

	if(XRange == 200)
 800924e:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
 8009252:	2bc8      	cmp	r3, #200	; 0xc8
	{
	    XRange=195;
 8009254:	bf04      	itt	eq
 8009256:	23c3      	moveq	r3, #195	; 0xc3
 8009258:	f8c4 37d8 	streq.w	r3, [r4, #2008]	; 0x7d8
	}
}
 800925c:	bd10      	pop	{r4, pc}

0800925e <_ZN11Screen1View18XdownButtonClickedEv>:

void Screen1View::XdownButtonClicked()
{
 800925e:	b510      	push	{r4, lr}
    XRange -=5;
 8009260:	f500 5440 	add.w	r4, r0, #12288	; 0x3000
    dynamicGraph1.setGraphRangeX(0,XRange);
 8009264:	2100      	movs	r1, #0
    XRange -=5;
 8009266:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 800926a:	3a05      	subs	r2, #5
 800926c:	f8c4 27d8 	str.w	r2, [r4, #2008]	; 0x7d8
    dynamicGraph1.setGraphRangeX(0,XRange);
 8009270:	3098      	adds	r0, #152	; 0x98
 8009272:	f7f9 fd7d 	bl	8002d70 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>

    if(XRange == 10)
 8009276:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
 800927a:	2b0a      	cmp	r3, #10
    {
    	XRange=15;
 800927c:	bf04      	itt	eq
 800927e:	230f      	moveq	r3, #15
 8009280:	f8c4 37d8 	streq.w	r3, [r4, #2008]	; 0x7d8
    }
}
 8009284:	bd10      	pop	{r4, pc}
	...

08009288 <_ZN11Screen1View11setupScreenEv>:
{
 8009288:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800928a:	4604      	mov	r4, r0
    XRange = 160;
 800928c:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
    Screen1ViewBase::setupScreen();
 8009290:	f7fa f9ff 	bl	8003692 <_ZN15Screen1ViewBase11setupScreenEv>
    XRange = 160;
 8009294:	23a0      	movs	r3, #160	; 0xa0
 8009296:	f8c5 37d8 	str.w	r3, [r5, #2008]	; 0x7d8
    YRange = 3.5;
 800929a:	eef0 0a0c 	vmov.f32	s1, #12	; 0x40600000  3.5
 800929e:	f205 73d4 	addw	r3, r5, #2004	; 0x7d4
    dynamicGraph1.setGraphRangeY(0.0, YRange);
 80092a2:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80092a6:	ed9f 0a07 	vldr	s0, [pc, #28]	; 80092c4 <_ZN11Screen1View11setupScreenEv+0x3c>
    YRange = 3.5;
 80092aa:	edc3 0a00 	vstr	s1, [r3]
    dynamicGraph1.setGraphRangeY(0.0, YRange);
 80092ae:	9001      	str	r0, [sp, #4]
 80092b0:	f7f9 fdf4 	bl	8002e9c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
    dynamicGraph1.setGraphRangeX(0, XRange);
 80092b4:	f8d5 27d8 	ldr.w	r2, [r5, #2008]	; 0x7d8
 80092b8:	9801      	ldr	r0, [sp, #4]
 80092ba:	2100      	movs	r1, #0
 80092bc:	f7f9 fd58 	bl	8002d70 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 80092c0:	b003      	add	sp, #12
 80092c2:	bd30      	pop	{r4, r5, pc}
 80092c4:	00000000 	.word	0x00000000

080092c8 <_ZN11Screen1View16YupButtonClickedEv>:

void Screen1View::YupButtonClicked()
{
 80092c8:	b510      	push	{r4, lr}
	YRange += 0.5;
 80092ca:	f500 545f 	add.w	r4, r0, #14272	; 0x37c0
 80092ce:	edd4 0a05 	vldr	s1, [r4, #20]
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 80092d2:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8009304 <_ZN11Screen1View16YupButtonClickedEv+0x3c>
	YRange += 0.5;
 80092d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80092da:	ee70 0aa7 	vadd.f32	s1, s1, s15
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 80092de:	3098      	adds	r0, #152	; 0x98
	YRange += 0.5;
 80092e0:	edc4 0a05 	vstr	s1, [r4, #20]
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 80092e4:	f7f9 fdda 	bl	8002e9c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if(YRange==3.5){
 80092e8:	ed94 7a05 	vldr	s14, [r4, #20]
 80092ec:	eef0 7a0c 	vmov.f32	s15, #12	; 0x40600000  3.5
 80092f0:	eeb4 7a67 	vcmp.f32	s14, s15
 80092f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	YRange += 0.5;
 80092f8:	f104 0414 	add.w	r4, r4, #20
		YRange=3;
 80092fc:	bf04      	itt	eq
 80092fe:	4b02      	ldreq	r3, [pc, #8]	; (8009308 <_ZN11Screen1View16YupButtonClickedEv+0x40>)
 8009300:	6023      	streq	r3, [r4, #0]
	}
}
 8009302:	bd10      	pop	{r4, pc}
 8009304:	00000000 	.word	0x00000000
 8009308:	40400000 	.word	0x40400000

0800930c <_ZN11Screen1View18YdownButtonClickedEv>:

void Screen1View::YdownButtonClicked()
{
 800930c:	b510      	push	{r4, lr}
	YRange -= 0.5;
 800930e:	f500 545f 	add.w	r4, r0, #14272	; 0x37c0
 8009312:	edd4 0a05 	vldr	s1, [r4, #20]
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 8009316:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 8009350 <_ZN11Screen1View18YdownButtonClickedEv+0x44>
{
 800931a:	ed2d 8b02 	vpush	{d8}
	YRange -= 0.5;
 800931e:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8009322:	ee70 0ac8 	vsub.f32	s1, s1, s16
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 8009326:	3098      	adds	r0, #152	; 0x98
	YRange -= 0.5;
 8009328:	edc4 0a05 	vstr	s1, [r4, #20]
	dynamicGraph1.setGraphRangeY(0.0, YRange);
 800932c:	f7f9 fdb6 	bl	8002e9c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if(YRange==0.5){
 8009330:	edd4 7a05 	vldr	s15, [r4, #20]
 8009334:	eef4 7a48 	vcmp.f32	s15, s16
		YRange=1;
	}

}
 8009338:	ecbd 8b02 	vpop	{d8}
	if(YRange==0.5){
 800933c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	YRange -= 0.5;
 8009340:	f104 0414 	add.w	r4, r4, #20
		YRange=1;
 8009344:	bf04      	itt	eq
 8009346:	f04f 537e 	moveq.w	r3, #1065353216	; 0x3f800000
 800934a:	6023      	streq	r3, [r4, #0]
}
 800934c:	bd10      	pop	{r4, pc}
 800934e:	bf00      	nop
 8009350:	00000000 	.word	0x00000000

08009354 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8009354:	b510      	push	{r4, lr}
 8009356:	4604      	mov	r4, r0
 8009358:	f7fa fba0 	bl	8003a9c <_ZN15Screen1ViewBaseC1Ev>
 800935c:	4b06      	ldr	r3, [pc, #24]	; (8009378 <_ZN11Screen1ViewC1Ev+0x24>)
 800935e:	6023      	str	r3, [r4, #0]
 8009360:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8009364:	f203 72d4 	addw	r2, r3, #2004	; 0x7d4
 8009368:	2100      	movs	r1, #0
 800936a:	6011      	str	r1, [r2, #0]
 800936c:	2200      	movs	r2, #0
 800936e:	f8c3 27d8 	str.w	r2, [r3, #2008]	; 0x7d8
}
 8009372:	4620      	mov	r0, r4
 8009374:	bd10      	pop	{r4, pc}
 8009376:	bf00      	nop
 8009378:	08028214 	.word	0x08028214

0800937c <_ZN11Screen1View11UpdateGraphEf>:
{
 800937c:	4603      	mov	r3, r0
        const float fs = f * (float)scale;
 800937e:	edd3 7a33 	vldr	s15, [r3, #204]	; 0xcc
 8009382:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	dynamicGraph1.addDataPoint(value);
 8009386:	3098      	adds	r0, #152	; 0x98
 8009388:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800938c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8009390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009394:	db09      	blt.n	80093aa <_ZN11Screen1View11UpdateGraphEf+0x2e>
            return (int)(fs + 0.5f);
 8009396:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800939a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800939e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80093a2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80093a6:	f008 bdbd 	b.w	8011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80093aa:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80093ae:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80093b2:	ee17 3a90 	vmov	r3, s15
 80093b6:	ee30 0a47 	vsub.f32	s0, s0, s14
 80093ba:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80093be:	ee30 0a07 	vadd.f32	s0, s0, s14
 80093c2:	1e59      	subs	r1, r3, #1
 80093c4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80093c8:	ee10 3a10 	vmov	r3, s0
 80093cc:	440b      	add	r3, r1
 80093ce:	4619      	mov	r1, r3
 80093d0:	e7e9      	b.n	80093a6 <_ZN11Screen1View11UpdateGraphEf+0x2a>
	...

080093d4 <_ZN11Screen1View24updateInfoWidgetPositionEf>:
	infoWidget1.moveTo(dynamicGraph1.getX() +dynamicGraph1.indexToScreenX(index) + dynamicGraph1.getGraphAreaMarginLeft(),
 80093d4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
{
 80093d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093dc:	4604      	mov	r4, r0
	infoWidget1.moveTo(dynamicGraph1.getX() +dynamicGraph1.indexToScreenX(index) + dynamicGraph1.getGraphAreaMarginLeft(),
 80093de:	ee10 3a10 	vmov	r3, s0
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80093e2:	f8b4 11ae 	ldrh.w	r1, [r4, #430]	; 0x1ae
 80093e6:	f8b0 909c 	ldrh.w	r9, [r0, #156]	; 0x9c
 80093ea:	b21e      	sxth	r6, r3
 80093ec:	f8b4 31b0 	ldrh.w	r3, [r4, #432]	; 0x1b0
 80093f0:	440b      	add	r3, r1
 80093f2:	f8b4 10d8 	ldrh.w	r1, [r4, #216]	; 0xd8
 80093f6:	f200 6864 	addw	r8, r0, #1636	; 0x664
 80093fa:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80093fc:	e9d0 0271 	ldrd	r0, r2, [r0, #452]	; 0x1c4
        return i * scale;
 8009400:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8009404:	b209      	sxth	r1, r1
        return i * scale;
 8009406:	4373      	muls	r3, r6
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8009408:	1a12      	subs	r2, r2, r0
 800940a:	3901      	subs	r1, #1
 800940c:	1a18      	subs	r0, r3, r0
 800940e:	f7fa fa17 	bl	8003840 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8009412:	f9b4 51ae 	ldrsh.w	r5, [r4, #430]	; 0x1ae
            return v < 0 ? Q5((v + 1) - toQ5(1).v / 2).to<int>() : Q5(v + toQ5(1).v / 2).to<int>();
 8009416:	eb10 1045 	adds.w	r0, r0, r5, lsl #5
 800941a:	d502      	bpl.n	8009422 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x4e>
            return (T)((T)v / (T)Rasterizer::POLY_BASE_SIZE);
 800941c:	f1b0 050f 	subs.w	r5, r0, #15
 8009420:	d501      	bpl.n	8009426 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x52>
            return v < 0 ? Q5((v + 1) - toQ5(1).v / 2).to<int>() : Q5(v + toQ5(1).v / 2).to<int>();
 8009422:	f100 0510 	add.w	r5, r0, #16
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8009426:	f9b4 31b6 	ldrsh.w	r3, [r4, #438]	; 0x1b6
 800942a:	f9b4 21b4 	ldrsh.w	r2, [r4, #436]	; 0x1b4
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800942e:	f9b4 a1ac 	ldrsh.w	sl, [r4, #428]	; 0x1ac
 8009432:	f8b4 b1b2 	ldrh.w	fp, [r4, #434]	; 0x1b2
 8009436:	f8b4 1104 	ldrh.w	r1, [r4, #260]	; 0x104
							   dynamicGraph1.getY() +dynamicGraph1.indexToScreenY(index) + dynamicGraph1.getGraphAreaMarginTop());
 800943a:	f8b4 709e 	ldrh.w	r7, [r4, #158]	; 0x9e
 800943e:	4293      	cmp	r3, r2
 8009440:	bfa1      	itttt	ge
 8009442:	f9b4 31e4 	ldrshge.w	r3, [r4, #484]	; 0x1e4
 8009446:	199b      	addge	r3, r3, r6
 8009448:	fb93 f0f2 	sdivge	r0, r3, r2
 800944c:	fb02 3310 	mlsge	r3, r2, r0, r3
 8009450:	eb0a 000b 	add.w	r0, sl, fp
 8009454:	f8b4 b0da 	ldrh.w	fp, [r4, #218]	; 0xda
 8009458:	bfac      	ite	ge
 800945a:	b21b      	sxthge	r3, r3
	infoWidget1.moveTo(dynamicGraph1.getX() +dynamicGraph1.indexToScreenX(index) + dynamicGraph1.getGraphAreaMarginLeft(),
 800945c:	4633      	movlt	r3, r6
 800945e:	4489      	add	r9, r1
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8009460:	f8d4 11dc 	ldr.w	r1, [r4, #476]	; 0x1dc
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8009464:	ebab 0b00 	sub.w	fp, fp, r0
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8009468:	e9d4 0273 	ldrd	r0, r2, [r4, #460]	; 0x1cc
 800946c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009470:	fa0f fb8b 	sxth.w	fp, fp
 8009474:	1a12      	subs	r2, r2, r0
 8009476:	f10b 31ff 	add.w	r1, fp, #4294967295
 800947a:	1a18      	subs	r0, r3, r0
 800947c:	f7fa f9e0 	bl	8003840 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8009480:	44da      	add	sl, fp
 8009482:	f10a 3aff 	add.w	sl, sl, #4294967295
            return (T)((T)v / (T)Rasterizer::POLY_BASE_SIZE);
 8009486:	116d      	asrs	r5, r5, #5
            return v < 0 ? Q5((v + 1) - toQ5(1).v / 2).to<int>() : Q5(v + toQ5(1).v / 2).to<int>();
 8009488:	ebd0 104a 	rsbs	r0, r0, sl, lsl #5
 800948c:	b2ad      	uxth	r5, r5
        return rect.width;
 800948e:	fa1f f989 	uxth.w	r9, r9
 8009492:	d523      	bpl.n	80094dc <_ZN11Screen1View24updateInfoWidgetPositionEf+0x108>
            return (T)((T)v / (T)Rasterizer::POLY_BASE_SIZE);
 8009494:	f1b0 020f 	subs.w	r2, r0, #15
 8009498:	bf48      	it	mi
 800949a:	f100 0210 	addmi.w	r2, r0, #16
 800949e:	1150      	asrs	r0, r2, #5
        moveRelative(x - rect.x, y - rect.y);
 80094a0:	f8b4 215e 	ldrh.w	r2, [r4, #350]	; 0x15e
 80094a4:	f8b4 1668 	ldrh.w	r1, [r4, #1640]	; 0x668
 80094a8:	4417      	add	r7, r2
 80094aa:	f8b4 266a 	ldrh.w	r2, [r4, #1642]	; 0x66a
 80094ae:	eba9 0101 	sub.w	r1, r9, r1
 80094b2:	1abf      	subs	r7, r7, r2
 80094b4:	4438      	add	r0, r7
 80094b6:	4429      	add	r1, r5
 80094b8:	b202      	sxth	r2, r0
 80094ba:	b209      	sxth	r1, r1
 80094bc:	4640      	mov	r0, r8
 80094be:	f00e f8e3 	bl	8017688 <_ZN8touchgfx8Drawable12moveRelativeEss>
        assert(index >= 0 && index < usedCapacity);
 80094c2:	2e00      	cmp	r6, #0
 80094c4:	db03      	blt.n	80094ce <_ZN11Screen1View24updateInfoWidgetPositionEf+0xfa>
 80094c6:	f9b4 31b6 	ldrsh.w	r3, [r4, #438]	; 0x1b6
 80094ca:	429e      	cmp	r6, r3
 80094cc:	db09      	blt.n	80094e2 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x10e>
 80094ce:	4b14      	ldr	r3, [pc, #80]	; (8009520 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x14c>)
 80094d0:	4a14      	ldr	r2, [pc, #80]	; (8009524 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x150>)
 80094d2:	4815      	ldr	r0, [pc, #84]	; (8009528 <_ZN11Screen1View24updateInfoWidgetPositionEf+0x154>)
 80094d4:	f240 6133 	movw	r1, #1587	; 0x633
 80094d8:	f01c fa60 	bl	802599c <__assert_func>
            return v < 0 ? Q5((v + 1) - toQ5(1).v / 2).to<int>() : Q5(v + toQ5(1).v / 2).to<int>();
 80094dc:	3010      	adds	r0, #16
            return (T)((T)v / (T)Rasterizer::POLY_BASE_SIZE);
 80094de:	1140      	asrs	r0, r0, #5
 80094e0:	e7de      	b.n	80094a0 <_ZN11Screen1View24updateInfoWidgetPositionEf+0xcc>
 80094e2:	f9b4 21b4 	ldrsh.w	r2, [r4, #436]	; 0x1b4
        return yValues[dataIndex(index)];
 80094e6:	f8d4 11dc 	ldr.w	r1, [r4, #476]	; 0x1dc
 80094ea:	4293      	cmp	r3, r2
 80094ec:	db07      	blt.n	80094fe <_ZN11Screen1View24updateInfoWidgetPositionEf+0x12a>
 80094ee:	f9b4 31e4 	ldrsh.w	r3, [r4, #484]	; 0x1e4
 80094f2:	441e      	add	r6, r3
 80094f4:	fb96 f3f2 	sdiv	r3, r6, r2
 80094f8:	fb02 6613 	mls	r6, r2, r3, r6
 80094fc:	b236      	sxth	r6, r6
        return (float)i / (float)scale;
 80094fe:	eb01 0386 	add.w	r3, r1, r6, lsl #2
 8009502:	ed93 0a00 	vldr	s0, [r3]
 8009506:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800950a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800950e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	infoWidget1.updateString(dynamicGraph1.indexToDataPointYAsFloat(index));
 8009512:	4640      	mov	r0, r8
 8009514:	ee80 0a27 	vdiv.f32	s0, s0, s15
}
 8009518:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	infoWidget1.updateString(dynamicGraph1.indexToDataPointYAsFloat(index));
 800951c:	f000 b842 	b.w	80095a4 <_ZN10infoWidget12updateStringEf>
 8009520:	0802770c 	.word	0x0802770c
 8009524:	0802772f 	.word	0x0802772f
 8009528:	0802777e 	.word	0x0802777e

0800952c <_ZN11Screen1View13graph1ClickedEN8touchgfx17AbstractDataGraph15GraphClickEventE>:
{
 800952c:	b082      	sub	sp, #8
 800952e:	ab02      	add	r3, sp, #8
 8009530:	e903 0006 	stmdb	r3, {r1, r2}
	if(value.clickEvent.getType()== ClickEvent::PRESSED)
 8009534:	7913      	ldrb	r3, [r2, #4]
 8009536:	b943      	cbnz	r3, 800954a <_ZN11Screen1View13graph1ClickedEN8touchgfx17AbstractDataGraph15GraphClickEventE+0x1e>
		updateInfoWidgetPosition(value.index);
 8009538:	f9bd 3000 	ldrsh.w	r3, [sp]
 800953c:	ee00 3a10 	vmov	s0, r3
 8009540:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
}
 8009544:	b002      	add	sp, #8
		updateInfoWidgetPosition(value.index);
 8009546:	f7ff bf45 	b.w	80093d4 <_ZN11Screen1View24updateInfoWidgetPositionEf>
}
 800954a:	b002      	add	sp, #8
 800954c:	4770      	bx	lr

0800954e <_ZN11Screen1View13graph1DraggedEN8touchgfx17AbstractDataGraph14GraphDragEventE>:
{
 800954e:	b082      	sub	sp, #8
 8009550:	ab02      	add	r3, sp, #8
 8009552:	e903 0006 	stmdb	r3, {r1, r2}
	updateInfoWidgetPosition(value.index);
 8009556:	f9bd 3000 	ldrsh.w	r3, [sp]
 800955a:	ee00 3a10 	vmov	s0, r3
 800955e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
}
 8009562:	b002      	add	sp, #8
	updateInfoWidgetPosition(value.index);
 8009564:	f7ff bf36 	b.w	80093d4 <_ZN11Screen1View24updateInfoWidgetPositionEf>

08009568 <_ZN10infoWidgetD1Ev>:
 8009568:	b510      	push	{r4, lr}
 800956a:	4b03      	ldr	r3, [pc, #12]	; (8009578 <_ZN10infoWidgetD1Ev+0x10>)
 800956c:	6003      	str	r3, [r0, #0]
 800956e:	4604      	mov	r4, r0
 8009570:	f7ff fcc0 	bl	8008ef4 <_ZN14infoWidgetBaseD1Ev>
 8009574:	4620      	mov	r0, r4
 8009576:	bd10      	pop	{r4, pc}
 8009578:	0802826c 	.word	0x0802826c

0800957c <_ZN10infoWidgetD0Ev>:
 800957c:	b510      	push	{r4, lr}
 800957e:	4604      	mov	r4, r0
 8009580:	f7ff fff2 	bl	8009568 <_ZN10infoWidgetD1Ev>
 8009584:	4620      	mov	r0, r4
 8009586:	21b8      	movs	r1, #184	; 0xb8
 8009588:	f01c f9d9 	bl	802593e <_ZdlPvj>
 800958c:	4620      	mov	r0, r4
 800958e:	bd10      	pop	{r4, pc}

08009590 <_ZN10infoWidgetC1Ev>:
#include <gui/containers/infoWidget.hpp>

infoWidget::infoWidget()
 8009590:	b510      	push	{r4, lr}
 8009592:	4604      	mov	r4, r0
 8009594:	f7ff fcfe 	bl	8008f94 <_ZN14infoWidgetBaseC1Ev>
 8009598:	4b01      	ldr	r3, [pc, #4]	; (80095a0 <_ZN10infoWidgetC1Ev+0x10>)
 800959a:	6023      	str	r3, [r4, #0]
{

}
 800959c:	4620      	mov	r0, r4
 800959e:	bd10      	pop	{r4, pc}
 80095a0:	0802826c 	.word	0x0802826c

080095a4 <_ZN10infoWidget12updateStringEf>:
{
    infoWidgetBase::initialize();
}

void infoWidget::updateString(float value)
{
 80095a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80095a6:	4604      	mov	r4, r0
 80095a8:	ee10 0a10 	vmov	r0, s0
	Unicode::snprintf(textArea1Buffer,TEXTAREA1_SIZE, "%.2f",value);
 80095ac:	f7f7 f906 	bl	80007bc <__aeabi_f2d>
 80095b0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80095b4:	e9cd 0100 	strd	r0, r1, [sp]
 80095b8:	4a05      	ldr	r2, [pc, #20]	; (80095d0 <_ZN10infoWidget12updateStringEf+0x2c>)
 80095ba:	210a      	movs	r1, #10
 80095bc:	4628      	mov	r0, r5
 80095be:	f00f fff9 	bl	80195b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 80095c2:	f104 0058 	add.w	r0, r4, #88	; 0x58
}
 80095c6:	b003      	add	sp, #12
 80095c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	textArea1.invalidate();
 80095cc:	f00d bfdb 	b.w	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 80095d0:	0802825c 	.word	0x0802825c

080095d4 <_ZN10infoWidget10initializeEv>:
    infoWidgetBase::initialize();
 80095d4:	f7ff bc8f 	b.w	8008ef6 <_ZN14infoWidgetBase10initializeEv>

080095d8 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80095d8:	4770      	bx	lr

080095da <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80095da:	2000      	movs	r0, #0
 80095dc:	4770      	bx	lr

080095de <ft6x06_ReadID>:
{
 80095de:	b510      	push	{r4, lr}
 80095e0:	4604      	mov	r4, r0
  TS_IO_Init();
 80095e2:	f000 fb75 	bl	8009cd0 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80095e6:	21a8      	movs	r1, #168	; 0xa8
 80095e8:	b2e0      	uxtb	r0, r4
 80095ea:	f000 fb8d 	bl	8009d08 <TS_IO_Read>
}
 80095ee:	b280      	uxth	r0, r0
 80095f0:	bd10      	pop	{r4, pc}
	...

080095f4 <ft6x06_TS_DetectTouch>:
{
 80095f4:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80095f6:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80095f8:	2102      	movs	r1, #2
 80095fa:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80095fc:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8009600:	f000 fb82 	bl	8009d08 <TS_IO_Read>
 8009604:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8009608:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800960c:	f003 030f 	and.w	r3, r3, #15
 8009610:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8009614:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009618:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800961a:	bf88      	it	hi
 800961c:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8009620:	4b04      	ldr	r3, [pc, #16]	; (8009634 <ft6x06_TS_DetectTouch+0x40>)
 8009622:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8009626:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800962a:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800962c:	2200      	movs	r2, #0
 800962e:	709a      	strb	r2, [r3, #2]
}
 8009630:	b002      	add	sp, #8
 8009632:	bd10      	pop	{r4, pc}
 8009634:	20004d2e 	.word	0x20004d2e

08009638 <ft6x06_TS_GetXY>:
{
 8009638:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800963a:	4c15      	ldr	r4, [pc, #84]	; (8009690 <ft6x06_TS_GetXY+0x58>)
{
 800963c:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800963e:	78a3      	ldrb	r3, [r4, #2]
 8009640:	7862      	ldrb	r2, [r4, #1]
 8009642:	429a      	cmp	r2, r3
{
 8009644:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8009646:	d91f      	bls.n	8009688 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8009648:	b303      	cbz	r3, 800968c <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800964a:	2b01      	cmp	r3, #1
 800964c:	bf14      	ite	ne
 800964e:	2100      	movne	r1, #0
 8009650:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8009652:	2304      	movs	r3, #4
 8009654:	eb0d 0203 	add.w	r2, sp, r3
 8009658:	b2c0      	uxtb	r0, r0
 800965a:	f000 fb73 	bl	8009d44 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800965e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8009662:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009666:	021b      	lsls	r3, r3, #8
 8009668:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800966c:	4313      	orrs	r3, r2
 800966e:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8009670:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8009674:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8009678:	021b      	lsls	r3, r3, #8
 800967a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800967e:	4313      	orrs	r3, r2
 8009680:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8009682:	78a3      	ldrb	r3, [r4, #2]
 8009684:	3301      	adds	r3, #1
 8009686:	70a3      	strb	r3, [r4, #2]
}
 8009688:	b002      	add	sp, #8
 800968a:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 800968c:	2103      	movs	r1, #3
 800968e:	e7e0      	b.n	8009652 <ft6x06_TS_GetXY+0x1a>
 8009690:	20004d2e 	.word	0x20004d2e

08009694 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009694:	2201      	movs	r2, #1
 8009696:	21a4      	movs	r1, #164	; 0xa4
 8009698:	b2c0      	uxtb	r0, r0
 800969a:	f000 bb1b 	b.w	8009cd4 <TS_IO_Write>

0800969e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800969e:	2200      	movs	r2, #0
 80096a0:	21a4      	movs	r1, #164	; 0xa4
 80096a2:	b2c0      	uxtb	r0, r0
 80096a4:	f000 bb16 	b.w	8009cd4 <TS_IO_Write>

080096a8 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 80096a8:	f7ff bff9 	b.w	800969e <ft6x06_TS_DisableIT>

080096ac <ft6x06_TS_ClearIT>:
 80096ac:	4770      	bx	lr
	...

080096b0 <ft6x06_Init>:
{  
 80096b0:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 80096b2:	4b09      	ldr	r3, [pc, #36]	; (80096d8 <ft6x06_Init+0x28>)
 80096b4:	781a      	ldrb	r2, [r3, #0]
 80096b6:	4290      	cmp	r0, r2
 80096b8:	d00a      	beq.n	80096d0 <ft6x06_Init+0x20>
 80096ba:	7859      	ldrb	r1, [r3, #1]
 80096bc:	4288      	cmp	r0, r1
 80096be:	d007      	beq.n	80096d0 <ft6x06_Init+0x20>
 80096c0:	b10a      	cbz	r2, 80096c6 <ft6x06_Init+0x16>
 80096c2:	b929      	cbnz	r1, 80096d0 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80096c4:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 80096c6:	5498      	strb	r0, [r3, r2]
}
 80096c8:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 80096cc:	f000 bb00 	b.w	8009cd0 <TS_IO_Init>
}
 80096d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80096d4:	4770      	bx	lr
 80096d6:	bf00      	nop
 80096d8:	20004d2c 	.word	0x20004d2c

080096dc <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80096dc:	b538      	push	{r3, r4, r5, lr}
 80096de:	4604      	mov	r4, r0
 80096e0:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80096e2:	2000      	movs	r0, #0
 80096e4:	49c9      	ldr	r1, [pc, #804]	; (8009a0c <OTM8009A_Init+0x330>)
 80096e6:	f7f7 fd25 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80096ea:	49c9      	ldr	r1, [pc, #804]	; (8009a10 <OTM8009A_Init+0x334>)
 80096ec:	2003      	movs	r0, #3
 80096ee:	f7f7 fd21 	bl	8001134 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80096f2:	49c8      	ldr	r1, [pc, #800]	; (8009a14 <OTM8009A_Init+0x338>)
 80096f4:	2000      	movs	r0, #0
 80096f6:	f7f7 fd1d 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80096fa:	49c7      	ldr	r1, [pc, #796]	; (8009a18 <OTM8009A_Init+0x33c>)
 80096fc:	2002      	movs	r0, #2
 80096fe:	f7f7 fd19 	bl	8001134 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8009702:	49c4      	ldr	r1, [pc, #784]	; (8009a14 <OTM8009A_Init+0x338>)
 8009704:	2000      	movs	r0, #0
 8009706:	f7f7 fd15 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800970a:	49c4      	ldr	r1, [pc, #784]	; (8009a1c <OTM8009A_Init+0x340>)
 800970c:	2000      	movs	r0, #0
 800970e:	f7f7 fd11 	bl	8001134 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8009712:	200a      	movs	r0, #10
 8009714:	f000 fb2e 	bl	8009d74 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8009718:	49c1      	ldr	r1, [pc, #772]	; (8009a20 <OTM8009A_Init+0x344>)
 800971a:	2000      	movs	r0, #0
 800971c:	f7f7 fd0a 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8009720:	49c0      	ldr	r1, [pc, #768]	; (8009a24 <OTM8009A_Init+0x348>)
 8009722:	2000      	movs	r0, #0
 8009724:	f7f7 fd06 	bl	8001134 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8009728:	200a      	movs	r0, #10
 800972a:	f000 fb23 	bl	8009d74 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800972e:	49be      	ldr	r1, [pc, #760]	; (8009a28 <OTM8009A_Init+0x34c>)
 8009730:	2000      	movs	r0, #0
 8009732:	f7f7 fcff 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8009736:	49bd      	ldr	r1, [pc, #756]	; (8009a2c <OTM8009A_Init+0x350>)
 8009738:	2000      	movs	r0, #0
 800973a:	f7f7 fcfb 	bl	8001134 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800973e:	49bc      	ldr	r1, [pc, #752]	; (8009a30 <OTM8009A_Init+0x354>)
 8009740:	2000      	movs	r0, #0
 8009742:	f7f7 fcf7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8009746:	49bb      	ldr	r1, [pc, #748]	; (8009a34 <OTM8009A_Init+0x358>)
 8009748:	2000      	movs	r0, #0
 800974a:	f7f7 fcf3 	bl	8001134 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800974e:	49ba      	ldr	r1, [pc, #744]	; (8009a38 <OTM8009A_Init+0x35c>)
 8009750:	2000      	movs	r0, #0
 8009752:	f7f7 fcef 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8009756:	49b9      	ldr	r1, [pc, #740]	; (8009a3c <OTM8009A_Init+0x360>)
 8009758:	2000      	movs	r0, #0
 800975a:	f7f7 fceb 	bl	8001134 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800975e:	49ab      	ldr	r1, [pc, #684]	; (8009a0c <OTM8009A_Init+0x330>)
 8009760:	2000      	movs	r0, #0
 8009762:	f7f7 fce7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8009766:	49b6      	ldr	r1, [pc, #728]	; (8009a40 <OTM8009A_Init+0x364>)
 8009768:	2000      	movs	r0, #0
 800976a:	f7f7 fce3 	bl	8001134 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800976e:	49b5      	ldr	r1, [pc, #724]	; (8009a44 <OTM8009A_Init+0x368>)
 8009770:	2000      	movs	r0, #0
 8009772:	f7f7 fcdf 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8009776:	49b4      	ldr	r1, [pc, #720]	; (8009a48 <OTM8009A_Init+0x36c>)
 8009778:	2000      	movs	r0, #0
 800977a:	f7f7 fcdb 	bl	8001134 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800977e:	49b3      	ldr	r1, [pc, #716]	; (8009a4c <OTM8009A_Init+0x370>)
 8009780:	2000      	movs	r0, #0
 8009782:	f7f7 fcd7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8009786:	49b2      	ldr	r1, [pc, #712]	; (8009a50 <OTM8009A_Init+0x374>)
 8009788:	2000      	movs	r0, #0
 800978a:	f7f7 fcd3 	bl	8001134 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800978e:	49b1      	ldr	r1, [pc, #708]	; (8009a54 <OTM8009A_Init+0x378>)
 8009790:	2000      	movs	r0, #0
 8009792:	f7f7 fccf 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8009796:	49b0      	ldr	r1, [pc, #704]	; (8009a58 <OTM8009A_Init+0x37c>)
 8009798:	2000      	movs	r0, #0
 800979a:	f7f7 fccb 	bl	8001134 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800979e:	49af      	ldr	r1, [pc, #700]	; (8009a5c <OTM8009A_Init+0x380>)
 80097a0:	2000      	movs	r0, #0
 80097a2:	f7f7 fcc7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 80097a6:	49a3      	ldr	r1, [pc, #652]	; (8009a34 <OTM8009A_Init+0x358>)
 80097a8:	2000      	movs	r0, #0
 80097aa:	f7f7 fcc3 	bl	8001134 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80097ae:	4997      	ldr	r1, [pc, #604]	; (8009a0c <OTM8009A_Init+0x330>)
 80097b0:	2000      	movs	r0, #0
 80097b2:	f7f7 fcbf 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 80097b6:	49aa      	ldr	r1, [pc, #680]	; (8009a60 <OTM8009A_Init+0x384>)
 80097b8:	2002      	movs	r0, #2
 80097ba:	f7f7 fcbb 	bl	8001134 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 80097be:	49a9      	ldr	r1, [pc, #676]	; (8009a64 <OTM8009A_Init+0x388>)
 80097c0:	2000      	movs	r0, #0
 80097c2:	f7f7 fcb7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 80097c6:	49a8      	ldr	r1, [pc, #672]	; (8009a68 <OTM8009A_Init+0x38c>)
 80097c8:	2000      	movs	r0, #0
 80097ca:	f7f7 fcb3 	bl	8001134 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 80097ce:	49a7      	ldr	r1, [pc, #668]	; (8009a6c <OTM8009A_Init+0x390>)
 80097d0:	2000      	movs	r0, #0
 80097d2:	f7f7 fcaf 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 80097d6:	49a6      	ldr	r1, [pc, #664]	; (8009a70 <OTM8009A_Init+0x394>)
 80097d8:	2000      	movs	r0, #0
 80097da:	f7f7 fcab 	bl	8001134 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 80097de:	49a5      	ldr	r1, [pc, #660]	; (8009a74 <OTM8009A_Init+0x398>)
 80097e0:	2000      	movs	r0, #0
 80097e2:	f7f7 fca7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80097e6:	49a4      	ldr	r1, [pc, #656]	; (8009a78 <OTM8009A_Init+0x39c>)
 80097e8:	2000      	movs	r0, #0
 80097ea:	f7f7 fca3 	bl	8001134 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80097ee:	4995      	ldr	r1, [pc, #596]	; (8009a44 <OTM8009A_Init+0x368>)
 80097f0:	2000      	movs	r0, #0
 80097f2:	f7f7 fc9f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 80097f6:	49a1      	ldr	r1, [pc, #644]	; (8009a7c <OTM8009A_Init+0x3a0>)
 80097f8:	2000      	movs	r0, #0
 80097fa:	f7f7 fc9b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80097fe:	4993      	ldr	r1, [pc, #588]	; (8009a4c <OTM8009A_Init+0x370>)
 8009800:	2000      	movs	r0, #0
 8009802:	f7f7 fc97 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8009806:	499e      	ldr	r1, [pc, #632]	; (8009a80 <OTM8009A_Init+0x3a4>)
 8009808:	2000      	movs	r0, #0
 800980a:	f7f7 fc93 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800980e:	499d      	ldr	r1, [pc, #628]	; (8009a84 <OTM8009A_Init+0x3a8>)
 8009810:	2000      	movs	r0, #0
 8009812:	f7f7 fc8f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8009816:	499c      	ldr	r1, [pc, #624]	; (8009a88 <OTM8009A_Init+0x3ac>)
 8009818:	2002      	movs	r0, #2
 800981a:	f7f7 fc8b 	bl	8001134 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800981e:	497d      	ldr	r1, [pc, #500]	; (8009a14 <OTM8009A_Init+0x338>)
 8009820:	2000      	movs	r0, #0
 8009822:	f7f7 fc87 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8009826:	4999      	ldr	r1, [pc, #612]	; (8009a8c <OTM8009A_Init+0x3b0>)
 8009828:	2006      	movs	r0, #6
 800982a:	f7f7 fc83 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800982e:	4998      	ldr	r1, [pc, #608]	; (8009a90 <OTM8009A_Init+0x3b4>)
 8009830:	2000      	movs	r0, #0
 8009832:	f7f7 fc7f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8009836:	4997      	ldr	r1, [pc, #604]	; (8009a94 <OTM8009A_Init+0x3b8>)
 8009838:	200e      	movs	r0, #14
 800983a:	f7f7 fc7b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800983e:	4996      	ldr	r1, [pc, #600]	; (8009a98 <OTM8009A_Init+0x3bc>)
 8009840:	2000      	movs	r0, #0
 8009842:	f7f7 fc77 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8009846:	4995      	ldr	r1, [pc, #596]	; (8009a9c <OTM8009A_Init+0x3c0>)
 8009848:	200e      	movs	r0, #14
 800984a:	f7f7 fc73 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800984e:	4994      	ldr	r1, [pc, #592]	; (8009aa0 <OTM8009A_Init+0x3c4>)
 8009850:	2000      	movs	r0, #0
 8009852:	f7f7 fc6f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8009856:	4993      	ldr	r1, [pc, #588]	; (8009aa4 <OTM8009A_Init+0x3c8>)
 8009858:	200a      	movs	r0, #10
 800985a:	f7f7 fc6b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800985e:	4992      	ldr	r1, [pc, #584]	; (8009aa8 <OTM8009A_Init+0x3cc>)
 8009860:	2000      	movs	r0, #0
 8009862:	f7f7 fc67 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8009866:	4991      	ldr	r1, [pc, #580]	; (8009aac <OTM8009A_Init+0x3d0>)
 8009868:	2000      	movs	r0, #0
 800986a:	f7f7 fc63 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800986e:	4969      	ldr	r1, [pc, #420]	; (8009a14 <OTM8009A_Init+0x338>)
 8009870:	2000      	movs	r0, #0
 8009872:	f7f7 fc5f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8009876:	498e      	ldr	r1, [pc, #568]	; (8009ab0 <OTM8009A_Init+0x3d4>)
 8009878:	200a      	movs	r0, #10
 800987a:	f7f7 fc5b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800987e:	498d      	ldr	r1, [pc, #564]	; (8009ab4 <OTM8009A_Init+0x3d8>)
 8009880:	2000      	movs	r0, #0
 8009882:	f7f7 fc57 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8009886:	498c      	ldr	r1, [pc, #560]	; (8009ab8 <OTM8009A_Init+0x3dc>)
 8009888:	200f      	movs	r0, #15
 800988a:	f7f7 fc53 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800988e:	4980      	ldr	r1, [pc, #512]	; (8009a90 <OTM8009A_Init+0x3b4>)
 8009890:	2000      	movs	r0, #0
 8009892:	f7f7 fc4f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8009896:	4989      	ldr	r1, [pc, #548]	; (8009abc <OTM8009A_Init+0x3e0>)
 8009898:	200f      	movs	r0, #15
 800989a:	f7f7 fc4b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800989e:	497e      	ldr	r1, [pc, #504]	; (8009a98 <OTM8009A_Init+0x3bc>)
 80098a0:	2000      	movs	r0, #0
 80098a2:	f7f7 fc47 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 80098a6:	4986      	ldr	r1, [pc, #536]	; (8009ac0 <OTM8009A_Init+0x3e4>)
 80098a8:	200a      	movs	r0, #10
 80098aa:	f7f7 fc43 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80098ae:	497c      	ldr	r1, [pc, #496]	; (8009aa0 <OTM8009A_Init+0x3c4>)
 80098b0:	2000      	movs	r0, #0
 80098b2:	f7f7 fc3f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 80098b6:	4983      	ldr	r1, [pc, #524]	; (8009ac4 <OTM8009A_Init+0x3e8>)
 80098b8:	200f      	movs	r0, #15
 80098ba:	f7f7 fc3b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80098be:	497a      	ldr	r1, [pc, #488]	; (8009aa8 <OTM8009A_Init+0x3cc>)
 80098c0:	2000      	movs	r0, #0
 80098c2:	f7f7 fc37 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 80098c6:	4980      	ldr	r1, [pc, #512]	; (8009ac8 <OTM8009A_Init+0x3ec>)
 80098c8:	200f      	movs	r0, #15
 80098ca:	f7f7 fc33 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 80098ce:	497f      	ldr	r1, [pc, #508]	; (8009acc <OTM8009A_Init+0x3f0>)
 80098d0:	2000      	movs	r0, #0
 80098d2:	f7f7 fc2f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 80098d6:	497e      	ldr	r1, [pc, #504]	; (8009ad0 <OTM8009A_Init+0x3f4>)
 80098d8:	200a      	movs	r0, #10
 80098da:	f7f7 fc2b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80098de:	497d      	ldr	r1, [pc, #500]	; (8009ad4 <OTM8009A_Init+0x3f8>)
 80098e0:	2000      	movs	r0, #0
 80098e2:	f7f7 fc27 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80098e6:	497c      	ldr	r1, [pc, #496]	; (8009ad8 <OTM8009A_Init+0x3fc>)
 80098e8:	200a      	movs	r0, #10
 80098ea:	f7f7 fc23 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80098ee:	4949      	ldr	r1, [pc, #292]	; (8009a14 <OTM8009A_Init+0x338>)
 80098f0:	2000      	movs	r0, #0
 80098f2:	f7f7 fc1f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 80098f6:	4979      	ldr	r1, [pc, #484]	; (8009adc <OTM8009A_Init+0x400>)
 80098f8:	200a      	movs	r0, #10
 80098fa:	f7f7 fc1b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80098fe:	496d      	ldr	r1, [pc, #436]	; (8009ab4 <OTM8009A_Init+0x3d8>)
 8009900:	2000      	movs	r0, #0
 8009902:	f7f7 fc17 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8009906:	4976      	ldr	r1, [pc, #472]	; (8009ae0 <OTM8009A_Init+0x404>)
 8009908:	200f      	movs	r0, #15
 800990a:	f7f7 fc13 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800990e:	4960      	ldr	r1, [pc, #384]	; (8009a90 <OTM8009A_Init+0x3b4>)
 8009910:	2000      	movs	r0, #0
 8009912:	f7f7 fc0f 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8009916:	4973      	ldr	r1, [pc, #460]	; (8009ae4 <OTM8009A_Init+0x408>)
 8009918:	200f      	movs	r0, #15
 800991a:	f7f7 fc0b 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800991e:	495e      	ldr	r1, [pc, #376]	; (8009a98 <OTM8009A_Init+0x3bc>)
 8009920:	2000      	movs	r0, #0
 8009922:	f7f7 fc07 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8009926:	4970      	ldr	r1, [pc, #448]	; (8009ae8 <OTM8009A_Init+0x40c>)
 8009928:	200a      	movs	r0, #10
 800992a:	f7f7 fc03 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800992e:	495c      	ldr	r1, [pc, #368]	; (8009aa0 <OTM8009A_Init+0x3c4>)
 8009930:	2000      	movs	r0, #0
 8009932:	f7f7 fbff 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8009936:	496d      	ldr	r1, [pc, #436]	; (8009aec <OTM8009A_Init+0x410>)
 8009938:	200f      	movs	r0, #15
 800993a:	f7f7 fbfb 	bl	8001134 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800993e:	495a      	ldr	r1, [pc, #360]	; (8009aa8 <OTM8009A_Init+0x3cc>)
 8009940:	2000      	movs	r0, #0
 8009942:	f7f7 fbf7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8009946:	496a      	ldr	r1, [pc, #424]	; (8009af0 <OTM8009A_Init+0x414>)
 8009948:	200f      	movs	r0, #15
 800994a:	f7f7 fbf3 	bl	8001134 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800994e:	493d      	ldr	r1, [pc, #244]	; (8009a44 <OTM8009A_Init+0x368>)
 8009950:	2000      	movs	r0, #0
 8009952:	f7f7 fbef 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8009956:	4967      	ldr	r1, [pc, #412]	; (8009af4 <OTM8009A_Init+0x418>)
 8009958:	2000      	movs	r0, #0
 800995a:	f7f7 fbeb 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800995e:	4966      	ldr	r1, [pc, #408]	; (8009af8 <OTM8009A_Init+0x41c>)
 8009960:	2000      	movs	r0, #0
 8009962:	f7f7 fbe7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8009966:	4965      	ldr	r1, [pc, #404]	; (8009afc <OTM8009A_Init+0x420>)
 8009968:	2000      	movs	r0, #0
 800996a:	f7f7 fbe3 	bl	8001134 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800996e:	4964      	ldr	r1, [pc, #400]	; (8009b00 <OTM8009A_Init+0x424>)
 8009970:	2000      	movs	r0, #0
 8009972:	f7f7 fbdf 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8009976:	4963      	ldr	r1, [pc, #396]	; (8009b04 <OTM8009A_Init+0x428>)
 8009978:	2000      	movs	r0, #0
 800997a:	f7f7 fbdb 	bl	8001134 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800997e:	4923      	ldr	r1, [pc, #140]	; (8009a0c <OTM8009A_Init+0x330>)
 8009980:	2000      	movs	r0, #0
 8009982:	f7f7 fbd7 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8009986:	4960      	ldr	r1, [pc, #384]	; (8009b08 <OTM8009A_Init+0x42c>)
 8009988:	2003      	movs	r0, #3
 800998a:	f7f7 fbd3 	bl	8001134 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800998e:	491f      	ldr	r1, [pc, #124]	; (8009a0c <OTM8009A_Init+0x330>)
 8009990:	2000      	movs	r0, #0
 8009992:	f7f7 fbcf 	bl	8001134 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009996:	491d      	ldr	r1, [pc, #116]	; (8009a0c <OTM8009A_Init+0x330>)
 8009998:	2000      	movs	r0, #0
 800999a:	f7f7 fbcb 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800999e:	495b      	ldr	r1, [pc, #364]	; (8009b0c <OTM8009A_Init+0x430>)
 80099a0:	2010      	movs	r0, #16
 80099a2:	f7f7 fbc7 	bl	8001134 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80099a6:	4919      	ldr	r1, [pc, #100]	; (8009a0c <OTM8009A_Init+0x330>)
 80099a8:	2000      	movs	r0, #0
 80099aa:	f7f7 fbc3 	bl	8001134 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 80099ae:	4958      	ldr	r1, [pc, #352]	; (8009b10 <OTM8009A_Init+0x434>)
 80099b0:	2010      	movs	r0, #16
 80099b2:	f7f7 fbbf 	bl	8001134 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 80099b6:	2000      	movs	r0, #0
 80099b8:	4956      	ldr	r1, [pc, #344]	; (8009b14 <OTM8009A_Init+0x438>)
 80099ba:	f7f7 fbbb 	bl	8001134 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 80099be:	2078      	movs	r0, #120	; 0x78
 80099c0:	f000 f9d8 	bl	8009d74 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 80099c4:	2c00      	cmp	r4, #0
 80099c6:	f000 80c7 	beq.w	8009b58 <OTM8009A_Init+0x47c>
 80099ca:	2c02      	cmp	r4, #2
 80099cc:	d103      	bne.n	80099d6 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 80099ce:	4952      	ldr	r1, [pc, #328]	; (8009b18 <OTM8009A_Init+0x43c>)
 80099d0:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80099d2:	f7f7 fbaf 	bl	8001134 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 80099d6:	2d01      	cmp	r5, #1
 80099d8:	d10b      	bne.n	80099f2 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80099da:	4950      	ldr	r1, [pc, #320]	; (8009b1c <OTM8009A_Init+0x440>)
 80099dc:	2000      	movs	r0, #0
 80099de:	f7f7 fba9 	bl	8001134 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80099e2:	494f      	ldr	r1, [pc, #316]	; (8009b20 <OTM8009A_Init+0x444>)
 80099e4:	2004      	movs	r0, #4
 80099e6:	f7f7 fba5 	bl	8001134 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80099ea:	494e      	ldr	r1, [pc, #312]	; (8009b24 <OTM8009A_Init+0x448>)
 80099ec:	2004      	movs	r0, #4
 80099ee:	f7f7 fba1 	bl	8001134 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 80099f2:	494d      	ldr	r1, [pc, #308]	; (8009b28 <OTM8009A_Init+0x44c>)
 80099f4:	2000      	movs	r0, #0
 80099f6:	f7f7 fb9d 	bl	8001134 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 80099fa:	494c      	ldr	r1, [pc, #304]	; (8009b2c <OTM8009A_Init+0x450>)
 80099fc:	2000      	movs	r0, #0
 80099fe:	f7f7 fb99 	bl	8001134 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8009a02:	494b      	ldr	r1, [pc, #300]	; (8009b30 <OTM8009A_Init+0x454>)
 8009a04:	2000      	movs	r0, #0
 8009a06:	f7f7 fb95 	bl	8001134 <DSI_IO_WriteCmd>
 8009a0a:	e093      	b.n	8009b34 <OTM8009A_Init+0x458>
 8009a0c:	080282f8 	.word	0x080282f8
 8009a10:	0802835e 	.word	0x0802835e
 8009a14:	0802830e 	.word	0x0802830e
 8009a18:	080283e4 	.word	0x080283e4
 8009a1c:	08028324 	.word	0x08028324
 8009a20:	0802833a 	.word	0x0802833a
 8009a24:	08028350 	.word	0x08028350
 8009a28:	08028356 	.word	0x08028356
 8009a2c:	08028358 	.word	0x08028358
 8009a30:	0802835a 	.word	0x0802835a
 8009a34:	0802835c 	.word	0x0802835c
 8009a38:	080282fa 	.word	0x080282fa
 8009a3c:	080282fc 	.word	0x080282fc
 8009a40:	080282fe 	.word	0x080282fe
 8009a44:	08028300 	.word	0x08028300
 8009a48:	08028302 	.word	0x08028302
 8009a4c:	08028304 	.word	0x08028304
 8009a50:	08028306 	.word	0x08028306
 8009a54:	08028308 	.word	0x08028308
 8009a58:	0802830a 	.word	0x0802830a
 8009a5c:	0802830c 	.word	0x0802830c
 8009a60:	08028462 	.word	0x08028462
 8009a64:	08028310 	.word	0x08028310
 8009a68:	08028312 	.word	0x08028312
 8009a6c:	08028314 	.word	0x08028314
 8009a70:	08028316 	.word	0x08028316
 8009a74:	08028318 	.word	0x08028318
 8009a78:	0802831a 	.word	0x0802831a
 8009a7c:	0802831c 	.word	0x0802831c
 8009a80:	0802831e 	.word	0x0802831e
 8009a84:	08028320 	.word	0x08028320
 8009a88:	08028465 	.word	0x08028465
 8009a8c:	08028468 	.word	0x08028468
 8009a90:	08028322 	.word	0x08028322
 8009a94:	0802846f 	.word	0x0802846f
 8009a98:	08028326 	.word	0x08028326
 8009a9c:	0802847e 	.word	0x0802847e
 8009aa0:	08028328 	.word	0x08028328
 8009aa4:	08028362 	.word	0x08028362
 8009aa8:	0802832a 	.word	0x0802832a
 8009aac:	08028348 	.word	0x08028348
 8009ab0:	0802836d 	.word	0x0802836d
 8009ab4:	0802832c 	.word	0x0802832c
 8009ab8:	08028378 	.word	0x08028378
 8009abc:	08028388 	.word	0x08028388
 8009ac0:	08028398 	.word	0x08028398
 8009ac4:	080283a3 	.word	0x080283a3
 8009ac8:	080283b3 	.word	0x080283b3
 8009acc:	0802832e 	.word	0x0802832e
 8009ad0:	080283c3 	.word	0x080283c3
 8009ad4:	08028330 	.word	0x08028330
 8009ad8:	080283ce 	.word	0x080283ce
 8009adc:	080283d9 	.word	0x080283d9
 8009ae0:	080283e7 	.word	0x080283e7
 8009ae4:	080283f7 	.word	0x080283f7
 8009ae8:	08028407 	.word	0x08028407
 8009aec:	08028412 	.word	0x08028412
 8009af0:	08028422 	.word	0x08028422
 8009af4:	0802834a 	.word	0x0802834a
 8009af8:	0802834c 	.word	0x0802834c
 8009afc:	0802834e 	.word	0x0802834e
 8009b00:	08028352 	.word	0x08028352
 8009b04:	08028354 	.word	0x08028354
 8009b08:	08028432 	.word	0x08028432
 8009b0c:	08028440 	.word	0x08028440
 8009b10:	08028451 	.word	0x08028451
 8009b14:	08028332 	.word	0x08028332
 8009b18:	08028334 	.word	0x08028334
 8009b1c:	08028338 	.word	0x08028338
 8009b20:	08028436 	.word	0x08028436
 8009b24:	0802843b 	.word	0x0802843b
 8009b28:	0802833c 	.word	0x0802833c
 8009b2c:	0802833e 	.word	0x0802833e
 8009b30:	08028340 	.word	0x08028340

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8009b34:	490a      	ldr	r1, [pc, #40]	; (8009b60 <OTM8009A_Init+0x484>)
 8009b36:	2000      	movs	r0, #0
 8009b38:	f7f7 fafc 	bl	8001134 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8009b3c:	4909      	ldr	r1, [pc, #36]	; (8009b64 <OTM8009A_Init+0x488>)
 8009b3e:	2000      	movs	r0, #0
 8009b40:	f7f7 faf8 	bl	8001134 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009b44:	4908      	ldr	r1, [pc, #32]	; (8009b68 <OTM8009A_Init+0x48c>)
 8009b46:	2000      	movs	r0, #0
 8009b48:	f7f7 faf4 	bl	8001134 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8009b4c:	4907      	ldr	r1, [pc, #28]	; (8009b6c <OTM8009A_Init+0x490>)
 8009b4e:	2000      	movs	r0, #0
 8009b50:	f7f7 faf0 	bl	8001134 <DSI_IO_WriteCmd>

  return 0;
}
 8009b54:	2000      	movs	r0, #0
 8009b56:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8009b58:	4905      	ldr	r1, [pc, #20]	; (8009b70 <OTM8009A_Init+0x494>)
 8009b5a:	4620      	mov	r0, r4
 8009b5c:	e739      	b.n	80099d2 <OTM8009A_Init+0x2f6>
 8009b5e:	bf00      	nop
 8009b60:	08028342 	.word	0x08028342
 8009b64:	08028344 	.word	0x08028344
 8009b68:	080282f8 	.word	0x080282f8
 8009b6c:	08028346 	.word	0x08028346
 8009b70:	08028336 	.word	0x08028336

08009b74 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009b74:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009b76:	4d2f      	ldr	r5, [pc, #188]	; (8009c34 <I2C1_Init+0xc0>)
{
 8009b78:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009b7a:	4628      	mov	r0, r5
 8009b7c:	f002 fbc6 	bl	800c30c <HAL_I2C_GetState>
 8009b80:	4604      	mov	r4, r0
 8009b82:	2800      	cmp	r0, #0
 8009b84:	d154      	bne.n	8009c30 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009b86:	4a2c      	ldr	r2, [pc, #176]	; (8009c38 <I2C1_Init+0xc4>)
 8009b88:	4b2c      	ldr	r3, [pc, #176]	; (8009c3c <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009b8a:	4e2d      	ldr	r6, [pc, #180]	; (8009c40 <I2C1_Init+0xcc>)
 8009b8c:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009b8e:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8009b92:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8009b96:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8009b9a:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8009b9e:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8009ba2:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009ba4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8009ba6:	f043 0302 	orr.w	r3, r3, #2
 8009baa:	6333      	str	r3, [r6, #48]	; 0x30
 8009bac:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8009bae:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009bb0:	f003 0302 	and.w	r3, r3, #2
 8009bb4:	9301      	str	r3, [sp, #4]
 8009bb6:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8009bb8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009bbc:	2312      	movs	r3, #18
 8009bbe:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8009bc2:	2002      	movs	r0, #2
 8009bc4:	2304      	movs	r3, #4
 8009bc6:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009bca:	a903      	add	r1, sp, #12
 8009bcc:	481d      	ldr	r0, [pc, #116]	; (8009c44 <I2C1_Init+0xd0>)
 8009bce:	f001 fdcb 	bl	800b768 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009bd2:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009bd6:	a903      	add	r1, sp, #12
 8009bd8:	481a      	ldr	r0, [pc, #104]	; (8009c44 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009bda:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009bdc:	f001 fdc4 	bl	800b768 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8009be0:	9402      	str	r4, [sp, #8]
 8009be2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009be4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009be8:	6433      	str	r3, [r6, #64]	; 0x40
 8009bea:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009bec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009bf0:	9302      	str	r3, [sp, #8]
 8009bf2:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8009bf4:	6a33      	ldr	r3, [r6, #32]
 8009bf6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009bfa:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8009bfc:	6a33      	ldr	r3, [r6, #32]
 8009bfe:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8009c02:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8009c04:	4622      	mov	r2, r4
 8009c06:	2105      	movs	r1, #5
 8009c08:	201f      	movs	r0, #31
 8009c0a:	f000 ff77 	bl	800aafc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8009c0e:	201f      	movs	r0, #31
 8009c10:	f000 ffa6 	bl	800ab60 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8009c14:	4622      	mov	r2, r4
 8009c16:	2105      	movs	r1, #5
 8009c18:	2020      	movs	r0, #32
 8009c1a:	f000 ff6f 	bl	800aafc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8009c1e:	2020      	movs	r0, #32
 8009c20:	f000 ff9e 	bl	800ab60 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8009c24:	4628      	mov	r0, r5
  }
}
 8009c26:	b008      	add	sp, #32
 8009c28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8009c2c:	f002 b914 	b.w	800be58 <HAL_I2C_Init>
}
 8009c30:	b008      	add	sp, #32
 8009c32:	bd70      	pop	{r4, r5, r6, pc}
 8009c34:	20004d34 	.word	0x20004d34
 8009c38:	40005400 	.word	0x40005400
 8009c3c:	00061a80 	.word	0x00061a80
 8009c40:	40023800 	.word	0x40023800
 8009c44:	40020400 	.word	0x40020400

08009c48 <BSP_PB_Init>:
{
 8009c48:	b510      	push	{r4, lr}
 8009c4a:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8009c4c:	4b19      	ldr	r3, [pc, #100]	; (8009cb4 <BSP_PB_Init+0x6c>)
 8009c4e:	2400      	movs	r4, #0
 8009c50:	9400      	str	r4, [sp, #0]
 8009c52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009c54:	f042 0201 	orr.w	r2, r2, #1
 8009c58:	631a      	str	r2, [r3, #48]	; 0x30
 8009c5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c5c:	f003 0301 	and.w	r3, r3, #1
 8009c60:	9300      	str	r3, [sp, #0]
 8009c62:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009c64:	b969      	cbnz	r1, 8009c82 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009c66:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8009c68:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009c6c:	2302      	movs	r3, #2
 8009c6e:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009c70:	4b11      	ldr	r3, [pc, #68]	; (8009cb8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009c72:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009c74:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009c78:	a901      	add	r1, sp, #4
 8009c7a:	f001 fd75 	bl	800b768 <HAL_GPIO_Init>
}
 8009c7e:	b006      	add	sp, #24
 8009c80:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8009c82:	2901      	cmp	r1, #1
 8009c84:	d1fb      	bne.n	8009c7e <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009c86:	2302      	movs	r3, #2
 8009c88:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8009c8a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8009c8e:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009c90:	4b09      	ldr	r3, [pc, #36]	; (8009cb8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009c92:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009c94:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009c98:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009c9a:	a901      	add	r1, sp, #4
 8009c9c:	f001 fd64 	bl	800b768 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8009ca0:	4622      	mov	r2, r4
 8009ca2:	210f      	movs	r1, #15
 8009ca4:	2006      	movs	r0, #6
 8009ca6:	f000 ff29 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8009caa:	2006      	movs	r0, #6
 8009cac:	f000 ff58 	bl	800ab60 <HAL_NVIC_EnableIRQ>
}
 8009cb0:	e7e5      	b.n	8009c7e <BSP_PB_Init+0x36>
 8009cb2:	bf00      	nop
 8009cb4:	40023800 	.word	0x40023800
 8009cb8:	20000048 	.word	0x20000048

08009cbc <BSP_PB_GetState>:
{
 8009cbc:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8009cbe:	4b03      	ldr	r3, [pc, #12]	; (8009ccc <BSP_PB_GetState+0x10>)
 8009cc0:	2101      	movs	r1, #1
 8009cc2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009cc6:	f001 fed7 	bl	800ba78 <HAL_GPIO_ReadPin>
}
 8009cca:	bd08      	pop	{r3, pc}
 8009ccc:	20000048 	.word	0x20000048

08009cd0 <TS_IO_Init>:
 8009cd0:	f7ff bf50 	b.w	8009b74 <I2C1_Init>

08009cd4 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8009cd4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8009cd6:	2301      	movs	r3, #1
 8009cd8:	f88d 2017 	strb.w	r2, [sp, #23]
 8009cdc:	2264      	movs	r2, #100	; 0x64
 8009cde:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009ce2:	f10d 0217 	add.w	r2, sp, #23
 8009ce6:	9200      	str	r2, [sp, #0]
 8009ce8:	460a      	mov	r2, r1
 8009cea:	4601      	mov	r1, r0
 8009cec:	4805      	ldr	r0, [pc, #20]	; (8009d04 <TS_IO_Write+0x30>)
 8009cee:	f002 f975 	bl	800bfdc <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8009cf2:	b120      	cbz	r0, 8009cfe <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8009cf4:	4803      	ldr	r0, [pc, #12]	; (8009d04 <TS_IO_Write+0x30>)
 8009cf6:	f002 f957 	bl	800bfa8 <HAL_I2C_DeInit>
  I2C1_Init();
 8009cfa:	f7ff ff3b 	bl	8009b74 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8009cfe:	b007      	add	sp, #28
 8009d00:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d04:	20004d34 	.word	0x20004d34

08009d08 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8009d08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8009d0a:	2300      	movs	r3, #0
{
 8009d0c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8009d0e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8009d12:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009d16:	2301      	movs	r3, #1
 8009d18:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009d1c:	f10d 0117 	add.w	r1, sp, #23
 8009d20:	9100      	str	r1, [sp, #0]
 8009d22:	4601      	mov	r1, r0
 8009d24:	4806      	ldr	r0, [pc, #24]	; (8009d40 <TS_IO_Read+0x38>)
 8009d26:	f002 f9e9 	bl	800c0fc <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009d2a:	b120      	cbz	r0, 8009d36 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8009d2c:	4804      	ldr	r0, [pc, #16]	; (8009d40 <TS_IO_Read+0x38>)
 8009d2e:	f002 f93b 	bl	800bfa8 <HAL_I2C_DeInit>
  I2C1_Init();
 8009d32:	f7ff ff1f 	bl	8009b74 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8009d36:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8009d3a:	b007      	add	sp, #28
 8009d3c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d40:	20004d34 	.word	0x20004d34

08009d44 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8009d44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8009d46:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8009d4a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009d4e:	9200      	str	r2, [sp, #0]
 8009d50:	2301      	movs	r3, #1
 8009d52:	460a      	mov	r2, r1
 8009d54:	4601      	mov	r1, r0
 8009d56:	4806      	ldr	r0, [pc, #24]	; (8009d70 <TS_IO_ReadMultiple+0x2c>)
 8009d58:	f002 f9d0 	bl	800c0fc <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009d5c:	4604      	mov	r4, r0
 8009d5e:	b120      	cbz	r0, 8009d6a <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8009d60:	4803      	ldr	r0, [pc, #12]	; (8009d70 <TS_IO_ReadMultiple+0x2c>)
 8009d62:	f002 f921 	bl	800bfa8 <HAL_I2C_DeInit>
  I2C1_Init();
 8009d66:	f7ff ff05 	bl	8009b74 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8009d6a:	b2a0      	uxth	r0, r4
 8009d6c:	b004      	add	sp, #16
 8009d6e:	bd10      	pop	{r4, pc}
 8009d70:	20004d34 	.word	0x20004d34

08009d74 <OTM8009A_IO_Delay>:
 8009d74:	f000 bc3a 	b.w	800a5ec <HAL_Delay>

08009d78 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009d78:	b500      	push	{lr}
 8009d7a:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009d7c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009d80:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009d82:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8009d86:	2205      	movs	r2, #5
 8009d88:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009d8a:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009d8c:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8009d8e:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8009d90:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009d94:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009d98:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8009d9c:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009d9e:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8009da0:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8009da2:	2210      	movs	r2, #16
 8009da4:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009da6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009daa:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8009dac:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009dae:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8009db0:	a906      	add	r1, sp, #24
 8009db2:	466a      	mov	r2, sp
 8009db4:	4804      	ldr	r0, [pc, #16]	; (8009dc8 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8009db6:	f002 fe22 	bl	800c9fe <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8009dba:	3800      	subs	r0, #0
 8009dbc:	bf18      	it	ne
 8009dbe:	2001      	movne	r0, #1
 8009dc0:	b015      	add	sp, #84	; 0x54
 8009dc2:	f85d fb04 	ldr.w	pc, [sp], #4
 8009dc6:	bf00      	nop
 8009dc8:	20004d88 	.word	0x20004d88

08009dcc <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8009dcc:	b500      	push	{lr}
 8009dce:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009dd0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009dd4:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8009dd6:	2306      	movs	r3, #6
 8009dd8:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009dda:	4817      	ldr	r0, [pc, #92]	; (8009e38 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009ddc:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009dde:	f241 3288 	movw	r2, #5000	; 0x1388
 8009de2:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009de4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009de8:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8009dec:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8009dee:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009df0:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009df2:	f002 fdc0 	bl	800c976 <HAL_QSPI_Command>
 8009df6:	b9e0      	cbnz	r0, 8009e32 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8009df8:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8009dfa:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8009dfe:	2201      	movs	r2, #1
 8009e00:	2310      	movs	r3, #16
 8009e02:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8009e06:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8009e0a:	2305      	movs	r3, #5
 8009e0c:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8009e10:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8009e14:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8009e16:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009e18:	4807      	ldr	r0, [pc, #28]	; (8009e38 <QSPI_WriteEnable.constprop.0+0x6c>)
 8009e1a:	f241 3388 	movw	r3, #5000	; 0x1388
 8009e1e:	466a      	mov	r2, sp
 8009e20:	a906      	add	r1, sp, #24
 8009e22:	f002 fdec 	bl	800c9fe <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8009e26:	3800      	subs	r0, #0
 8009e28:	bf18      	it	ne
 8009e2a:	2001      	movne	r0, #1
}
 8009e2c:	b015      	add	sp, #84	; 0x54
 8009e2e:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8009e32:	2001      	movs	r0, #1
 8009e34:	e7fa      	b.n	8009e2c <QSPI_WriteEnable.constprop.0+0x60>
 8009e36:	bf00      	nop
 8009e38:	20004d88 	.word	0x20004d88

08009e3c <BSP_QSPI_EnableMemoryMappedMode>:
{
 8009e3c:	b500      	push	{lr}
 8009e3e:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009e40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009e44:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8009e46:	23eb      	movs	r3, #235	; 0xeb
 8009e48:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8009e4a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8009e4e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8009e50:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009e54:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8009e56:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8009e5a:	2300      	movs	r3, #0
 8009e5c:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8009e60:	220a      	movs	r2, #10
 8009e62:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009e64:	a902      	add	r1, sp, #8
 8009e66:	466a      	mov	r2, sp
 8009e68:	4806      	ldr	r0, [pc, #24]	; (8009e84 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009e6a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009e6c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8009e70:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009e72:	f002 fe14 	bl	800ca9e <HAL_QSPI_MemoryMapped>
}
 8009e76:	3800      	subs	r0, #0
 8009e78:	bf18      	it	ne
 8009e7a:	2001      	movne	r0, #1
 8009e7c:	b011      	add	sp, #68	; 0x44
 8009e7e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009e82:	bf00      	nop
 8009e84:	20004d88 	.word	0x20004d88

08009e88 <BSP_QSPI_MspInit>:
{
 8009e88:	b570      	push	{r4, r5, r6, lr}
 8009e8a:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8009e8c:	4b2c      	ldr	r3, [pc, #176]	; (8009f40 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009e8e:	482d      	ldr	r0, [pc, #180]	; (8009f44 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8009e90:	2400      	movs	r4, #0
 8009e92:	9400      	str	r4, [sp, #0]
 8009e94:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009e96:	f042 0202 	orr.w	r2, r2, #2
 8009e9a:	639a      	str	r2, [r3, #56]	; 0x38
 8009e9c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009e9e:	f002 0202 	and.w	r2, r2, #2
 8009ea2:	9200      	str	r2, [sp, #0]
 8009ea4:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8009ea6:	699a      	ldr	r2, [r3, #24]
 8009ea8:	f042 0202 	orr.w	r2, r2, #2
 8009eac:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009eae:	699a      	ldr	r2, [r3, #24]
 8009eb0:	f022 0202 	bic.w	r2, r2, #2
 8009eb4:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8009eb6:	9401      	str	r4, [sp, #4]
 8009eb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009eba:	f042 0202 	orr.w	r2, r2, #2
 8009ebe:	631a      	str	r2, [r3, #48]	; 0x30
 8009ec0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ec2:	f002 0202 	and.w	r2, r2, #2
 8009ec6:	9201      	str	r2, [sp, #4]
 8009ec8:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8009eca:	9402      	str	r4, [sp, #8]
 8009ecc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ece:	f042 0220 	orr.w	r2, r2, #32
 8009ed2:	631a      	str	r2, [r3, #48]	; 0x30
 8009ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ed6:	f003 0320 	and.w	r3, r3, #32
 8009eda:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009edc:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8009ede:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009ee0:	2302      	movs	r3, #2
 8009ee2:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8009ee6:	2101      	movs	r1, #1
 8009ee8:	2303      	movs	r3, #3
 8009eea:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009eee:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009ef0:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009ef2:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009ef4:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009ef6:	f001 fc37 	bl	800b768 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8009efa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8009efe:	a903      	add	r1, sp, #12
 8009f00:	4811      	ldr	r0, [pc, #68]	; (8009f48 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8009f02:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8009f04:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009f06:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8009f08:	f001 fc2e 	bl	800b768 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009f0c:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009f10:	a903      	add	r1, sp, #12
 8009f12:	480d      	ldr	r0, [pc, #52]	; (8009f48 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009f14:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009f16:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009f18:	f001 fc26 	bl	800b768 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8009f1c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009f1e:	a903      	add	r1, sp, #12
 8009f20:	4809      	ldr	r0, [pc, #36]	; (8009f48 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8009f22:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009f24:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009f26:	f001 fc1f 	bl	800b768 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8009f2a:	4622      	mov	r2, r4
 8009f2c:	210f      	movs	r1, #15
 8009f2e:	205b      	movs	r0, #91	; 0x5b
 8009f30:	f000 fde4 	bl	800aafc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8009f34:	205b      	movs	r0, #91	; 0x5b
 8009f36:	f000 fe13 	bl	800ab60 <HAL_NVIC_EnableIRQ>
}
 8009f3a:	b008      	add	sp, #32
 8009f3c:	bd70      	pop	{r4, r5, r6, pc}
 8009f3e:	bf00      	nop
 8009f40:	40023800 	.word	0x40023800
 8009f44:	40020400 	.word	0x40020400
 8009f48:	40021400 	.word	0x40021400

08009f4c <BSP_QSPI_Init>:
{
 8009f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8009f4e:	4c48      	ldr	r4, [pc, #288]	; (800a070 <BSP_QSPI_Init+0x124>)
 8009f50:	4b48      	ldr	r3, [pc, #288]	; (800a074 <BSP_QSPI_Init+0x128>)
 8009f52:	6023      	str	r3, [r4, #0]
{
 8009f54:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009f56:	4620      	mov	r0, r4
 8009f58:	f002 fcfa 	bl	800c950 <HAL_QSPI_DeInit>
 8009f5c:	4605      	mov	r5, r0
 8009f5e:	b110      	cbz	r0, 8009f66 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8009f60:	2001      	movs	r0, #1
}
 8009f62:	b011      	add	sp, #68	; 0x44
 8009f64:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8009f66:	4601      	mov	r1, r0
 8009f68:	4620      	mov	r0, r4
 8009f6a:	f7ff ff8d 	bl	8009e88 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8009f6e:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009f70:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8009f72:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009f76:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009f78:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8009f7c:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8009f80:	fab3 f383 	clz	r3, r3
 8009f84:	3b01      	subs	r3, #1
 8009f86:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009f88:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8009f8a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8009f8e:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8009f92:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009f96:	f002 fc87 	bl	800c8a8 <HAL_QSPI_Init>
 8009f9a:	2800      	cmp	r0, #0
 8009f9c:	d1e0      	bne.n	8009f60 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009f9e:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009fa2:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009fa6:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009faa:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8009fac:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8009fae:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009fb0:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009fb2:	f241 3288 	movw	r2, #5000	; 0x1388
 8009fb6:	a902      	add	r1, sp, #8
 8009fb8:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009fba:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009fbc:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009fbe:	f002 fcda 	bl	800c976 <HAL_QSPI_Command>
 8009fc2:	b108      	cbz	r0, 8009fc8 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8009fc4:	2004      	movs	r0, #4
 8009fc6:	e7cc      	b.n	8009f62 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8009fc8:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009fca:	f241 3288 	movw	r2, #5000	; 0x1388
 8009fce:	a902      	add	r1, sp, #8
 8009fd0:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8009fd2:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009fd4:	f002 fccf 	bl	800c976 <HAL_QSPI_Command>
 8009fd8:	2800      	cmp	r0, #0
 8009fda:	d1f3      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8009fdc:	f241 3088 	movw	r0, #5000	; 0x1388
 8009fe0:	f7ff feca 	bl	8009d78 <QSPI_AutoPollingMemReady.constprop.0>
 8009fe4:	2800      	cmp	r0, #0
 8009fe6:	d1ed      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009fe8:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8009fec:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009ff0:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8009ff4:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8009ff6:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009ff8:	f241 3288 	movw	r2, #5000	; 0x1388
 8009ffc:	a902      	add	r1, sp, #8
 8009ffe:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800a000:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800a002:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800a004:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800a006:	f002 fcb6 	bl	800c976 <HAL_QSPI_Command>
 800a00a:	2800      	cmp	r0, #0
 800a00c:	d1da      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800a00e:	f241 3288 	movw	r2, #5000	; 0x1388
 800a012:	f10d 0107 	add.w	r1, sp, #7
 800a016:	4620      	mov	r0, r4
 800a018:	f002 fe26 	bl	800cc68 <HAL_QSPI_Receive>
 800a01c:	2800      	cmp	r0, #0
 800a01e:	d1d1      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800a020:	f7ff fed4 	bl	8009dcc <QSPI_WriteEnable.constprop.0>
 800a024:	2800      	cmp	r0, #0
 800a026:	d1cd      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800a028:	2381      	movs	r3, #129	; 0x81
 800a02a:	9302      	str	r3, [sp, #8]
 800a02c:	22f0      	movs	r2, #240	; 0xf0
 800a02e:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800a032:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a036:	210a      	movs	r1, #10
 800a038:	fab2 f282 	clz	r2, r2
 800a03c:	fa01 f202 	lsl.w	r2, r1, r2
 800a040:	f003 030f 	and.w	r3, r3, #15
 800a044:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800a046:	a902      	add	r1, sp, #8
 800a048:	f241 3288 	movw	r2, #5000	; 0x1388
 800a04c:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800a04e:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800a052:	f002 fc90 	bl	800c976 <HAL_QSPI_Command>
 800a056:	2800      	cmp	r0, #0
 800a058:	d1b4      	bne.n	8009fc4 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800a05a:	f241 3288 	movw	r2, #5000	; 0x1388
 800a05e:	f10d 0107 	add.w	r1, sp, #7
 800a062:	4620      	mov	r0, r4
 800a064:	f002 fda4 	bl	800cbb0 <HAL_QSPI_Transmit>
 800a068:	2800      	cmp	r0, #0
 800a06a:	f43f af7a 	beq.w	8009f62 <BSP_QSPI_Init+0x16>
 800a06e:	e7a9      	b.n	8009fc4 <BSP_QSPI_Init+0x78>
 800a070:	20004d88 	.word	0x20004d88
 800a074:	a0001000 	.word	0xa0001000

0800a078 <BSP_QSPI_MspDeInit>:
{
 800a078:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800a07a:	205b      	movs	r0, #91	; 0x5b
 800a07c:	f000 fd7e 	bl	800ab7c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800a080:	4814      	ldr	r0, [pc, #80]	; (800a0d4 <BSP_QSPI_MspDeInit+0x5c>)
 800a082:	2140      	movs	r1, #64	; 0x40
 800a084:	f001 fc56 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800a088:	4813      	ldr	r0, [pc, #76]	; (800a0d8 <BSP_QSPI_MspDeInit+0x60>)
 800a08a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800a08e:	f001 fc51 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800a092:	4811      	ldr	r0, [pc, #68]	; (800a0d8 <BSP_QSPI_MspDeInit+0x60>)
 800a094:	f44f 7180 	mov.w	r1, #256	; 0x100
 800a098:	f001 fc4c 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800a09c:	480e      	ldr	r0, [pc, #56]	; (800a0d8 <BSP_QSPI_MspDeInit+0x60>)
 800a09e:	f44f 7100 	mov.w	r1, #512	; 0x200
 800a0a2:	f001 fc47 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800a0a6:	480c      	ldr	r0, [pc, #48]	; (800a0d8 <BSP_QSPI_MspDeInit+0x60>)
 800a0a8:	2180      	movs	r1, #128	; 0x80
 800a0aa:	f001 fc43 	bl	800b934 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800a0ae:	480a      	ldr	r0, [pc, #40]	; (800a0d8 <BSP_QSPI_MspDeInit+0x60>)
 800a0b0:	2140      	movs	r1, #64	; 0x40
 800a0b2:	f001 fc3f 	bl	800b934 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800a0b6:	4b09      	ldr	r3, [pc, #36]	; (800a0dc <BSP_QSPI_MspDeInit+0x64>)
 800a0b8:	699a      	ldr	r2, [r3, #24]
 800a0ba:	f042 0202 	orr.w	r2, r2, #2
 800a0be:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800a0c0:	699a      	ldr	r2, [r3, #24]
 800a0c2:	f022 0202 	bic.w	r2, r2, #2
 800a0c6:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800a0c8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a0ca:	f022 0202 	bic.w	r2, r2, #2
 800a0ce:	639a      	str	r2, [r3, #56]	; 0x38
}
 800a0d0:	bd08      	pop	{r3, pc}
 800a0d2:	bf00      	nop
 800a0d4:	40020400 	.word	0x40020400
 800a0d8:	40021400 	.word	0x40021400
 800a0dc:	40023800 	.word	0x40023800

0800a0e0 <BSP_QSPI_DeInit>:
{
 800a0e0:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800a0e2:	4d08      	ldr	r5, [pc, #32]	; (800a104 <BSP_QSPI_DeInit+0x24>)
 800a0e4:	4b08      	ldr	r3, [pc, #32]	; (800a108 <BSP_QSPI_DeInit+0x28>)
 800a0e6:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800a0e8:	4628      	mov	r0, r5
 800a0ea:	f002 fc31 	bl	800c950 <HAL_QSPI_DeInit>
 800a0ee:	4604      	mov	r4, r0
 800a0f0:	b928      	cbnz	r0, 800a0fe <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800a0f2:	4601      	mov	r1, r0
 800a0f4:	4628      	mov	r0, r5
 800a0f6:	f7ff ffbf 	bl	800a078 <BSP_QSPI_MspDeInit>
}
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800a0fe:	2401      	movs	r4, #1
 800a100:	e7fb      	b.n	800a0fa <BSP_QSPI_DeInit+0x1a>
 800a102:	bf00      	nop
 800a104:	20004d88 	.word	0x20004d88
 800a108:	a0001000 	.word	0xa0001000

0800a10c <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800a10c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800a110:	4c21      	ldr	r4, [pc, #132]	; (800a198 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a112:	4d22      	ldr	r5, [pc, #136]	; (800a19c <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a114:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800a116:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a11a:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a11c:	4621      	mov	r1, r4
{
 800a11e:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a120:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a124:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a126:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800a12a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800a12e:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a132:	f003 fa3d 	bl	800d5b0 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800a136:	4630      	mov	r0, r6
 800a138:	f000 fa58 	bl	800a5ec <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800a13c:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a13e:	4621      	mov	r1, r4
 800a140:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a144:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a146:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800a14a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a14e:	f003 fa2f 	bl	800d5b0 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800a152:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a154:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a158:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800a15a:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a15c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a160:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800a162:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a166:	f003 fa23 	bl	800d5b0 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800a16a:	f44f 730c 	mov.w	r3, #560	; 0x230
 800a16e:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800a170:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800a172:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a176:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800a178:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800a17a:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a17c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a180:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800a182:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800a184:	f003 fa14 	bl	800d5b0 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800a188:	4649      	mov	r1, r9
 800a18a:	4628      	mov	r0, r5
}
 800a18c:	b003      	add	sp, #12
 800a18e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800a192:	f003 ba2b 	b.w	800d5ec <HAL_SDRAM_ProgramRefreshRate>
 800a196:	bf00      	nop
 800a198:	20004dd4 	.word	0x20004dd4
 800a19c:	20004ec0 	.word	0x20004ec0

0800a1a0 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800a1a0:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800a1a2:	4606      	mov	r6, r0
{
 800a1a4:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800a1a6:	2800      	cmp	r0, #0
 800a1a8:	f000 80bd 	beq.w	800a326 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800a1ac:	4b5f      	ldr	r3, [pc, #380]	; (800a32c <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800a1ae:	4860      	ldr	r0, [pc, #384]	; (800a330 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800a1b0:	4c60      	ldr	r4, [pc, #384]	; (800a334 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800a1b2:	2500      	movs	r5, #0
 800a1b4:	9500      	str	r5, [sp, #0]
 800a1b6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a1b8:	f042 0201 	orr.w	r2, r2, #1
 800a1bc:	639a      	str	r2, [r3, #56]	; 0x38
 800a1be:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a1c0:	f002 0201 	and.w	r2, r2, #1
 800a1c4:	9200      	str	r2, [sp, #0]
 800a1c6:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 800a1c8:	9501      	str	r5, [sp, #4]
 800a1ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1cc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800a1d0:	631a      	str	r2, [r3, #48]	; 0x30
 800a1d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1d4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800a1d8:	9201      	str	r2, [sp, #4]
 800a1da:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800a1dc:	9502      	str	r5, [sp, #8]
 800a1de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1e0:	f042 0204 	orr.w	r2, r2, #4
 800a1e4:	631a      	str	r2, [r3, #48]	; 0x30
 800a1e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1e8:	f002 0204 	and.w	r2, r2, #4
 800a1ec:	9202      	str	r2, [sp, #8]
 800a1ee:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800a1f0:	9503      	str	r5, [sp, #12]
 800a1f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1f4:	f042 0208 	orr.w	r2, r2, #8
 800a1f8:	631a      	str	r2, [r3, #48]	; 0x30
 800a1fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a1fc:	f002 0208 	and.w	r2, r2, #8
 800a200:	9203      	str	r2, [sp, #12]
 800a202:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800a204:	9504      	str	r5, [sp, #16]
 800a206:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a208:	f042 0210 	orr.w	r2, r2, #16
 800a20c:	631a      	str	r2, [r3, #48]	; 0x30
 800a20e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a210:	f002 0210 	and.w	r2, r2, #16
 800a214:	9204      	str	r2, [sp, #16]
 800a216:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800a218:	9505      	str	r5, [sp, #20]
 800a21a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a21c:	f042 0220 	orr.w	r2, r2, #32
 800a220:	631a      	str	r2, [r3, #48]	; 0x30
 800a222:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a224:	f002 0220 	and.w	r2, r2, #32
 800a228:	9205      	str	r2, [sp, #20]
 800a22a:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800a22c:	9506      	str	r5, [sp, #24]
 800a22e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a230:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a234:	631a      	str	r2, [r3, #48]	; 0x30
 800a236:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a238:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800a23c:	9206      	str	r2, [sp, #24]
 800a23e:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800a240:	9507      	str	r5, [sp, #28]
 800a242:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a244:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800a248:	631a      	str	r2, [r3, #48]	; 0x30
 800a24a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a24c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800a250:	9207      	str	r2, [sp, #28]
 800a252:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800a254:	9508      	str	r5, [sp, #32]
 800a256:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a258:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a25c:	631a      	str	r2, [r3, #48]	; 0x30
 800a25e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a260:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a264:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800a266:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800a268:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800a26a:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800a26c:	2301      	movs	r3, #1
 800a26e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800a272:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800a274:	220c      	movs	r2, #12
 800a276:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800a278:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800a27a:	f001 fa75 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800a27e:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800a282:	482d      	ldr	r0, [pc, #180]	; (800a338 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800a284:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800a286:	a909      	add	r1, sp, #36	; 0x24
 800a288:	f001 fa6e 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800a28c:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800a290:	482a      	ldr	r0, [pc, #168]	; (800a33c <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800a292:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800a294:	a909      	add	r1, sp, #36	; 0x24
 800a296:	f001 fa67 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800a29a:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800a29e:	4828      	ldr	r0, [pc, #160]	; (800a340 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800a2a0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800a2a2:	a909      	add	r1, sp, #36	; 0x24
 800a2a4:	f001 fa60 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800a2a8:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800a2ac:	4825      	ldr	r0, [pc, #148]	; (800a344 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800a2ae:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800a2b0:	a909      	add	r1, sp, #36	; 0x24
 800a2b2:	f001 fa59 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800a2b6:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800a2ba:	4823      	ldr	r0, [pc, #140]	; (800a348 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800a2bc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800a2be:	a909      	add	r1, sp, #36	; 0x24
 800a2c0:	f001 fa52 	bl	800b768 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800a2c4:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800a2c8:	4820      	ldr	r0, [pc, #128]	; (800a34c <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800a2ca:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800a2cc:	a909      	add	r1, sp, #36	; 0x24
 800a2ce:	f001 fa4b 	bl	800b768 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 800a2d2:	2280      	movs	r2, #128	; 0x80
 800a2d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2d8:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800a2dc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800a2e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800a2e4:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800a2e8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 800a2ec:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 800a2f0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 800a2f4:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800a2f8:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800a2fa:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800a2fe:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800a300:	4b13      	ldr	r3, [pc, #76]	; (800a350 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800a302:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 800a304:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800a306:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800a308:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800a30a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 800a30c:	f000 fcf0 	bl	800acf0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 800a310:	4620      	mov	r0, r4
 800a312:	f000 fc6d 	bl	800abf0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800a316:	2038      	movs	r0, #56	; 0x38
 800a318:	462a      	mov	r2, r5
 800a31a:	2105      	movs	r1, #5
 800a31c:	f000 fbee 	bl	800aafc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 800a320:	2038      	movs	r0, #56	; 0x38
 800a322:	f000 fc1d 	bl	800ab60 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800a326:	b00e      	add	sp, #56	; 0x38
 800a328:	bd70      	pop	{r4, r5, r6, pc}
 800a32a:	bf00      	nop
 800a32c:	40023800 	.word	0x40023800
 800a330:	40020800 	.word	0x40020800
 800a334:	20004e60 	.word	0x20004e60
 800a338:	40020c00 	.word	0x40020c00
 800a33c:	40021000 	.word	0x40021000
 800a340:	40021400 	.word	0x40021400
 800a344:	40021800 	.word	0x40021800
 800a348:	40021c00 	.word	0x40021c00
 800a34c:	40022000 	.word	0x40022000
 800a350:	40026410 	.word	0x40026410

0800a354 <BSP_SDRAM_Init>:
{
 800a354:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800a356:	4c19      	ldr	r4, [pc, #100]	; (800a3bc <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800a358:	4d19      	ldr	r5, [pc, #100]	; (800a3c0 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800a35a:	4b1a      	ldr	r3, [pc, #104]	; (800a3c4 <BSP_SDRAM_Init+0x70>)
 800a35c:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800a35e:	2107      	movs	r1, #7
 800a360:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800a362:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800a364:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800a368:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800a36c:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 800a370:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800a372:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800a374:	2340      	movs	r3, #64	; 0x40
 800a376:	2220      	movs	r2, #32
 800a378:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800a37c:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800a37e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800a382:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800a386:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800a38a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800a38e:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800a392:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800a394:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800a398:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800a39a:	f7ff ff01 	bl	800a1a0 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800a39e:	4629      	mov	r1, r5
 800a3a0:	4620      	mov	r0, r4
 800a3a2:	f003 f8d7 	bl	800d554 <HAL_SDRAM_Init>
 800a3a6:	4c08      	ldr	r4, [pc, #32]	; (800a3c8 <BSP_SDRAM_Init+0x74>)
 800a3a8:	3800      	subs	r0, #0
 800a3aa:	bf18      	it	ne
 800a3ac:	2001      	movne	r0, #1
 800a3ae:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 800a3b0:	f240 5069 	movw	r0, #1385	; 0x569
 800a3b4:	f7ff feaa 	bl	800a10c <BSP_SDRAM_Initialization_sequence>
}
 800a3b8:	7820      	ldrb	r0, [r4, #0]
 800a3ba:	bd38      	pop	{r3, r4, r5, pc}
 800a3bc:	20004ec0 	.word	0x20004ec0
 800a3c0:	20004de4 	.word	0x20004de4
 800a3c4:	a0000140 	.word	0xa0000140
 800a3c8:	2000004d 	.word	0x2000004d

0800a3cc <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800a3cc:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800a3ce:	b148      	cbz	r0, 800a3e4 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 800a3d0:	2038      	movs	r0, #56	; 0x38
 800a3d2:	f000 fbd3 	bl	800ab7c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800a3d6:	4804      	ldr	r0, [pc, #16]	; (800a3e8 <BSP_SDRAM_MspDeInit+0x1c>)
 800a3d8:	4b04      	ldr	r3, [pc, #16]	; (800a3ec <BSP_SDRAM_MspDeInit+0x20>)
 800a3da:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800a3dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 800a3e0:	f000 bc86 	b.w	800acf0 <HAL_DMA_DeInit>
}
 800a3e4:	bd08      	pop	{r3, pc}
 800a3e6:	bf00      	nop
 800a3e8:	20004e00 	.word	0x20004e00
 800a3ec:	40026410 	.word	0x40026410

0800a3f0 <BSP_SDRAM_DeInit>:
{
 800a3f0:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800a3f2:	4c07      	ldr	r4, [pc, #28]	; (800a410 <BSP_SDRAM_DeInit+0x20>)
 800a3f4:	4b07      	ldr	r3, [pc, #28]	; (800a414 <BSP_SDRAM_DeInit+0x24>)
 800a3f6:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800a3f8:	4620      	mov	r0, r4
 800a3fa:	f003 f8cb 	bl	800d594 <HAL_SDRAM_DeInit>
 800a3fe:	4d06      	ldr	r5, [pc, #24]	; (800a418 <BSP_SDRAM_DeInit+0x28>)
 800a400:	4601      	mov	r1, r0
 800a402:	b918      	cbnz	r0, 800a40c <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 800a404:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800a406:	4620      	mov	r0, r4
 800a408:	f7ff ffe0 	bl	800a3cc <BSP_SDRAM_MspDeInit>
}
 800a40c:	7828      	ldrb	r0, [r5, #0]
 800a40e:	bd38      	pop	{r3, r4, r5, pc}
 800a410:	20004ec0 	.word	0x20004ec0
 800a414:	a0000140 	.word	0xa0000140
 800a418:	2000004c 	.word	0x2000004c

0800a41c <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800a41c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 800a420:	4d16      	ldr	r5, [pc, #88]	; (800a47c <BSP_TS_Init+0x60>)
 800a422:	4c17      	ldr	r4, [pc, #92]	; (800a480 <BSP_TS_Init+0x64>)
 800a424:	682b      	ldr	r3, [r5, #0]
{
 800a426:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 800a428:	7820      	ldrb	r0, [r4, #0]
{
 800a42a:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 800a42c:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800a42e:	686b      	ldr	r3, [r5, #4]
 800a430:	2054      	movs	r0, #84	; 0x54
 800a432:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800a434:	b2c0      	uxtb	r0, r0
 800a436:	2811      	cmp	r0, #17
 800a438:	d00a      	beq.n	800a450 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800a43a:	686b      	ldr	r3, [r5, #4]
 800a43c:	2070      	movs	r0, #112	; 0x70
 800a43e:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a440:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800a442:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a444:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800a446:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a448:	d004      	beq.n	800a454 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800a44a:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800a44c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800a450:	2354      	movs	r3, #84	; 0x54
 800a452:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 800a454:	4b0b      	ldr	r3, [pc, #44]	; (800a484 <BSP_TS_Init+0x68>)
 800a456:	f8df 8030 	ldr.w	r8, [pc, #48]	; 800a488 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 800a45a:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 800a45c:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800a460:	42be      	cmp	r6, r7
 800a462:	bf34      	ite	cc
 800a464:	2601      	movcc	r6, #1
 800a466:	260c      	movcs	r6, #12
 800a468:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800a46a:	68ab      	ldr	r3, [r5, #8]
 800a46c:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800a46e:	f8d8 3000 	ldr.w	r3, [r8]
 800a472:	7820      	ldrb	r0, [r4, #0]
 800a474:	68db      	ldr	r3, [r3, #12]
 800a476:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800a478:	2000      	movs	r0, #0
 800a47a:	e7e7      	b.n	800a44c <BSP_TS_Init+0x30>
 800a47c:	20000020 	.word	0x20000020
 800a480:	20004ef4 	.word	0x20004ef4
 800a484:	20004f0c 	.word	0x20004f0c
 800a488:	20004f08 	.word	0x20004f08

0800a48c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800a48c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800a490:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 800a570 <BSP_TS_GetState+0xe4>
 800a494:	4a33      	ldr	r2, [pc, #204]	; (800a564 <BSP_TS_GetState+0xd8>)
 800a496:	f8db 3000 	ldr.w	r3, [fp]
{
 800a49a:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800a49c:	691b      	ldr	r3, [r3, #16]
 800a49e:	7810      	ldrb	r0, [r2, #0]
{
 800a4a0:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800a4a2:	4798      	blx	r3
 800a4a4:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800a4a6:	b158      	cbz	r0, 800a4c0 <BSP_TS_GetState+0x34>
 800a4a8:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800a574 <BSP_TS_GetState+0xe8>
 800a4ac:	4f2e      	ldr	r7, [pc, #184]	; (800a568 <BSP_TS_GetState+0xdc>)
 800a4ae:	f106 0a02 	add.w	sl, r6, #2
 800a4b2:	ad03      	add	r5, sp, #12
 800a4b4:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800a4b6:	f04f 0900 	mov.w	r9, #0
 800a4ba:	7833      	ldrb	r3, [r6, #0]
 800a4bc:	454b      	cmp	r3, r9
 800a4be:	d803      	bhi.n	800a4c8 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 800a4c0:	2000      	movs	r0, #0
 800a4c2:	b005      	add	sp, #20
 800a4c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800a4c8:	f8db 3000 	ldr.w	r3, [fp]
 800a4cc:	4825      	ldr	r0, [pc, #148]	; (800a564 <BSP_TS_GetState+0xd8>)
 800a4ce:	695b      	ldr	r3, [r3, #20]
 800a4d0:	7800      	ldrb	r0, [r0, #0]
 800a4d2:	9101      	str	r1, [sp, #4]
 800a4d4:	462a      	mov	r2, r5
 800a4d6:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800a4d8:	4b24      	ldr	r3, [pc, #144]	; (800a56c <BSP_TS_GetState+0xe0>)
 800a4da:	9901      	ldr	r1, [sp, #4]
 800a4dc:	781b      	ldrb	r3, [r3, #0]
 800a4de:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 800a4e2:	bf1f      	itttt	ne
 800a4e4:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800a4e6:	8828      	ldrhne	r0, [r5, #0]
 800a4e8:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800a4ea:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800a4ec:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800a4ee:	bf41      	itttt	mi
 800a4f0:	880a      	ldrhmi	r2, [r1, #0]
 800a4f2:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800a4f6:	3203      	addmi	r2, #3
 800a4f8:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800a4fa:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800a4fc:	bf48      	it	mi
 800a4fe:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a500:	f8d8 2000 	ldr.w	r2, [r8]
 800a504:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800a508:	bf42      	ittt	mi
 800a50a:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800a50e:	3301      	addmi	r3, #1
 800a510:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a512:	b293      	uxth	r3, r2
 800a514:	4290      	cmp	r0, r2
 800a516:	bf8c      	ite	hi
 800a518:	1ac3      	subhi	r3, r0, r3
 800a51a:	1a1b      	subls	r3, r3, r0
 800a51c:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a51e:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a522:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a524:	683b      	ldr	r3, [r7, #0]
 800a526:	b29c      	uxth	r4, r3
 800a528:	429a      	cmp	r2, r3
 800a52a:	bf88      	it	hi
 800a52c:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800a52e:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a530:	bf98      	it	ls
 800a532:	1aa4      	subls	r4, r4, r2
 800a534:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800a536:	441c      	add	r4, r3
 800a538:	46c4      	mov	ip, r8
 800a53a:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800a53c:	bfc8      	it	gt
 800a53e:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800a542:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800a546:	bfc8      	it	gt
 800a548:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800a54a:	46be      	mov	lr, r7
 800a54c:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 800a550:	f8de 3000 	ldr.w	r3, [lr]
 800a554:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 800a558:	f108 0804 	add.w	r8, r8, #4
 800a55c:	3704      	adds	r7, #4
 800a55e:	f109 0901 	add.w	r9, r9, #1
 800a562:	e7aa      	b.n	800a4ba <BSP_TS_GetState+0x2e>
 800a564:	20004ef4 	.word	0x20004ef4
 800a568:	20004f00 	.word	0x20004f00
 800a56c:	20004f0c 	.word	0x20004f0c
 800a570:	20004f08 	.word	0x20004f08
 800a574:	20004ef8 	.word	0x20004ef8

0800a578 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a578:	4b05      	ldr	r3, [pc, #20]	; (800a590 <SystemInit+0x18>)
 800a57a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800a57e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a582:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a586:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800a58a:	609a      	str	r2, [r3, #8]
#endif
}
 800a58c:	4770      	bx	lr
 800a58e:	bf00      	nop
 800a590:	e000ed00 	.word	0xe000ed00

0800a594 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a594:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a596:	4b0b      	ldr	r3, [pc, #44]	; (800a5c4 <HAL_Init+0x30>)
 800a598:	681a      	ldr	r2, [r3, #0]
 800a59a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a59e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a5a0:	681a      	ldr	r2, [r3, #0]
 800a5a2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5a6:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a5a8:	681a      	ldr	r2, [r3, #0]
 800a5aa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a5ae:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a5b0:	2003      	movs	r0, #3
 800a5b2:	f000 fa91 	bl	800aad8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a5b6:	2000      	movs	r0, #0
 800a5b8:	f7f8 f8ea 	bl	8002790 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a5bc:	f7f7 fe0c 	bl	80021d8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a5c0:	2000      	movs	r0, #0
 800a5c2:	bd08      	pop	{r3, pc}
 800a5c4:	40023c00 	.word	0x40023c00

0800a5c8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a5c8:	4a03      	ldr	r2, [pc, #12]	; (800a5d8 <HAL_IncTick+0x10>)
 800a5ca:	4b04      	ldr	r3, [pc, #16]	; (800a5dc <HAL_IncTick+0x14>)
 800a5cc:	6811      	ldr	r1, [r2, #0]
 800a5ce:	781b      	ldrb	r3, [r3, #0]
 800a5d0:	440b      	add	r3, r1
 800a5d2:	6013      	str	r3, [r2, #0]
}
 800a5d4:	4770      	bx	lr
 800a5d6:	bf00      	nop
 800a5d8:	20004f10 	.word	0x20004f10
 800a5dc:	20000054 	.word	0x20000054

0800a5e0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a5e0:	4b01      	ldr	r3, [pc, #4]	; (800a5e8 <HAL_GetTick+0x8>)
 800a5e2:	6818      	ldr	r0, [r3, #0]
}
 800a5e4:	4770      	bx	lr
 800a5e6:	bf00      	nop
 800a5e8:	20004f10 	.word	0x20004f10

0800a5ec <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a5ec:	b538      	push	{r3, r4, r5, lr}
 800a5ee:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a5f0:	f7ff fff6 	bl	800a5e0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a5f4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800a5f6:	bf1c      	itt	ne
 800a5f8:	4b05      	ldrne	r3, [pc, #20]	; (800a610 <HAL_Delay+0x24>)
 800a5fa:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800a5fc:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800a5fe:	bf18      	it	ne
 800a600:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a602:	f7ff ffed 	bl	800a5e0 <HAL_GetTick>
 800a606:	1b43      	subs	r3, r0, r5
 800a608:	42a3      	cmp	r3, r4
 800a60a:	d3fa      	bcc.n	800a602 <HAL_Delay+0x16>
  {
  }
}
 800a60c:	bd38      	pop	{r3, r4, r5, pc}
 800a60e:	bf00      	nop
 800a610:	20000054 	.word	0x20000054

0800a614 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800a614:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 800a616:	4604      	mov	r4, r0
 800a618:	2800      	cmp	r0, #0
 800a61a:	f000 809b 	beq.w	800a754 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800a61e:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800a620:	b925      	cbnz	r5, 800a62c <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800a622:	f7f7 fdf9 	bl	8002218 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800a626:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800a628:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800a62c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a62e:	06db      	lsls	r3, r3, #27
 800a630:	f100 808e 	bmi.w	800a750 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800a634:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a636:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800a63a:	f023 0302 	bic.w	r3, r3, #2
 800a63e:	f043 0302 	orr.w	r3, r3, #2
 800a642:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800a644:	4b44      	ldr	r3, [pc, #272]	; (800a758 <HAL_ADC_Init+0x144>)
 800a646:	685a      	ldr	r2, [r3, #4]
 800a648:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800a64c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800a64e:	685a      	ldr	r2, [r3, #4]
 800a650:	6861      	ldr	r1, [r4, #4]
 800a652:	430a      	orrs	r2, r1
 800a654:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a656:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a658:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800a65a:	685a      	ldr	r2, [r3, #4]
 800a65c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a660:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800a662:	685a      	ldr	r2, [r3, #4]
 800a664:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a668:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800a66a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800a66c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800a66e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800a672:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800a674:	685a      	ldr	r2, [r3, #4]
 800a676:	430a      	orrs	r2, r1
 800a678:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800a67a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800a67c:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800a67e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a682:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800a684:	689a      	ldr	r2, [r3, #8]
 800a686:	430a      	orrs	r2, r1
 800a688:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800a68a:	4934      	ldr	r1, [pc, #208]	; (800a75c <HAL_ADC_Init+0x148>)
 800a68c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a68e:	428a      	cmp	r2, r1
 800a690:	d052      	beq.n	800a738 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a692:	6899      	ldr	r1, [r3, #8]
 800a694:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 800a698:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800a69a:	6899      	ldr	r1, [r3, #8]
 800a69c:	430a      	orrs	r2, r1
 800a69e:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a6a0:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800a6a2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a6a4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800a6a8:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800a6aa:	689a      	ldr	r2, [r3, #8]
 800a6ac:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a6ae:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800a6b0:	689a      	ldr	r2, [r3, #8]
 800a6b2:	f022 0202 	bic.w	r2, r2, #2
 800a6b6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800a6b8:	689a      	ldr	r2, [r3, #8]
 800a6ba:	7e21      	ldrb	r1, [r4, #24]
 800a6bc:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800a6c0:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800a6c2:	f894 2020 	ldrb.w	r2, [r4, #32]
 800a6c6:	2a00      	cmp	r2, #0
 800a6c8:	d03e      	beq.n	800a748 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800a6ca:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800a6cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800a6ce:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a6d2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800a6d4:	685a      	ldr	r2, [r3, #4]
 800a6d6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800a6da:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800a6dc:	685a      	ldr	r2, [r3, #4]
 800a6de:	3901      	subs	r1, #1
 800a6e0:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800a6e4:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800a6e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800a6e8:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800a6ea:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800a6ee:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800a6f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a6f2:	3901      	subs	r1, #1
 800a6f4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800a6f8:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800a6fa:	689a      	ldr	r2, [r3, #8]
 800a6fc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a700:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800a702:	689a      	ldr	r2, [r3, #8]
 800a704:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 800a708:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800a70c:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a70e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a710:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800a712:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a716:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a718:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800a71a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800a71c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800a720:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800a722:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800a724:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a726:	f023 0303 	bic.w	r3, r3, #3
 800a72a:	f043 0301 	orr.w	r3, r3, #1
 800a72e:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800a730:	2300      	movs	r3, #0
 800a732:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 800a736:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800a738:	689a      	ldr	r2, [r3, #8]
 800a73a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800a73e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800a740:	689a      	ldr	r2, [r3, #8]
 800a742:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800a746:	e7b2      	b.n	800a6ae <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800a748:	685a      	ldr	r2, [r3, #4]
 800a74a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a74e:	e7c9      	b.n	800a6e4 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800a750:	2001      	movs	r0, #1
 800a752:	e7ed      	b.n	800a730 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800a754:	2001      	movs	r0, #1
 800a756:	e7ee      	b.n	800a736 <HAL_ADC_Init+0x122>
 800a758:	40012300 	.word	0x40012300
 800a75c:	0f000001 	.word	0x0f000001

0800a760 <HAL_ADC_Start_IT>:
{
 800a760:	b513      	push	{r0, r1, r4, lr}
  __IO uint32_t counter = 0U;
 800a762:	2300      	movs	r3, #0
 800a764:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800a766:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800a76a:	2b01      	cmp	r3, #1
 800a76c:	d072      	beq.n	800a854 <HAL_ADC_Start_IT+0xf4>
 800a76e:	2301      	movs	r3, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800a770:	6802      	ldr	r2, [r0, #0]
  __HAL_LOCK(hadc);
 800a772:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800a776:	6893      	ldr	r3, [r2, #8]
 800a778:	07d9      	lsls	r1, r3, #31
 800a77a:	d50c      	bpl.n	800a796 <HAL_ADC_Start_IT+0x36>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800a77c:	6893      	ldr	r3, [r2, #8]
 800a77e:	f013 0301 	ands.w	r3, r3, #1
 800a782:	d11a      	bne.n	800a7ba <HAL_ADC_Start_IT+0x5a>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800a784:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800a786:	f042 0210 	orr.w	r2, r2, #16
 800a78a:	6402      	str	r2, [r0, #64]	; 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800a78c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800a78e:	f042 0201 	orr.w	r2, r2, #1
 800a792:	6442      	str	r2, [r0, #68]	; 0x44
 800a794:	e05c      	b.n	800a850 <HAL_ADC_Start_IT+0xf0>
    __HAL_ADC_ENABLE(hadc);
 800a796:	6893      	ldr	r3, [r2, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800a798:	4930      	ldr	r1, [pc, #192]	; (800a85c <HAL_ADC_Start_IT+0xfc>)
    __HAL_ADC_ENABLE(hadc);
 800a79a:	f043 0301 	orr.w	r3, r3, #1
 800a79e:	6093      	str	r3, [r2, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800a7a0:	4b2f      	ldr	r3, [pc, #188]	; (800a860 <HAL_ADC_Start_IT+0x100>)
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	fbb3 f3f1 	udiv	r3, r3, r1
 800a7a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
      counter--;
 800a7ac:	9301      	str	r3, [sp, #4]
    while(counter != 0U)
 800a7ae:	9b01      	ldr	r3, [sp, #4]
 800a7b0:	2b00      	cmp	r3, #0
 800a7b2:	d0e3      	beq.n	800a77c <HAL_ADC_Start_IT+0x1c>
      counter--;
 800a7b4:	9b01      	ldr	r3, [sp, #4]
 800a7b6:	3b01      	subs	r3, #1
 800a7b8:	e7f8      	b.n	800a7ac <HAL_ADC_Start_IT+0x4c>
    ADC_STATE_CLR_SET(hadc->State,
 800a7ba:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a7bc:	4c29      	ldr	r4, [pc, #164]	; (800a864 <HAL_ADC_Start_IT+0x104>)
 800a7be:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a7c2:	f023 0301 	bic.w	r3, r3, #1
 800a7c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a7ca:	6403      	str	r3, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800a7cc:	6853      	ldr	r3, [r2, #4]
 800a7ce:	055b      	lsls	r3, r3, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800a7d0:	bf41      	itttt	mi
 800a7d2:	6c03      	ldrmi	r3, [r0, #64]	; 0x40
 800a7d4:	f423 5340 	bicmi.w	r3, r3, #12288	; 0x3000
 800a7d8:	f443 5380 	orrmi.w	r3, r3, #4096	; 0x1000
 800a7dc:	6403      	strmi	r3, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800a7de:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a7e0:	f413 5380 	ands.w	r3, r3, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800a7e4:	bf1c      	itt	ne
 800a7e6:	6c43      	ldrne	r3, [r0, #68]	; 0x44
 800a7e8:	f023 0306 	bicne.w	r3, r3, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800a7ec:	6443      	str	r3, [r0, #68]	; 0x44
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800a7ee:	f06f 0122 	mvn.w	r1, #34	; 0x22
    __HAL_UNLOCK(hadc);
 800a7f2:	2300      	movs	r3, #0
 800a7f4:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800a7f8:	6011      	str	r1, [r2, #0]
    __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 800a7fa:	6851      	ldr	r1, [r2, #4]
 800a7fc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800a800:	f041 0120 	orr.w	r1, r1, #32
 800a804:	6051      	str	r1, [r2, #4]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800a806:	4918      	ldr	r1, [pc, #96]	; (800a868 <HAL_ADC_Start_IT+0x108>)
 800a808:	6848      	ldr	r0, [r1, #4]
 800a80a:	f010 001f 	ands.w	r0, r0, #31
 800a80e:	d119      	bne.n	800a844 <HAL_ADC_Start_IT+0xe4>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800a810:	42a2      	cmp	r2, r4
 800a812:	d006      	beq.n	800a822 <HAL_ADC_Start_IT+0xc2>
 800a814:	4b15      	ldr	r3, [pc, #84]	; (800a86c <HAL_ADC_Start_IT+0x10c>)
 800a816:	429a      	cmp	r2, r3
 800a818:	d10d      	bne.n	800a836 <HAL_ADC_Start_IT+0xd6>
 800a81a:	684b      	ldr	r3, [r1, #4]
 800a81c:	f013 0f1f 	tst.w	r3, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800a820:	d107      	bne.n	800a832 <HAL_ADC_Start_IT+0xd2>
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 800a822:	6890      	ldr	r0, [r2, #8]
 800a824:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800a828:	d116      	bne.n	800a858 <HAL_ADC_Start_IT+0xf8>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800a82a:	6893      	ldr	r3, [r2, #8]
 800a82c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800a830:	6093      	str	r3, [r2, #8]
}
 800a832:	b002      	add	sp, #8
 800a834:	bd10      	pop	{r4, pc}
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800a836:	4b0e      	ldr	r3, [pc, #56]	; (800a870 <HAL_ADC_Start_IT+0x110>)
 800a838:	429a      	cmp	r2, r3
 800a83a:	d1fa      	bne.n	800a832 <HAL_ADC_Start_IT+0xd2>
 800a83c:	684b      	ldr	r3, [r1, #4]
 800a83e:	f013 0f10 	tst.w	r3, #16
 800a842:	e7ed      	b.n	800a820 <HAL_ADC_Start_IT+0xc0>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800a844:	42a2      	cmp	r2, r4
 800a846:	d107      	bne.n	800a858 <HAL_ADC_Start_IT+0xf8>
 800a848:	6890      	ldr	r0, [r2, #8]
 800a84a:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800a84e:	d0ec      	beq.n	800a82a <HAL_ADC_Start_IT+0xca>
  return HAL_OK;
 800a850:	4618      	mov	r0, r3
 800a852:	e7ee      	b.n	800a832 <HAL_ADC_Start_IT+0xd2>
  __HAL_LOCK(hadc);
 800a854:	2002      	movs	r0, #2
 800a856:	e7ec      	b.n	800a832 <HAL_ADC_Start_IT+0xd2>
  return HAL_OK;
 800a858:	2000      	movs	r0, #0
 800a85a:	e7ea      	b.n	800a832 <HAL_ADC_Start_IT+0xd2>
 800a85c:	000f4240 	.word	0x000f4240
 800a860:	20000050 	.word	0x20000050
 800a864:	40012000 	.word	0x40012000
 800a868:	40012300 	.word	0x40012300
 800a86c:	40012100 	.word	0x40012100
 800a870:	40012200 	.word	0x40012200

0800a874 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800a874:	6803      	ldr	r3, [r0, #0]
 800a876:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 800a878:	4770      	bx	lr

0800a87a <HAL_ADC_LevelOutOfWindowCallback>:
 800a87a:	4770      	bx	lr

0800a87c <HAL_ADC_ErrorCallback>:
 800a87c:	4770      	bx	lr

0800a87e <HAL_ADC_IRQHandler>:
  uint32_t tmp_sr = hadc->Instance->SR;
 800a87e:	6803      	ldr	r3, [r0, #0]
{
 800a880:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp_sr = hadc->Instance->SR;
 800a882:	681e      	ldr	r6, [r3, #0]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 800a884:	685d      	ldr	r5, [r3, #4]
  if(tmp1 && tmp2)
 800a886:	07b2      	lsls	r2, r6, #30
{
 800a888:	4604      	mov	r4, r0
  if(tmp1 && tmp2)
 800a88a:	d52b      	bpl.n	800a8e4 <HAL_ADC_IRQHandler+0x66>
 800a88c:	06a8      	lsls	r0, r5, #26
 800a88e:	d529      	bpl.n	800a8e4 <HAL_ADC_IRQHandler+0x66>
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800a890:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a892:	06d1      	lsls	r1, r2, #27
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 800a894:	bf5e      	ittt	pl
 800a896:	6c22      	ldrpl	r2, [r4, #64]	; 0x40
 800a898:	f442 7200 	orrpl.w	r2, r2, #512	; 0x200
 800a89c:	6422      	strpl	r2, [r4, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800a89e:	689a      	ldr	r2, [r3, #8]
 800a8a0:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800a8a4:	d117      	bne.n	800a8d6 <HAL_ADC_IRQHandler+0x58>
 800a8a6:	7e22      	ldrb	r2, [r4, #24]
 800a8a8:	b9aa      	cbnz	r2, 800a8d6 <HAL_ADC_IRQHandler+0x58>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800a8aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800a8ac:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 800a8b0:	d002      	beq.n	800a8b8 <HAL_ADC_IRQHandler+0x3a>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800a8b2:	689a      	ldr	r2, [r3, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800a8b4:	0552      	lsls	r2, r2, #21
 800a8b6:	d40e      	bmi.n	800a8d6 <HAL_ADC_IRQHandler+0x58>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 800a8b8:	685a      	ldr	r2, [r3, #4]
 800a8ba:	f022 0220 	bic.w	r2, r2, #32
 800a8be:	605a      	str	r2, [r3, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800a8c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a8c2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a8c6:	6423      	str	r3, [r4, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800a8c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a8ca:	04d8      	lsls	r0, r3, #19
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800a8cc:	bf5e      	ittt	pl
 800a8ce:	6c23      	ldrpl	r3, [r4, #64]	; 0x40
 800a8d0:	f043 0301 	orrpl.w	r3, r3, #1
 800a8d4:	6423      	strpl	r3, [r4, #64]	; 0x40
    HAL_ADC_ConvCpltCallback(hadc);
 800a8d6:	4620      	mov	r0, r4
 800a8d8:	f7f7 fc68 	bl	80021ac <HAL_ADC_ConvCpltCallback>
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800a8dc:	6823      	ldr	r3, [r4, #0]
 800a8de:	f06f 0212 	mvn.w	r2, #18
 800a8e2:	601a      	str	r2, [r3, #0]
  if(tmp1 && tmp2)
 800a8e4:	0771      	lsls	r1, r6, #29
 800a8e6:	d533      	bpl.n	800a950 <HAL_ADC_IRQHandler+0xd2>
 800a8e8:	062a      	lsls	r2, r5, #24
 800a8ea:	d531      	bpl.n	800a950 <HAL_ADC_IRQHandler+0xd2>
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800a8ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a8ee:	06db      	lsls	r3, r3, #27
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 800a8f0:	bf5e      	ittt	pl
 800a8f2:	6c23      	ldrpl	r3, [r4, #64]	; 0x40
 800a8f4:	f443 5300 	orrpl.w	r3, r3, #8192	; 0x2000
 800a8f8:	6423      	strpl	r3, [r4, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 800a8fa:	6823      	ldr	r3, [r4, #0]
 800a8fc:	689a      	ldr	r2, [r3, #8]
 800a8fe:	f412 1f40 	tst.w	r2, #3145728	; 0x300000
 800a902:	d11e      	bne.n	800a942 <HAL_ADC_IRQHandler+0xc4>
       (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 800a904:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 800a906:	f412 1f40 	tst.w	r2, #3145728	; 0x300000
 800a90a:	d002      	beq.n	800a912 <HAL_ADC_IRQHandler+0x94>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 800a90c:	689a      	ldr	r2, [r3, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 800a90e:	0550      	lsls	r0, r2, #21
 800a910:	d417      	bmi.n	800a942 <HAL_ADC_IRQHandler+0xc4>
       (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 800a912:	685a      	ldr	r2, [r3, #4]
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 800a914:	0551      	lsls	r1, r2, #21
 800a916:	d414      	bmi.n	800a942 <HAL_ADC_IRQHandler+0xc4>
        (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 800a918:	689a      	ldr	r2, [r3, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 800a91a:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800a91e:	d110      	bne.n	800a942 <HAL_ADC_IRQHandler+0xc4>
        (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 800a920:	7e22      	ldrb	r2, [r4, #24]
 800a922:	b972      	cbnz	r2, 800a942 <HAL_ADC_IRQHandler+0xc4>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 800a924:	685a      	ldr	r2, [r3, #4]
 800a926:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a92a:	605a      	str	r2, [r3, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 800a92c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a92e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a932:	6423      	str	r3, [r4, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 800a934:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a936:	05da      	lsls	r2, r3, #23
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800a938:	bf5e      	ittt	pl
 800a93a:	6c23      	ldrpl	r3, [r4, #64]	; 0x40
 800a93c:	f043 0301 	orrpl.w	r3, r3, #1
 800a940:	6423      	strpl	r3, [r4, #64]	; 0x40
      HAL_ADCEx_InjectedConvCpltCallback(hadc);
 800a942:	4620      	mov	r0, r4
 800a944:	f000 f8c6 	bl	800aad4 <HAL_ADCEx_InjectedConvCpltCallback>
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 800a948:	6823      	ldr	r3, [r4, #0]
 800a94a:	f06f 020c 	mvn.w	r2, #12
 800a94e:	601a      	str	r2, [r3, #0]
  if(tmp1 && tmp2)
 800a950:	07f3      	lsls	r3, r6, #31
 800a952:	d510      	bpl.n	800a976 <HAL_ADC_IRQHandler+0xf8>
 800a954:	0668      	lsls	r0, r5, #25
 800a956:	d50e      	bpl.n	800a976 <HAL_ADC_IRQHandler+0xf8>
    if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 800a958:	6823      	ldr	r3, [r4, #0]
 800a95a:	681b      	ldr	r3, [r3, #0]
 800a95c:	07d9      	lsls	r1, r3, #31
 800a95e:	d50a      	bpl.n	800a976 <HAL_ADC_IRQHandler+0xf8>
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 800a960:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a962:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a966:	6423      	str	r3, [r4, #64]	; 0x40
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 800a968:	4620      	mov	r0, r4
 800a96a:	f7ff ff86 	bl	800a87a <HAL_ADC_LevelOutOfWindowCallback>
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 800a96e:	6823      	ldr	r3, [r4, #0]
 800a970:	f06f 0201 	mvn.w	r2, #1
 800a974:	601a      	str	r2, [r3, #0]
  if(tmp1 && tmp2)
 800a976:	06b2      	lsls	r2, r6, #26
 800a978:	d50e      	bpl.n	800a998 <HAL_ADC_IRQHandler+0x11a>
 800a97a:	016b      	lsls	r3, r5, #5
 800a97c:	d50c      	bpl.n	800a998 <HAL_ADC_IRQHandler+0x11a>
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 800a97e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a980:	f043 0302 	orr.w	r3, r3, #2
 800a984:	6463      	str	r3, [r4, #68]	; 0x44
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	f06f 0520 	mvn.w	r5, #32
 800a98c:	601d      	str	r5, [r3, #0]
      HAL_ADC_ErrorCallback(hadc);
 800a98e:	4620      	mov	r0, r4
 800a990:	f7ff ff74 	bl	800a87c <HAL_ADC_ErrorCallback>
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 800a994:	6823      	ldr	r3, [r4, #0]
 800a996:	601d      	str	r5, [r3, #0]
}
 800a998:	bd70      	pop	{r4, r5, r6, pc}
	...

0800a99c <HAL_ADC_ConfigChannel>:
{
 800a99c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800a99e:	2300      	movs	r3, #0
 800a9a0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800a9a2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800a9a6:	2b01      	cmp	r3, #1
 800a9a8:	d069      	beq.n	800aa7e <HAL_ADC_ConfigChannel+0xe2>
 800a9aa:	2301      	movs	r3, #1
 800a9ac:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a9b0:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800a9b2:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800a9b4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800a9b6:	2d09      	cmp	r5, #9
 800a9b8:	b2ac      	uxth	r4, r5
 800a9ba:	d934      	bls.n	800aa26 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800a9bc:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800a9c0:	68df      	ldr	r7, [r3, #12]
 800a9c2:	3a1e      	subs	r2, #30
 800a9c4:	f04f 0c07 	mov.w	ip, #7
 800a9c8:	fa0c fc02 	lsl.w	ip, ip, r2
 800a9cc:	ea27 070c 	bic.w	r7, r7, ip
 800a9d0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800a9d2:	68df      	ldr	r7, [r3, #12]
 800a9d4:	fa06 f202 	lsl.w	r2, r6, r2
 800a9d8:	433a      	orrs	r2, r7
 800a9da:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800a9dc:	6849      	ldr	r1, [r1, #4]
 800a9de:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800a9e0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800a9e4:	d82f      	bhi.n	800aa46 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800a9e6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800a9e8:	3a05      	subs	r2, #5
 800a9ea:	261f      	movs	r6, #31
 800a9ec:	4096      	lsls	r6, r2
 800a9ee:	ea21 0106 	bic.w	r1, r1, r6
 800a9f2:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800a9f4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800a9f6:	fa04 f202 	lsl.w	r2, r4, r2
 800a9fa:	430a      	orrs	r2, r1
 800a9fc:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800a9fe:	4a30      	ldr	r2, [pc, #192]	; (800aac0 <HAL_ADC_ConfigChannel+0x124>)
 800aa00:	4293      	cmp	r3, r2
 800aa02:	d10a      	bne.n	800aa1a <HAL_ADC_ConfigChannel+0x7e>
 800aa04:	2d12      	cmp	r5, #18
 800aa06:	d13c      	bne.n	800aa82 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800aa08:	4b2e      	ldr	r3, [pc, #184]	; (800aac4 <HAL_ADC_ConfigChannel+0x128>)
 800aa0a:	685a      	ldr	r2, [r3, #4]
 800aa0c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800aa10:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800aa12:	685a      	ldr	r2, [r3, #4]
 800aa14:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800aa18:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800aa1a:	2300      	movs	r3, #0
 800aa1c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 800aa20:	4618      	mov	r0, r3
}
 800aa22:	b003      	add	sp, #12
 800aa24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800aa26:	691f      	ldr	r7, [r3, #16]
 800aa28:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800aa2c:	f04f 0c07 	mov.w	ip, #7
 800aa30:	fa0c fc02 	lsl.w	ip, ip, r2
 800aa34:	ea27 070c 	bic.w	r7, r7, ip
 800aa38:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800aa3a:	691f      	ldr	r7, [r3, #16]
 800aa3c:	fa06 f202 	lsl.w	r2, r6, r2
 800aa40:	433a      	orrs	r2, r7
 800aa42:	611a      	str	r2, [r3, #16]
 800aa44:	e7ca      	b.n	800a9dc <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 800aa46:	290c      	cmp	r1, #12
 800aa48:	f04f 011f 	mov.w	r1, #31
 800aa4c:	d80b      	bhi.n	800aa66 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800aa4e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800aa50:	3a23      	subs	r2, #35	; 0x23
 800aa52:	4091      	lsls	r1, r2
 800aa54:	ea26 0101 	bic.w	r1, r6, r1
 800aa58:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800aa5a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800aa5c:	fa04 f202 	lsl.w	r2, r4, r2
 800aa60:	430a      	orrs	r2, r1
 800aa62:	631a      	str	r2, [r3, #48]	; 0x30
 800aa64:	e7cb      	b.n	800a9fe <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800aa66:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800aa68:	3a41      	subs	r2, #65	; 0x41
 800aa6a:	4091      	lsls	r1, r2
 800aa6c:	ea26 0101 	bic.w	r1, r6, r1
 800aa70:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800aa72:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800aa74:	fa04 f202 	lsl.w	r2, r4, r2
 800aa78:	430a      	orrs	r2, r1
 800aa7a:	62da      	str	r2, [r3, #44]	; 0x2c
 800aa7c:	e7bf      	b.n	800a9fe <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800aa7e:	2002      	movs	r0, #2
 800aa80:	e7cf      	b.n	800aa22 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800aa82:	4b11      	ldr	r3, [pc, #68]	; (800aac8 <HAL_ADC_ConfigChannel+0x12c>)
 800aa84:	429d      	cmp	r5, r3
 800aa86:	d001      	beq.n	800aa8c <HAL_ADC_ConfigChannel+0xf0>
 800aa88:	2d11      	cmp	r5, #17
 800aa8a:	d1c6      	bne.n	800aa1a <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800aa8c:	4b0d      	ldr	r3, [pc, #52]	; (800aac4 <HAL_ADC_ConfigChannel+0x128>)
 800aa8e:	685a      	ldr	r2, [r3, #4]
 800aa90:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800aa94:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800aa96:	685a      	ldr	r2, [r3, #4]
 800aa98:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800aa9c:	605a      	str	r2, [r3, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800aa9e:	4b0a      	ldr	r3, [pc, #40]	; (800aac8 <HAL_ADC_ConfigChannel+0x12c>)
 800aaa0:	429d      	cmp	r5, r3
 800aaa2:	d1ba      	bne.n	800aa1a <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800aaa4:	4b09      	ldr	r3, [pc, #36]	; (800aacc <HAL_ADC_ConfigChannel+0x130>)
 800aaa6:	4a0a      	ldr	r2, [pc, #40]	; (800aad0 <HAL_ADC_ConfigChannel+0x134>)
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	fbb3 f3f2 	udiv	r3, r3, r2
 800aaae:	220a      	movs	r2, #10
 800aab0:	4353      	muls	r3, r2
        counter--;
 800aab2:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800aab4:	9b01      	ldr	r3, [sp, #4]
 800aab6:	2b00      	cmp	r3, #0
 800aab8:	d0af      	beq.n	800aa1a <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800aaba:	9b01      	ldr	r3, [sp, #4]
 800aabc:	3b01      	subs	r3, #1
 800aabe:	e7f8      	b.n	800aab2 <HAL_ADC_ConfigChannel+0x116>
 800aac0:	40012000 	.word	0x40012000
 800aac4:	40012300 	.word	0x40012300
 800aac8:	10000012 	.word	0x10000012
 800aacc:	20000050 	.word	0x20000050
 800aad0:	000f4240 	.word	0x000f4240

0800aad4 <HAL_ADCEx_InjectedConvCpltCallback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 800aad4:	4770      	bx	lr
	...

0800aad8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800aad8:	4907      	ldr	r1, [pc, #28]	; (800aaf8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800aada:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800aadc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800aae0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800aae2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800aae4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800aae8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800aaea:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800aaec:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800aaf0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800aaf4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800aaf6:	4770      	bx	lr
 800aaf8:	e000ed00 	.word	0xe000ed00

0800aafc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800aafc:	4b16      	ldr	r3, [pc, #88]	; (800ab58 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800aafe:	b530      	push	{r4, r5, lr}
 800ab00:	68dc      	ldr	r4, [r3, #12]
 800ab02:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800ab06:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800ab0a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800ab0c:	2d04      	cmp	r5, #4
 800ab0e:	bf28      	it	cs
 800ab10:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800ab12:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800ab14:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800ab18:	bf8c      	ite	hi
 800ab1a:	3c03      	subhi	r4, #3
 800ab1c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800ab1e:	fa03 f505 	lsl.w	r5, r3, r5
 800ab22:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800ab26:	40a3      	lsls	r3, r4
 800ab28:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800ab2c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800ab2e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800ab30:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab34:	bfac      	ite	ge
 800ab36:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab3a:	4a08      	ldrlt	r2, [pc, #32]	; (800ab5c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab3c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab40:	bfb8      	it	lt
 800ab42:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab46:	b2db      	uxtb	r3, r3
 800ab48:	bfaa      	itet	ge
 800ab4a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab4e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ab50:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800ab54:	bd30      	pop	{r4, r5, pc}
 800ab56:	bf00      	nop
 800ab58:	e000ed00 	.word	0xe000ed00
 800ab5c:	e000ed14 	.word	0xe000ed14

0800ab60 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800ab60:	2800      	cmp	r0, #0
 800ab62:	db08      	blt.n	800ab76 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ab64:	0942      	lsrs	r2, r0, #5
 800ab66:	2301      	movs	r3, #1
 800ab68:	f000 001f 	and.w	r0, r0, #31
 800ab6c:	fa03 f000 	lsl.w	r0, r3, r0
 800ab70:	4b01      	ldr	r3, [pc, #4]	; (800ab78 <HAL_NVIC_EnableIRQ+0x18>)
 800ab72:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800ab76:	4770      	bx	lr
 800ab78:	e000e100 	.word	0xe000e100

0800ab7c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800ab7c:	2800      	cmp	r0, #0
 800ab7e:	db0d      	blt.n	800ab9c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ab80:	0943      	lsrs	r3, r0, #5
 800ab82:	2201      	movs	r2, #1
 800ab84:	f000 001f 	and.w	r0, r0, #31
 800ab88:	fa02 f000 	lsl.w	r0, r2, r0
 800ab8c:	3320      	adds	r3, #32
 800ab8e:	4a04      	ldr	r2, [pc, #16]	; (800aba0 <HAL_NVIC_DisableIRQ+0x24>)
 800ab90:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800ab94:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800ab98:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800ab9c:	4770      	bx	lr
 800ab9e:	bf00      	nop
 800aba0:	e000e100 	.word	0xe000e100

0800aba4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800aba4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800aba6:	4604      	mov	r4, r0
 800aba8:	b150      	cbz	r0, 800abc0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800abaa:	7943      	ldrb	r3, [r0, #5]
 800abac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800abb0:	b913      	cbnz	r3, 800abb8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800abb2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800abb4:	f7f7 fb6a 	bl	800228c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800abb8:	2301      	movs	r3, #1
 800abba:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800abbc:	2000      	movs	r0, #0
}
 800abbe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800abc0:	2001      	movs	r0, #1
 800abc2:	e7fc      	b.n	800abbe <HAL_CRC_Init+0x1a>

0800abc4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800abc4:	6803      	ldr	r3, [r0, #0]
{
 800abc6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800abc8:	4c08      	ldr	r4, [pc, #32]	; (800abec <DMA_CalcBaseAndBitshift+0x28>)
{
 800abca:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800abcc:	b2d9      	uxtb	r1, r3
 800abce:	3910      	subs	r1, #16
 800abd0:	2018      	movs	r0, #24
 800abd2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800abd6:	5c20      	ldrb	r0, [r4, r0]
 800abd8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800abda:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800abde:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 800abe2:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800abe4:	bf88      	it	hi
 800abe6:	3004      	addhi	r0, #4
 800abe8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800abea:	bd10      	pop	{r4, pc}
 800abec:	080284a5 	.word	0x080284a5

0800abf0 <HAL_DMA_Init>:
{
 800abf0:	b570      	push	{r4, r5, r6, lr}
 800abf2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800abf4:	f7ff fcf4 	bl	800a5e0 <HAL_GetTick>
 800abf8:	4605      	mov	r5, r0
  if(hdma == NULL)
 800abfa:	2c00      	cmp	r4, #0
 800abfc:	d073      	beq.n	800ace6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 800abfe:	2302      	movs	r3, #2
 800ac00:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800ac04:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 800ac06:	2300      	movs	r3, #0
 800ac08:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800ac0c:	6813      	ldr	r3, [r2, #0]
 800ac0e:	f023 0301 	bic.w	r3, r3, #1
 800ac12:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800ac14:	6821      	ldr	r1, [r4, #0]
 800ac16:	680b      	ldr	r3, [r1, #0]
 800ac18:	07d8      	lsls	r0, r3, #31
 800ac1a:	d42f      	bmi.n	800ac7c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800ac1c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800ac1e:	4d33      	ldr	r5, [pc, #204]	; (800acec <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800ac20:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800ac22:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800ac24:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800ac28:	4313      	orrs	r3, r2
 800ac2a:	68e2      	ldr	r2, [r4, #12]
 800ac2c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800ac2e:	6922      	ldr	r2, [r4, #16]
 800ac30:	4313      	orrs	r3, r2
 800ac32:	6962      	ldr	r2, [r4, #20]
 800ac34:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800ac36:	69e2      	ldr	r2, [r4, #28]
 800ac38:	4303      	orrs	r3, r0
 800ac3a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800ac3c:	6a22      	ldr	r2, [r4, #32]
 800ac3e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800ac40:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac42:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800ac44:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800ac48:	bf02      	ittt	eq
 800ac4a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800ac4e:	4335      	orreq	r5, r6
 800ac50:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800ac52:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800ac54:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800ac56:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800ac58:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800ac5c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800ac60:	d133      	bne.n	800acca <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800ac62:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800ac64:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800ac66:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800ac68:	b37d      	cbz	r5, 800acca <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800ac6a:	b990      	cbnz	r0, 800ac92 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800ac6c:	2a01      	cmp	r2, #1
 800ac6e:	d021      	beq.n	800acb4 <HAL_DMA_Init+0xc4>
 800ac70:	f032 0202 	bics.w	r2, r2, #2
 800ac74:	d129      	bne.n	800acca <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800ac76:	01ea      	lsls	r2, r5, #7
 800ac78:	d527      	bpl.n	800acca <HAL_DMA_Init+0xda>
 800ac7a:	e01e      	b.n	800acba <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800ac7c:	f7ff fcb0 	bl	800a5e0 <HAL_GetTick>
 800ac80:	1b40      	subs	r0, r0, r5
 800ac82:	2805      	cmp	r0, #5
 800ac84:	d9c6      	bls.n	800ac14 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800ac86:	2320      	movs	r3, #32
 800ac88:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800ac8a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800ac8c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800ac90:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800ac92:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800ac96:	d114      	bne.n	800acc2 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800ac98:	2a03      	cmp	r2, #3
 800ac9a:	d816      	bhi.n	800acca <HAL_DMA_Init+0xda>
 800ac9c:	a001      	add	r0, pc, #4	; (adr r0, 800aca4 <HAL_DMA_Init+0xb4>)
 800ac9e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800aca2:	bf00      	nop
 800aca4:	0800acbb 	.word	0x0800acbb
 800aca8:	0800ac77 	.word	0x0800ac77
 800acac:	0800acbb 	.word	0x0800acbb
 800acb0:	0800acb5 	.word	0x0800acb5
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800acb4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800acb8:	d107      	bne.n	800acca <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800acba:	2340      	movs	r3, #64	; 0x40
 800acbc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800acbe:	2001      	movs	r0, #1
 800acc0:	e7e4      	b.n	800ac8c <HAL_DMA_Init+0x9c>
    switch (tmp)
 800acc2:	2a02      	cmp	r2, #2
 800acc4:	d9f9      	bls.n	800acba <HAL_DMA_Init+0xca>
 800acc6:	2a03      	cmp	r2, #3
 800acc8:	d0d5      	beq.n	800ac76 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800acca:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800accc:	4620      	mov	r0, r4
 800acce:	f7ff ff79 	bl	800abc4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800acd2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800acd4:	233f      	movs	r3, #63	; 0x3f
 800acd6:	4093      	lsls	r3, r2
 800acd8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800acda:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800acdc:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800acde:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800ace0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800ace4:	e7d4      	b.n	800ac90 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800ace6:	2001      	movs	r0, #1
 800ace8:	e7d2      	b.n	800ac90 <HAL_DMA_Init+0xa0>
 800acea:	bf00      	nop
 800acec:	f010803f 	.word	0xf010803f

0800acf0 <HAL_DMA_DeInit>:
{
 800acf0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800acf2:	4605      	mov	r5, r0
 800acf4:	b320      	cbz	r0, 800ad40 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800acf6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800acfa:	2b02      	cmp	r3, #2
 800acfc:	b2dc      	uxtb	r4, r3
 800acfe:	d01d      	beq.n	800ad3c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800ad00:	6803      	ldr	r3, [r0, #0]
 800ad02:	681a      	ldr	r2, [r3, #0]
 800ad04:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800ad08:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800ad0a:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800ad0c:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800ad0e:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800ad10:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800ad12:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800ad14:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800ad16:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800ad18:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800ad1a:	f7ff ff53 	bl	800abc4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800ad1e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800ad20:	233f      	movs	r3, #63	; 0x3f
 800ad22:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800ad24:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800ad28:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800ad2c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800ad30:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800ad32:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800ad34:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800ad38:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800ad3c:	4620      	mov	r0, r4
 800ad3e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800ad40:	2401      	movs	r4, #1
 800ad42:	e7fb      	b.n	800ad3c <HAL_DMA_DeInit+0x4c>

0800ad44 <HAL_DMA_Abort>:
{
 800ad44:	b570      	push	{r4, r5, r6, lr}
 800ad46:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800ad48:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800ad4a:	f7ff fc49 	bl	800a5e0 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800ad4e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800ad52:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800ad54:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800ad56:	d006      	beq.n	800ad66 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800ad58:	2380      	movs	r3, #128	; 0x80
 800ad5a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800ad5c:	2300      	movs	r3, #0
 800ad5e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800ad62:	2001      	movs	r0, #1
}
 800ad64:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800ad66:	6823      	ldr	r3, [r4, #0]
 800ad68:	681a      	ldr	r2, [r3, #0]
 800ad6a:	f022 0216 	bic.w	r2, r2, #22
 800ad6e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800ad70:	695a      	ldr	r2, [r3, #20]
 800ad72:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800ad76:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800ad78:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ad7a:	b90a      	cbnz	r2, 800ad80 <HAL_DMA_Abort+0x3c>
 800ad7c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800ad7e:	b11a      	cbz	r2, 800ad88 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800ad80:	681a      	ldr	r2, [r3, #0]
 800ad82:	f022 0208 	bic.w	r2, r2, #8
 800ad86:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800ad88:	681a      	ldr	r2, [r3, #0]
 800ad8a:	f022 0201 	bic.w	r2, r2, #1
 800ad8e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800ad90:	6823      	ldr	r3, [r4, #0]
 800ad92:	681b      	ldr	r3, [r3, #0]
 800ad94:	f013 0301 	ands.w	r3, r3, #1
 800ad98:	d10a      	bne.n	800adb0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800ad9a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800ad9c:	223f      	movs	r2, #63	; 0x3f
 800ad9e:	408a      	lsls	r2, r1
 800ada0:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800ada2:	2201      	movs	r2, #1
 800ada4:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800ada8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800adac:	4618      	mov	r0, r3
 800adae:	e7d9      	b.n	800ad64 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800adb0:	f7ff fc16 	bl	800a5e0 <HAL_GetTick>
 800adb4:	1b40      	subs	r0, r0, r5
 800adb6:	2805      	cmp	r0, #5
 800adb8:	d9ea      	bls.n	800ad90 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800adba:	2320      	movs	r3, #32
 800adbc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800adbe:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800adc0:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800adc2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800adc6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800adca:	e7cb      	b.n	800ad64 <HAL_DMA_Abort+0x20>

0800adcc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800adcc:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800adce:	4604      	mov	r4, r0
 800add0:	b330      	cbz	r0, 800ae20 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800add2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800add6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800adda:	b91b      	cbnz	r3, 800ade4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800addc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800ade0:	f7f7 fa6c 	bl	80022bc <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800ade4:	6822      	ldr	r2, [r4, #0]
 800ade6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800ade8:	2302      	movs	r3, #2
 800adea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800adee:	6813      	ldr	r3, [r2, #0]
 800adf0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800adf4:	430b      	orrs	r3, r1
 800adf6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800adf8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800adfa:	68a1      	ldr	r1, [r4, #8]
 800adfc:	f023 0307 	bic.w	r3, r3, #7
 800ae00:	430b      	orrs	r3, r1
 800ae02:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800ae04:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ae06:	68e1      	ldr	r1, [r4, #12]
 800ae08:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800ae0c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800ae10:	430b      	orrs	r3, r1
 800ae12:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800ae14:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800ae16:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800ae18:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800ae1a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800ae1e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ae20:	2001      	movs	r0, #1
 800ae22:	e7fc      	b.n	800ae1e <HAL_DMA2D_Init+0x52>

0800ae24 <HAL_DMA2D_LineEventCallback>:
 800ae24:	4770      	bx	lr

0800ae26 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800ae26:	4770      	bx	lr

0800ae28 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800ae28:	6803      	ldr	r3, [r0, #0]
{
 800ae2a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800ae2c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800ae2e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800ae30:	07f2      	lsls	r2, r6, #31
{
 800ae32:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800ae34:	d514      	bpl.n	800ae60 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800ae36:	05e9      	lsls	r1, r5, #23
 800ae38:	d512      	bpl.n	800ae60 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800ae3a:	681a      	ldr	r2, [r3, #0]
 800ae3c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800ae40:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800ae42:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800ae44:	f042 0201 	orr.w	r2, r2, #1
 800ae48:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800ae4a:	2201      	movs	r2, #1
 800ae4c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800ae4e:	2304      	movs	r3, #4
 800ae50:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800ae54:	2300      	movs	r3, #0
 800ae56:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800ae5a:	6943      	ldr	r3, [r0, #20]
 800ae5c:	b103      	cbz	r3, 800ae60 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800ae5e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800ae60:	06b2      	lsls	r2, r6, #26
 800ae62:	d516      	bpl.n	800ae92 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800ae64:	04ab      	lsls	r3, r5, #18
 800ae66:	d514      	bpl.n	800ae92 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800ae68:	6823      	ldr	r3, [r4, #0]
 800ae6a:	681a      	ldr	r2, [r3, #0]
 800ae6c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800ae70:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800ae72:	2220      	movs	r2, #32
 800ae74:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800ae76:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ae78:	f043 0302 	orr.w	r3, r3, #2
 800ae7c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800ae7e:	2304      	movs	r3, #4
 800ae80:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800ae84:	2300      	movs	r3, #0
 800ae86:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800ae8a:	6963      	ldr	r3, [r4, #20]
 800ae8c:	b10b      	cbz	r3, 800ae92 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800ae8e:	4620      	mov	r0, r4
 800ae90:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800ae92:	0730      	lsls	r0, r6, #28
 800ae94:	d516      	bpl.n	800aec4 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800ae96:	0529      	lsls	r1, r5, #20
 800ae98:	d514      	bpl.n	800aec4 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800ae9a:	6823      	ldr	r3, [r4, #0]
 800ae9c:	681a      	ldr	r2, [r3, #0]
 800ae9e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aea2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800aea4:	2208      	movs	r2, #8
 800aea6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800aea8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aeaa:	f043 0304 	orr.w	r3, r3, #4
 800aeae:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800aeb0:	2304      	movs	r3, #4
 800aeb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800aeb6:	2300      	movs	r3, #0
 800aeb8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800aebc:	6963      	ldr	r3, [r4, #20]
 800aebe:	b10b      	cbz	r3, 800aec4 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800aec0:	4620      	mov	r0, r4
 800aec2:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800aec4:	0772      	lsls	r2, r6, #29
 800aec6:	d50b      	bpl.n	800aee0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800aec8:	056b      	lsls	r3, r5, #21
 800aeca:	d509      	bpl.n	800aee0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800aecc:	6823      	ldr	r3, [r4, #0]
 800aece:	681a      	ldr	r2, [r3, #0]
 800aed0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aed4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800aed6:	2204      	movs	r2, #4
 800aed8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800aeda:	4620      	mov	r0, r4
 800aedc:	f7ff ffa2 	bl	800ae24 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800aee0:	07b0      	lsls	r0, r6, #30
 800aee2:	d514      	bpl.n	800af0e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800aee4:	05a9      	lsls	r1, r5, #22
 800aee6:	d512      	bpl.n	800af0e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800aee8:	6823      	ldr	r3, [r4, #0]
 800aeea:	681a      	ldr	r2, [r3, #0]
 800aeec:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800aef0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800aef2:	2202      	movs	r2, #2
 800aef4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800aef6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aef8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800aefa:	2301      	movs	r3, #1
 800aefc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800af00:	2300      	movs	r3, #0
 800af02:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800af06:	6923      	ldr	r3, [r4, #16]
 800af08:	b10b      	cbz	r3, 800af0e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800af0a:	4620      	mov	r0, r4
 800af0c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800af0e:	06f2      	lsls	r2, r6, #27
 800af10:	d513      	bpl.n	800af3a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800af12:	04eb      	lsls	r3, r5, #19
 800af14:	d511      	bpl.n	800af3a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800af16:	6823      	ldr	r3, [r4, #0]
 800af18:	681a      	ldr	r2, [r3, #0]
 800af1a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800af1e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800af20:	2210      	movs	r2, #16
 800af22:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800af24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800af26:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800af28:	2301      	movs	r3, #1
 800af2a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800af2e:	2300      	movs	r3, #0
 800af30:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800af34:	4620      	mov	r0, r4
 800af36:	f7ff ff76 	bl	800ae26 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800af3a:	bd70      	pop	{r4, r5, r6, pc}

0800af3c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800af3c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800af3e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800af42:	2b01      	cmp	r3, #1
 800af44:	f04f 0302 	mov.w	r3, #2
 800af48:	d02b      	beq.n	800afa2 <HAL_DMA2D_ConfigLayer+0x66>
 800af4a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800af4c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800af50:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800af54:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800af58:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800af5c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800af5e:	4f18      	ldr	r7, [pc, #96]	; (800afc0 <HAL_DMA2D_ConfigLayer+0x84>)
 800af60:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800af64:	3c09      	subs	r4, #9
 800af66:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800af68:	bf9c      	itt	ls
 800af6a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800af6e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800af70:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800af74:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800af76:	bf88      	it	hi
 800af78:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800af7c:	b999      	cbnz	r1, 800afa6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800af7e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800af80:	4039      	ands	r1, r7
 800af82:	430a      	orrs	r2, r1
 800af84:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800af86:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800af88:	6982      	ldr	r2, [r0, #24]
 800af8a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800af8c:	d803      	bhi.n	800af96 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800af8e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800af90:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800af94:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800af96:	2301      	movs	r3, #1
 800af98:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800af9c:	2300      	movs	r3, #0
 800af9e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800afa2:	4618      	mov	r0, r3

  return HAL_OK;
}
 800afa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800afa6:	69d9      	ldr	r1, [r3, #28]
 800afa8:	4039      	ands	r1, r7
 800afaa:	430a      	orrs	r2, r1
 800afac:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800afae:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800afb0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800afb2:	6992      	ldr	r2, [r2, #24]
 800afb4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800afb6:	bf9c      	itt	ls
 800afb8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800afbc:	621d      	strls	r5, [r3, #32]
 800afbe:	e7ea      	b.n	800af96 <HAL_DMA2D_ConfigLayer+0x5a>
 800afc0:	00fcfff0 	.word	0x00fcfff0

0800afc4 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800afc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800afc8:	4607      	mov	r7, r0
 800afca:	460d      	mov	r5, r1
 800afcc:	4614      	mov	r4, r2
 800afce:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800afd0:	f7ff fb06 	bl	800a5e0 <HAL_GetTick>
 800afd4:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800afd6:	683b      	ldr	r3, [r7, #0]
 800afd8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800afda:	07d2      	lsls	r2, r2, #31
 800afdc:	d50a      	bpl.n	800aff4 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800afde:	9906      	ldr	r1, [sp, #24]
 800afe0:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800afe4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800afe8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800afec:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 800afee:	2000      	movs	r0, #0
}
 800aff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800aff4:	f7ff faf4 	bl	800a5e0 <HAL_GetTick>
 800aff8:	eba0 0008 	sub.w	r0, r0, r8
 800affc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b000:	d9e9      	bls.n	800afd6 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800b002:	2003      	movs	r0, #3
 800b004:	e7f4      	b.n	800aff0 <DSI_ShortWrite+0x2c>

0800b006 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b006:	7c03      	ldrb	r3, [r0, #16]
 800b008:	2b01      	cmp	r3, #1
 800b00a:	d05d      	beq.n	800b0c8 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800b00c:	6803      	ldr	r3, [r0, #0]
 800b00e:	2200      	movs	r2, #0
 800b010:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800b014:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800b018:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800b01a:	bf48      	it	mi
 800b01c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800b020:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800b022:	bf42      	ittt	mi
 800b024:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800b028:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800b02c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800b030:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800b032:	bf42      	ittt	mi
 800b034:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800b038:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800b03c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800b040:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800b042:	bf42      	ittt	mi
 800b044:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b048:	f042 0201 	orrmi.w	r2, r2, #1
 800b04c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800b050:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800b052:	bf42      	ittt	mi
 800b054:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b058:	f042 0202 	orrmi.w	r2, r2, #2
 800b05c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800b060:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800b062:	bf42      	ittt	mi
 800b064:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b068:	f042 020c 	orrmi.w	r2, r2, #12
 800b06c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800b070:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800b072:	bf42      	ittt	mi
 800b074:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b078:	f042 0210 	orrmi.w	r2, r2, #16
 800b07c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800b080:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800b082:	bf42      	ittt	mi
 800b084:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b088:	f042 0220 	orrmi.w	r2, r2, #32
 800b08c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800b090:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800b092:	bf42      	ittt	mi
 800b094:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b098:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800b09c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800b0a0:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800b0a2:	bf42      	ittt	mi
 800b0a4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b0a8:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800b0ac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800b0b0:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800b0b2:	bf42      	ittt	mi
 800b0b4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800b0b8:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800b0bc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800b0c0:	2300      	movs	r3, #0
 800b0c2:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b0c4:	4618      	mov	r0, r3
 800b0c6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800b0c8:	2002      	movs	r0, #2
}
 800b0ca:	4770      	bx	lr

0800b0cc <HAL_DSI_Init>:
{
 800b0cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0ce:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800b0d0:	4604      	mov	r4, r0
 800b0d2:	2800      	cmp	r0, #0
 800b0d4:	f000 80a9 	beq.w	800b22a <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800b0d8:	7c43      	ldrb	r3, [r0, #17]
 800b0da:	b90b      	cbnz	r3, 800b0e0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800b0dc:	f7f7 f910 	bl	8002300 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800b0e0:	2303      	movs	r3, #3
 800b0e2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800b0e4:	2300      	movs	r3, #0
 800b0e6:	9300      	str	r3, [sp, #0]
 800b0e8:	6823      	ldr	r3, [r4, #0]
 800b0ea:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800b0ee:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800b0f2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800b0f6:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800b0fa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800b0fe:	9300      	str	r3, [sp, #0]
 800b100:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800b102:	f7ff fa6d 	bl	800a5e0 <HAL_GetTick>
 800b106:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800b108:	6822      	ldr	r2, [r4, #0]
 800b10a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b10e:	04d9      	lsls	r1, r3, #19
 800b110:	d57a      	bpl.n	800b208 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800b112:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800b116:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800b11a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800b11e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800b122:	e9d5 0300 	ldrd	r0, r3, [r5]
 800b126:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800b128:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800b12c:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800b12e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800b132:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800b136:	430b      	orrs	r3, r1
 800b138:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800b13c:	2300      	movs	r3, #0
 800b13e:	9301      	str	r3, [sp, #4]
 800b140:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800b144:	f043 0301 	orr.w	r3, r3, #1
 800b148:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800b14c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800b150:	f003 0301 	and.w	r3, r3, #1
 800b154:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 800b156:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800b158:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 800b15a:	f7ff fa47 	bl	800a5ec <HAL_Delay>
  tickstart = HAL_GetTick();
 800b15e:	f7ff fa3f 	bl	800a5e0 <HAL_GetTick>
 800b162:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800b164:	6823      	ldr	r3, [r4, #0]
 800b166:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800b16a:	05d2      	lsls	r2, r2, #23
 800b16c:	d556      	bpl.n	800b21c <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800b16e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800b172:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800b174:	f042 0206 	orr.w	r2, r2, #6
 800b178:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800b17c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800b180:	f022 0203 	bic.w	r2, r2, #3
 800b184:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800b188:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800b18c:	430a      	orrs	r2, r1
 800b18e:	f042 0201 	orr.w	r2, r2, #1
 800b192:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800b196:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800b19a:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800b19c:	f022 0203 	bic.w	r2, r2, #3
 800b1a0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800b1a4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800b1a8:	430a      	orrs	r2, r1
 800b1aa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800b1ae:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800b1b0:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800b1b2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800b1b6:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800b1b8:	689a      	ldr	r2, [r3, #8]
 800b1ba:	430a      	orrs	r2, r1
 800b1bc:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800b1be:	686a      	ldr	r2, [r5, #4]
 800b1c0:	491b      	ldr	r1, [pc, #108]	; (800b230 <HAL_DSI_Init+0x164>)
 800b1c2:	2a01      	cmp	r2, #1
 800b1c4:	bf38      	it	cc
 800b1c6:	2201      	movcc	r2, #1
 800b1c8:	434a      	muls	r2, r1
 800b1ca:	68a9      	ldr	r1, [r5, #8]
 800b1cc:	f001 0103 	and.w	r1, r1, #3
 800b1d0:	408a      	lsls	r2, r1
 800b1d2:	6829      	ldr	r1, [r5, #0]
 800b1d4:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800b1d8:	4341      	muls	r1, r0
 800b1da:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800b1de:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800b1e2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800b1e6:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800b1ea:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800b1ee:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800b1f0:	430a      	orrs	r2, r1
 800b1f2:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800b1f6:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800b1fa:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800b1fe:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800b200:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800b202:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800b204:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800b206:	e007      	b.n	800b218 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800b208:	f7ff f9ea 	bl	800a5e0 <HAL_GetTick>
 800b20c:	1b80      	subs	r0, r0, r6
 800b20e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b212:	f67f af79 	bls.w	800b108 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800b216:	2003      	movs	r0, #3
}
 800b218:	b002      	add	sp, #8
 800b21a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800b21c:	f7ff f9e0 	bl	800a5e0 <HAL_GetTick>
 800b220:	1b80      	subs	r0, r0, r6
 800b222:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b226:	d99d      	bls.n	800b164 <HAL_DSI_Init+0x98>
 800b228:	e7f5      	b.n	800b216 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800b22a:	2001      	movs	r0, #1
 800b22c:	e7f4      	b.n	800b218 <HAL_DSI_Init+0x14c>
 800b22e:	bf00      	nop
 800b230:	003d0900 	.word	0x003d0900

0800b234 <HAL_DSI_ErrorCallback>:
 800b234:	4770      	bx	lr

0800b236 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800b236:	6803      	ldr	r3, [r0, #0]
 800b238:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800b23c:	07d1      	lsls	r1, r2, #31
{
 800b23e:	b510      	push	{r4, lr}
 800b240:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800b242:	d508      	bpl.n	800b256 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800b244:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800b248:	07d2      	lsls	r2, r2, #31
 800b24a:	d504      	bpl.n	800b256 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800b24c:	2201      	movs	r2, #1
 800b24e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800b252:	f7f5 ffc3 	bl	80011dc <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800b256:	6823      	ldr	r3, [r4, #0]
 800b258:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800b25c:	0791      	lsls	r1, r2, #30
 800b25e:	d509      	bpl.n	800b274 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800b260:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800b264:	0792      	lsls	r2, r2, #30
 800b266:	d505      	bpl.n	800b274 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800b268:	2202      	movs	r2, #2
 800b26a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800b26e:	4620      	mov	r0, r4
 800b270:	f7f5 ffe8 	bl	8001244 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800b274:	69a3      	ldr	r3, [r4, #24]
 800b276:	2b00      	cmp	r3, #0
 800b278:	d04e      	beq.n	800b318 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800b27a:	6821      	ldr	r1, [r4, #0]
 800b27c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800b280:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800b284:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800b288:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800b28a:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800b28e:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800b290:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800b292:	b119      	cbz	r1, 800b29c <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800b294:	6961      	ldr	r1, [r4, #20]
 800b296:	f041 0101 	orr.w	r1, r1, #1
 800b29a:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800b29c:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800b2a0:	bf1e      	ittt	ne
 800b2a2:	6962      	ldrne	r2, [r4, #20]
 800b2a4:	f042 0202 	orrne.w	r2, r2, #2
 800b2a8:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800b2aa:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800b2ac:	bf42      	ittt	mi
 800b2ae:	6962      	ldrmi	r2, [r4, #20]
 800b2b0:	f042 0204 	orrmi.w	r2, r2, #4
 800b2b4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800b2b6:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800b2b8:	bf42      	ittt	mi
 800b2ba:	6962      	ldrmi	r2, [r4, #20]
 800b2bc:	f042 0208 	orrmi.w	r2, r2, #8
 800b2c0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800b2c2:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800b2c6:	bf1e      	ittt	ne
 800b2c8:	6962      	ldrne	r2, [r4, #20]
 800b2ca:	f042 0210 	orrne.w	r2, r2, #16
 800b2ce:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800b2d0:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800b2d2:	bf42      	ittt	mi
 800b2d4:	6962      	ldrmi	r2, [r4, #20]
 800b2d6:	f042 0220 	orrmi.w	r2, r2, #32
 800b2da:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800b2dc:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800b2de:	bf42      	ittt	mi
 800b2e0:	6962      	ldrmi	r2, [r4, #20]
 800b2e2:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800b2e6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800b2e8:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800b2ea:	bf42      	ittt	mi
 800b2ec:	6962      	ldrmi	r2, [r4, #20]
 800b2ee:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800b2f2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800b2f4:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800b2f6:	bf42      	ittt	mi
 800b2f8:	6962      	ldrmi	r2, [r4, #20]
 800b2fa:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800b2fe:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800b300:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800b304:	bf1e      	ittt	ne
 800b306:	6963      	ldrne	r3, [r4, #20]
 800b308:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800b30c:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800b30e:	6963      	ldr	r3, [r4, #20]
 800b310:	b113      	cbz	r3, 800b318 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800b312:	4620      	mov	r0, r4
 800b314:	f7ff ff8e 	bl	800b234 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800b318:	bd10      	pop	{r4, pc}

0800b31a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b31a:	7c03      	ldrb	r3, [r0, #16]
 800b31c:	2b01      	cmp	r3, #1
 800b31e:	d00b      	beq.n	800b338 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800b320:	6803      	ldr	r3, [r0, #0]
 800b322:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b324:	f022 0203 	bic.w	r2, r2, #3
 800b328:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800b32a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b32c:	4311      	orrs	r1, r2
 800b32e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b330:	2300      	movs	r3, #0
 800b332:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b334:	4618      	mov	r0, r3
 800b336:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800b338:	2002      	movs	r0, #2
}
 800b33a:	4770      	bx	lr

0800b33c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800b33c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b33e:	7c03      	ldrb	r3, [r0, #16]
 800b340:	2b01      	cmp	r3, #1
 800b342:	d06a      	beq.n	800b41a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800b344:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800b346:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800b348:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b34a:	f042 0201 	orr.w	r2, r2, #1
 800b34e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800b350:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800b354:	f022 0201 	bic.w	r2, r2, #1
 800b358:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800b35c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800b360:	f042 0201 	orr.w	r2, r2, #1
 800b364:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800b368:	68da      	ldr	r2, [r3, #12]
 800b36a:	f022 0203 	bic.w	r2, r2, #3
 800b36e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800b370:	68da      	ldr	r2, [r3, #12]
 800b372:	4322      	orrs	r2, r4
 800b374:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800b376:	695a      	ldr	r2, [r3, #20]
 800b378:	f022 0207 	bic.w	r2, r2, #7
 800b37c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800b37e:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800b382:	432a      	orrs	r2, r5
 800b384:	694d      	ldr	r5, [r1, #20]
 800b386:	695c      	ldr	r4, [r3, #20]
 800b388:	432a      	orrs	r2, r5
 800b38a:	4322      	orrs	r2, r4
 800b38c:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800b38e:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800b390:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800b392:	f022 020f 	bic.w	r2, r2, #15
 800b396:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800b398:	691c      	ldr	r4, [r3, #16]
 800b39a:	432c      	orrs	r4, r5
 800b39c:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800b39e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800b3a2:	f024 040e 	bic.w	r4, r4, #14
 800b3a6:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800b3aa:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800b3ae:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800b3b0:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800b3b4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800b3b8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800b3ba:	0c12      	lsrs	r2, r2, #16
 800b3bc:	0412      	lsls	r2, r2, #16
 800b3be:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800b3c0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800b3c2:	4322      	orrs	r2, r4
 800b3c4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800b3c6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800b3ca:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b3ce:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800b3d2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800b3d6:	432a      	orrs	r2, r5
 800b3d8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800b3da:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800b3de:	432a      	orrs	r2, r5
 800b3e0:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800b3e2:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800b3e4:	432a      	orrs	r2, r5
 800b3e6:	4322      	orrs	r2, r4
 800b3e8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800b3ec:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800b3ee:	f022 0201 	bic.w	r2, r2, #1
 800b3f2:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800b3f4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800b3f6:	430a      	orrs	r2, r1
 800b3f8:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800b3fa:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800b3fe:	f042 0201 	orr.w	r2, r2, #1
 800b402:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800b406:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800b40a:	f042 0202 	orr.w	r2, r2, #2
 800b40e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b412:	2300      	movs	r3, #0
 800b414:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b416:	4618      	mov	r0, r3
}
 800b418:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800b41a:	2002      	movs	r0, #2
 800b41c:	e7fc      	b.n	800b418 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800b420 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800b420:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b422:	7c03      	ldrb	r3, [r0, #16]
 800b424:	2b01      	cmp	r3, #1
 800b426:	d02a      	beq.n	800b47e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800b428:	6802      	ldr	r2, [r0, #0]
 800b42a:	4b16      	ldr	r3, [pc, #88]	; (800b484 <HAL_DSI_ConfigCommand+0x64>)
 800b42c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800b42e:	4023      	ands	r3, r4
 800b430:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800b432:	e9d1 3500 	ldrd	r3, r5, [r1]
 800b436:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800b438:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800b43a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800b43c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800b43e:	68cd      	ldr	r5, [r1, #12]
 800b440:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800b442:	690d      	ldr	r5, [r1, #16]
 800b444:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800b446:	694d      	ldr	r5, [r1, #20]
 800b448:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800b44a:	698d      	ldr	r5, [r1, #24]
 800b44c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800b44e:	69cd      	ldr	r5, [r1, #28]
 800b450:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800b452:	6a0d      	ldr	r5, [r1, #32]
 800b454:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800b456:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800b458:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800b45a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b45c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800b45e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800b460:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800b462:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800b464:	4323      	orrs	r3, r4
 800b466:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800b468:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800b46a:	f023 0302 	bic.w	r3, r3, #2
 800b46e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800b470:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800b472:	430b      	orrs	r3, r1
 800b474:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b476:	2300      	movs	r3, #0
 800b478:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b47a:	4618      	mov	r0, r3
}
 800b47c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800b47e:	2002      	movs	r0, #2
 800b480:	e7fc      	b.n	800b47c <HAL_DSI_ConfigCommand+0x5c>
 800b482:	bf00      	nop
 800b484:	fef080ff 	.word	0xfef080ff

0800b488 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b488:	7c03      	ldrb	r3, [r0, #16]
 800b48a:	2b01      	cmp	r3, #1
 800b48c:	d00b      	beq.n	800b4a6 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800b48e:	6803      	ldr	r3, [r0, #0]
 800b490:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b492:	f022 021f 	bic.w	r2, r2, #31
 800b496:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800b498:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b49a:	4311      	orrs	r1, r2
 800b49c:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b49e:	2300      	movs	r3, #0
 800b4a0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800b4a6:	2002      	movs	r0, #2
}
 800b4a8:	4770      	bx	lr

0800b4aa <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800b4aa:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b4ac:	7c03      	ldrb	r3, [r0, #16]
 800b4ae:	2b01      	cmp	r3, #1
 800b4b0:	d035      	beq.n	800b51e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800b4b2:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800b4b6:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800b4b8:	4294      	cmp	r4, r2
 800b4ba:	bf38      	it	cc
 800b4bc:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800b4be:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800b4c2:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800b4c6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800b4ca:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800b4ce:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b4d2:	4322      	orrs	r2, r4
 800b4d4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800b4d8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800b4dc:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800b4e0:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800b4e4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800b4e8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800b4ea:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800b4ee:	690d      	ldr	r5, [r1, #16]
 800b4f0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800b4f4:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800b4f6:	432a      	orrs	r2, r5
 800b4f8:	4322      	orrs	r2, r4
 800b4fa:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800b4fe:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800b502:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800b506:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800b50a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800b50e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800b512:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b516:	2300      	movs	r3, #0
 800b518:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b51a:	4618      	mov	r0, r3
}
 800b51c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800b51e:	2002      	movs	r0, #2
 800b520:	e7fc      	b.n	800b51c <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800b524 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800b524:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b526:	7c03      	ldrb	r3, [r0, #16]
 800b528:	2b01      	cmp	r3, #1
 800b52a:	d05c      	beq.n	800b5e6 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800b52c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800b52e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800b530:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800b532:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800b534:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800b538:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800b53a:	689a      	ldr	r2, [r3, #8]
 800b53c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800b540:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800b542:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800b544:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800b546:	b292      	uxth	r2, r2
 800b548:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800b54a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800b54c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b550:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800b552:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800b554:	4a25      	ldr	r2, [pc, #148]	; (800b5ec <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800b556:	4014      	ands	r4, r2
 800b558:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800b55a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800b55c:	432c      	orrs	r4, r5
 800b55e:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800b560:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800b562:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800b564:	4014      	ands	r4, r2
 800b566:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800b568:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800b56a:	432c      	orrs	r4, r5
 800b56c:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800b56e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800b572:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800b574:	4014      	ands	r4, r2
 800b576:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800b57a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800b57e:	432c      	orrs	r4, r5
 800b580:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800b584:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800b588:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800b58a:	4014      	ands	r4, r2
 800b58c:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800b590:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800b594:	432c      	orrs	r4, r5
 800b596:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800b59a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800b59e:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800b5a2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800b5a6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800b5aa:	698d      	ldr	r5, [r1, #24]
 800b5ac:	432c      	orrs	r4, r5
 800b5ae:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800b5b2:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800b5b6:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800b5b8:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800b5ba:	4014      	ands	r4, r2
 800b5bc:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800b5c0:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800b5c4:	432c      	orrs	r4, r5
 800b5c6:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800b5ca:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800b5ce:	4022      	ands	r2, r4
 800b5d0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800b5d4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800b5d8:	430a      	orrs	r2, r1
 800b5da:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b5de:	2300      	movs	r3, #0
 800b5e0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b5e2:	4618      	mov	r0, r3
}
 800b5e4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800b5e6:	2002      	movs	r0, #2
 800b5e8:	e7fc      	b.n	800b5e4 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800b5ea:	bf00      	nop
 800b5ec:	ffff0000 	.word	0xffff0000

0800b5f0 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b5f0:	7c03      	ldrb	r3, [r0, #16]
 800b5f2:	2b01      	cmp	r3, #1
{
 800b5f4:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800b5f6:	d01c      	beq.n	800b632 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800b5f8:	6802      	ldr	r2, [r0, #0]
 800b5fa:	2300      	movs	r3, #0
 800b5fc:	9300      	str	r3, [sp, #0]
 800b5fe:	6851      	ldr	r1, [r2, #4]
 800b600:	f041 0101 	orr.w	r1, r1, #1
 800b604:	6051      	str	r1, [r2, #4]
 800b606:	6851      	ldr	r1, [r2, #4]
 800b608:	f001 0101 	and.w	r1, r1, #1
 800b60c:	9100      	str	r1, [sp, #0]
 800b60e:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800b610:	9301      	str	r3, [sp, #4]
 800b612:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800b616:	f041 0108 	orr.w	r1, r1, #8
 800b61a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800b61e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b622:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800b624:	f002 0208 	and.w	r2, r2, #8
 800b628:	9201      	str	r2, [sp, #4]
 800b62a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800b62c:	4618      	mov	r0, r3
}
 800b62e:	b002      	add	sp, #8
 800b630:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800b632:	2002      	movs	r0, #2
 800b634:	e7fb      	b.n	800b62e <HAL_DSI_Start+0x3e>

0800b636 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b636:	7c03      	ldrb	r3, [r0, #16]
 800b638:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800b63a:	bf1f      	itttt	ne
 800b63c:	6802      	ldrne	r2, [r0, #0]
 800b63e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800b642:	f043 0304 	orrne.w	r3, r3, #4
 800b646:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b64a:	bf1d      	ittte	ne
 800b64c:	2300      	movne	r3, #0
 800b64e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800b650:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800b652:	2002      	moveq	r0, #2
}
 800b654:	4770      	bx	lr

0800b656 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800b656:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800b658:	7c05      	ldrb	r5, [r0, #16]
 800b65a:	2d01      	cmp	r5, #1
{
 800b65c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800b65e:	d009      	beq.n	800b674 <HAL_DSI_ShortWrite+0x1e>
 800b660:	2501      	movs	r5, #1
 800b662:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800b664:	9d06      	ldr	r5, [sp, #24]
 800b666:	9500      	str	r5, [sp, #0]
 800b668:	f7ff fcac 	bl	800afc4 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b66c:	2300      	movs	r3, #0
 800b66e:	7423      	strb	r3, [r4, #16]

  return status;
}
 800b670:	b003      	add	sp, #12
 800b672:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800b674:	2002      	movs	r0, #2
 800b676:	e7fb      	b.n	800b670 <HAL_DSI_ShortWrite+0x1a>

0800b678 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800b678:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b67c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800b67e:	7c03      	ldrb	r3, [r0, #16]
 800b680:	2b01      	cmp	r3, #1
{
 800b682:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800b686:	4606      	mov	r6, r0
 800b688:	460f      	mov	r7, r1
 800b68a:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800b68c:	d053      	beq.n	800b736 <HAL_DSI_LongWrite+0xbe>
 800b68e:	2301      	movs	r3, #1
 800b690:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800b692:	f7fe ffa5 	bl	800a5e0 <HAL_GetTick>
 800b696:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800b698:	6831      	ldr	r1, [r6, #0]
 800b69a:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800b69c:	f013 0a01 	ands.w	sl, r3, #1
 800b6a0:	d01a      	beq.n	800b6d8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800b6a2:	2c03      	cmp	r4, #3
 800b6a4:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800b6a6:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800b6aa:	bf28      	it	cs
 800b6ac:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800b6ae:	4282      	cmp	r2, r0
 800b6b0:	d11e      	bne.n	800b6f0 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800b6b2:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 800b6b4:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800b6b8:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800b6ba:	bb1b      	cbnz	r3, 800b704 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800b6bc:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800b6be:	0222      	lsls	r2, r4, #8
 800b6c0:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 800b6c4:	b292      	uxth	r2, r2
 800b6c6:	0224      	lsls	r4, r4, #8
 800b6c8:	4315      	orrs	r5, r2
 800b6ca:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800b6ce:	432c      	orrs	r4, r5
 800b6d0:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800b6d2:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800b6d4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800b6d6:	e009      	b.n	800b6ec <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800b6d8:	f7fe ff82 	bl	800a5e0 <HAL_GetTick>
 800b6dc:	eba0 000b 	sub.w	r0, r0, fp
 800b6e0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b6e4:	d9d8      	bls.n	800b698 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800b6e6:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800b6ea:	2003      	movs	r0, #3
}
 800b6ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800b6f0:	f818 3002 	ldrb.w	r3, [r8, r2]
 800b6f4:	3201      	adds	r2, #1
 800b6f6:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800b6fa:	fa03 f30c 	lsl.w	r3, r3, ip
 800b6fe:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800b702:	e7d4      	b.n	800b6ae <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800b704:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800b706:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800b70a:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800b70c:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800b70e:	bf28      	it	cs
 800b710:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800b714:	f812 8000 	ldrb.w	r8, [r2, r0]
 800b718:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800b71c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800b71e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800b722:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800b724:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800b728:	d1f4      	bne.n	800b714 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800b72a:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800b72e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800b732:	4472      	add	r2, lr
 800b734:	e7c1      	b.n	800b6ba <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800b736:	2002      	movs	r0, #2
 800b738:	e7d8      	b.n	800b6ec <HAL_DSI_LongWrite+0x74>

0800b73a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800b73a:	7c03      	ldrb	r3, [r0, #16]
 800b73c:	2b01      	cmp	r3, #1
 800b73e:	d010      	beq.n	800b762 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800b740:	6803      	ldr	r3, [r0, #0]
 800b742:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800b746:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800b74a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800b74e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800b752:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800b756:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800b75a:	2300      	movs	r3, #0
 800b75c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800b75e:	4618      	mov	r0, r3
 800b760:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800b762:	2002      	movs	r0, #2
}
 800b764:	4770      	bx	lr
	...

0800b768 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800b768:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800b76c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800b930 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800b770:	4a6d      	ldr	r2, [pc, #436]	; (800b928 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b772:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800b774:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800b776:	2401      	movs	r4, #1
 800b778:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800b77a:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800b77e:	43ac      	bics	r4, r5
 800b780:	f040 80b9 	bne.w	800b8f6 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800b784:	684d      	ldr	r5, [r1, #4]
 800b786:	f005 0403 	and.w	r4, r5, #3
 800b78a:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b78e:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800b790:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b792:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800b796:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b798:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800b79c:	d834      	bhi.n	800b808 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800b79e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b7a0:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800b7a4:	68cf      	ldr	r7, [r1, #12]
 800b7a6:	fa07 f708 	lsl.w	r7, r7, r8
 800b7aa:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800b7ae:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800b7b0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800b7b2:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800b7b6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800b7ba:	409f      	lsls	r7, r3
 800b7bc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800b7c0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800b7c2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800b7c4:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800b7c8:	688f      	ldr	r7, [r1, #8]
 800b7ca:	fa07 f708 	lsl.w	r7, r7, r8
 800b7ce:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800b7d2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800b7d4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800b7d6:	d119      	bne.n	800b80c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800b7d8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800b7dc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800b7e0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800b7e4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800b7e8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800b7ec:	f04f 0e0f 	mov.w	lr, #15
 800b7f0:	fa0e fe0b 	lsl.w	lr, lr, fp
 800b7f4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800b7f8:	690f      	ldr	r7, [r1, #16]
 800b7fa:	fa07 f70b 	lsl.w	r7, r7, fp
 800b7fe:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800b802:	f8ca 7020 	str.w	r7, [sl, #32]
 800b806:	e001      	b.n	800b80c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800b808:	2c03      	cmp	r4, #3
 800b80a:	d1da      	bne.n	800b7c2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800b80c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800b80e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800b812:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800b814:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800b816:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800b81a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800b81c:	d06b      	beq.n	800b8f6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800b81e:	f04f 0a00 	mov.w	sl, #0
 800b822:	f8cd a004 	str.w	sl, [sp, #4]
 800b826:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b82a:	4c40      	ldr	r4, [pc, #256]	; (800b92c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800b82c:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800b830:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800b834:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800b838:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800b83c:	9601      	str	r6, [sp, #4]
 800b83e:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800b840:	f023 0603 	bic.w	r6, r3, #3
 800b844:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800b848:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800b84c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800b850:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800b854:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800b858:	270f      	movs	r7, #15
 800b85a:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b85e:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800b860:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b864:	d04e      	beq.n	800b904 <HAL_GPIO_Init+0x19c>
 800b866:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b86a:	42a0      	cmp	r0, r4
 800b86c:	d04c      	beq.n	800b908 <HAL_GPIO_Init+0x1a0>
 800b86e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b872:	42a0      	cmp	r0, r4
 800b874:	d04a      	beq.n	800b90c <HAL_GPIO_Init+0x1a4>
 800b876:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b87a:	42a0      	cmp	r0, r4
 800b87c:	d048      	beq.n	800b910 <HAL_GPIO_Init+0x1a8>
 800b87e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b882:	42a0      	cmp	r0, r4
 800b884:	d046      	beq.n	800b914 <HAL_GPIO_Init+0x1ac>
 800b886:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b88a:	42a0      	cmp	r0, r4
 800b88c:	d044      	beq.n	800b918 <HAL_GPIO_Init+0x1b0>
 800b88e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b892:	42a0      	cmp	r0, r4
 800b894:	d042      	beq.n	800b91c <HAL_GPIO_Init+0x1b4>
 800b896:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b89a:	42a0      	cmp	r0, r4
 800b89c:	d040      	beq.n	800b920 <HAL_GPIO_Init+0x1b8>
 800b89e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b8a2:	42a0      	cmp	r0, r4
 800b8a4:	d03e      	beq.n	800b924 <HAL_GPIO_Init+0x1bc>
 800b8a6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b8aa:	42a0      	cmp	r0, r4
 800b8ac:	bf0c      	ite	eq
 800b8ae:	2409      	moveq	r4, #9
 800b8b0:	240a      	movne	r4, #10
 800b8b2:	fa04 f40e 	lsl.w	r4, r4, lr
 800b8b6:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800b8b8:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800b8ba:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800b8bc:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800b8c0:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800b8c2:	bf54      	ite	pl
 800b8c4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800b8c6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800b8ca:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800b8cc:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800b8ce:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800b8d0:	bf54      	ite	pl
 800b8d2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800b8d4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800b8d8:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800b8da:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800b8dc:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800b8de:	bf54      	ite	pl
 800b8e0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800b8e2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800b8e6:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800b8e8:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800b8ea:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800b8ec:	bf54      	ite	pl
 800b8ee:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800b8f0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800b8f4:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b8f6:	3301      	adds	r3, #1
 800b8f8:	2b10      	cmp	r3, #16
 800b8fa:	f47f af3b 	bne.w	800b774 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800b8fe:	b003      	add	sp, #12
 800b900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b904:	4654      	mov	r4, sl
 800b906:	e7d4      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b908:	2401      	movs	r4, #1
 800b90a:	e7d2      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b90c:	2402      	movs	r4, #2
 800b90e:	e7d0      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b910:	2403      	movs	r4, #3
 800b912:	e7ce      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b914:	2404      	movs	r4, #4
 800b916:	e7cc      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b918:	2405      	movs	r4, #5
 800b91a:	e7ca      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b91c:	2406      	movs	r4, #6
 800b91e:	e7c8      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b920:	2407      	movs	r4, #7
 800b922:	e7c6      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b924:	2408      	movs	r4, #8
 800b926:	e7c4      	b.n	800b8b2 <HAL_GPIO_Init+0x14a>
 800b928:	40013c00 	.word	0x40013c00
 800b92c:	40020000 	.word	0x40020000
 800b930:	40023800 	.word	0x40023800

0800b934 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800b934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800b938:	4c4a      	ldr	r4, [pc, #296]	; (800ba64 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b93a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ba6c <HAL_GPIO_DeInit+0x138>
 800b93e:	f8df a130 	ldr.w	sl, [pc, #304]	; 800ba70 <HAL_GPIO_DeInit+0x13c>
 800b942:	f8df b130 	ldr.w	fp, [pc, #304]	; 800ba74 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b946:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800b948:	2301      	movs	r3, #1
 800b94a:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800b94e:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800b952:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800b956:	d16e      	bne.n	800ba36 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800b958:	f022 0503 	bic.w	r5, r2, #3
 800b95c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800b960:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b964:	4b40      	ldr	r3, [pc, #256]	; (800ba68 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800b966:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800b96a:	f002 0c03 	and.w	ip, r2, #3
 800b96e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800b972:	260f      	movs	r6, #15
 800b974:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b978:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800b97a:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b97e:	d05f      	beq.n	800ba40 <HAL_GPIO_DeInit+0x10c>
 800b980:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b984:	4298      	cmp	r0, r3
 800b986:	d05d      	beq.n	800ba44 <HAL_GPIO_DeInit+0x110>
 800b988:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b98c:	4298      	cmp	r0, r3
 800b98e:	d05b      	beq.n	800ba48 <HAL_GPIO_DeInit+0x114>
 800b990:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b994:	4298      	cmp	r0, r3
 800b996:	d059      	beq.n	800ba4c <HAL_GPIO_DeInit+0x118>
 800b998:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b99c:	4298      	cmp	r0, r3
 800b99e:	d057      	beq.n	800ba50 <HAL_GPIO_DeInit+0x11c>
 800b9a0:	4548      	cmp	r0, r9
 800b9a2:	d057      	beq.n	800ba54 <HAL_GPIO_DeInit+0x120>
 800b9a4:	4550      	cmp	r0, sl
 800b9a6:	d057      	beq.n	800ba58 <HAL_GPIO_DeInit+0x124>
 800b9a8:	4558      	cmp	r0, fp
 800b9aa:	d057      	beq.n	800ba5c <HAL_GPIO_DeInit+0x128>
 800b9ac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800b9b0:	4298      	cmp	r0, r3
 800b9b2:	d055      	beq.n	800ba60 <HAL_GPIO_DeInit+0x12c>
 800b9b4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b9b8:	4298      	cmp	r0, r3
 800b9ba:	bf0c      	ite	eq
 800b9bc:	2309      	moveq	r3, #9
 800b9be:	230a      	movne	r3, #10
 800b9c0:	fa03 f30c 	lsl.w	r3, r3, ip
 800b9c4:	4543      	cmp	r3, r8
 800b9c6:	d113      	bne.n	800b9f0 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800b9c8:	6823      	ldr	r3, [r4, #0]
 800b9ca:	ea23 0307 	bic.w	r3, r3, r7
 800b9ce:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800b9d0:	6863      	ldr	r3, [r4, #4]
 800b9d2:	ea23 0307 	bic.w	r3, r3, r7
 800b9d6:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800b9d8:	68e3      	ldr	r3, [r4, #12]
 800b9da:	ea23 0307 	bic.w	r3, r3, r7
 800b9de:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800b9e0:	68a3      	ldr	r3, [r4, #8]
 800b9e2:	ea23 0307 	bic.w	r3, r3, r7
 800b9e6:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800b9e8:	68ab      	ldr	r3, [r5, #8]
 800b9ea:	ea23 0306 	bic.w	r3, r3, r6
 800b9ee:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800b9f0:	6805      	ldr	r5, [r0, #0]
 800b9f2:	2603      	movs	r6, #3
 800b9f4:	0053      	lsls	r3, r2, #1
 800b9f6:	fa06 f303 	lsl.w	r3, r6, r3
 800b9fa:	ea25 0503 	bic.w	r5, r5, r3
 800b9fe:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ba00:	fa22 f506 	lsr.w	r5, r2, r6
 800ba04:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800ba08:	f002 0c07 	and.w	ip, r2, #7
 800ba0c:	6a2e      	ldr	r6, [r5, #32]
 800ba0e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800ba12:	270f      	movs	r7, #15
 800ba14:	fa07 f70c 	lsl.w	r7, r7, ip
 800ba18:	ea26 0707 	bic.w	r7, r6, r7
 800ba1c:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ba1e:	68c5      	ldr	r5, [r0, #12]
 800ba20:	ea25 0503 	bic.w	r5, r5, r3
 800ba24:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ba26:	6845      	ldr	r5, [r0, #4]
 800ba28:	ea25 050e 	bic.w	r5, r5, lr
 800ba2c:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ba2e:	6885      	ldr	r5, [r0, #8]
 800ba30:	ea25 0303 	bic.w	r3, r5, r3
 800ba34:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ba36:	3201      	adds	r2, #1
 800ba38:	2a10      	cmp	r2, #16
 800ba3a:	d185      	bne.n	800b948 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800ba3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ba40:	2300      	movs	r3, #0
 800ba42:	e7bd      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba44:	2301      	movs	r3, #1
 800ba46:	e7bb      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba48:	2302      	movs	r3, #2
 800ba4a:	e7b9      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba4c:	2303      	movs	r3, #3
 800ba4e:	e7b7      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba50:	2304      	movs	r3, #4
 800ba52:	e7b5      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba54:	2305      	movs	r3, #5
 800ba56:	e7b3      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba58:	2306      	movs	r3, #6
 800ba5a:	e7b1      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba5c:	2307      	movs	r3, #7
 800ba5e:	e7af      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba60:	2308      	movs	r3, #8
 800ba62:	e7ad      	b.n	800b9c0 <HAL_GPIO_DeInit+0x8c>
 800ba64:	40013c00 	.word	0x40013c00
 800ba68:	40020000 	.word	0x40020000
 800ba6c:	40021400 	.word	0x40021400
 800ba70:	40021800 	.word	0x40021800
 800ba74:	40021c00 	.word	0x40021c00

0800ba78 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ba78:	6903      	ldr	r3, [r0, #16]
 800ba7a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ba7c:	bf14      	ite	ne
 800ba7e:	2001      	movne	r0, #1
 800ba80:	2000      	moveq	r0, #0
 800ba82:	4770      	bx	lr

0800ba84 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ba84:	b10a      	cbz	r2, 800ba8a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ba86:	6181      	str	r1, [r0, #24]
  }
}
 800ba88:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ba8a:	0409      	lsls	r1, r1, #16
 800ba8c:	e7fb      	b.n	800ba86 <HAL_GPIO_WritePin+0x2>

0800ba8e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800ba8e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ba90:	ea01 0203 	and.w	r2, r1, r3
 800ba94:	ea21 0103 	bic.w	r1, r1, r3
 800ba98:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ba9c:	6181      	str	r1, [r0, #24]
}
 800ba9e:	4770      	bx	lr

0800baa0 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800baa0:	6801      	ldr	r1, [r0, #0]
 800baa2:	694b      	ldr	r3, [r1, #20]
 800baa4:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800baa8:	f04f 0200 	mov.w	r2, #0
 800baac:	d010      	beq.n	800bad0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800baae:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800bab2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800bab4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bab6:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bab8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800babc:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bac0:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800bac2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bac6:	f043 0304 	orr.w	r3, r3, #4
 800baca:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800bacc:	2001      	movs	r0, #1
 800bace:	4770      	bx	lr
  }
  return HAL_OK;
 800bad0:	4618      	mov	r0, r3
}
 800bad2:	4770      	bx	lr

0800bad4 <I2C_WaitOnFlagUntilTimeout>:
{
 800bad4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800bad8:	4606      	mov	r6, r0
 800bada:	460f      	mov	r7, r1
 800badc:	4691      	mov	r9, r2
 800bade:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bae0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800bae4:	6833      	ldr	r3, [r6, #0]
 800bae6:	f1ba 0f01 	cmp.w	sl, #1
 800baea:	bf0c      	ite	eq
 800baec:	695c      	ldreq	r4, [r3, #20]
 800baee:	699c      	ldrne	r4, [r3, #24]
 800baf0:	ea27 0404 	bic.w	r4, r7, r4
 800baf4:	b2a4      	uxth	r4, r4
 800baf6:	fab4 f484 	clz	r4, r4
 800bafa:	0964      	lsrs	r4, r4, #5
 800bafc:	45a1      	cmp	r9, r4
 800bafe:	d001      	beq.n	800bb04 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800bb00:	2000      	movs	r0, #0
 800bb02:	e017      	b.n	800bb34 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800bb04:	1c6a      	adds	r2, r5, #1
 800bb06:	d0ee      	beq.n	800bae6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bb08:	f7fe fd6a 	bl	800a5e0 <HAL_GetTick>
 800bb0c:	9b08      	ldr	r3, [sp, #32]
 800bb0e:	1ac0      	subs	r0, r0, r3
 800bb10:	42a8      	cmp	r0, r5
 800bb12:	d801      	bhi.n	800bb18 <I2C_WaitOnFlagUntilTimeout+0x44>
 800bb14:	2d00      	cmp	r5, #0
 800bb16:	d1e5      	bne.n	800bae4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bb18:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bb1a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bb1c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bb1e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bb22:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bb26:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bb28:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bb2c:	f042 0220 	orr.w	r2, r2, #32
 800bb30:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800bb32:	2001      	movs	r0, #1
}
 800bb34:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800bb38 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800bb38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb3c:	4604      	mov	r4, r0
 800bb3e:	460f      	mov	r7, r1
 800bb40:	4616      	mov	r6, r2
 800bb42:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bb44:	6825      	ldr	r5, [r4, #0]
 800bb46:	6968      	ldr	r0, [r5, #20]
 800bb48:	ea27 0000 	bic.w	r0, r7, r0
 800bb4c:	b280      	uxth	r0, r0
 800bb4e:	b1b8      	cbz	r0, 800bb80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bb50:	696b      	ldr	r3, [r5, #20]
 800bb52:	055a      	lsls	r2, r3, #21
 800bb54:	d516      	bpl.n	800bb84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb56:	682b      	ldr	r3, [r5, #0]
 800bb58:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800bb5c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bb5e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800bb62:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800bb64:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bb66:	2300      	movs	r3, #0
 800bb68:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bb6a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bb6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bb72:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bb74:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bb78:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bb7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800bb7e:	2001      	movs	r0, #1
}
 800bb80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800bb84:	1c73      	adds	r3, r6, #1
 800bb86:	d0de      	beq.n	800bb46 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bb88:	f7fe fd2a 	bl	800a5e0 <HAL_GetTick>
 800bb8c:	eba0 0008 	sub.w	r0, r0, r8
 800bb90:	42b0      	cmp	r0, r6
 800bb92:	d801      	bhi.n	800bb98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800bb94:	2e00      	cmp	r6, #0
 800bb96:	d1d5      	bne.n	800bb44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bb98:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bb9a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bb9c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bb9e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bba2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bba6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bba8:	f042 0220 	orr.w	r2, r2, #32
 800bbac:	e7e4      	b.n	800bb78 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800bbae <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800bbae:	b570      	push	{r4, r5, r6, lr}
 800bbb0:	4604      	mov	r4, r0
 800bbb2:	460d      	mov	r5, r1
 800bbb4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800bbb6:	6821      	ldr	r1, [r4, #0]
 800bbb8:	694b      	ldr	r3, [r1, #20]
 800bbba:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800bbbe:	d001      	beq.n	800bbc4 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800bbc0:	2000      	movs	r0, #0
 800bbc2:	e010      	b.n	800bbe6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800bbc4:	694a      	ldr	r2, [r1, #20]
 800bbc6:	06d2      	lsls	r2, r2, #27
 800bbc8:	d50e      	bpl.n	800bbe8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800bbca:	f06f 0210 	mvn.w	r2, #16
 800bbce:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800bbd0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bbd2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bbd4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bbd8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800bbdc:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bbde:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bbe0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800bbe4:	2001      	movs	r0, #1
}
 800bbe6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bbe8:	f7fe fcfa 	bl	800a5e0 <HAL_GetTick>
 800bbec:	1b80      	subs	r0, r0, r6
 800bbee:	42a8      	cmp	r0, r5
 800bbf0:	d801      	bhi.n	800bbf6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800bbf2:	2d00      	cmp	r5, #0
 800bbf4:	d1df      	bne.n	800bbb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bbf6:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800bbf8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bbfa:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bbfc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bc00:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc04:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bc06:	f042 0220 	orr.w	r2, r2, #32
 800bc0a:	e7e8      	b.n	800bbde <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800bc0c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800bc0c:	b570      	push	{r4, r5, r6, lr}
 800bc0e:	4604      	mov	r4, r0
 800bc10:	460d      	mov	r5, r1
 800bc12:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800bc14:	6823      	ldr	r3, [r4, #0]
 800bc16:	695b      	ldr	r3, [r3, #20]
 800bc18:	075b      	lsls	r3, r3, #29
 800bc1a:	d501      	bpl.n	800bc20 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800bc1c:	2000      	movs	r0, #0
}
 800bc1e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800bc20:	4620      	mov	r0, r4
 800bc22:	f7ff ff3d 	bl	800baa0 <I2C_IsAcknowledgeFailed>
 800bc26:	b9a8      	cbnz	r0, 800bc54 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800bc28:	1c6a      	adds	r2, r5, #1
 800bc2a:	d0f3      	beq.n	800bc14 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bc2c:	f7fe fcd8 	bl	800a5e0 <HAL_GetTick>
 800bc30:	1b80      	subs	r0, r0, r6
 800bc32:	42a8      	cmp	r0, r5
 800bc34:	d801      	bhi.n	800bc3a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800bc36:	2d00      	cmp	r5, #0
 800bc38:	d1ec      	bne.n	800bc14 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bc3a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bc3c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bc3e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bc40:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bc44:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc48:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bc4a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc4e:	f042 0220 	orr.w	r2, r2, #32
 800bc52:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800bc54:	2001      	movs	r0, #1
 800bc56:	e7e2      	b.n	800bc1e <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800bc58 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800bc58:	b570      	push	{r4, r5, r6, lr}
 800bc5a:	4604      	mov	r4, r0
 800bc5c:	460d      	mov	r5, r1
 800bc5e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bc60:	6823      	ldr	r3, [r4, #0]
 800bc62:	695b      	ldr	r3, [r3, #20]
 800bc64:	061b      	lsls	r3, r3, #24
 800bc66:	d501      	bpl.n	800bc6c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800bc68:	2000      	movs	r0, #0
}
 800bc6a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800bc6c:	4620      	mov	r0, r4
 800bc6e:	f7ff ff17 	bl	800baa0 <I2C_IsAcknowledgeFailed>
 800bc72:	b9a8      	cbnz	r0, 800bca0 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800bc74:	1c6a      	adds	r2, r5, #1
 800bc76:	d0f3      	beq.n	800bc60 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bc78:	f7fe fcb2 	bl	800a5e0 <HAL_GetTick>
 800bc7c:	1b80      	subs	r0, r0, r6
 800bc7e:	42a8      	cmp	r0, r5
 800bc80:	d801      	bhi.n	800bc86 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800bc82:	2d00      	cmp	r5, #0
 800bc84:	d1ec      	bne.n	800bc60 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bc86:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bc88:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bc8a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bc8c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bc90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc94:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bc96:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc9a:	f042 0220 	orr.w	r2, r2, #32
 800bc9e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800bca0:	2001      	movs	r0, #1
 800bca2:	e7e2      	b.n	800bc6a <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800bca4 <I2C_RequestMemoryWrite>:
{
 800bca4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bca8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bcaa:	6802      	ldr	r2, [r0, #0]
{
 800bcac:	b085      	sub	sp, #20
 800bcae:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800bcb2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bcb4:	6813      	ldr	r3, [r2, #0]
 800bcb6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bcba:	6013      	str	r3, [r2, #0]
{
 800bcbc:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bcbe:	463b      	mov	r3, r7
 800bcc0:	f8cd 8000 	str.w	r8, [sp]
 800bcc4:	2200      	movs	r2, #0
 800bcc6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800bcca:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bccc:	f7ff ff02 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800bcd0:	6823      	ldr	r3, [r4, #0]
 800bcd2:	b138      	cbz	r0, 800bce4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bcd4:	681b      	ldr	r3, [r3, #0]
 800bcd6:	05db      	lsls	r3, r3, #23
 800bcd8:	d502      	bpl.n	800bce0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bcda:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bcde:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800bce0:	2003      	movs	r0, #3
 800bce2:	e00a      	b.n	800bcfa <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bce4:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800bce8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800bcea:	4919      	ldr	r1, [pc, #100]	; (800bd50 <I2C_RequestMemoryWrite+0xac>)
 800bcec:	4643      	mov	r3, r8
 800bcee:	463a      	mov	r2, r7
 800bcf0:	4620      	mov	r0, r4
 800bcf2:	f7ff ff21 	bl	800bb38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800bcf6:	b118      	cbz	r0, 800bd00 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800bcf8:	2001      	movs	r0, #1
}
 800bcfa:	b005      	add	sp, #20
 800bcfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd00:	6823      	ldr	r3, [r4, #0]
 800bd02:	9003      	str	r0, [sp, #12]
 800bd04:	695a      	ldr	r2, [r3, #20]
 800bd06:	9203      	str	r2, [sp, #12]
 800bd08:	699b      	ldr	r3, [r3, #24]
 800bd0a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bd0c:	4642      	mov	r2, r8
 800bd0e:	4639      	mov	r1, r7
 800bd10:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd12:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bd14:	f7ff ffa0 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800bd18:	b140      	cbz	r0, 800bd2c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bd1a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd1c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd1e:	bf01      	itttt	eq
 800bd20:	6822      	ldreq	r2, [r4, #0]
 800bd22:	6813      	ldreq	r3, [r2, #0]
 800bd24:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800bd28:	6013      	streq	r3, [r2, #0]
 800bd2a:	e7e5      	b.n	800bcf8 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bd2c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd30:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bd32:	d102      	bne.n	800bd3a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bd34:	b2ed      	uxtb	r5, r5
 800bd36:	611d      	str	r5, [r3, #16]
 800bd38:	e7df      	b.n	800bcfa <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800bd3a:	0a2a      	lsrs	r2, r5, #8
 800bd3c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bd3e:	4639      	mov	r1, r7
 800bd40:	4642      	mov	r2, r8
 800bd42:	4620      	mov	r0, r4
 800bd44:	f7ff ff88 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800bd48:	2800      	cmp	r0, #0
 800bd4a:	d1e6      	bne.n	800bd1a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bd4c:	6823      	ldr	r3, [r4, #0]
 800bd4e:	e7f1      	b.n	800bd34 <I2C_RequestMemoryWrite+0x90>
 800bd50:	00010002 	.word	0x00010002

0800bd54 <I2C_RequestMemoryRead>:
{
 800bd54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bd58:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd5a:	6803      	ldr	r3, [r0, #0]
{
 800bd5c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd5e:	681a      	ldr	r2, [r3, #0]
 800bd60:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bd64:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bd66:	681a      	ldr	r2, [r3, #0]
{
 800bd68:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bd6c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bd70:	601a      	str	r2, [r3, #0]
{
 800bd72:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bd74:	463b      	mov	r3, r7
 800bd76:	f8cd 8000 	str.w	r8, [sp]
 800bd7a:	2200      	movs	r2, #0
 800bd7c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800bd80:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bd82:	f7ff fea7 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800bd86:	6823      	ldr	r3, [r4, #0]
 800bd88:	b148      	cbz	r0, 800bd9e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bd8a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bd8c:	05db      	lsls	r3, r3, #23
 800bd8e:	d502      	bpl.n	800bd96 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bd90:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bd94:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800bd96:	2003      	movs	r0, #3
}
 800bd98:	b004      	add	sp, #16
 800bd9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bd9e:	fa5f f986 	uxtb.w	r9, r6
 800bda2:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800bda6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800bda8:	492a      	ldr	r1, [pc, #168]	; (800be54 <I2C_RequestMemoryRead+0x100>)
 800bdaa:	4643      	mov	r3, r8
 800bdac:	463a      	mov	r2, r7
 800bdae:	4620      	mov	r0, r4
 800bdb0:	f7ff fec2 	bl	800bb38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800bdb4:	b108      	cbz	r0, 800bdba <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800bdb6:	2001      	movs	r0, #1
 800bdb8:	e7ee      	b.n	800bd98 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdba:	6823      	ldr	r3, [r4, #0]
 800bdbc:	9003      	str	r0, [sp, #12]
 800bdbe:	695a      	ldr	r2, [r3, #20]
 800bdc0:	9203      	str	r2, [sp, #12]
 800bdc2:	699b      	ldr	r3, [r3, #24]
 800bdc4:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bdc6:	4642      	mov	r2, r8
 800bdc8:	4639      	mov	r1, r7
 800bdca:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdcc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bdce:	f7ff ff43 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800bdd2:	b140      	cbz	r0, 800bde6 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bdd4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bdd6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bdd8:	bf01      	itttt	eq
 800bdda:	6822      	ldreq	r2, [r4, #0]
 800bddc:	6813      	ldreq	r3, [r2, #0]
 800bdde:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800bde2:	6013      	streq	r3, [r2, #0]
 800bde4:	e7e7      	b.n	800bdb6 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bde6:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bdea:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bdec:	d11a      	bne.n	800be24 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bdee:	b2ed      	uxtb	r5, r5
 800bdf0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bdf2:	4642      	mov	r2, r8
 800bdf4:	4639      	mov	r1, r7
 800bdf6:	4620      	mov	r0, r4
 800bdf8:	f7ff ff2e 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800bdfc:	2800      	cmp	r0, #0
 800bdfe:	d1e9      	bne.n	800bdd4 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be00:	6822      	ldr	r2, [r4, #0]
 800be02:	6813      	ldr	r3, [r2, #0]
 800be04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800be08:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800be0a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800be0e:	4602      	mov	r2, r0
 800be10:	f8cd 8000 	str.w	r8, [sp]
 800be14:	463b      	mov	r3, r7
 800be16:	4620      	mov	r0, r4
 800be18:	f7ff fe5c 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800be1c:	6822      	ldr	r2, [r4, #0]
 800be1e:	b160      	cbz	r0, 800be3a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be20:	6813      	ldr	r3, [r2, #0]
 800be22:	e7b3      	b.n	800bd8c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800be24:	0a2a      	lsrs	r2, r5, #8
 800be26:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800be28:	4639      	mov	r1, r7
 800be2a:	4642      	mov	r2, r8
 800be2c:	4620      	mov	r0, r4
 800be2e:	f7ff ff13 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800be32:	2800      	cmp	r0, #0
 800be34:	d1ce      	bne.n	800bdd4 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800be36:	6823      	ldr	r3, [r4, #0]
 800be38:	e7d9      	b.n	800bdee <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800be3a:	f049 0301 	orr.w	r3, r9, #1
 800be3e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800be40:	4904      	ldr	r1, [pc, #16]	; (800be54 <I2C_RequestMemoryRead+0x100>)
 800be42:	4643      	mov	r3, r8
 800be44:	463a      	mov	r2, r7
 800be46:	4620      	mov	r0, r4
 800be48:	f7ff fe76 	bl	800bb38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800be4c:	3800      	subs	r0, #0
 800be4e:	bf18      	it	ne
 800be50:	2001      	movne	r0, #1
 800be52:	e7a1      	b.n	800bd98 <I2C_RequestMemoryRead+0x44>
 800be54:	00010002 	.word	0x00010002

0800be58 <HAL_I2C_Init>:
{
 800be58:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800be5a:	4604      	mov	r4, r0
 800be5c:	b908      	cbnz	r0, 800be62 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800be5e:	2001      	movs	r0, #1
}
 800be60:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800be62:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800be66:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be6a:	b91b      	cbnz	r3, 800be74 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800be6c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800be70:	f7f6 fa82 	bl	8002378 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800be74:	2324      	movs	r3, #36	; 0x24
 800be76:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800be7a:	6823      	ldr	r3, [r4, #0]
 800be7c:	681a      	ldr	r2, [r3, #0]
 800be7e:	f022 0201 	bic.w	r2, r2, #1
 800be82:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800be84:	681a      	ldr	r2, [r3, #0]
 800be86:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800be8a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800be8c:	681a      	ldr	r2, [r3, #0]
 800be8e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800be92:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800be94:	f001 f814 	bl	800cec0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800be98:	4b3f      	ldr	r3, [pc, #252]	; (800bf98 <HAL_I2C_Init+0x140>)
 800be9a:	6865      	ldr	r5, [r4, #4]
 800be9c:	429d      	cmp	r5, r3
 800be9e:	bf94      	ite	ls
 800bea0:	4b3e      	ldrls	r3, [pc, #248]	; (800bf9c <HAL_I2C_Init+0x144>)
 800bea2:	4b3f      	ldrhi	r3, [pc, #252]	; (800bfa0 <HAL_I2C_Init+0x148>)
 800bea4:	4298      	cmp	r0, r3
 800bea6:	bf8c      	ite	hi
 800bea8:	2300      	movhi	r3, #0
 800beaa:	2301      	movls	r3, #1
 800beac:	2b00      	cmp	r3, #0
 800beae:	d1d6      	bne.n	800be5e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800beb0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800beb2:	4e39      	ldr	r6, [pc, #228]	; (800bf98 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800beb4:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800beb6:	493b      	ldr	r1, [pc, #236]	; (800bfa4 <HAL_I2C_Init+0x14c>)
 800beb8:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800bebc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800bec0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800bec2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800bec4:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800bec6:	bf88      	it	hi
 800bec8:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800becc:	6a13      	ldr	r3, [r2, #32]
 800bece:	bf88      	it	hi
 800bed0:	4371      	mulhi	r1, r6
 800bed2:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800bed6:	bf84      	itt	hi
 800bed8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800bedc:	fbb1 f1f6 	udivhi	r1, r1, r6
 800bee0:	3101      	adds	r1, #1
 800bee2:	4319      	orrs	r1, r3
 800bee4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800bee6:	69d1      	ldr	r1, [r2, #28]
 800bee8:	1e43      	subs	r3, r0, #1
 800beea:	482b      	ldr	r0, [pc, #172]	; (800bf98 <HAL_I2C_Init+0x140>)
 800beec:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800bef0:	4285      	cmp	r5, r0
 800bef2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800bef6:	d832      	bhi.n	800bf5e <HAL_I2C_Init+0x106>
 800bef8:	006d      	lsls	r5, r5, #1
 800befa:	f640 70fc 	movw	r0, #4092	; 0xffc
 800befe:	fbb3 f3f5 	udiv	r3, r3, r5
 800bf02:	3301      	adds	r3, #1
 800bf04:	4203      	tst	r3, r0
 800bf06:	d042      	beq.n	800bf8e <HAL_I2C_Init+0x136>
 800bf08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bf0c:	430b      	orrs	r3, r1
 800bf0e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800bf10:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800bf14:	6811      	ldr	r1, [r2, #0]
 800bf16:	4303      	orrs	r3, r0
 800bf18:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800bf1c:	430b      	orrs	r3, r1
 800bf1e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800bf20:	6891      	ldr	r1, [r2, #8]
 800bf22:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800bf26:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800bf2a:	4303      	orrs	r3, r0
 800bf2c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800bf30:	430b      	orrs	r3, r1
 800bf32:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800bf34:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800bf38:	68d1      	ldr	r1, [r2, #12]
 800bf3a:	4303      	orrs	r3, r0
 800bf3c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800bf40:	430b      	orrs	r3, r1
 800bf42:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800bf44:	6813      	ldr	r3, [r2, #0]
 800bf46:	f043 0301 	orr.w	r3, r3, #1
 800bf4a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800bf4c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800bf4e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800bf50:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800bf52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800bf56:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800bf58:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800bf5c:	e780      	b.n	800be60 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800bf5e:	68a0      	ldr	r0, [r4, #8]
 800bf60:	b950      	cbnz	r0, 800bf78 <HAL_I2C_Init+0x120>
 800bf62:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800bf66:	fbb3 f3f5 	udiv	r3, r3, r5
 800bf6a:	3301      	adds	r3, #1
 800bf6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bf70:	b17b      	cbz	r3, 800bf92 <HAL_I2C_Init+0x13a>
 800bf72:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800bf76:	e7c9      	b.n	800bf0c <HAL_I2C_Init+0xb4>
 800bf78:	2019      	movs	r0, #25
 800bf7a:	4345      	muls	r5, r0
 800bf7c:	fbb3 f3f5 	udiv	r3, r3, r5
 800bf80:	3301      	adds	r3, #1
 800bf82:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bf86:	b123      	cbz	r3, 800bf92 <HAL_I2C_Init+0x13a>
 800bf88:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800bf8c:	e7be      	b.n	800bf0c <HAL_I2C_Init+0xb4>
 800bf8e:	2304      	movs	r3, #4
 800bf90:	e7bc      	b.n	800bf0c <HAL_I2C_Init+0xb4>
 800bf92:	2301      	movs	r3, #1
 800bf94:	e7ba      	b.n	800bf0c <HAL_I2C_Init+0xb4>
 800bf96:	bf00      	nop
 800bf98:	000186a0 	.word	0x000186a0
 800bf9c:	001e847f 	.word	0x001e847f
 800bfa0:	003d08ff 	.word	0x003d08ff
 800bfa4:	000f4240 	.word	0x000f4240

0800bfa8 <HAL_I2C_DeInit>:
{
 800bfa8:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800bfaa:	4604      	mov	r4, r0
 800bfac:	b198      	cbz	r0, 800bfd6 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800bfae:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800bfb0:	2324      	movs	r3, #36	; 0x24
 800bfb2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800bfb6:	6813      	ldr	r3, [r2, #0]
 800bfb8:	f023 0301 	bic.w	r3, r3, #1
 800bfbc:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800bfbe:	f7f6 fa1f 	bl	8002400 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800bfc2:	2000      	movs	r0, #0
 800bfc4:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800bfc6:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800bfca:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800bfce:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800bfd0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800bfd4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800bfd6:	2001      	movs	r0, #1
 800bfd8:	e7fc      	b.n	800bfd4 <HAL_I2C_DeInit+0x2c>
	...

0800bfdc <HAL_I2C_Mem_Write>:
{
 800bfdc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bfe0:	4604      	mov	r4, r0
 800bfe2:	4699      	mov	r9, r3
 800bfe4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800bfe6:	460f      	mov	r7, r1
 800bfe8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800bfea:	f7fe faf9 	bl	800a5e0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bfee:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800bff2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800bff4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bff6:	d003      	beq.n	800c000 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800bff8:	2002      	movs	r0, #2
}
 800bffa:	b003      	add	sp, #12
 800bffc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800c000:	9000      	str	r0, [sp, #0]
 800c002:	493c      	ldr	r1, [pc, #240]	; (800c0f4 <HAL_I2C_Mem_Write+0x118>)
 800c004:	2319      	movs	r3, #25
 800c006:	2201      	movs	r2, #1
 800c008:	4620      	mov	r0, r4
 800c00a:	f7ff fd63 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800c00e:	2800      	cmp	r0, #0
 800c010:	d1f2      	bne.n	800bff8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800c012:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c016:	2b01      	cmp	r3, #1
 800c018:	d0ee      	beq.n	800bff8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c01a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800c01c:	2301      	movs	r3, #1
 800c01e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c022:	6803      	ldr	r3, [r0, #0]
 800c024:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800c026:	bf5e      	ittt	pl
 800c028:	6803      	ldrpl	r3, [r0, #0]
 800c02a:	f043 0301 	orrpl.w	r3, r3, #1
 800c02e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c030:	6803      	ldr	r3, [r0, #0]
 800c032:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c036:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c038:	2321      	movs	r3, #33	; 0x21
 800c03a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c03e:	2340      	movs	r3, #64	; 0x40
 800c040:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c044:	2300      	movs	r3, #0
 800c046:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800c048:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c04a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800c04c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c050:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c052:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c054:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c056:	4b28      	ldr	r3, [pc, #160]	; (800c0f8 <HAL_I2C_Mem_Write+0x11c>)
 800c058:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c05a:	e9cd 6500 	strd	r6, r5, [sp]
 800c05e:	464b      	mov	r3, r9
 800c060:	4642      	mov	r2, r8
 800c062:	4639      	mov	r1, r7
 800c064:	4620      	mov	r0, r4
 800c066:	f7ff fe1d 	bl	800bca4 <I2C_RequestMemoryWrite>
 800c06a:	2800      	cmp	r0, #0
 800c06c:	d02a      	beq.n	800c0c4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800c06e:	2001      	movs	r0, #1
 800c070:	e7c3      	b.n	800bffa <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c072:	f7ff fdf1 	bl	800bc58 <I2C_WaitOnTXEFlagUntilTimeout>
 800c076:	b140      	cbz	r0, 800c08a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c078:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c07a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c07c:	bf01      	itttt	eq
 800c07e:	6822      	ldreq	r2, [r4, #0]
 800c080:	6813      	ldreq	r3, [r2, #0]
 800c082:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800c086:	6013      	streq	r3, [r2, #0]
 800c088:	e7f1      	b.n	800c06e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c08a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c08c:	6827      	ldr	r7, [r4, #0]
 800c08e:	461a      	mov	r2, r3
 800c090:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c094:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800c096:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c098:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c09a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800c09c:	3a01      	subs	r2, #1
 800c09e:	b292      	uxth	r2, r2
 800c0a0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c0a2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800c0a4:	1e48      	subs	r0, r1, #1
 800c0a6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c0a8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800c0aa:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c0ac:	d50a      	bpl.n	800c0c4 <HAL_I2C_Mem_Write+0xe8>
 800c0ae:	b148      	cbz	r0, 800c0c4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c0b0:	785a      	ldrb	r2, [r3, #1]
 800c0b2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800c0b4:	3302      	adds	r3, #2
 800c0b6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c0b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c0ba:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800c0bc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800c0be:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800c0c0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c0c2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c0c4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c0c6:	462a      	mov	r2, r5
 800c0c8:	4631      	mov	r1, r6
 800c0ca:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800c0cc:	2b00      	cmp	r3, #0
 800c0ce:	d1d0      	bne.n	800c072 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c0d0:	f7ff fd9c 	bl	800bc0c <I2C_WaitOnBTFFlagUntilTimeout>
 800c0d4:	2800      	cmp	r0, #0
 800c0d6:	d1cf      	bne.n	800c078 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c0d8:	6822      	ldr	r2, [r4, #0]
 800c0da:	6813      	ldr	r3, [r2, #0]
 800c0dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c0e0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c0e2:	2320      	movs	r3, #32
 800c0e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c0e8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c0ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800c0f0:	e783      	b.n	800bffa <HAL_I2C_Mem_Write+0x1e>
 800c0f2:	bf00      	nop
 800c0f4:	00100002 	.word	0x00100002
 800c0f8:	ffff0000 	.word	0xffff0000

0800c0fc <HAL_I2C_Mem_Read>:
{
 800c0fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c100:	4604      	mov	r4, r0
 800c102:	b087      	sub	sp, #28
 800c104:	4699      	mov	r9, r3
 800c106:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800c108:	460d      	mov	r5, r1
 800c10a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c10c:	f7fe fa68 	bl	800a5e0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c110:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c114:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800c116:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c118:	d004      	beq.n	800c124 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800c11a:	2502      	movs	r5, #2
}
 800c11c:	4628      	mov	r0, r5
 800c11e:	b007      	add	sp, #28
 800c120:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800c124:	9000      	str	r0, [sp, #0]
 800c126:	4976      	ldr	r1, [pc, #472]	; (800c300 <HAL_I2C_Mem_Read+0x204>)
 800c128:	2319      	movs	r3, #25
 800c12a:	2201      	movs	r2, #1
 800c12c:	4620      	mov	r0, r4
 800c12e:	f7ff fcd1 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800c132:	2800      	cmp	r0, #0
 800c134:	d1f1      	bne.n	800c11a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800c136:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c13a:	2b01      	cmp	r3, #1
 800c13c:	d0ed      	beq.n	800c11a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c13e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800c140:	2301      	movs	r3, #1
 800c142:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c146:	6803      	ldr	r3, [r0, #0]
 800c148:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800c14a:	bf5e      	ittt	pl
 800c14c:	6803      	ldrpl	r3, [r0, #0]
 800c14e:	f043 0301 	orrpl.w	r3, r3, #1
 800c152:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c154:	6803      	ldr	r3, [r0, #0]
 800c156:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c15a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c15c:	2322      	movs	r3, #34	; 0x22
 800c15e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c162:	2340      	movs	r3, #64	; 0x40
 800c164:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c168:	2300      	movs	r3, #0
 800c16a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800c16c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c16e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800c170:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c174:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c176:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c178:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c17a:	4b62      	ldr	r3, [pc, #392]	; (800c304 <HAL_I2C_Mem_Read+0x208>)
 800c17c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c17e:	4629      	mov	r1, r5
 800c180:	e9cd 7600 	strd	r7, r6, [sp]
 800c184:	464b      	mov	r3, r9
 800c186:	4642      	mov	r2, r8
 800c188:	4620      	mov	r0, r4
 800c18a:	f7ff fde3 	bl	800bd54 <I2C_RequestMemoryRead>
 800c18e:	4605      	mov	r5, r0
 800c190:	b108      	cbz	r0, 800c196 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800c192:	2501      	movs	r5, #1
 800c194:	e7c2      	b.n	800c11c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800c196:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c198:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800c19a:	b9b2      	cbnz	r2, 800c1ca <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c19c:	9002      	str	r0, [sp, #8]
 800c19e:	695a      	ldr	r2, [r3, #20]
 800c1a0:	9202      	str	r2, [sp, #8]
 800c1a2:	699a      	ldr	r2, [r3, #24]
 800c1a4:	9202      	str	r2, [sp, #8]
 800c1a6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c1a8:	681a      	ldr	r2, [r3, #0]
 800c1aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c1ae:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c1b0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800c308 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800c1b4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d12c      	bne.n	800c214 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800c1ba:	2220      	movs	r2, #32
 800c1bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c1c0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c1c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c1c8:	e7a8      	b.n	800c11c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800c1ca:	2a01      	cmp	r2, #1
 800c1cc:	d10a      	bne.n	800c1e4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c1ce:	681a      	ldr	r2, [r3, #0]
 800c1d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c1d4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c1d6:	9003      	str	r0, [sp, #12]
 800c1d8:	695a      	ldr	r2, [r3, #20]
 800c1da:	9203      	str	r2, [sp, #12]
 800c1dc:	699a      	ldr	r2, [r3, #24]
 800c1de:	9203      	str	r2, [sp, #12]
 800c1e0:	9a03      	ldr	r2, [sp, #12]
 800c1e2:	e7e1      	b.n	800c1a8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800c1e4:	2a02      	cmp	r2, #2
 800c1e6:	d10e      	bne.n	800c206 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c1e8:	681a      	ldr	r2, [r3, #0]
 800c1ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c1ee:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c1f0:	681a      	ldr	r2, [r3, #0]
 800c1f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800c1f6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c1f8:	9004      	str	r0, [sp, #16]
 800c1fa:	695a      	ldr	r2, [r3, #20]
 800c1fc:	9204      	str	r2, [sp, #16]
 800c1fe:	699b      	ldr	r3, [r3, #24]
 800c200:	9304      	str	r3, [sp, #16]
 800c202:	9b04      	ldr	r3, [sp, #16]
 800c204:	e7d4      	b.n	800c1b0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c206:	9005      	str	r0, [sp, #20]
 800c208:	695a      	ldr	r2, [r3, #20]
 800c20a:	9205      	str	r2, [sp, #20]
 800c20c:	699b      	ldr	r3, [r3, #24]
 800c20e:	9305      	str	r3, [sp, #20]
 800c210:	9b05      	ldr	r3, [sp, #20]
 800c212:	e7cd      	b.n	800c1b0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800c214:	2b03      	cmp	r3, #3
 800c216:	d856      	bhi.n	800c2c6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800c218:	2b01      	cmp	r3, #1
 800c21a:	d115      	bne.n	800c248 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c21c:	4632      	mov	r2, r6
 800c21e:	4639      	mov	r1, r7
 800c220:	4620      	mov	r0, r4
 800c222:	f7ff fcc4 	bl	800bbae <I2C_WaitOnRXNEFlagUntilTimeout>
 800c226:	2800      	cmp	r0, #0
 800c228:	d1b3      	bne.n	800c192 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c22a:	6823      	ldr	r3, [r4, #0]
 800c22c:	691a      	ldr	r2, [r3, #16]
 800c22e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c230:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c232:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c234:	3301      	adds	r3, #1
 800c236:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c238:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c23a:	3b01      	subs	r3, #1
 800c23c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c23e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c240:	3b01      	subs	r3, #1
 800c242:	b29b      	uxth	r3, r3
 800c244:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c246:	e7b5      	b.n	800c1b4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800c248:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c24a:	9600      	str	r6, [sp, #0]
 800c24c:	463b      	mov	r3, r7
 800c24e:	f04f 0200 	mov.w	r2, #0
 800c252:	4641      	mov	r1, r8
 800c254:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800c256:	d119      	bne.n	800c28c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c258:	f7ff fc3c 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800c25c:	2800      	cmp	r0, #0
 800c25e:	d198      	bne.n	800c192 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c260:	6823      	ldr	r3, [r4, #0]
 800c262:	681a      	ldr	r2, [r3, #0]
 800c264:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c268:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c26a:	691a      	ldr	r2, [r3, #16]
 800c26c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c26e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c270:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c272:	1c53      	adds	r3, r2, #1
 800c274:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c276:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c278:	3b01      	subs	r3, #1
 800c27a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c27c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c27e:	3b01      	subs	r3, #1
 800c280:	b29b      	uxth	r3, r3
 800c282:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c284:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c286:	691b      	ldr	r3, [r3, #16]
 800c288:	7053      	strb	r3, [r2, #1]
 800c28a:	e7d2      	b.n	800c232 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c28c:	f7ff fc22 	bl	800bad4 <I2C_WaitOnFlagUntilTimeout>
 800c290:	2800      	cmp	r0, #0
 800c292:	f47f af7e 	bne.w	800c192 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c296:	6823      	ldr	r3, [r4, #0]
 800c298:	681a      	ldr	r2, [r3, #0]
 800c29a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c29e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c2a0:	691a      	ldr	r2, [r3, #16]
 800c2a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c2a4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c2a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c2a8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800c2aa:	3301      	adds	r3, #1
 800c2ac:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c2ae:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c2b0:	3b01      	subs	r3, #1
 800c2b2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c2b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c2b6:	3b01      	subs	r3, #1
 800c2b8:	b29b      	uxth	r3, r3
 800c2ba:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c2bc:	4602      	mov	r2, r0
 800c2be:	463b      	mov	r3, r7
 800c2c0:	4641      	mov	r1, r8
 800c2c2:	4620      	mov	r0, r4
 800c2c4:	e7c8      	b.n	800c258 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c2c6:	4632      	mov	r2, r6
 800c2c8:	4639      	mov	r1, r7
 800c2ca:	4620      	mov	r0, r4
 800c2cc:	f7ff fc6f 	bl	800bbae <I2C_WaitOnRXNEFlagUntilTimeout>
 800c2d0:	2800      	cmp	r0, #0
 800c2d2:	f47f af5e 	bne.w	800c192 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c2d6:	6823      	ldr	r3, [r4, #0]
 800c2d8:	691a      	ldr	r2, [r3, #16]
 800c2da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c2dc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800c2de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c2e0:	1c53      	adds	r3, r2, #1
 800c2e2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800c2e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c2e6:	3b01      	subs	r3, #1
 800c2e8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c2ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c2ec:	3b01      	subs	r3, #1
 800c2ee:	b29b      	uxth	r3, r3
 800c2f0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c2f2:	6823      	ldr	r3, [r4, #0]
 800c2f4:	6959      	ldr	r1, [r3, #20]
 800c2f6:	0749      	lsls	r1, r1, #29
 800c2f8:	f57f af5c 	bpl.w	800c1b4 <HAL_I2C_Mem_Read+0xb8>
 800c2fc:	e7c3      	b.n	800c286 <HAL_I2C_Mem_Read+0x18a>
 800c2fe:	bf00      	nop
 800c300:	00100002 	.word	0x00100002
 800c304:	ffff0000 	.word	0xffff0000
 800c308:	00010004 	.word	0x00010004

0800c30c <HAL_I2C_GetState>:
  return hi2c->State;
 800c30c:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800c310:	4770      	bx	lr

0800c312 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c312:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c314:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c318:	01d2      	lsls	r2, r2, #7
 800c31a:	3284      	adds	r2, #132	; 0x84
 800c31c:	1883      	adds	r3, r0, r2
{
 800c31e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c322:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c324:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c326:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800c328:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c32c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800c330:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c332:	68c5      	ldr	r5, [r0, #12]
 800c334:	f10c 0701 	add.w	r7, ip, #1
 800c338:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c33c:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c340:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c342:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c344:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c348:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c34a:	68c5      	ldr	r5, [r0, #12]
 800c34c:	68ce      	ldr	r6, [r1, #12]
 800c34e:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800c352:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800c354:	689d      	ldr	r5, [r3, #8]
 800c356:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800c35a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c35c:	68c7      	ldr	r7, [r0, #12]
 800c35e:	688d      	ldr	r5, [r1, #8]
 800c360:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800c364:	3501      	adds	r5, #1
 800c366:	443d      	add	r5, r7
 800c368:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800c36c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c36e:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c370:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c372:	f025 0507 	bic.w	r5, r5, #7
 800c376:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c378:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c37c:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c37e:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800c380:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800c384:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c388:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800c38c:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800c390:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800c394:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800c398:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800c39c:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c39e:	695d      	ldr	r5, [r3, #20]
 800c3a0:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800c3a4:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c3a6:	694d      	ldr	r5, [r1, #20]
 800c3a8:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c3aa:	69dd      	ldr	r5, [r3, #28]
 800c3ac:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800c3b0:	f025 0507 	bic.w	r5, r5, #7
 800c3b4:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c3b6:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800c3ba:	433d      	orrs	r5, r7
 800c3bc:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c3be:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c3c0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c3c2:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c3c6:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c3c8:	b31e      	cbz	r6, 800c412 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c3ca:	2e01      	cmp	r6, #1
 800c3cc:	d023      	beq.n	800c416 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800c3ce:	1eb5      	subs	r5, r6, #2
 800c3d0:	2d02      	cmp	r5, #2
 800c3d2:	d922      	bls.n	800c41a <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800c3d4:	2e07      	cmp	r6, #7
 800c3d6:	bf0c      	ite	eq
 800c3d8:	2502      	moveq	r5, #2
 800c3da:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c3dc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800c3de:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800c3e2:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c3e4:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c3e8:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c3ea:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c3ec:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c3ee:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c3f0:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c3f2:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800c3f6:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c3f8:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800c3fa:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800c3fe:	f024 0407 	bic.w	r4, r4, #7
 800c402:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c404:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c406:	5883      	ldr	r3, [r0, r2]
 800c408:	f043 0301 	orr.w	r3, r3, #1
 800c40c:	5083      	str	r3, [r0, r2]
}
 800c40e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800c412:	2504      	movs	r5, #4
 800c414:	e7e2      	b.n	800c3dc <LTDC_SetConfig+0xca>
    tmp = 3U;
 800c416:	2503      	movs	r5, #3
 800c418:	e7e0      	b.n	800c3dc <LTDC_SetConfig+0xca>
    tmp = 2U;
 800c41a:	2502      	movs	r5, #2
 800c41c:	e7de      	b.n	800c3dc <LTDC_SetConfig+0xca>
	...

0800c420 <HAL_LTDC_Init>:
{
 800c420:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800c422:	4604      	mov	r4, r0
 800c424:	2800      	cmp	r0, #0
 800c426:	d063      	beq.n	800c4f0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800c428:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800c42c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c430:	b91b      	cbnz	r3, 800c43a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800c432:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800c436:	f7f6 f801 	bl	800243c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c43a:	2302      	movs	r3, #2
 800c43c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800c440:	6823      	ldr	r3, [r4, #0]
 800c442:	699a      	ldr	r2, [r3, #24]
 800c444:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800c448:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c44a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800c44e:	4302      	orrs	r2, r0
 800c450:	68e0      	ldr	r0, [r4, #12]
 800c452:	6999      	ldr	r1, [r3, #24]
 800c454:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800c456:	6920      	ldr	r0, [r4, #16]
 800c458:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c45a:	430a      	orrs	r2, r1
 800c45c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c45e:	689a      	ldr	r2, [r3, #8]
 800c460:	4924      	ldr	r1, [pc, #144]	; (800c4f4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800c462:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c464:	400a      	ands	r2, r1
 800c466:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800c468:	689a      	ldr	r2, [r3, #8]
 800c46a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c46e:	69a0      	ldr	r0, [r4, #24]
 800c470:	4302      	orrs	r2, r0
 800c472:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c474:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800c476:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c478:	400a      	ands	r2, r1
 800c47a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800c47c:	68da      	ldr	r2, [r3, #12]
 800c47e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c482:	6a20      	ldr	r0, [r4, #32]
 800c484:	4302      	orrs	r2, r0
 800c486:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c488:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800c48a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c48c:	400a      	ands	r2, r1
 800c48e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800c490:	691a      	ldr	r2, [r3, #16]
 800c492:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c496:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c498:	4302      	orrs	r2, r0
 800c49a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800c49c:	695a      	ldr	r2, [r3, #20]
 800c49e:	4011      	ands	r1, r2
 800c4a0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800c4a2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800c4a4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800c4a6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800c4aa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c4ac:	430a      	orrs	r2, r1
 800c4ae:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c4b0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800c4b2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800c4b6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c4ba:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800c4be:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800c4c0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800c4c2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800c4c6:	430a      	orrs	r2, r1
 800c4c8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c4cc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c4d0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800c4d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c4d4:	f042 0206 	orr.w	r2, r2, #6
 800c4d8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800c4da:	699a      	ldr	r2, [r3, #24]
 800c4dc:	f042 0201 	orr.w	r2, r2, #1
 800c4e0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c4e2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800c4e4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c4e6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800c4ea:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800c4ee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c4f0:	2001      	movs	r0, #1
 800c4f2:	e7fc      	b.n	800c4ee <HAL_LTDC_Init+0xce>
 800c4f4:	f000f800 	.word	0xf000f800

0800c4f8 <HAL_LTDC_ErrorCallback>:
 800c4f8:	4770      	bx	lr

0800c4fa <HAL_LTDC_LineEventCallback>:
 800c4fa:	4770      	bx	lr

0800c4fc <HAL_LTDC_ReloadEventCallback>:
 800c4fc:	4770      	bx	lr

0800c4fe <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c4fe:	6803      	ldr	r3, [r0, #0]
{
 800c500:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c502:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800c504:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c506:	0772      	lsls	r2, r6, #29
{
 800c508:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c50a:	d514      	bpl.n	800c536 <HAL_LTDC_IRQHandler+0x38>
 800c50c:	0769      	lsls	r1, r5, #29
 800c50e:	d512      	bpl.n	800c536 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800c510:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c512:	f022 0204 	bic.w	r2, r2, #4
 800c516:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800c518:	2204      	movs	r2, #4
 800c51a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800c51c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800c520:	f043 0301 	orr.w	r3, r3, #1
 800c524:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800c528:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c52a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c52e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c532:	f7ff ffe1 	bl	800c4f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800c536:	07b2      	lsls	r2, r6, #30
 800c538:	d516      	bpl.n	800c568 <HAL_LTDC_IRQHandler+0x6a>
 800c53a:	07ab      	lsls	r3, r5, #30
 800c53c:	d514      	bpl.n	800c568 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800c53e:	6823      	ldr	r3, [r4, #0]
 800c540:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c542:	f022 0202 	bic.w	r2, r2, #2
 800c546:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800c548:	2202      	movs	r2, #2
 800c54a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800c54c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800c550:	4313      	orrs	r3, r2
 800c552:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c556:	2304      	movs	r3, #4
 800c558:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c55c:	2300      	movs	r3, #0
 800c55e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c562:	4620      	mov	r0, r4
 800c564:	f7ff ffc8 	bl	800c4f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800c568:	07f0      	lsls	r0, r6, #31
 800c56a:	d510      	bpl.n	800c58e <HAL_LTDC_IRQHandler+0x90>
 800c56c:	07e9      	lsls	r1, r5, #31
 800c56e:	d50e      	bpl.n	800c58e <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c570:	6823      	ldr	r3, [r4, #0]
 800c572:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c574:	f022 0201 	bic.w	r2, r2, #1
 800c578:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800c57a:	2201      	movs	r2, #1
 800c57c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800c57e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800c580:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c584:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800c588:	4620      	mov	r0, r4
 800c58a:	f7ff ffb6 	bl	800c4fa <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800c58e:	0732      	lsls	r2, r6, #28
 800c590:	d511      	bpl.n	800c5b6 <HAL_LTDC_IRQHandler+0xb8>
 800c592:	072b      	lsls	r3, r5, #28
 800c594:	d50f      	bpl.n	800c5b6 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800c596:	6823      	ldr	r3, [r4, #0]
 800c598:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c59a:	f022 0208 	bic.w	r2, r2, #8
 800c59e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800c5a0:	2208      	movs	r2, #8
 800c5a2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800c5a4:	2301      	movs	r3, #1
 800c5a6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c5aa:	2300      	movs	r3, #0
 800c5ac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800c5b0:	4620      	mov	r0, r4
 800c5b2:	f7ff ffa3 	bl	800c4fc <HAL_LTDC_ReloadEventCallback>
}
 800c5b6:	bd70      	pop	{r4, r5, r6, pc}

0800c5b8 <HAL_LTDC_ConfigLayer>:
{
 800c5b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800c5bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c5c0:	2b01      	cmp	r3, #1
{
 800c5c2:	4606      	mov	r6, r0
 800c5c4:	460f      	mov	r7, r1
 800c5c6:	4694      	mov	ip, r2
 800c5c8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800c5cc:	d01f      	beq.n	800c60e <HAL_LTDC_ConfigLayer+0x56>
 800c5ce:	f04f 0801 	mov.w	r8, #1
 800c5d2:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c5d6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c5da:	2434      	movs	r4, #52	; 0x34
 800c5dc:	460d      	mov	r5, r1
 800c5de:	fb04 6402 	mla	r4, r4, r2, r6
 800c5e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c5e4:	3438      	adds	r4, #56	; 0x38
 800c5e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c5ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c5ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5f0:	682b      	ldr	r3, [r5, #0]
 800c5f2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800c5f4:	4630      	mov	r0, r6
 800c5f6:	4662      	mov	r2, ip
 800c5f8:	4639      	mov	r1, r7
 800c5fa:	f7ff fe8a 	bl	800c312 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c5fe:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800c600:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c602:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c606:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c60a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800c60e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800c614 <HAL_LTDC_SetPitch>:
{
 800c614:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800c616:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c61a:	2b01      	cmp	r3, #1
 800c61c:	f04f 0302 	mov.w	r3, #2
 800c620:	d02c      	beq.n	800c67c <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800c622:	2434      	movs	r4, #52	; 0x34
 800c624:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c628:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800c62c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c62e:	b33c      	cbz	r4, 800c680 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c630:	2c01      	cmp	r4, #1
 800c632:	d027      	beq.n	800c684 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800c634:	1ea5      	subs	r5, r4, #2
 800c636:	429d      	cmp	r5, r3
 800c638:	d902      	bls.n	800c640 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800c63a:	2c07      	cmp	r4, #7
 800c63c:	bf18      	it	ne
 800c63e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800c640:	6804      	ldr	r4, [r0, #0]
 800c642:	01d2      	lsls	r2, r2, #7
 800c644:	3284      	adds	r2, #132	; 0x84
 800c646:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800c648:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800c64a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800c64c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800c650:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800c654:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800c656:	4c0c      	ldr	r4, [pc, #48]	; (800c688 <HAL_LTDC_SetPitch+0x74>)
 800c658:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800c65a:	f045 0501 	orr.w	r5, r5, #1
 800c65e:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800c660:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800c662:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800c666:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800c668:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c66a:	f043 0301 	orr.w	r3, r3, #1
 800c66e:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800c670:	2301      	movs	r3, #1
 800c672:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c676:	2300      	movs	r3, #0
 800c678:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800c67c:	4618      	mov	r0, r3
 800c67e:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800c680:	2304      	movs	r3, #4
 800c682:	e7dd      	b.n	800c640 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800c684:	2303      	movs	r3, #3
 800c686:	e7db      	b.n	800c640 <HAL_LTDC_SetPitch+0x2c>
 800c688:	40016800 	.word	0x40016800

0800c68c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800c68c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800c68e:	2300      	movs	r3, #0
 800c690:	9301      	str	r3, [sp, #4]
 800c692:	4b18      	ldr	r3, [pc, #96]	; (800c6f4 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800c694:	4d18      	ldr	r5, [pc, #96]	; (800c6f8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800c696:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c698:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c69c:	641a      	str	r2, [r3, #64]	; 0x40
 800c69e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c6a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c6a4:	9301      	str	r3, [sp, #4]
 800c6a6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800c6a8:	4b14      	ldr	r3, [pc, #80]	; (800c6fc <HAL_PWREx_EnableOverDrive+0x70>)
 800c6aa:	2201      	movs	r2, #1
 800c6ac:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800c6ae:	f7fd ff97 	bl	800a5e0 <HAL_GetTick>
 800c6b2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800c6b4:	686b      	ldr	r3, [r5, #4]
 800c6b6:	03da      	lsls	r2, r3, #15
 800c6b8:	d50b      	bpl.n	800c6d2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800c6ba:	4b10      	ldr	r3, [pc, #64]	; (800c6fc <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800c6bc:	4d0e      	ldr	r5, [pc, #56]	; (800c6f8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800c6be:	2201      	movs	r2, #1
 800c6c0:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 800c6c2:	f7fd ff8d 	bl	800a5e0 <HAL_GetTick>
 800c6c6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800c6c8:	686b      	ldr	r3, [r5, #4]
 800c6ca:	039b      	lsls	r3, r3, #14
 800c6cc:	d50a      	bpl.n	800c6e4 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800c6ce:	2000      	movs	r0, #0
 800c6d0:	e006      	b.n	800c6e0 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800c6d2:	f7fd ff85 	bl	800a5e0 <HAL_GetTick>
 800c6d6:	1b00      	subs	r0, r0, r4
 800c6d8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800c6dc:	d9ea      	bls.n	800c6b4 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800c6de:	2003      	movs	r0, #3
}
 800c6e0:	b003      	add	sp, #12
 800c6e2:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800c6e4:	f7fd ff7c 	bl	800a5e0 <HAL_GetTick>
 800c6e8:	1b00      	subs	r0, r0, r4
 800c6ea:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800c6ee:	d9eb      	bls.n	800c6c8 <HAL_PWREx_EnableOverDrive+0x3c>
 800c6f0:	e7f5      	b.n	800c6de <HAL_PWREx_EnableOverDrive+0x52>
 800c6f2:	bf00      	nop
 800c6f4:	40023800 	.word	0x40023800
 800c6f8:	40007000 	.word	0x40007000
 800c6fc:	420e0000 	.word	0x420e0000

0800c700 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800c700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800c704:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800c706:	b13e      	cbz	r6, 800c718 <QSPI_Config+0x18>
 800c708:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800c70c:	bf1f      	itttt	ne
 800c70e:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800c710:	6804      	ldrne	r4, [r0, #0]
 800c712:	f103 33ff 	addne.w	r3, r3, #4294967295
 800c716:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800c718:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c71c:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800c720:	f1b9 0f00 	cmp.w	r9, #0
 800c724:	d04f      	beq.n	800c7c6 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c726:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800c728:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c72a:	f8d1 a000 	ldr.w	sl, [r1]
 800c72e:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 800c732:	ea46 0909 	orr.w	r9, r6, r9
 800c736:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800c73a:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800c73e:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800c742:	b335      	cbz	r5, 800c792 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800c744:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c746:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800c748:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c74a:	ea49 0505 	orr.w	r5, r9, r5
 800c74e:	b19f      	cbz	r7, 800c778 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c750:	ea4a 0307 	orr.w	r3, sl, r7
 800c754:	4323      	orrs	r3, r4
 800c756:	ea43 0308 	orr.w	r3, r3, r8
 800c75a:	68cc      	ldr	r4, [r1, #12]
 800c75c:	ea43 030e 	orr.w	r3, r3, lr
 800c760:	4333      	orrs	r3, r6
 800c762:	4323      	orrs	r3, r4
 800c764:	ea43 030c 	orr.w	r3, r3, ip
 800c768:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800c76a:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c76e:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800c770:	d00d      	beq.n	800c78e <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800c772:	684b      	ldr	r3, [r1, #4]
 800c774:	6183      	str	r3, [r0, #24]
 800c776:	e00a      	b.n	800c78e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c778:	ea4a 0304 	orr.w	r3, sl, r4
 800c77c:	ea43 0308 	orr.w	r3, r3, r8
 800c780:	ea43 030e 	orr.w	r3, r3, lr
 800c784:	4333      	orrs	r3, r6
 800c786:	ea43 030c 	orr.w	r3, r3, ip
 800c78a:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c78c:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800c78e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c792:	b16f      	cbz	r7, 800c7b0 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c794:	ea4a 0307 	orr.w	r3, sl, r7
 800c798:	4323      	orrs	r3, r4
 800c79a:	ea43 0308 	orr.w	r3, r3, r8
 800c79e:	68cc      	ldr	r4, [r1, #12]
 800c7a0:	ea43 030e 	orr.w	r3, r3, lr
 800c7a4:	4323      	orrs	r3, r4
 800c7a6:	ea43 030c 	orr.w	r3, r3, ip
 800c7aa:	ea43 0309 	orr.w	r3, r3, r9
 800c7ae:	e7dc      	b.n	800c76a <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c7b0:	ea4a 0304 	orr.w	r3, sl, r4
 800c7b4:	ea43 0308 	orr.w	r3, r3, r8
 800c7b8:	ea43 030e 	orr.w	r3, r3, lr
 800c7bc:	ea43 030c 	orr.w	r3, r3, ip
 800c7c0:	ea43 0309 	orr.w	r3, r3, r9
 800c7c4:	e7e2      	b.n	800c78c <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800c7c6:	b345      	cbz	r5, 800c81a <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800c7c8:	6804      	ldr	r4, [r0, #0]
 800c7ca:	688b      	ldr	r3, [r1, #8]
 800c7cc:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c7ce:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c7d2:	694e      	ldr	r6, [r1, #20]
 800c7d4:	6908      	ldr	r0, [r1, #16]
 800c7d6:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800c7da:	ea43 0502 	orr.w	r5, r3, r2
 800c7de:	04b6      	lsls	r6, r6, #18
 800c7e0:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c7e4:	b187      	cbz	r7, 800c808 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c7e6:	4338      	orrs	r0, r7
 800c7e8:	ea40 0008 	orr.w	r0, r0, r8
 800c7ec:	4303      	orrs	r3, r0
 800c7ee:	68c8      	ldr	r0, [r1, #12]
 800c7f0:	ea43 030c 	orr.w	r3, r3, ip
 800c7f4:	4303      	orrs	r3, r0
 800c7f6:	4333      	orrs	r3, r6
 800c7f8:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800c7fa:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c7fe:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800c800:	d0c5      	beq.n	800c78e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800c802:	684b      	ldr	r3, [r1, #4]
 800c804:	61a3      	str	r3, [r4, #24]
 800c806:	e7c2      	b.n	800c78e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c808:	ea40 0008 	orr.w	r0, r0, r8
 800c80c:	4303      	orrs	r3, r0
 800c80e:	ea43 030c 	orr.w	r3, r3, ip
 800c812:	4333      	orrs	r3, r6
 800c814:	432b      	orrs	r3, r5
 800c816:	6163      	str	r3, [r4, #20]
 800c818:	e7b9      	b.n	800c78e <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800c81a:	b17f      	cbz	r7, 800c83c <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c81c:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800c81e:	6800      	ldr	r0, [r0, #0]
 800c820:	ea46 0307 	orr.w	r3, r6, r7
 800c824:	4313      	orrs	r3, r2
 800c826:	4323      	orrs	r3, r4
 800c828:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800c82a:	4323      	orrs	r3, r4
 800c82c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800c82e:	4323      	orrs	r3, r4
 800c830:	68cc      	ldr	r4, [r1, #12]
 800c832:	4323      	orrs	r3, r4
 800c834:	694c      	ldr	r4, [r1, #20]
 800c836:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800c83a:	e796      	b.n	800c76a <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800c83c:	2e00      	cmp	r6, #0
 800c83e:	d0a6      	beq.n	800c78e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800c840:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800c842:	6800      	ldr	r0, [r0, #0]
 800c844:	4333      	orrs	r3, r6
 800c846:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800c848:	431a      	orrs	r2, r3
 800c84a:	4332      	orrs	r2, r6
 800c84c:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800c84e:	694b      	ldr	r3, [r1, #20]
 800c850:	4332      	orrs	r2, r6
 800c852:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800c856:	6142      	str	r2, [r0, #20]
}
 800c858:	e799      	b.n	800c78e <QSPI_Config+0x8e>

0800c85a <QSPI_WaitFlagStateUntilTimeout>:
{
 800c85a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c85e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800c862:	4604      	mov	r4, r0
 800c864:	460e      	mov	r6, r1
 800c866:	4615      	mov	r5, r2
 800c868:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800c86a:	6822      	ldr	r2, [r4, #0]
 800c86c:	6893      	ldr	r3, [r2, #8]
 800c86e:	4233      	tst	r3, r6
 800c870:	bf14      	ite	ne
 800c872:	2301      	movne	r3, #1
 800c874:	2300      	moveq	r3, #0
 800c876:	42ab      	cmp	r3, r5
 800c878:	d101      	bne.n	800c87e <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800c87a:	2000      	movs	r0, #0
 800c87c:	e012      	b.n	800c8a4 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800c87e:	f1b8 3fff 	cmp.w	r8, #4294967295
 800c882:	d0f3      	beq.n	800c86c <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c884:	f7fd feac 	bl	800a5e0 <HAL_GetTick>
 800c888:	1bc0      	subs	r0, r0, r7
 800c88a:	4540      	cmp	r0, r8
 800c88c:	d802      	bhi.n	800c894 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800c88e:	f1b8 0f00 	cmp.w	r8, #0
 800c892:	d1ea      	bne.n	800c86a <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800c894:	2304      	movs	r3, #4
 800c896:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800c89a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c89c:	f043 0301 	orr.w	r3, r3, #1
 800c8a0:	6463      	str	r3, [r4, #68]	; 0x44
 800c8a2:	2001      	movs	r0, #1
}
 800c8a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c8a8 <HAL_QSPI_Init>:
{
 800c8a8:	b530      	push	{r4, r5, lr}
 800c8aa:	b085      	sub	sp, #20
 800c8ac:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800c8ae:	f7fd fe97 	bl	800a5e0 <HAL_GetTick>
 800c8b2:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800c8b4:	2c00      	cmp	r4, #0
 800c8b6:	d047      	beq.n	800c948 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800c8b8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c8bc:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800c8c0:	b94a      	cbnz	r2, 800c8d6 <HAL_QSPI_Init+0x2e>
 800c8c2:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800c8c4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800c8c8:	4620      	mov	r0, r4
 800c8ca:	f7f5 fde9 	bl	80024a0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800c8ce:	f241 3288 	movw	r2, #5000	; 0x1388
 800c8d2:	9b03      	ldr	r3, [sp, #12]
 800c8d4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800c8d6:	6820      	ldr	r0, [r4, #0]
 800c8d8:	68a1      	ldr	r1, [r4, #8]
 800c8da:	6802      	ldr	r2, [r0, #0]
 800c8dc:	3901      	subs	r1, #1
 800c8de:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800c8e2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800c8e6:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800c8e8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c8ea:	9200      	str	r2, [sp, #0]
 800c8ec:	2120      	movs	r1, #32
 800c8ee:	2200      	movs	r2, #0
 800c8f0:	4620      	mov	r0, r4
 800c8f2:	f7ff ffb2 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800c8f6:	bb10      	cbnz	r0, 800c93e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800c8f8:	69e5      	ldr	r5, [r4, #28]
 800c8fa:	68e3      	ldr	r3, [r4, #12]
 800c8fc:	6822      	ldr	r2, [r4, #0]
 800c8fe:	432b      	orrs	r3, r5
 800c900:	6a25      	ldr	r5, [r4, #32]
 800c902:	6811      	ldr	r1, [r2, #0]
 800c904:	432b      	orrs	r3, r5
 800c906:	6865      	ldr	r5, [r4, #4]
 800c908:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800c90c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800c910:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800c914:	430b      	orrs	r3, r1
 800c916:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800c918:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800c91c:	430b      	orrs	r3, r1
 800c91e:	6921      	ldr	r1, [r4, #16]
 800c920:	6855      	ldr	r5, [r2, #4]
 800c922:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c926:	4909      	ldr	r1, [pc, #36]	; (800c94c <HAL_QSPI_Init+0xa4>)
 800c928:	4029      	ands	r1, r5
 800c92a:	430b      	orrs	r3, r1
 800c92c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800c92e:	6813      	ldr	r3, [r2, #0]
 800c930:	f043 0301 	orr.w	r3, r3, #1
 800c934:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800c936:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c938:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800c93a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c93e:	2300      	movs	r3, #0
 800c940:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c944:	b005      	add	sp, #20
 800c946:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800c948:	2001      	movs	r0, #1
 800c94a:	e7fb      	b.n	800c944 <HAL_QSPI_Init+0x9c>
 800c94c:	ffe0f8fe 	.word	0xffe0f8fe

0800c950 <HAL_QSPI_DeInit>:
{
 800c950:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800c952:	4604      	mov	r4, r0
 800c954:	b168      	cbz	r0, 800c972 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800c956:	6802      	ldr	r2, [r0, #0]
 800c958:	6813      	ldr	r3, [r2, #0]
 800c95a:	f023 0301 	bic.w	r3, r3, #1
 800c95e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800c960:	f7f5 fdf8 	bl	8002554 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c964:	2000      	movs	r0, #0
 800c966:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800c968:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c96c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800c970:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c972:	2001      	movs	r0, #1
 800c974:	e7fc      	b.n	800c970 <HAL_QSPI_DeInit+0x20>

0800c976 <HAL_QSPI_Command>:
{
 800c976:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c97a:	4604      	mov	r4, r0
 800c97c:	b085      	sub	sp, #20
 800c97e:	4617      	mov	r7, r2
 800c980:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800c982:	f7fd fe2d 	bl	800a5e0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800c986:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c98a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c98c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c98e:	d034      	beq.n	800c9fa <HAL_QSPI_Command+0x84>
 800c990:	2201      	movs	r2, #1
 800c992:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c996:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c99a:	2a01      	cmp	r2, #1
 800c99c:	fa5f f882 	uxtb.w	r8, r2
 800c9a0:	f04f 0602 	mov.w	r6, #2
 800c9a4:	d127      	bne.n	800c9f6 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c9a6:	2200      	movs	r2, #0
 800c9a8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c9aa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800c9ac:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c9b0:	9700      	str	r7, [sp, #0]
 800c9b2:	2120      	movs	r1, #32
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	f7ff ff50 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c9ba:	4605      	mov	r5, r0
 800c9bc:	b9a0      	cbnz	r0, 800c9e8 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800c9be:	4602      	mov	r2, r0
 800c9c0:	4649      	mov	r1, r9
 800c9c2:	4620      	mov	r0, r4
 800c9c4:	f7ff fe9c 	bl	800c700 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800c9c8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800c9cc:	9b03      	ldr	r3, [sp, #12]
 800c9ce:	b94a      	cbnz	r2, 800c9e4 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c9d0:	9700      	str	r7, [sp, #0]
 800c9d2:	4642      	mov	r2, r8
 800c9d4:	4631      	mov	r1, r6
 800c9d6:	4620      	mov	r0, r4
 800c9d8:	f7ff ff3f 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800c9dc:	4605      	mov	r5, r0
 800c9de:	b918      	cbnz	r0, 800c9e8 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c9e0:	6823      	ldr	r3, [r4, #0]
 800c9e2:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800c9e4:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c9e8:	2300      	movs	r3, #0
 800c9ea:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c9ee:	4628      	mov	r0, r5
 800c9f0:	b005      	add	sp, #20
 800c9f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800c9f6:	4635      	mov	r5, r6
 800c9f8:	e7f6      	b.n	800c9e8 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800c9fa:	2502      	movs	r5, #2
 800c9fc:	e7f7      	b.n	800c9ee <HAL_QSPI_Command+0x78>

0800c9fe <HAL_QSPI_AutoPolling>:
{
 800c9fe:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ca02:	4604      	mov	r4, r0
 800ca04:	4615      	mov	r5, r2
 800ca06:	461e      	mov	r6, r3
 800ca08:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800ca0a:	f7fd fde9 	bl	800a5e0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800ca0e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800ca12:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800ca14:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800ca16:	d040      	beq.n	800ca9a <HAL_QSPI_AutoPolling+0x9c>
 800ca18:	2201      	movs	r2, #1
 800ca1a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800ca1e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800ca22:	2a01      	cmp	r2, #1
 800ca24:	b2d7      	uxtb	r7, r2
 800ca26:	d136      	bne.n	800ca96 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800ca28:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800ca2a:	2200      	movs	r2, #0
 800ca2c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800ca2e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800ca30:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800ca34:	9600      	str	r6, [sp, #0]
 800ca36:	2120      	movs	r1, #32
 800ca38:	4620      	mov	r0, r4
 800ca3a:	f7ff ff0e 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800ca3e:	bb20      	cbnz	r0, 800ca8a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800ca40:	6821      	ldr	r1, [r4, #0]
 800ca42:	682a      	ldr	r2, [r5, #0]
 800ca44:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800ca46:	686a      	ldr	r2, [r5, #4]
 800ca48:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800ca4a:	68aa      	ldr	r2, [r5, #8]
 800ca4c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800ca4e:	680a      	ldr	r2, [r1, #0]
 800ca50:	6928      	ldr	r0, [r5, #16]
 800ca52:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800ca56:	4302      	orrs	r2, r0
 800ca58:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800ca5c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800ca5e:	68ea      	ldr	r2, [r5, #12]
 800ca60:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800ca64:	4641      	mov	r1, r8
 800ca66:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800ca6a:	4620      	mov	r0, r4
 800ca6c:	f7ff fe48 	bl	800c700 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800ca70:	9b03      	ldr	r3, [sp, #12]
 800ca72:	9600      	str	r6, [sp, #0]
 800ca74:	463a      	mov	r2, r7
 800ca76:	2108      	movs	r1, #8
 800ca78:	4620      	mov	r0, r4
 800ca7a:	f7ff feee 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800ca7e:	b920      	cbnz	r0, 800ca8a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800ca80:	6823      	ldr	r3, [r4, #0]
 800ca82:	2208      	movs	r2, #8
 800ca84:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800ca86:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800ca8a:	2300      	movs	r3, #0
 800ca8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800ca90:	b004      	add	sp, #16
 800ca92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800ca96:	2002      	movs	r0, #2
 800ca98:	e7f7      	b.n	800ca8a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800ca9a:	2002      	movs	r0, #2
 800ca9c:	e7f8      	b.n	800ca90 <HAL_QSPI_AutoPolling+0x92>

0800ca9e <HAL_QSPI_MemoryMapped>:
{
 800ca9e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800caa0:	4604      	mov	r4, r0
 800caa2:	4616      	mov	r6, r2
 800caa4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800caa6:	f7fd fd9b 	bl	800a5e0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800caaa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800caae:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800cab0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800cab2:	d032      	beq.n	800cb1a <HAL_QSPI_MemoryMapped+0x7c>
 800cab4:	2201      	movs	r2, #1
 800cab6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800caba:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800cabe:	2a01      	cmp	r2, #1
 800cac0:	d129      	bne.n	800cb16 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800cac2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800cac4:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800cac6:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800cac8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800cacc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800cace:	9100      	str	r1, [sp, #0]
 800cad0:	4620      	mov	r0, r4
 800cad2:	2120      	movs	r1, #32
 800cad4:	f7ff fec1 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800cad8:	4605      	mov	r5, r0
 800cada:	b9b0      	cbnz	r0, 800cb0a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800cadc:	6823      	ldr	r3, [r4, #0]
 800cade:	6872      	ldr	r2, [r6, #4]
 800cae0:	6818      	ldr	r0, [r3, #0]
 800cae2:	f020 0008 	bic.w	r0, r0, #8
 800cae6:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800cae8:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800caea:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800caec:	d107      	bne.n	800cafe <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800caee:	6832      	ldr	r2, [r6, #0]
 800caf0:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800caf2:	2210      	movs	r2, #16
 800caf4:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800caf6:	681a      	ldr	r2, [r3, #0]
 800caf8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800cafc:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800cafe:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800cb02:	4639      	mov	r1, r7
 800cb04:	4620      	mov	r0, r4
 800cb06:	f7ff fdfb 	bl	800c700 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800cb0a:	2300      	movs	r3, #0
 800cb0c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800cb10:	4628      	mov	r0, r5
 800cb12:	b003      	add	sp, #12
 800cb14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800cb16:	2502      	movs	r5, #2
 800cb18:	e7f7      	b.n	800cb0a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800cb1a:	2502      	movs	r5, #2
 800cb1c:	e7f8      	b.n	800cb10 <HAL_QSPI_MemoryMapped+0x72>

0800cb1e <HAL_QSPI_Abort>:
{
 800cb1e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cb20:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800cb22:	f7fd fd5d 	bl	800a5e0 <HAL_GetTick>
 800cb26:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800cb28:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 800cb2c:	f010 0002 	ands.w	r0, r0, #2
 800cb30:	d03a      	beq.n	800cba8 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 800cb32:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800cb34:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800cb36:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800cb3a:	680a      	ldr	r2, [r1, #0]
 800cb3c:	f012 0204 	ands.w	r2, r2, #4
 800cb40:	d034      	beq.n	800cbac <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800cb42:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800cb44:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cb46:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800cb48:	f022 0204 	bic.w	r2, r2, #4
 800cb4c:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800cb4e:	f7fe f8f9 	bl	800ad44 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800cb52:	9b03      	ldr	r3, [sp, #12]
 800cb54:	b118      	cbz	r0, 800cb5e <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800cb56:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cb58:	f042 0204 	orr.w	r2, r2, #4
 800cb5c:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800cb5e:	6822      	ldr	r2, [r4, #0]
 800cb60:	6891      	ldr	r1, [r2, #8]
 800cb62:	0689      	lsls	r1, r1, #26
 800cb64:	d51d      	bpl.n	800cba2 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800cb66:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800cb68:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800cb6a:	f041 0102 	orr.w	r1, r1, #2
 800cb6e:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800cb70:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800cb72:	9200      	str	r2, [sp, #0]
 800cb74:	2102      	movs	r1, #2
 800cb76:	2201      	movs	r2, #1
 800cb78:	4620      	mov	r0, r4
 800cb7a:	f7ff fe6e 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800cb7e:	9b03      	ldr	r3, [sp, #12]
 800cb80:	b990      	cbnz	r0, 800cba8 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800cb82:	6822      	ldr	r2, [r4, #0]
 800cb84:	2102      	movs	r1, #2
 800cb86:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800cb88:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800cb8a:	9200      	str	r2, [sp, #0]
 800cb8c:	2120      	movs	r1, #32
 800cb8e:	4602      	mov	r2, r0
 800cb90:	4620      	mov	r0, r4
 800cb92:	f7ff fe62 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800cb96:	b938      	cbnz	r0, 800cba8 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800cb98:	6822      	ldr	r2, [r4, #0]
 800cb9a:	6953      	ldr	r3, [r2, #20]
 800cb9c:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800cba0:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800cba2:	2301      	movs	r3, #1
 800cba4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800cba8:	b004      	add	sp, #16
 800cbaa:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 800cbac:	4610      	mov	r0, r2
 800cbae:	e7d6      	b.n	800cb5e <HAL_QSPI_Abort+0x40>

0800cbb0 <HAL_QSPI_Transmit>:
{
 800cbb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cbb2:	4604      	mov	r4, r0
 800cbb4:	b085      	sub	sp, #20
 800cbb6:	4616      	mov	r6, r2
 800cbb8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800cbba:	f7fd fd11 	bl	800a5e0 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800cbbe:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800cbc2:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800cbc4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800cbc6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800cbc8:	d04c      	beq.n	800cc64 <HAL_QSPI_Transmit+0xb4>
 800cbca:	2201      	movs	r2, #1
 800cbcc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800cbd0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800cbd4:	2a01      	cmp	r2, #1
 800cbd6:	b2d0      	uxtb	r0, r2
 800cbd8:	d142      	bne.n	800cc60 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800cbda:	2200      	movs	r2, #0
 800cbdc:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800cbde:	2f00      	cmp	r7, #0
 800cbe0:	d039      	beq.n	800cc56 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800cbe2:	2212      	movs	r2, #18
 800cbe4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800cbe8:	692a      	ldr	r2, [r5, #16]
 800cbea:	3201      	adds	r2, #1
 800cbec:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800cbee:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800cbf0:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800cbf2:	3201      	adds	r2, #1
 800cbf4:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800cbf6:	696a      	ldr	r2, [r5, #20]
 800cbf8:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800cbfc:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800cbfe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cc00:	b9a2      	cbnz	r2, 800cc2c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800cc02:	9600      	str	r6, [sp, #0]
 800cc04:	2201      	movs	r2, #1
 800cc06:	2102      	movs	r1, #2
 800cc08:	4620      	mov	r0, r4
 800cc0a:	f7ff fe26 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800cc0e:	b928      	cbnz	r0, 800cc1c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800cc10:	6823      	ldr	r3, [r4, #0]
 800cc12:	2202      	movs	r2, #2
 800cc14:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800cc16:	4620      	mov	r0, r4
 800cc18:	f7ff ff81 	bl	800cb1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800cc1c:	2301      	movs	r3, #1
 800cc1e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800cc22:	2300      	movs	r3, #0
 800cc24:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800cc28:	b005      	add	sp, #20
 800cc2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800cc2c:	9600      	str	r6, [sp, #0]
 800cc2e:	2201      	movs	r2, #1
 800cc30:	2104      	movs	r1, #4
 800cc32:	4620      	mov	r0, r4
 800cc34:	9303      	str	r3, [sp, #12]
 800cc36:	f7ff fe10 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800cc3a:	2800      	cmp	r0, #0
 800cc3c:	d1ee      	bne.n	800cc1c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800cc3e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800cc40:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800cc42:	7812      	ldrb	r2, [r2, #0]
 800cc44:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800cc48:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc4a:	3201      	adds	r2, #1
 800cc4c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800cc4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cc50:	3a01      	subs	r2, #1
 800cc52:	62e2      	str	r2, [r4, #44]	; 0x2c
 800cc54:	e7d3      	b.n	800cbfe <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800cc56:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cc58:	f043 0308 	orr.w	r3, r3, #8
 800cc5c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800cc5e:	e7e0      	b.n	800cc22 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800cc60:	2002      	movs	r0, #2
 800cc62:	e7de      	b.n	800cc22 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800cc64:	2002      	movs	r0, #2
 800cc66:	e7df      	b.n	800cc28 <HAL_QSPI_Transmit+0x78>

0800cc68 <HAL_QSPI_Receive>:
{
 800cc68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc6a:	4604      	mov	r4, r0
 800cc6c:	b085      	sub	sp, #20
 800cc6e:	4616      	mov	r6, r2
 800cc70:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800cc72:	f7fd fcb5 	bl	800a5e0 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800cc76:	6825      	ldr	r5, [r4, #0]
 800cc78:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800cc7c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800cc80:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800cc82:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800cc84:	d050      	beq.n	800cd28 <HAL_QSPI_Receive+0xc0>
 800cc86:	2201      	movs	r2, #1
 800cc88:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800cc8c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800cc90:	2a01      	cmp	r2, #1
 800cc92:	b2d0      	uxtb	r0, r2
 800cc94:	d146      	bne.n	800cd24 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800cc96:	2200      	movs	r2, #0
 800cc98:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800cc9a:	2f00      	cmp	r7, #0
 800cc9c:	d03d      	beq.n	800cd1a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800cc9e:	2222      	movs	r2, #34	; 0x22
 800cca0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800cca4:	692a      	ldr	r2, [r5, #16]
 800cca6:	3201      	adds	r2, #1
 800cca8:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800ccaa:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800ccac:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800ccae:	3201      	adds	r2, #1
 800ccb0:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800ccb2:	6969      	ldr	r1, [r5, #20]
 800ccb4:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800ccb8:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800ccbc:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800ccbe:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800ccc2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ccc4:	b9a2      	cbnz	r2, 800ccf0 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800ccc6:	9600      	str	r6, [sp, #0]
 800ccc8:	2201      	movs	r2, #1
 800ccca:	2102      	movs	r1, #2
 800cccc:	4620      	mov	r0, r4
 800ccce:	f7ff fdc4 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800ccd2:	b928      	cbnz	r0, 800cce0 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800ccd4:	6823      	ldr	r3, [r4, #0]
 800ccd6:	2202      	movs	r2, #2
 800ccd8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800ccda:	4620      	mov	r0, r4
 800ccdc:	f7ff ff1f 	bl	800cb1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800cce0:	2301      	movs	r3, #1
 800cce2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800cce6:	2300      	movs	r3, #0
 800cce8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800ccec:	b005      	add	sp, #20
 800ccee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800ccf0:	9600      	str	r6, [sp, #0]
 800ccf2:	2201      	movs	r2, #1
 800ccf4:	2106      	movs	r1, #6
 800ccf6:	4620      	mov	r0, r4
 800ccf8:	9303      	str	r3, [sp, #12]
 800ccfa:	f7ff fdae 	bl	800c85a <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800ccfe:	2800      	cmp	r0, #0
 800cd00:	d1ee      	bne.n	800cce0 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800cd02:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd04:	f895 1020 	ldrb.w	r1, [r5, #32]
 800cd08:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800cd0a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800cd0c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800cd0e:	3201      	adds	r2, #1
 800cd10:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800cd12:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd14:	3a01      	subs	r2, #1
 800cd16:	63a2      	str	r2, [r4, #56]	; 0x38
 800cd18:	e7d3      	b.n	800ccc2 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800cd1a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cd1c:	f043 0308 	orr.w	r3, r3, #8
 800cd20:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800cd22:	e7e0      	b.n	800cce6 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800cd24:	2002      	movs	r0, #2
 800cd26:	e7de      	b.n	800cce6 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800cd28:	2002      	movs	r0, #2
 800cd2a:	e7df      	b.n	800ccec <HAL_QSPI_Receive+0x84>

0800cd2c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cd2c:	4913      	ldr	r1, [pc, #76]	; (800cd7c <HAL_RCC_GetSysClockFreq+0x50>)
{
 800cd2e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cd30:	688b      	ldr	r3, [r1, #8]
 800cd32:	f003 030c 	and.w	r3, r3, #12
 800cd36:	2b04      	cmp	r3, #4
 800cd38:	d01c      	beq.n	800cd74 <HAL_RCC_GetSysClockFreq+0x48>
 800cd3a:	2b08      	cmp	r3, #8
 800cd3c:	d11c      	bne.n	800cd78 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800cd3e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800cd40:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cd42:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800cd44:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cd48:	bf14      	ite	ne
 800cd4a:	480d      	ldrne	r0, [pc, #52]	; (800cd80 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cd4c:	480d      	ldreq	r0, [pc, #52]	; (800cd84 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cd4e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800cd52:	bf18      	it	ne
 800cd54:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800cd56:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cd5a:	fba1 0100 	umull	r0, r1, r1, r0
 800cd5e:	f7f3 fdd5 	bl	800090c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800cd62:	4b06      	ldr	r3, [pc, #24]	; (800cd7c <HAL_RCC_GetSysClockFreq+0x50>)
 800cd64:	685b      	ldr	r3, [r3, #4]
 800cd66:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800cd6a:	3301      	adds	r3, #1
 800cd6c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800cd6e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800cd72:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cd74:	4802      	ldr	r0, [pc, #8]	; (800cd80 <HAL_RCC_GetSysClockFreq+0x54>)
 800cd76:	e7fc      	b.n	800cd72 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800cd78:	4802      	ldr	r0, [pc, #8]	; (800cd84 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800cd7a:	e7fa      	b.n	800cd72 <HAL_RCC_GetSysClockFreq+0x46>
 800cd7c:	40023800 	.word	0x40023800
 800cd80:	007a1200 	.word	0x007a1200
 800cd84:	00f42400 	.word	0x00f42400

0800cd88 <HAL_RCC_ClockConfig>:
{
 800cd88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd8c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800cd8e:	4604      	mov	r4, r0
 800cd90:	b910      	cbnz	r0, 800cd98 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800cd92:	2001      	movs	r0, #1
}
 800cd94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800cd98:	4b44      	ldr	r3, [pc, #272]	; (800ceac <HAL_RCC_ClockConfig+0x124>)
 800cd9a:	681a      	ldr	r2, [r3, #0]
 800cd9c:	f002 020f 	and.w	r2, r2, #15
 800cda0:	428a      	cmp	r2, r1
 800cda2:	d328      	bcc.n	800cdf6 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800cda4:	6822      	ldr	r2, [r4, #0]
 800cda6:	0797      	lsls	r7, r2, #30
 800cda8:	d42d      	bmi.n	800ce06 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800cdaa:	07d0      	lsls	r0, r2, #31
 800cdac:	d441      	bmi.n	800ce32 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800cdae:	4b3f      	ldr	r3, [pc, #252]	; (800ceac <HAL_RCC_ClockConfig+0x124>)
 800cdb0:	681a      	ldr	r2, [r3, #0]
 800cdb2:	f002 020f 	and.w	r2, r2, #15
 800cdb6:	42aa      	cmp	r2, r5
 800cdb8:	d866      	bhi.n	800ce88 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800cdba:	6822      	ldr	r2, [r4, #0]
 800cdbc:	0751      	lsls	r1, r2, #29
 800cdbe:	d46c      	bmi.n	800ce9a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800cdc0:	0713      	lsls	r3, r2, #28
 800cdc2:	d507      	bpl.n	800cdd4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800cdc4:	4a3a      	ldr	r2, [pc, #232]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800cdc6:	6921      	ldr	r1, [r4, #16]
 800cdc8:	6893      	ldr	r3, [r2, #8]
 800cdca:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800cdce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800cdd2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800cdd4:	f7ff ffaa 	bl	800cd2c <HAL_RCC_GetSysClockFreq>
 800cdd8:	4b35      	ldr	r3, [pc, #212]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800cdda:	4a36      	ldr	r2, [pc, #216]	; (800ceb4 <HAL_RCC_ClockConfig+0x12c>)
 800cddc:	689b      	ldr	r3, [r3, #8]
 800cdde:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800cde2:	5cd3      	ldrb	r3, [r2, r3]
 800cde4:	40d8      	lsrs	r0, r3
 800cde6:	4b34      	ldr	r3, [pc, #208]	; (800ceb8 <HAL_RCC_ClockConfig+0x130>)
 800cde8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800cdea:	4b34      	ldr	r3, [pc, #208]	; (800cebc <HAL_RCC_ClockConfig+0x134>)
 800cdec:	6818      	ldr	r0, [r3, #0]
 800cdee:	f7f5 fccf 	bl	8002790 <HAL_InitTick>
  return HAL_OK;
 800cdf2:	2000      	movs	r0, #0
 800cdf4:	e7ce      	b.n	800cd94 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800cdf6:	b2ca      	uxtb	r2, r1
 800cdf8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800cdfa:	681b      	ldr	r3, [r3, #0]
 800cdfc:	f003 030f 	and.w	r3, r3, #15
 800ce00:	428b      	cmp	r3, r1
 800ce02:	d1c6      	bne.n	800cd92 <HAL_RCC_ClockConfig+0xa>
 800ce04:	e7ce      	b.n	800cda4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ce06:	4b2a      	ldr	r3, [pc, #168]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800ce08:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800ce0c:	bf1e      	ittt	ne
 800ce0e:	6899      	ldrne	r1, [r3, #8]
 800ce10:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800ce14:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ce16:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800ce18:	bf42      	ittt	mi
 800ce1a:	6899      	ldrmi	r1, [r3, #8]
 800ce1c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800ce20:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800ce22:	4923      	ldr	r1, [pc, #140]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800ce24:	68a0      	ldr	r0, [r4, #8]
 800ce26:	688b      	ldr	r3, [r1, #8]
 800ce28:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ce2c:	4303      	orrs	r3, r0
 800ce2e:	608b      	str	r3, [r1, #8]
 800ce30:	e7bb      	b.n	800cdaa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800ce32:	6862      	ldr	r2, [r4, #4]
 800ce34:	4b1e      	ldr	r3, [pc, #120]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800ce36:	2a01      	cmp	r2, #1
 800ce38:	d11c      	bne.n	800ce74 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ce3a:	681b      	ldr	r3, [r3, #0]
 800ce3c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ce40:	d0a7      	beq.n	800cd92 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800ce42:	4e1b      	ldr	r6, [pc, #108]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800ce44:	68b3      	ldr	r3, [r6, #8]
 800ce46:	f023 0303 	bic.w	r3, r3, #3
 800ce4a:	4313      	orrs	r3, r2
 800ce4c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800ce4e:	f7fd fbc7 	bl	800a5e0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800ce52:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800ce56:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800ce58:	68b3      	ldr	r3, [r6, #8]
 800ce5a:	6862      	ldr	r2, [r4, #4]
 800ce5c:	f003 030c 	and.w	r3, r3, #12
 800ce60:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800ce64:	d0a3      	beq.n	800cdae <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800ce66:	f7fd fbbb 	bl	800a5e0 <HAL_GetTick>
 800ce6a:	1bc0      	subs	r0, r0, r7
 800ce6c:	4540      	cmp	r0, r8
 800ce6e:	d9f3      	bls.n	800ce58 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800ce70:	2003      	movs	r0, #3
 800ce72:	e78f      	b.n	800cd94 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800ce74:	1e91      	subs	r1, r2, #2
 800ce76:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ce78:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800ce7a:	d802      	bhi.n	800ce82 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ce7c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800ce80:	e7de      	b.n	800ce40 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ce82:	f013 0f02 	tst.w	r3, #2
 800ce86:	e7db      	b.n	800ce40 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ce88:	b2ea      	uxtb	r2, r5
 800ce8a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ce8c:	681b      	ldr	r3, [r3, #0]
 800ce8e:	f003 030f 	and.w	r3, r3, #15
 800ce92:	42ab      	cmp	r3, r5
 800ce94:	f47f af7d 	bne.w	800cd92 <HAL_RCC_ClockConfig+0xa>
 800ce98:	e78f      	b.n	800cdba <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800ce9a:	4905      	ldr	r1, [pc, #20]	; (800ceb0 <HAL_RCC_ClockConfig+0x128>)
 800ce9c:	68e0      	ldr	r0, [r4, #12]
 800ce9e:	688b      	ldr	r3, [r1, #8]
 800cea0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800cea4:	4303      	orrs	r3, r0
 800cea6:	608b      	str	r3, [r1, #8]
 800cea8:	e78a      	b.n	800cdc0 <HAL_RCC_ClockConfig+0x38>
 800ceaa:	bf00      	nop
 800ceac:	40023c00 	.word	0x40023c00
 800ceb0:	40023800 	.word	0x40023800
 800ceb4:	0802848d 	.word	0x0802848d
 800ceb8:	20000050 	.word	0x20000050
 800cebc:	20000058 	.word	0x20000058

0800cec0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800cec0:	4b04      	ldr	r3, [pc, #16]	; (800ced4 <HAL_RCC_GetPCLK1Freq+0x14>)
 800cec2:	4a05      	ldr	r2, [pc, #20]	; (800ced8 <HAL_RCC_GetPCLK1Freq+0x18>)
 800cec4:	689b      	ldr	r3, [r3, #8]
 800cec6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800ceca:	5cd3      	ldrb	r3, [r2, r3]
 800cecc:	4a03      	ldr	r2, [pc, #12]	; (800cedc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800cece:	6810      	ldr	r0, [r2, #0]
}
 800ced0:	40d8      	lsrs	r0, r3
 800ced2:	4770      	bx	lr
 800ced4:	40023800 	.word	0x40023800
 800ced8:	0802849d 	.word	0x0802849d
 800cedc:	20000050 	.word	0x20000050

0800cee0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800cee0:	230f      	movs	r3, #15
 800cee2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800cee4:	4b0b      	ldr	r3, [pc, #44]	; (800cf14 <HAL_RCC_GetClockConfig+0x34>)
 800cee6:	689a      	ldr	r2, [r3, #8]
 800cee8:	f002 0203 	and.w	r2, r2, #3
 800ceec:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800ceee:	689a      	ldr	r2, [r3, #8]
 800cef0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800cef4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800cef6:	689a      	ldr	r2, [r3, #8]
 800cef8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800cefc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800cefe:	689b      	ldr	r3, [r3, #8]
 800cf00:	08db      	lsrs	r3, r3, #3
 800cf02:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800cf06:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800cf08:	4b03      	ldr	r3, [pc, #12]	; (800cf18 <HAL_RCC_GetClockConfig+0x38>)
 800cf0a:	681b      	ldr	r3, [r3, #0]
 800cf0c:	f003 030f 	and.w	r3, r3, #15
 800cf10:	600b      	str	r3, [r1, #0]
}
 800cf12:	4770      	bx	lr
 800cf14:	40023800 	.word	0x40023800
 800cf18:	40023c00 	.word	0x40023c00

0800cf1c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800cf1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800cf1e:	6802      	ldr	r2, [r0, #0]
{
 800cf20:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800cf22:	0610      	lsls	r0, r2, #24
 800cf24:	d508      	bpl.n	800cf38 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800cf26:	49aa      	ldr	r1, [pc, #680]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800cf28:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cf2a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800cf2e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800cf32:	4303      	orrs	r3, r0
 800cf34:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800cf38:	05d1      	lsls	r1, r2, #23
 800cf3a:	d508      	bpl.n	800cf4e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800cf3c:	49a4      	ldr	r1, [pc, #656]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800cf3e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cf40:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800cf44:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800cf48:	4303      	orrs	r3, r0
 800cf4a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800cf4e:	f012 0f43 	tst.w	r2, #67	; 0x43
 800cf52:	d173      	bne.n	800d03c <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800cf54:	6823      	ldr	r3, [r4, #0]
 800cf56:	f013 0f0c 	tst.w	r3, #12
 800cf5a:	f000 80c1 	beq.w	800d0e0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800cf5e:	4b9d      	ldr	r3, [pc, #628]	; (800d1d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800cf60:	4d9b      	ldr	r5, [pc, #620]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 800cf62:	2200      	movs	r2, #0
 800cf64:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800cf66:	f7fd fb3b 	bl	800a5e0 <HAL_GetTick>
 800cf6a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800cf6c:	682b      	ldr	r3, [r5, #0]
 800cf6e:	009b      	lsls	r3, r3, #2
 800cf70:	f100 80fc 	bmi.w	800d16c <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800cf74:	6821      	ldr	r1, [r4, #0]
 800cf76:	074f      	lsls	r7, r1, #29
 800cf78:	d51a      	bpl.n	800cfb0 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800cf7a:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800cf7e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800cf82:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800cf86:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800cf8a:	4313      	orrs	r3, r2
 800cf8c:	6922      	ldr	r2, [r4, #16]
 800cf8e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800cf92:	69a2      	ldr	r2, [r4, #24]
 800cf94:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cf98:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800cf9c:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800cfa0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cfa2:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800cfa6:	3a01      	subs	r2, #1
 800cfa8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800cfac:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800cfb0:	070e      	lsls	r6, r1, #28
 800cfb2:	d519      	bpl.n	800cfe8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800cfb4:	4a86      	ldr	r2, [pc, #536]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800cfb6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800cfba:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800cfbe:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800cfc2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800cfc6:	4303      	orrs	r3, r0
 800cfc8:	6920      	ldr	r0, [r4, #16]
 800cfca:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800cfce:	69e0      	ldr	r0, [r4, #28]
 800cfd0:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800cfd4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800cfd8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800cfdc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cfde:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800cfe2:	4303      	orrs	r3, r0
 800cfe4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800cfe8:	060d      	lsls	r5, r1, #24
 800cfea:	d517      	bpl.n	800d01c <HAL_RCCEx_PeriphCLKConfig+0x100>
 800cfec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800cfee:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800cff2:	d113      	bne.n	800d01c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800cff4:	4976      	ldr	r1, [pc, #472]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800cff6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800cffa:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800cffe:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800d002:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800d006:	4313      	orrs	r3, r2
 800d008:	6922      	ldr	r2, [r4, #16]
 800d00a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d00e:	6962      	ldr	r2, [r4, #20]
 800d010:	0852      	lsrs	r2, r2, #1
 800d012:	3a01      	subs	r2, #1
 800d014:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d018:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800d01c:	4b6d      	ldr	r3, [pc, #436]	; (800d1d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d01e:	4e6c      	ldr	r6, [pc, #432]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 800d020:	2201      	movs	r2, #1
 800d022:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800d024:	f7fd fadc 	bl	800a5e0 <HAL_GetTick>
 800d028:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d02a:	6833      	ldr	r3, [r6, #0]
 800d02c:	0098      	lsls	r0, r3, #2
 800d02e:	d459      	bmi.n	800d0e4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800d030:	f7fd fad6 	bl	800a5e0 <HAL_GetTick>
 800d034:	1b40      	subs	r0, r0, r5
 800d036:	2802      	cmp	r0, #2
 800d038:	d9f7      	bls.n	800d02a <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800d03a:	e04e      	b.n	800d0da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800d03c:	4b65      	ldr	r3, [pc, #404]	; (800d1d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d03e:	4e64      	ldr	r6, [pc, #400]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 800d040:	2200      	movs	r2, #0
 800d042:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800d044:	f7fd facc 	bl	800a5e0 <HAL_GetTick>
 800d048:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d04a:	6833      	ldr	r3, [r6, #0]
 800d04c:	011b      	lsls	r3, r3, #4
 800d04e:	d43f      	bmi.n	800d0d0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800d050:	6821      	ldr	r1, [r4, #0]
 800d052:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800d054:	bf41      	itttt	mi
 800d056:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800d05a:	071b      	lslmi	r3, r3, #28
 800d05c:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800d060:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800d064:	078e      	lsls	r6, r1, #30
 800d066:	d515      	bpl.n	800d094 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d068:	4a59      	ldr	r2, [pc, #356]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800d06a:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d06c:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800d070:	6865      	ldr	r5, [r4, #4]
 800d072:	061b      	lsls	r3, r3, #24
 800d074:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800d078:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800d07c:	4303      	orrs	r3, r0
 800d07e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800d082:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800d086:	6a23      	ldr	r3, [r4, #32]
 800d088:	f020 001f 	bic.w	r0, r0, #31
 800d08c:	3b01      	subs	r3, #1
 800d08e:	4303      	orrs	r3, r0
 800d090:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800d094:	064d      	lsls	r5, r1, #25
 800d096:	d50a      	bpl.n	800d0ae <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800d098:	68e3      	ldr	r3, [r4, #12]
 800d09a:	6862      	ldr	r2, [r4, #4]
 800d09c:	061b      	lsls	r3, r3, #24
 800d09e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d0a2:	68a2      	ldr	r2, [r4, #8]
 800d0a4:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800d0a8:	4a49      	ldr	r2, [pc, #292]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800d0aa:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800d0ae:	4b49      	ldr	r3, [pc, #292]	; (800d1d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d0b0:	4e47      	ldr	r6, [pc, #284]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800d0b2:	2201      	movs	r2, #1
 800d0b4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800d0b6:	f7fd fa93 	bl	800a5e0 <HAL_GetTick>
 800d0ba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d0bc:	6833      	ldr	r3, [r6, #0]
 800d0be:	0118      	lsls	r0, r3, #4
 800d0c0:	f53f af48 	bmi.w	800cf54 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800d0c4:	f7fd fa8c 	bl	800a5e0 <HAL_GetTick>
 800d0c8:	1b40      	subs	r0, r0, r5
 800d0ca:	2802      	cmp	r0, #2
 800d0cc:	d9f6      	bls.n	800d0bc <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800d0ce:	e004      	b.n	800d0da <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800d0d0:	f7fd fa86 	bl	800a5e0 <HAL_GetTick>
 800d0d4:	1b40      	subs	r0, r0, r5
 800d0d6:	2802      	cmp	r0, #2
 800d0d8:	d9b7      	bls.n	800d04a <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800d0da:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800d0dc:	b003      	add	sp, #12
 800d0de:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800d0e0:	0619      	lsls	r1, r3, #24
 800d0e2:	d43e      	bmi.n	800d162 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800d0e4:	6823      	ldr	r3, [r4, #0]
 800d0e6:	069a      	lsls	r2, r3, #26
 800d0e8:	d530      	bpl.n	800d14c <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800d0ea:	2300      	movs	r3, #0
 800d0ec:	9301      	str	r3, [sp, #4]
 800d0ee:	4b38      	ldr	r3, [pc, #224]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 800d0f0:	4d39      	ldr	r5, [pc, #228]	; (800d1d8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800d0f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d0f4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d0f8:	641a      	str	r2, [r3, #64]	; 0x40
 800d0fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d0fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d100:	9301      	str	r3, [sp, #4]
 800d102:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800d104:	682b      	ldr	r3, [r5, #0]
 800d106:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d10a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800d10c:	f7fd fa68 	bl	800a5e0 <HAL_GetTick>
 800d110:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800d112:	682b      	ldr	r3, [r5, #0]
 800d114:	05d9      	lsls	r1, r3, #23
 800d116:	d530      	bpl.n	800d17a <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800d118:	4d2d      	ldr	r5, [pc, #180]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800d11a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d11c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800d120:	d131      	bne.n	800d186 <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d122:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d124:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800d128:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800d12c:	4a28      	ldr	r2, [pc, #160]	; (800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800d12e:	d14b      	bne.n	800d1c8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 800d130:	6891      	ldr	r1, [r2, #8]
 800d132:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800d136:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800d13a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800d13e:	4301      	orrs	r1, r0
 800d140:	6091      	str	r1, [r2, #8]
 800d142:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800d144:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d148:	430b      	orrs	r3, r1
 800d14a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800d14c:	6820      	ldr	r0, [r4, #0]
 800d14e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800d152:	bf1f      	itttt	ne
 800d154:	4b21      	ldrne	r3, [pc, #132]	; (800d1dc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800d156:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800d15a:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 800d15e:	2000      	movne	r0, #0
 800d160:	e7bc      	b.n	800d0dc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800d162:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d164:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800d168:	d1bc      	bne.n	800d0e4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800d16a:	e6f8      	b.n	800cf5e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800d16c:	f7fd fa38 	bl	800a5e0 <HAL_GetTick>
 800d170:	1b80      	subs	r0, r0, r6
 800d172:	2802      	cmp	r0, #2
 800d174:	f67f aefa 	bls.w	800cf6c <HAL_RCCEx_PeriphCLKConfig+0x50>
 800d178:	e7af      	b.n	800d0da <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800d17a:	f7fd fa31 	bl	800a5e0 <HAL_GetTick>
 800d17e:	1b80      	subs	r0, r0, r6
 800d180:	2802      	cmp	r0, #2
 800d182:	d9c6      	bls.n	800d112 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800d184:	e7a9      	b.n	800d0da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d186:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d188:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800d18c:	4293      	cmp	r3, r2
 800d18e:	d0c8      	beq.n	800d122 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d190:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800d192:	4a10      	ldr	r2, [pc, #64]	; (800d1d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 800d194:	2101      	movs	r1, #1
 800d196:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d19a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800d19e:	2100      	movs	r1, #0
 800d1a0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800d1a4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800d1a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d1a8:	07da      	lsls	r2, r3, #31
 800d1aa:	d5ba      	bpl.n	800d122 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 800d1ac:	f7fd fa18 	bl	800a5e0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d1b0:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800d1b4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d1b6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d1b8:	079b      	lsls	r3, r3, #30
 800d1ba:	d4b2      	bmi.n	800d122 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d1bc:	f7fd fa10 	bl	800a5e0 <HAL_GetTick>
 800d1c0:	1b80      	subs	r0, r0, r6
 800d1c2:	42b8      	cmp	r0, r7
 800d1c4:	d9f7      	bls.n	800d1b6 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800d1c6:	e788      	b.n	800d0da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d1c8:	6891      	ldr	r1, [r2, #8]
 800d1ca:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800d1ce:	e7b7      	b.n	800d140 <HAL_RCCEx_PeriphCLKConfig+0x224>
 800d1d0:	40023800 	.word	0x40023800
 800d1d4:	42470000 	.word	0x42470000
 800d1d8:	40007000 	.word	0x40007000
 800d1dc:	42471000 	.word	0x42471000

0800d1e0 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800d1e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d1e4:	4604      	mov	r4, r0
 800d1e6:	b340      	cbz	r0, 800d23a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d1e8:	6803      	ldr	r3, [r0, #0]
 800d1ea:	07dd      	lsls	r5, r3, #31
 800d1ec:	d410      	bmi.n	800d210 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800d1ee:	6823      	ldr	r3, [r4, #0]
 800d1f0:	0798      	lsls	r0, r3, #30
 800d1f2:	d45e      	bmi.n	800d2b2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800d1f4:	6823      	ldr	r3, [r4, #0]
 800d1f6:	071a      	lsls	r2, r3, #28
 800d1f8:	f100 80a0 	bmi.w	800d33c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800d1fc:	6823      	ldr	r3, [r4, #0]
 800d1fe:	075b      	lsls	r3, r3, #29
 800d200:	f100 80c0 	bmi.w	800d384 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800d204:	69a0      	ldr	r0, [r4, #24]
 800d206:	2800      	cmp	r0, #0
 800d208:	f040 8128 	bne.w	800d45c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d20c:	2000      	movs	r0, #0
 800d20e:	e02b      	b.n	800d268 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800d210:	4b8f      	ldr	r3, [pc, #572]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d212:	689a      	ldr	r2, [r3, #8]
 800d214:	f002 020c 	and.w	r2, r2, #12
 800d218:	2a04      	cmp	r2, #4
 800d21a:	d007      	beq.n	800d22c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d21c:	689a      	ldr	r2, [r3, #8]
 800d21e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800d222:	2a08      	cmp	r2, #8
 800d224:	d10b      	bne.n	800d23e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d226:	685a      	ldr	r2, [r3, #4]
 800d228:	0251      	lsls	r1, r2, #9
 800d22a:	d508      	bpl.n	800d23e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800d22c:	4b88      	ldr	r3, [pc, #544]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d22e:	681b      	ldr	r3, [r3, #0]
 800d230:	039a      	lsls	r2, r3, #14
 800d232:	d5dc      	bpl.n	800d1ee <HAL_RCC_OscConfig+0xe>
 800d234:	6863      	ldr	r3, [r4, #4]
 800d236:	2b00      	cmp	r3, #0
 800d238:	d1d9      	bne.n	800d1ee <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800d23a:	2001      	movs	r0, #1
 800d23c:	e014      	b.n	800d268 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d23e:	6862      	ldr	r2, [r4, #4]
 800d240:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800d244:	d113      	bne.n	800d26e <HAL_RCC_OscConfig+0x8e>
 800d246:	681a      	ldr	r2, [r3, #0]
 800d248:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800d24c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d24e:	f7fd f9c7 	bl	800a5e0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d252:	4e7f      	ldr	r6, [pc, #508]	; (800d450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d254:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d256:	6833      	ldr	r3, [r6, #0]
 800d258:	039b      	lsls	r3, r3, #14
 800d25a:	d4c8      	bmi.n	800d1ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d25c:	f7fd f9c0 	bl	800a5e0 <HAL_GetTick>
 800d260:	1b40      	subs	r0, r0, r5
 800d262:	2864      	cmp	r0, #100	; 0x64
 800d264:	d9f7      	bls.n	800d256 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800d266:	2003      	movs	r0, #3
}
 800d268:	b002      	add	sp, #8
 800d26a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d26e:	4d78      	ldr	r5, [pc, #480]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d270:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800d274:	682b      	ldr	r3, [r5, #0]
 800d276:	d107      	bne.n	800d288 <HAL_RCC_OscConfig+0xa8>
 800d278:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800d27c:	602b      	str	r3, [r5, #0]
 800d27e:	682b      	ldr	r3, [r5, #0]
 800d280:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800d284:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d286:	e7e2      	b.n	800d24e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d288:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800d28c:	602b      	str	r3, [r5, #0]
 800d28e:	682b      	ldr	r3, [r5, #0]
 800d290:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800d294:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d296:	2a00      	cmp	r2, #0
 800d298:	d1d9      	bne.n	800d24e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800d29a:	f7fd f9a1 	bl	800a5e0 <HAL_GetTick>
 800d29e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d2a0:	682b      	ldr	r3, [r5, #0]
 800d2a2:	039f      	lsls	r7, r3, #14
 800d2a4:	d5a3      	bpl.n	800d1ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d2a6:	f7fd f99b 	bl	800a5e0 <HAL_GetTick>
 800d2aa:	1b80      	subs	r0, r0, r6
 800d2ac:	2864      	cmp	r0, #100	; 0x64
 800d2ae:	d9f7      	bls.n	800d2a0 <HAL_RCC_OscConfig+0xc0>
 800d2b0:	e7d9      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800d2b2:	4b67      	ldr	r3, [pc, #412]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d2b4:	689a      	ldr	r2, [r3, #8]
 800d2b6:	f012 0f0c 	tst.w	r2, #12
 800d2ba:	d007      	beq.n	800d2cc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d2bc:	689a      	ldr	r2, [r3, #8]
 800d2be:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800d2c2:	2a08      	cmp	r2, #8
 800d2c4:	d111      	bne.n	800d2ea <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d2c6:	685b      	ldr	r3, [r3, #4]
 800d2c8:	025e      	lsls	r6, r3, #9
 800d2ca:	d40e      	bmi.n	800d2ea <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d2cc:	4a60      	ldr	r2, [pc, #384]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d2ce:	6813      	ldr	r3, [r2, #0]
 800d2d0:	079d      	lsls	r5, r3, #30
 800d2d2:	d502      	bpl.n	800d2da <HAL_RCC_OscConfig+0xfa>
 800d2d4:	68e3      	ldr	r3, [r4, #12]
 800d2d6:	2b01      	cmp	r3, #1
 800d2d8:	d1af      	bne.n	800d23a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d2da:	6813      	ldr	r3, [r2, #0]
 800d2dc:	6921      	ldr	r1, [r4, #16]
 800d2de:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d2e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d2e6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d2e8:	e784      	b.n	800d1f4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800d2ea:	68e2      	ldr	r2, [r4, #12]
 800d2ec:	4b59      	ldr	r3, [pc, #356]	; (800d454 <HAL_RCC_OscConfig+0x274>)
 800d2ee:	b1b2      	cbz	r2, 800d31e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800d2f0:	2201      	movs	r2, #1
 800d2f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d2f4:	f7fd f974 	bl	800a5e0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d2f8:	4d55      	ldr	r5, [pc, #340]	; (800d450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d2fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d2fc:	682b      	ldr	r3, [r5, #0]
 800d2fe:	0798      	lsls	r0, r3, #30
 800d300:	d507      	bpl.n	800d312 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d302:	682b      	ldr	r3, [r5, #0]
 800d304:	6922      	ldr	r2, [r4, #16]
 800d306:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d30a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d30e:	602b      	str	r3, [r5, #0]
 800d310:	e770      	b.n	800d1f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d312:	f7fd f965 	bl	800a5e0 <HAL_GetTick>
 800d316:	1b80      	subs	r0, r0, r6
 800d318:	2802      	cmp	r0, #2
 800d31a:	d9ef      	bls.n	800d2fc <HAL_RCC_OscConfig+0x11c>
 800d31c:	e7a3      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800d31e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d320:	f7fd f95e 	bl	800a5e0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d324:	4e4a      	ldr	r6, [pc, #296]	; (800d450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d326:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d328:	6833      	ldr	r3, [r6, #0]
 800d32a:	0799      	lsls	r1, r3, #30
 800d32c:	f57f af62 	bpl.w	800d1f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d330:	f7fd f956 	bl	800a5e0 <HAL_GetTick>
 800d334:	1b40      	subs	r0, r0, r5
 800d336:	2802      	cmp	r0, #2
 800d338:	d9f6      	bls.n	800d328 <HAL_RCC_OscConfig+0x148>
 800d33a:	e794      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800d33c:	6962      	ldr	r2, [r4, #20]
 800d33e:	4b45      	ldr	r3, [pc, #276]	; (800d454 <HAL_RCC_OscConfig+0x274>)
 800d340:	b182      	cbz	r2, 800d364 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800d342:	2201      	movs	r2, #1
 800d344:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d348:	f7fd f94a 	bl	800a5e0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d34c:	4e40      	ldr	r6, [pc, #256]	; (800d450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d34e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d350:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d352:	079f      	lsls	r7, r3, #30
 800d354:	f53f af52 	bmi.w	800d1fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d358:	f7fd f942 	bl	800a5e0 <HAL_GetTick>
 800d35c:	1b40      	subs	r0, r0, r5
 800d35e:	2802      	cmp	r0, #2
 800d360:	d9f6      	bls.n	800d350 <HAL_RCC_OscConfig+0x170>
 800d362:	e780      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800d364:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d368:	f7fd f93a 	bl	800a5e0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d36c:	4e38      	ldr	r6, [pc, #224]	; (800d450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d36e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d370:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d372:	0798      	lsls	r0, r3, #30
 800d374:	f57f af42 	bpl.w	800d1fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d378:	f7fd f932 	bl	800a5e0 <HAL_GetTick>
 800d37c:	1b40      	subs	r0, r0, r5
 800d37e:	2802      	cmp	r0, #2
 800d380:	d9f6      	bls.n	800d370 <HAL_RCC_OscConfig+0x190>
 800d382:	e770      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800d384:	4b32      	ldr	r3, [pc, #200]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d386:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d388:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800d38c:	d128      	bne.n	800d3e0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800d38e:	9201      	str	r2, [sp, #4]
 800d390:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d392:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d396:	641a      	str	r2, [r3, #64]	; 0x40
 800d398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d39a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d39e:	9301      	str	r3, [sp, #4]
 800d3a0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800d3a2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d3a4:	4d2c      	ldr	r5, [pc, #176]	; (800d458 <HAL_RCC_OscConfig+0x278>)
 800d3a6:	682b      	ldr	r3, [r5, #0]
 800d3a8:	05d9      	lsls	r1, r3, #23
 800d3aa:	d51b      	bpl.n	800d3e4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d3ac:	68a3      	ldr	r3, [r4, #8]
 800d3ae:	4d28      	ldr	r5, [pc, #160]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d3b0:	2b01      	cmp	r3, #1
 800d3b2:	d127      	bne.n	800d404 <HAL_RCC_OscConfig+0x224>
 800d3b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d3b6:	f043 0301 	orr.w	r3, r3, #1
 800d3ba:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800d3bc:	f7fd f910 	bl	800a5e0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d3c0:	4e23      	ldr	r6, [pc, #140]	; (800d450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d3c2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d3c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d3c8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800d3ca:	079b      	lsls	r3, r3, #30
 800d3cc:	d539      	bpl.n	800d442 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800d3ce:	2f00      	cmp	r7, #0
 800d3d0:	f43f af18 	beq.w	800d204 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800d3d4:	4a1e      	ldr	r2, [pc, #120]	; (800d450 <HAL_RCC_OscConfig+0x270>)
 800d3d6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d3d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800d3dc:	6413      	str	r3, [r2, #64]	; 0x40
 800d3de:	e711      	b.n	800d204 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800d3e0:	2700      	movs	r7, #0
 800d3e2:	e7df      	b.n	800d3a4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800d3e4:	682b      	ldr	r3, [r5, #0]
 800d3e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d3ea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800d3ec:	f7fd f8f8 	bl	800a5e0 <HAL_GetTick>
 800d3f0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d3f2:	682b      	ldr	r3, [r5, #0]
 800d3f4:	05da      	lsls	r2, r3, #23
 800d3f6:	d4d9      	bmi.n	800d3ac <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800d3f8:	f7fd f8f2 	bl	800a5e0 <HAL_GetTick>
 800d3fc:	1b80      	subs	r0, r0, r6
 800d3fe:	2802      	cmp	r0, #2
 800d400:	d9f7      	bls.n	800d3f2 <HAL_RCC_OscConfig+0x212>
 800d402:	e730      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d404:	2b05      	cmp	r3, #5
 800d406:	d104      	bne.n	800d412 <HAL_RCC_OscConfig+0x232>
 800d408:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d40a:	f043 0304 	orr.w	r3, r3, #4
 800d40e:	672b      	str	r3, [r5, #112]	; 0x70
 800d410:	e7d0      	b.n	800d3b4 <HAL_RCC_OscConfig+0x1d4>
 800d412:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d414:	f022 0201 	bic.w	r2, r2, #1
 800d418:	672a      	str	r2, [r5, #112]	; 0x70
 800d41a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d41c:	f022 0204 	bic.w	r2, r2, #4
 800d420:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800d422:	2b00      	cmp	r3, #0
 800d424:	d1ca      	bne.n	800d3bc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800d426:	f7fd f8db 	bl	800a5e0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d42a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800d42e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d430:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d432:	0798      	lsls	r0, r3, #30
 800d434:	d5cb      	bpl.n	800d3ce <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d436:	f7fd f8d3 	bl	800a5e0 <HAL_GetTick>
 800d43a:	1b80      	subs	r0, r0, r6
 800d43c:	4540      	cmp	r0, r8
 800d43e:	d9f7      	bls.n	800d430 <HAL_RCC_OscConfig+0x250>
 800d440:	e711      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d442:	f7fd f8cd 	bl	800a5e0 <HAL_GetTick>
 800d446:	1b40      	subs	r0, r0, r5
 800d448:	4540      	cmp	r0, r8
 800d44a:	d9bd      	bls.n	800d3c8 <HAL_RCC_OscConfig+0x1e8>
 800d44c:	e70b      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
 800d44e:	bf00      	nop
 800d450:	40023800 	.word	0x40023800
 800d454:	42470000 	.word	0x42470000
 800d458:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800d45c:	4d3b      	ldr	r5, [pc, #236]	; (800d54c <HAL_RCC_OscConfig+0x36c>)
 800d45e:	68ab      	ldr	r3, [r5, #8]
 800d460:	f003 030c 	and.w	r3, r3, #12
 800d464:	2b08      	cmp	r3, #8
 800d466:	d040      	beq.n	800d4ea <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d468:	4b39      	ldr	r3, [pc, #228]	; (800d550 <HAL_RCC_OscConfig+0x370>)
 800d46a:	2200      	movs	r2, #0
 800d46c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800d46e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d470:	d12e      	bne.n	800d4d0 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800d472:	f7fd f8b5 	bl	800a5e0 <HAL_GetTick>
 800d476:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d478:	682b      	ldr	r3, [r5, #0]
 800d47a:	0199      	lsls	r1, r3, #6
 800d47c:	d422      	bmi.n	800d4c4 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800d47e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800d482:	4313      	orrs	r3, r2
 800d484:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d486:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d48a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d48c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d490:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d492:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800d496:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d498:	0852      	lsrs	r2, r2, #1
 800d49a:	3a01      	subs	r2, #1
 800d49c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d4a0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800d4a2:	4b2b      	ldr	r3, [pc, #172]	; (800d550 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d4a4:	4d29      	ldr	r5, [pc, #164]	; (800d54c <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800d4a6:	2201      	movs	r2, #1
 800d4a8:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800d4aa:	f7fd f899 	bl	800a5e0 <HAL_GetTick>
 800d4ae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d4b0:	682b      	ldr	r3, [r5, #0]
 800d4b2:	019a      	lsls	r2, r3, #6
 800d4b4:	f53f aeaa 	bmi.w	800d20c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d4b8:	f7fd f892 	bl	800a5e0 <HAL_GetTick>
 800d4bc:	1b00      	subs	r0, r0, r4
 800d4be:	2802      	cmp	r0, #2
 800d4c0:	d9f6      	bls.n	800d4b0 <HAL_RCC_OscConfig+0x2d0>
 800d4c2:	e6d0      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d4c4:	f7fd f88c 	bl	800a5e0 <HAL_GetTick>
 800d4c8:	1b80      	subs	r0, r0, r6
 800d4ca:	2802      	cmp	r0, #2
 800d4cc:	d9d4      	bls.n	800d478 <HAL_RCC_OscConfig+0x298>
 800d4ce:	e6ca      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800d4d0:	f7fd f886 	bl	800a5e0 <HAL_GetTick>
 800d4d4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d4d6:	682b      	ldr	r3, [r5, #0]
 800d4d8:	019b      	lsls	r3, r3, #6
 800d4da:	f57f ae97 	bpl.w	800d20c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d4de:	f7fd f87f 	bl	800a5e0 <HAL_GetTick>
 800d4e2:	1b00      	subs	r0, r0, r4
 800d4e4:	2802      	cmp	r0, #2
 800d4e6:	d9f6      	bls.n	800d4d6 <HAL_RCC_OscConfig+0x2f6>
 800d4e8:	e6bd      	b.n	800d266 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800d4ea:	2801      	cmp	r0, #1
 800d4ec:	f43f aebc 	beq.w	800d268 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800d4f0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800d4f2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d4f4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800d4f8:	4291      	cmp	r1, r2
 800d4fa:	f47f ae9e 	bne.w	800d23a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d4fe:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800d500:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d504:	428a      	cmp	r2, r1
 800d506:	f47f ae98 	bne.w	800d23a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800d50a:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800d50c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800d510:	401a      	ands	r2, r3
 800d512:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800d516:	f47f ae90 	bne.w	800d23a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800d51a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d51c:	0852      	lsrs	r2, r2, #1
 800d51e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800d522:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800d524:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800d528:	f47f ae87 	bne.w	800d23a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800d52c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d52e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800d532:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800d536:	f47f ae80 	bne.w	800d23a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800d53a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d53c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800d540:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800d544:	f43f ae62 	beq.w	800d20c <HAL_RCC_OscConfig+0x2c>
 800d548:	e677      	b.n	800d23a <HAL_RCC_OscConfig+0x5a>
 800d54a:	bf00      	nop
 800d54c:	40023800 	.word	0x40023800
 800d550:	42470000 	.word	0x42470000

0800d554 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800d554:	b538      	push	{r3, r4, r5, lr}
 800d556:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800d558:	4604      	mov	r4, r0
 800d55a:	b1c8      	cbz	r0, 800d590 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800d55c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d560:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d564:	b91b      	cbnz	r3, 800d56e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800d566:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800d56a:	f7f5 f855 	bl	8002618 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d56e:	2302      	movs	r3, #2
 800d570:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800d574:	1d21      	adds	r1, r4, #4
 800d576:	6820      	ldr	r0, [r4, #0]
 800d578:	f000 fbee 	bl	800dd58 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800d57c:	6862      	ldr	r2, [r4, #4]
 800d57e:	6820      	ldr	r0, [r4, #0]
 800d580:	4629      	mov	r1, r5
 800d582:	f000 fc24 	bl	800ddce <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800d586:	2301      	movs	r3, #1
 800d588:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800d58c:	2000      	movs	r0, #0
}
 800d58e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d590:	2001      	movs	r0, #1
 800d592:	e7fc      	b.n	800d58e <HAL_SDRAM_Init+0x3a>

0800d594 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800d594:	b510      	push	{r4, lr}
 800d596:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800d598:	f7f5 f8b8 	bl	800270c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800d59c:	e9d4 0100 	ldrd	r0, r1, [r4]
 800d5a0:	f000 fc4b 	bl	800de3a <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800d5a4:	2000      	movs	r0, #0
 800d5a6:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800d5aa:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800d5ae:	bd10      	pop	{r4, pc}

0800d5b0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800d5b0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d5b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800d5b6:	2b02      	cmp	r3, #2
{
 800d5b8:	4605      	mov	r5, r0
 800d5ba:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d5bc:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800d5be:	d012      	beq.n	800d5e6 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800d5c0:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800d5c4:	2c01      	cmp	r4, #1
 800d5c6:	d10f      	bne.n	800d5e8 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d5c8:	2302      	movs	r3, #2
 800d5ca:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800d5ce:	6828      	ldr	r0, [r5, #0]
 800d5d0:	f000 fc42 	bl	800de58 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800d5d4:	6833      	ldr	r3, [r6, #0]
 800d5d6:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800d5d8:	bf06      	itte	eq
 800d5da:	2305      	moveq	r3, #5
 800d5dc:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800d5e0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800d5e4:	2000      	movs	r0, #0
}
 800d5e6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800d5e8:	2001      	movs	r0, #1
 800d5ea:	e7fc      	b.n	800d5e6 <HAL_SDRAM_SendCommand+0x36>

0800d5ec <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800d5ec:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d5ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d5f2:	2b02      	cmp	r3, #2
{
 800d5f4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d5f6:	b2d8      	uxtb	r0, r3
 800d5f8:	d00d      	beq.n	800d616 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800d5fa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d5fe:	2b01      	cmp	r3, #1
 800d600:	b2dd      	uxtb	r5, r3
 800d602:	d109      	bne.n	800d618 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d604:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d606:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d608:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d60c:	f000 fc4a 	bl	800dea4 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800d610:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800d614:	2000      	movs	r0, #0
}
 800d616:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d618:	2001      	movs	r0, #1
 800d61a:	e7fc      	b.n	800d616 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800d61c <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d61c:	6a03      	ldr	r3, [r0, #32]
 800d61e:	f023 0301 	bic.w	r3, r3, #1
 800d622:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800d624:	6a03      	ldr	r3, [r0, #32]
{
 800d626:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800d628:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800d62a:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800d62c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800d62e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d632:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800d634:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800d636:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800d63a:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800d63c:	4d0e      	ldr	r5, [pc, #56]	; (800d678 <TIM_OC1_SetConfig+0x5c>)
 800d63e:	42a8      	cmp	r0, r5
 800d640:	d002      	beq.n	800d648 <TIM_OC1_SetConfig+0x2c>
 800d642:	4e0e      	ldr	r6, [pc, #56]	; (800d67c <TIM_OC1_SetConfig+0x60>)
 800d644:	42b0      	cmp	r0, r6
 800d646:	d110      	bne.n	800d66a <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800d648:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800d64a:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 800d64e:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d650:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800d652:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d656:	d002      	beq.n	800d65e <TIM_OC1_SetConfig+0x42>
 800d658:	4d08      	ldr	r5, [pc, #32]	; (800d67c <TIM_OC1_SetConfig+0x60>)
 800d65a:	42a8      	cmp	r0, r5
 800d65c:	d105      	bne.n	800d66a <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800d65e:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800d662:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800d666:	4335      	orrs	r5, r6
 800d668:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d66a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800d66c:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800d66e:	684a      	ldr	r2, [r1, #4]
 800d670:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d672:	6203      	str	r3, [r0, #32]
}
 800d674:	bd70      	pop	{r4, r5, r6, pc}
 800d676:	bf00      	nop
 800d678:	40010000 	.word	0x40010000
 800d67c:	40010400 	.word	0x40010400

0800d680 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800d680:	6a03      	ldr	r3, [r0, #32]
 800d682:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800d686:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800d688:	6a03      	ldr	r3, [r0, #32]
{
 800d68a:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800d68c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800d68e:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800d690:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800d692:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d696:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d698:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800d69a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d69e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800d6a2:	4d11      	ldr	r5, [pc, #68]	; (800d6e8 <TIM_OC3_SetConfig+0x68>)
 800d6a4:	42a8      	cmp	r0, r5
 800d6a6:	d003      	beq.n	800d6b0 <TIM_OC3_SetConfig+0x30>
 800d6a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d6ac:	42a8      	cmp	r0, r5
 800d6ae:	d114      	bne.n	800d6da <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d6b0:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800d6b2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d6b6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d6ba:	4d0b      	ldr	r5, [pc, #44]	; (800d6e8 <TIM_OC3_SetConfig+0x68>)
 800d6bc:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800d6be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d6c2:	d003      	beq.n	800d6cc <TIM_OC3_SetConfig+0x4c>
 800d6c4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d6c8:	42a8      	cmp	r0, r5
 800d6ca:	d106      	bne.n	800d6da <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d6cc:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800d6d0:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d6d4:	4335      	orrs	r5, r6
 800d6d6:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d6da:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d6dc:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800d6de:	684a      	ldr	r2, [r1, #4]
 800d6e0:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d6e2:	6203      	str	r3, [r0, #32]
}
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}
 800d6e6:	bf00      	nop
 800d6e8:	40010000 	.word	0x40010000

0800d6ec <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800d6ec:	6a03      	ldr	r3, [r0, #32]
 800d6ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800d6f2:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800d6f4:	6a03      	ldr	r3, [r0, #32]
{
 800d6f6:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800d6f8:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800d6fa:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d6fc:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800d6fe:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d702:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d706:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800d708:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d70c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d710:	4d08      	ldr	r5, [pc, #32]	; (800d734 <TIM_OC4_SetConfig+0x48>)
 800d712:	42a8      	cmp	r0, r5
 800d714:	d003      	beq.n	800d71e <TIM_OC4_SetConfig+0x32>
 800d716:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d71a:	42a8      	cmp	r0, r5
 800d71c:	d104      	bne.n	800d728 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d71e:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800d720:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d724:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d728:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d72a:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800d72c:	684a      	ldr	r2, [r1, #4]
 800d72e:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d730:	6203      	str	r3, [r0, #32]
}
 800d732:	bd30      	pop	{r4, r5, pc}
 800d734:	40010000 	.word	0x40010000

0800d738 <HAL_TIM_Base_MspInit>:
}
 800d738:	4770      	bx	lr
	...

0800d73c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d73c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d740:	2b01      	cmp	r3, #1
 800d742:	d130      	bne.n	800d7a6 <HAL_TIM_Base_Start_IT+0x6a>
  htim->State = HAL_TIM_STATE_BUSY;
 800d744:	2302      	movs	r3, #2
 800d746:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d74a:	6803      	ldr	r3, [r0, #0]
 800d74c:	68da      	ldr	r2, [r3, #12]
 800d74e:	f042 0201 	orr.w	r2, r2, #1
 800d752:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d754:	4a15      	ldr	r2, [pc, #84]	; (800d7ac <HAL_TIM_Base_Start_IT+0x70>)
 800d756:	4293      	cmp	r3, r2
 800d758:	d01a      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d75a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d75e:	d017      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d760:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d764:	4293      	cmp	r3, r2
 800d766:	d013      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d768:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d76c:	4293      	cmp	r3, r2
 800d76e:	d00f      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d770:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d774:	4293      	cmp	r3, r2
 800d776:	d00b      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d778:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d77c:	4293      	cmp	r3, r2
 800d77e:	d007      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d780:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d784:	4293      	cmp	r3, r2
 800d786:	d003      	beq.n	800d790 <HAL_TIM_Base_Start_IT+0x54>
 800d788:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d78c:	4293      	cmp	r3, r2
 800d78e:	d104      	bne.n	800d79a <HAL_TIM_Base_Start_IT+0x5e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d790:	689a      	ldr	r2, [r3, #8]
 800d792:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d796:	2a06      	cmp	r2, #6
 800d798:	d003      	beq.n	800d7a2 <HAL_TIM_Base_Start_IT+0x66>
    __HAL_TIM_ENABLE(htim);
 800d79a:	681a      	ldr	r2, [r3, #0]
 800d79c:	f042 0201 	orr.w	r2, r2, #1
 800d7a0:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 800d7a2:	2000      	movs	r0, #0
}
 800d7a4:	4770      	bx	lr
    return HAL_ERROR;
 800d7a6:	2001      	movs	r0, #1
 800d7a8:	4770      	bx	lr
 800d7aa:	bf00      	nop
 800d7ac:	40010000 	.word	0x40010000

0800d7b0 <HAL_TIM_OC_DelayElapsedCallback>:
 800d7b0:	4770      	bx	lr

0800d7b2 <HAL_TIM_IC_CaptureCallback>:
 800d7b2:	4770      	bx	lr

0800d7b4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d7b4:	4770      	bx	lr

0800d7b6 <HAL_TIM_TriggerCallback>:
 800d7b6:	4770      	bx	lr

0800d7b8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7b8:	6803      	ldr	r3, [r0, #0]
 800d7ba:	691a      	ldr	r2, [r3, #16]
 800d7bc:	0791      	lsls	r1, r2, #30
{
 800d7be:	b510      	push	{r4, lr}
 800d7c0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7c2:	d50e      	bpl.n	800d7e2 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d7c4:	68da      	ldr	r2, [r3, #12]
 800d7c6:	0792      	lsls	r2, r2, #30
 800d7c8:	d50b      	bpl.n	800d7e2 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d7ca:	f06f 0202 	mvn.w	r2, #2
 800d7ce:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d7d0:	2201      	movs	r2, #1
 800d7d2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d7d4:	699b      	ldr	r3, [r3, #24]
 800d7d6:	079b      	lsls	r3, r3, #30
 800d7d8:	d077      	beq.n	800d8ca <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800d7da:	f7ff ffea 	bl	800d7b2 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d7de:	2300      	movs	r3, #0
 800d7e0:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d7e2:	6823      	ldr	r3, [r4, #0]
 800d7e4:	691a      	ldr	r2, [r3, #16]
 800d7e6:	0750      	lsls	r0, r2, #29
 800d7e8:	d510      	bpl.n	800d80c <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d7ea:	68da      	ldr	r2, [r3, #12]
 800d7ec:	0751      	lsls	r1, r2, #29
 800d7ee:	d50d      	bpl.n	800d80c <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d7f0:	f06f 0204 	mvn.w	r2, #4
 800d7f4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d7f6:	2202      	movs	r2, #2
 800d7f8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d7fa:	699b      	ldr	r3, [r3, #24]
 800d7fc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d800:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d802:	d068      	beq.n	800d8d6 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800d804:	f7ff ffd5 	bl	800d7b2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d808:	2300      	movs	r3, #0
 800d80a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d80c:	6823      	ldr	r3, [r4, #0]
 800d80e:	691a      	ldr	r2, [r3, #16]
 800d810:	0712      	lsls	r2, r2, #28
 800d812:	d50f      	bpl.n	800d834 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d814:	68da      	ldr	r2, [r3, #12]
 800d816:	0710      	lsls	r0, r2, #28
 800d818:	d50c      	bpl.n	800d834 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d81a:	f06f 0208 	mvn.w	r2, #8
 800d81e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d820:	2204      	movs	r2, #4
 800d822:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d824:	69db      	ldr	r3, [r3, #28]
 800d826:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d828:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d82a:	d05a      	beq.n	800d8e2 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800d82c:	f7ff ffc1 	bl	800d7b2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d830:	2300      	movs	r3, #0
 800d832:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d834:	6823      	ldr	r3, [r4, #0]
 800d836:	691a      	ldr	r2, [r3, #16]
 800d838:	06d2      	lsls	r2, r2, #27
 800d83a:	d510      	bpl.n	800d85e <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d83c:	68da      	ldr	r2, [r3, #12]
 800d83e:	06d0      	lsls	r0, r2, #27
 800d840:	d50d      	bpl.n	800d85e <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d842:	f06f 0210 	mvn.w	r2, #16
 800d846:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d848:	2208      	movs	r2, #8
 800d84a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d84c:	69db      	ldr	r3, [r3, #28]
 800d84e:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d852:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d854:	d04b      	beq.n	800d8ee <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800d856:	f7ff ffac 	bl	800d7b2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d85a:	2300      	movs	r3, #0
 800d85c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d85e:	6823      	ldr	r3, [r4, #0]
 800d860:	691a      	ldr	r2, [r3, #16]
 800d862:	07d1      	lsls	r1, r2, #31
 800d864:	d508      	bpl.n	800d878 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d866:	68da      	ldr	r2, [r3, #12]
 800d868:	07d2      	lsls	r2, r2, #31
 800d86a:	d505      	bpl.n	800d878 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d86c:	f06f 0201 	mvn.w	r2, #1
 800d870:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d872:	4620      	mov	r0, r4
 800d874:	f7f4 fca4 	bl	80021c0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d878:	6823      	ldr	r3, [r4, #0]
 800d87a:	691a      	ldr	r2, [r3, #16]
 800d87c:	0610      	lsls	r0, r2, #24
 800d87e:	d508      	bpl.n	800d892 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d880:	68da      	ldr	r2, [r3, #12]
 800d882:	0611      	lsls	r1, r2, #24
 800d884:	d505      	bpl.n	800d892 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d886:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d88a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d88c:	4620      	mov	r0, r4
 800d88e:	f000 fa62 	bl	800dd56 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d892:	6823      	ldr	r3, [r4, #0]
 800d894:	691a      	ldr	r2, [r3, #16]
 800d896:	0652      	lsls	r2, r2, #25
 800d898:	d508      	bpl.n	800d8ac <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d89a:	68da      	ldr	r2, [r3, #12]
 800d89c:	0650      	lsls	r0, r2, #25
 800d89e:	d505      	bpl.n	800d8ac <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d8a0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d8a4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d8a6:	4620      	mov	r0, r4
 800d8a8:	f7ff ff85 	bl	800d7b6 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d8ac:	6823      	ldr	r3, [r4, #0]
 800d8ae:	691a      	ldr	r2, [r3, #16]
 800d8b0:	0691      	lsls	r1, r2, #26
 800d8b2:	d522      	bpl.n	800d8fa <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d8b4:	68da      	ldr	r2, [r3, #12]
 800d8b6:	0692      	lsls	r2, r2, #26
 800d8b8:	d51f      	bpl.n	800d8fa <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8ba:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d8be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8c0:	611a      	str	r2, [r3, #16]
}
 800d8c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d8c6:	f000 ba45 	b.w	800dd54 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8ca:	f7ff ff71 	bl	800d7b0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8ce:	4620      	mov	r0, r4
 800d8d0:	f7ff ff70 	bl	800d7b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8d4:	e783      	b.n	800d7de <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8d6:	f7ff ff6b 	bl	800d7b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8da:	4620      	mov	r0, r4
 800d8dc:	f7ff ff6a 	bl	800d7b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8e0:	e792      	b.n	800d808 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8e2:	f7ff ff65 	bl	800d7b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8e6:	4620      	mov	r0, r4
 800d8e8:	f7ff ff64 	bl	800d7b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8ec:	e7a0      	b.n	800d830 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8ee:	f7ff ff5f 	bl	800d7b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8f2:	4620      	mov	r0, r4
 800d8f4:	f7ff ff5e 	bl	800d7b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8f8:	e7af      	b.n	800d85a <HAL_TIM_IRQHandler+0xa2>
}
 800d8fa:	bd10      	pop	{r4, pc}

0800d8fc <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d8fc:	4a30      	ldr	r2, [pc, #192]	; (800d9c0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800d8fe:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d900:	4290      	cmp	r0, r2
 800d902:	d012      	beq.n	800d92a <TIM_Base_SetConfig+0x2e>
 800d904:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800d908:	d00f      	beq.n	800d92a <TIM_Base_SetConfig+0x2e>
 800d90a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d90e:	4290      	cmp	r0, r2
 800d910:	d00b      	beq.n	800d92a <TIM_Base_SetConfig+0x2e>
 800d912:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d916:	4290      	cmp	r0, r2
 800d918:	d007      	beq.n	800d92a <TIM_Base_SetConfig+0x2e>
 800d91a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d91e:	4290      	cmp	r0, r2
 800d920:	d003      	beq.n	800d92a <TIM_Base_SetConfig+0x2e>
 800d922:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d926:	4290      	cmp	r0, r2
 800d928:	d119      	bne.n	800d95e <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 800d92a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d92c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d930:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d932:	4a23      	ldr	r2, [pc, #140]	; (800d9c0 <TIM_Base_SetConfig+0xc4>)
 800d934:	4290      	cmp	r0, r2
 800d936:	d029      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d938:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800d93c:	d026      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d93e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d942:	4290      	cmp	r0, r2
 800d944:	d022      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d946:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d94a:	4290      	cmp	r0, r2
 800d94c:	d01e      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d94e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d952:	4290      	cmp	r0, r2
 800d954:	d01a      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d956:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d95a:	4290      	cmp	r0, r2
 800d95c:	d016      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d95e:	4a19      	ldr	r2, [pc, #100]	; (800d9c4 <TIM_Base_SetConfig+0xc8>)
 800d960:	4290      	cmp	r0, r2
 800d962:	d013      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d964:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d968:	4290      	cmp	r0, r2
 800d96a:	d00f      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d96c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d970:	4290      	cmp	r0, r2
 800d972:	d00b      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d974:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800d978:	4290      	cmp	r0, r2
 800d97a:	d007      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d97c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d980:	4290      	cmp	r0, r2
 800d982:	d003      	beq.n	800d98c <TIM_Base_SetConfig+0x90>
 800d984:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d988:	4290      	cmp	r0, r2
 800d98a:	d103      	bne.n	800d994 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d98c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d98e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d992:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d994:	694a      	ldr	r2, [r1, #20]
 800d996:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d99a:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 800d99c:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d99e:	688b      	ldr	r3, [r1, #8]
 800d9a0:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d9a2:	680b      	ldr	r3, [r1, #0]
 800d9a4:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d9a6:	4b06      	ldr	r3, [pc, #24]	; (800d9c0 <TIM_Base_SetConfig+0xc4>)
 800d9a8:	4298      	cmp	r0, r3
 800d9aa:	d003      	beq.n	800d9b4 <TIM_Base_SetConfig+0xb8>
 800d9ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800d9b0:	4298      	cmp	r0, r3
 800d9b2:	d101      	bne.n	800d9b8 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 800d9b4:	690b      	ldr	r3, [r1, #16]
 800d9b6:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800d9b8:	2301      	movs	r3, #1
 800d9ba:	6143      	str	r3, [r0, #20]
}
 800d9bc:	4770      	bx	lr
 800d9be:	bf00      	nop
 800d9c0:	40010000 	.word	0x40010000
 800d9c4:	40014000 	.word	0x40014000

0800d9c8 <HAL_TIM_Base_Init>:
{
 800d9c8:	b510      	push	{r4, lr}
  if (htim == NULL)
 800d9ca:	4604      	mov	r4, r0
 800d9cc:	b330      	cbz	r0, 800da1c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800d9ce:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d9d2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d9d6:	b91b      	cbnz	r3, 800d9e0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800d9d8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d9dc:	f7ff feac 	bl	800d738 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800d9e0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d9e2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d9e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d9e8:	1d21      	adds	r1, r4, #4
 800d9ea:	f7ff ff87 	bl	800d8fc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d9ee:	2301      	movs	r3, #1
 800d9f0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800d9f4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d9f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d9fa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d9fe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800da02:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800da06:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800da0a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800da0e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800da12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800da16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800da1a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800da1c:	2001      	movs	r0, #1
 800da1e:	e7fc      	b.n	800da1a <HAL_TIM_Base_Init+0x52>

0800da20 <HAL_TIM_PWM_Init>:
{
 800da20:	b510      	push	{r4, lr}
  if (htim == NULL)
 800da22:	4604      	mov	r4, r0
 800da24:	b330      	cbz	r0, 800da74 <HAL_TIM_PWM_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800da26:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800da2a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800da2e:	b91b      	cbnz	r3, 800da38 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800da30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800da34:	f7f4 fdac 	bl	8002590 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800da38:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800da3a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800da3c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800da40:	1d21      	adds	r1, r4, #4
 800da42:	f7ff ff5b 	bl	800d8fc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800da46:	2301      	movs	r3, #1
 800da48:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800da4c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800da4e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800da52:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800da56:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800da5a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800da5e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800da62:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800da66:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800da6a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800da6e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800da72:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800da74:	2001      	movs	r0, #1
 800da76:	e7fc      	b.n	800da72 <HAL_TIM_PWM_Init+0x52>

0800da78 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800da78:	6a03      	ldr	r3, [r0, #32]
 800da7a:	f023 0310 	bic.w	r3, r3, #16
 800da7e:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 800da80:	6a03      	ldr	r3, [r0, #32]
{
 800da82:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 800da84:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800da86:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800da88:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800da8a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800da8e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800da92:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800da94:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800da98:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800da9c:	4d10      	ldr	r5, [pc, #64]	; (800dae0 <TIM_OC2_SetConfig+0x68>)
 800da9e:	42a8      	cmp	r0, r5
 800daa0:	d003      	beq.n	800daaa <TIM_OC2_SetConfig+0x32>
 800daa2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800daa6:	42a8      	cmp	r0, r5
 800daa8:	d114      	bne.n	800dad4 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800daaa:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800daac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800dab0:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800dab4:	4d0a      	ldr	r5, [pc, #40]	; (800dae0 <TIM_OC2_SetConfig+0x68>)
 800dab6:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800dab8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800dabc:	d003      	beq.n	800dac6 <TIM_OC2_SetConfig+0x4e>
 800dabe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800dac2:	42a8      	cmp	r0, r5
 800dac4:	d106      	bne.n	800dad4 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800dac6:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800daca:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800dace:	4335      	orrs	r5, r6
 800dad0:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 800dad4:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 800dad6:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800dad8:	684a      	ldr	r2, [r1, #4]
 800dada:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800dadc:	6203      	str	r3, [r0, #32]
}
 800dade:	bd70      	pop	{r4, r5, r6, pc}
 800dae0:	40010000 	.word	0x40010000

0800dae4 <HAL_TIM_PWM_ConfigChannel>:
{
 800dae4:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 800dae6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800daea:	2b01      	cmp	r3, #1
{
 800daec:	4605      	mov	r5, r0
  __HAL_LOCK(htim);
 800daee:	d053      	beq.n	800db98 <HAL_TIM_PWM_ConfigChannel+0xb4>
 800daf0:	2001      	movs	r0, #1
  switch (Channel)
 800daf2:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 800daf4:	f885 003c 	strb.w	r0, [r5, #60]	; 0x3c
  switch (Channel)
 800daf8:	d03d      	beq.n	800db76 <HAL_TIM_PWM_ConfigChannel+0x92>
 800dafa:	d806      	bhi.n	800db0a <HAL_TIM_PWM_ConfigChannel+0x26>
 800dafc:	b1c2      	cbz	r2, 800db30 <HAL_TIM_PWM_ConfigChannel+0x4c>
 800dafe:	2a04      	cmp	r2, #4
 800db00:	d028      	beq.n	800db54 <HAL_TIM_PWM_ConfigChannel+0x70>
  __HAL_UNLOCK(htim);
 800db02:	2300      	movs	r3, #0
 800db04:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
}
 800db08:	bd70      	pop	{r4, r5, r6, pc}
  switch (Channel)
 800db0a:	2a0c      	cmp	r2, #12
 800db0c:	d1f9      	bne.n	800db02 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800db0e:	6828      	ldr	r0, [r5, #0]
 800db10:	f7ff fdec 	bl	800d6ec <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800db14:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800db16:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800db18:	69da      	ldr	r2, [r3, #28]
 800db1a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800db1e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800db20:	69da      	ldr	r2, [r3, #28]
 800db22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800db26:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800db28:	69da      	ldr	r2, [r3, #28]
 800db2a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800db2e:	e031      	b.n	800db94 <HAL_TIM_PWM_ConfigChannel+0xb0>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800db30:	6828      	ldr	r0, [r5, #0]
 800db32:	f7ff fd73 	bl	800d61c <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800db36:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800db38:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800db3a:	699a      	ldr	r2, [r3, #24]
 800db3c:	f042 0208 	orr.w	r2, r2, #8
 800db40:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800db42:	699a      	ldr	r2, [r3, #24]
 800db44:	f022 0204 	bic.w	r2, r2, #4
 800db48:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800db4a:	699a      	ldr	r2, [r3, #24]
 800db4c:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800db4e:	619a      	str	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
 800db50:	2000      	movs	r0, #0
      break;
 800db52:	e7d6      	b.n	800db02 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800db54:	6828      	ldr	r0, [r5, #0]
 800db56:	f7ff ff8f 	bl	800da78 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800db5a:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800db5c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800db5e:	699a      	ldr	r2, [r3, #24]
 800db60:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800db64:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800db66:	699a      	ldr	r2, [r3, #24]
 800db68:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800db6c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800db6e:	699a      	ldr	r2, [r3, #24]
 800db70:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800db74:	e7eb      	b.n	800db4e <HAL_TIM_PWM_ConfigChannel+0x6a>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800db76:	6828      	ldr	r0, [r5, #0]
 800db78:	f7ff fd82 	bl	800d680 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800db7c:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800db7e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800db80:	69da      	ldr	r2, [r3, #28]
 800db82:	f042 0208 	orr.w	r2, r2, #8
 800db86:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800db88:	69da      	ldr	r2, [r3, #28]
 800db8a:	f022 0204 	bic.w	r2, r2, #4
 800db8e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800db90:	69da      	ldr	r2, [r3, #28]
 800db92:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800db94:	61da      	str	r2, [r3, #28]
 800db96:	e7db      	b.n	800db50 <HAL_TIM_PWM_ConfigChannel+0x6c>
  __HAL_LOCK(htim);
 800db98:	2002      	movs	r0, #2
 800db9a:	e7b5      	b.n	800db08 <HAL_TIM_PWM_ConfigChannel+0x24>

0800db9c <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800db9c:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800db9e:	f001 011f 	and.w	r1, r1, #31
{
 800dba2:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800dba4:	2401      	movs	r4, #1
 800dba6:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 800dba8:	ea23 0304 	bic.w	r3, r3, r4
 800dbac:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800dbae:	6a03      	ldr	r3, [r0, #32]
 800dbb0:	408a      	lsls	r2, r1
 800dbb2:	431a      	orrs	r2, r3
 800dbb4:	6202      	str	r2, [r0, #32]
}
 800dbb6:	bd10      	pop	{r4, pc}

0800dbb8 <HAL_TIM_OC_Start>:
{
 800dbb8:	b510      	push	{r4, lr}
 800dbba:	4604      	mov	r4, r0
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800dbbc:	b929      	cbnz	r1, 800dbca <HAL_TIM_OC_Start+0x12>
 800dbbe:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800dbc2:	2b01      	cmp	r3, #1
 800dbc4:	d018      	beq.n	800dbf8 <HAL_TIM_OC_Start+0x40>
    return HAL_ERROR;
 800dbc6:	2001      	movs	r0, #1
 800dbc8:	e02d      	b.n	800dc26 <HAL_TIM_OC_Start+0x6e>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800dbca:	2904      	cmp	r1, #4
 800dbcc:	d10d      	bne.n	800dbea <HAL_TIM_OC_Start+0x32>
 800dbce:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800dbd2:	3b01      	subs	r3, #1
 800dbd4:	bf18      	it	ne
 800dbd6:	2301      	movne	r3, #1
 800dbd8:	2b00      	cmp	r3, #0
 800dbda:	d1f4      	bne.n	800dbc6 <HAL_TIM_OC_Start+0xe>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800dbdc:	2904      	cmp	r1, #4
 800dbde:	f04f 0302 	mov.w	r3, #2
 800dbe2:	d121      	bne.n	800dc28 <HAL_TIM_OC_Start+0x70>
 800dbe4:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800dbe8:	e009      	b.n	800dbfe <HAL_TIM_OC_Start+0x46>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800dbea:	2908      	cmp	r1, #8
 800dbec:	bf0c      	ite	eq
 800dbee:	f890 3040 	ldrbeq.w	r3, [r0, #64]	; 0x40
 800dbf2:	f890 3041 	ldrbne.w	r3, [r0, #65]	; 0x41
 800dbf6:	e7ec      	b.n	800dbd2 <HAL_TIM_OC_Start+0x1a>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800dbf8:	2302      	movs	r3, #2
 800dbfa:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800dbfe:	6820      	ldr	r0, [r4, #0]
 800dc00:	2201      	movs	r2, #1
 800dc02:	f7ff ffcb 	bl	800db9c <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800dc06:	6823      	ldr	r3, [r4, #0]
 800dc08:	491c      	ldr	r1, [pc, #112]	; (800dc7c <HAL_TIM_OC_Start+0xc4>)
 800dc0a:	428b      	cmp	r3, r1
 800dc0c:	d013      	beq.n	800dc36 <HAL_TIM_OC_Start+0x7e>
 800dc0e:	4a1c      	ldr	r2, [pc, #112]	; (800dc80 <HAL_TIM_OC_Start+0xc8>)
 800dc10:	4293      	cmp	r3, r2
 800dc12:	d010      	beq.n	800dc36 <HAL_TIM_OC_Start+0x7e>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dc14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800dc18:	d114      	bne.n	800dc44 <HAL_TIM_OC_Start+0x8c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800dc1a:	689a      	ldr	r2, [r3, #8]
 800dc1c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800dc20:	2a06      	cmp	r2, #6
 800dc22:	d126      	bne.n	800dc72 <HAL_TIM_OC_Start+0xba>
  return HAL_OK;
 800dc24:	2000      	movs	r0, #0
}
 800dc26:	bd10      	pop	{r4, pc}
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800dc28:	2908      	cmp	r1, #8
 800dc2a:	bf0c      	ite	eq
 800dc2c:	f884 3040 	strbeq.w	r3, [r4, #64]	; 0x40
 800dc30:	f884 3041 	strbne.w	r3, [r4, #65]	; 0x41
 800dc34:	e7e3      	b.n	800dbfe <HAL_TIM_OC_Start+0x46>
    __HAL_TIM_MOE_ENABLE(htim);
 800dc36:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dc38:	428b      	cmp	r3, r1
    __HAL_TIM_MOE_ENABLE(htim);
 800dc3a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800dc3e:	645a      	str	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dc40:	d0eb      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc42:	e7e7      	b.n	800dc14 <HAL_TIM_OC_Start+0x5c>
 800dc44:	4a0f      	ldr	r2, [pc, #60]	; (800dc84 <HAL_TIM_OC_Start+0xcc>)
 800dc46:	4293      	cmp	r3, r2
 800dc48:	d0e7      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc4a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800dc4e:	4293      	cmp	r3, r2
 800dc50:	d0e3      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc52:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800dc56:	4293      	cmp	r3, r2
 800dc58:	d0df      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc5a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800dc5e:	4293      	cmp	r3, r2
 800dc60:	d0db      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc62:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800dc66:	4293      	cmp	r3, r2
 800dc68:	d0d7      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
 800dc6a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800dc6e:	4293      	cmp	r3, r2
 800dc70:	d0d3      	beq.n	800dc1a <HAL_TIM_OC_Start+0x62>
    __HAL_TIM_ENABLE(htim);
 800dc72:	681a      	ldr	r2, [r3, #0]
 800dc74:	f042 0201 	orr.w	r2, r2, #1
 800dc78:	601a      	str	r2, [r3, #0]
 800dc7a:	e7d3      	b.n	800dc24 <HAL_TIM_OC_Start+0x6c>
 800dc7c:	40010000 	.word	0x40010000
 800dc80:	40010400 	.word	0x40010400
 800dc84:	40000400 	.word	0x40000400

0800dc88 <HAL_TIM_PWM_Start>:
 800dc88:	f7ff bf96 	b.w	800dbb8 <HAL_TIM_OC_Start>

0800dc8c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 800dc8c:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800dc8e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800dc92:	2b01      	cmp	r3, #1
 800dc94:	f04f 0302 	mov.w	r3, #2
 800dc98:	d032      	beq.n	800dd00 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800dc9a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800dc9e:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800dca0:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800dca2:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800dca4:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800dca6:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800dcaa:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800dcac:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dcae:	4c15      	ldr	r4, [pc, #84]	; (800dd04 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 800dcb0:	42a3      	cmp	r3, r4
 800dcb2:	d01a      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcb4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800dcb8:	d017      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcba:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 800dcbe:	42a3      	cmp	r3, r4
 800dcc0:	d013      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcc2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800dcc6:	42a3      	cmp	r3, r4
 800dcc8:	d00f      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800dcce:	42a3      	cmp	r3, r4
 800dcd0:	d00b      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcd2:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800dcd6:	42a3      	cmp	r3, r4
 800dcd8:	d007      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dcda:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 800dcde:	42a3      	cmp	r3, r4
 800dce0:	d003      	beq.n	800dcea <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800dce2:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800dce6:	42a3      	cmp	r3, r4
 800dce8:	d104      	bne.n	800dcf4 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800dcea:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800dcec:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800dcf0:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800dcf2:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800dcf4:	2301      	movs	r3, #1
 800dcf6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800dcfa:	2300      	movs	r3, #0
 800dcfc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 800dd00:	4618      	mov	r0, r3

  return HAL_OK;
}
 800dd02:	bd30      	pop	{r4, r5, pc}
 800dd04:	40010000 	.word	0x40010000

0800dd08 <HAL_TIMEx_ConfigBreakDeadTime>:
  assert_param(IS_TIM_BREAK_STATE(sBreakDeadTimeConfig->BreakState));
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
 800dd08:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800dd0c:	2b01      	cmp	r3, #1
 800dd0e:	d01f      	beq.n	800dd50 <HAL_TIMEx_ConfigBreakDeadTime+0x48>
  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 800dd10:	68cb      	ldr	r3, [r1, #12]
 800dd12:	688a      	ldr	r2, [r1, #8]
 800dd14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800dd18:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 800dd1a:	684a      	ldr	r2, [r1, #4]
 800dd1c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800dd20:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 800dd22:	680a      	ldr	r2, [r1, #0]
 800dd24:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800dd28:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 800dd2a:	690a      	ldr	r2, [r1, #16]
 800dd2c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800dd30:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 800dd32:	694a      	ldr	r2, [r1, #20]
 800dd34:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800dd38:	4313      	orrs	r3, r2
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 800dd3a:	69ca      	ldr	r2, [r1, #28]
 800dd3c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800dd40:	4313      	orrs	r3, r2


  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 800dd42:	6802      	ldr	r2, [r0, #0]
 800dd44:	6453      	str	r3, [r2, #68]	; 0x44

  __HAL_UNLOCK(htim);
 800dd46:	2300      	movs	r3, #0
 800dd48:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
 800dd4c:	4618      	mov	r0, r3
 800dd4e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800dd50:	2002      	movs	r0, #2
}
 800dd52:	4770      	bx	lr

0800dd54 <HAL_TIMEx_CommutCallback>:
 800dd54:	4770      	bx	lr

0800dd56 <HAL_TIMEx_BreakCallback>:
 800dd56:	4770      	bx	lr

0800dd58 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800dd58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800dd5c:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800dd60:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800dd62:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800dd66:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800dd6a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800dd6e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800dd72:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800dd74:	b9a2      	cbnz	r2, 800dda0 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800dd76:	ea43 0209 	orr.w	r2, r3, r9
 800dd7a:	432a      	orrs	r2, r5
 800dd7c:	ea42 0308 	orr.w	r3, r2, r8
 800dd80:	6801      	ldr	r1, [r0, #0]
 800dd82:	ea43 030e 	orr.w	r3, r3, lr
 800dd86:	ea43 030c 	orr.w	r3, r3, ip
 800dd8a:	433b      	orrs	r3, r7
 800dd8c:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800dd90:	4333      	orrs	r3, r6
 800dd92:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800dd96:	430b      	orrs	r3, r1
 800dd98:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800dd9a:	2000      	movs	r0, #0
 800dd9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800dda0:	6802      	ldr	r2, [r0, #0]
 800dda2:	ea43 0309 	orr.w	r3, r3, r9
 800dda6:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800ddaa:	4313      	orrs	r3, r2
 800ddac:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ddae:	ea45 0308 	orr.w	r3, r5, r8
 800ddb2:	6842      	ldr	r2, [r0, #4]
 800ddb4:	ea43 030e 	orr.w	r3, r3, lr
 800ddb8:	ea43 030c 	orr.w	r3, r3, ip
 800ddbc:	433b      	orrs	r3, r7
 800ddbe:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800ddc2:	4333      	orrs	r3, r6
 800ddc4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800ddc8:	4313      	orrs	r3, r2
 800ddca:	6043      	str	r3, [r0, #4]
 800ddcc:	e7e5      	b.n	800dd9a <FMC_SDRAM_Init+0x42>

0800ddce <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ddce:	68cb      	ldr	r3, [r1, #12]
 800ddd0:	f103 3cff 	add.w	ip, r3, #4294967295
 800ddd4:	694b      	ldr	r3, [r1, #20]
{
 800ddd6:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ddd8:	680f      	ldr	r7, [r1, #0]
 800ddda:	684c      	ldr	r4, [r1, #4]
 800dddc:	688e      	ldr	r6, [r1, #8]
 800ddde:	690d      	ldr	r5, [r1, #16]
 800dde0:	6989      	ldr	r1, [r1, #24]
 800dde2:	3b01      	subs	r3, #1
 800dde4:	051b      	lsls	r3, r3, #20
 800dde6:	3c01      	subs	r4, #1
 800dde8:	3e01      	subs	r6, #1
 800ddea:	3d01      	subs	r5, #1
 800ddec:	3901      	subs	r1, #1
 800ddee:	3f01      	subs	r7, #1
 800ddf0:	0124      	lsls	r4, r4, #4
 800ddf2:	0236      	lsls	r6, r6, #8
 800ddf4:	042d      	lsls	r5, r5, #16
 800ddf6:	0609      	lsls	r1, r1, #24
 800ddf8:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800ddfc:	b95a      	cbnz	r2, 800de16 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ddfe:	433b      	orrs	r3, r7
 800de00:	4323      	orrs	r3, r4
 800de02:	6882      	ldr	r2, [r0, #8]
 800de04:	4333      	orrs	r3, r6
 800de06:	432b      	orrs	r3, r5
 800de08:	430b      	orrs	r3, r1
 800de0a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800de0e:	4313      	orrs	r3, r2
 800de10:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800de12:	2000      	movs	r0, #0
 800de14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800de16:	6882      	ldr	r2, [r0, #8]
 800de18:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800de1c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800de20:	431a      	orrs	r2, r3
 800de22:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800de24:	ea44 0306 	orr.w	r3, r4, r6
 800de28:	68c2      	ldr	r2, [r0, #12]
 800de2a:	433b      	orrs	r3, r7
 800de2c:	432b      	orrs	r3, r5
 800de2e:	430b      	orrs	r3, r1
 800de30:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800de34:	4313      	orrs	r3, r2
 800de36:	60c3      	str	r3, [r0, #12]
 800de38:	e7eb      	b.n	800de12 <FMC_SDRAM_Timing_Init+0x44>

0800de3a <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800de3a:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800de3e:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800de42:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800de46:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800de4a:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800de4c:	2300      	movs	r3, #0
 800de4e:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800de50:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800de52:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800de54:	4618      	mov	r0, r3
 800de56:	4770      	bx	lr

0800de58 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800de58:	b570      	push	{r4, r5, r6, lr}
 800de5a:	4604      	mov	r4, r0
 800de5c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800de5e:	6902      	ldr	r2, [r0, #16]
 800de60:	e9d1 3000 	ldrd	r3, r0, [r1]
 800de64:	4303      	orrs	r3, r0
 800de66:	68c8      	ldr	r0, [r1, #12]
 800de68:	0d92      	lsrs	r2, r2, #22
 800de6a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800de6e:	0592      	lsls	r2, r2, #22
 800de70:	4313      	orrs	r3, r2
 800de72:	688a      	ldr	r2, [r1, #8]
 800de74:	3a01      	subs	r2, #1
 800de76:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800de7a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800de7c:	f7fc fbb0 	bl	800a5e0 <HAL_GetTick>
 800de80:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800de82:	69a3      	ldr	r3, [r4, #24]
 800de84:	f013 0320 	ands.w	r3, r3, #32
 800de88:	d101      	bne.n	800de8e <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800de8a:	4618      	mov	r0, r3
 800de8c:	e003      	b.n	800de96 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800de8e:	1c6b      	adds	r3, r5, #1
 800de90:	d0f7      	beq.n	800de82 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800de92:	b90d      	cbnz	r5, 800de98 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800de94:	2003      	movs	r0, #3
}
 800de96:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800de98:	f7fc fba2 	bl	800a5e0 <HAL_GetTick>
 800de9c:	1b80      	subs	r0, r0, r6
 800de9e:	42a8      	cmp	r0, r5
 800dea0:	d9ef      	bls.n	800de82 <FMC_SDRAM_SendCommand+0x2a>
 800dea2:	e7f7      	b.n	800de94 <FMC_SDRAM_SendCommand+0x3c>

0800dea4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800dea4:	6943      	ldr	r3, [r0, #20]
 800dea6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800deaa:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800deae:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800deb2:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800deb4:	2000      	movs	r0, #0
 800deb6:	4770      	bx	lr

0800deb8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800deb8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800deba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800debe:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800dec0:	f001 fe40 	bl	800fb44 <xTaskGetSchedulerState>
 800dec4:	2801      	cmp	r0, #1
 800dec6:	d003      	beq.n	800ded0 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800dec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800decc:	f000 bbe2 	b.w	800e694 <xPortSysTickHandler>
}
 800ded0:	bd08      	pop	{r3, pc}
	...

0800ded4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ded4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ded8:	b92b      	cbnz	r3, 800dee6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800deda:	4b06      	ldr	r3, [pc, #24]	; (800def4 <osKernelInitialize+0x20>)
 800dedc:	6818      	ldr	r0, [r3, #0]
 800dede:	b928      	cbnz	r0, 800deec <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800dee0:	2201      	movs	r2, #1
 800dee2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800dee4:	4770      	bx	lr
    stat = osErrorISR;
 800dee6:	f06f 0005 	mvn.w	r0, #5
 800deea:	4770      	bx	lr
    } else {
      stat = osError;
 800deec:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800def0:	4770      	bx	lr
 800def2:	bf00      	nop
 800def4:	20005174 	.word	0x20005174

0800def8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800def8:	b510      	push	{r4, lr}
 800defa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800defe:	b95c      	cbnz	r4, 800df18 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800df00:	4b08      	ldr	r3, [pc, #32]	; (800df24 <osKernelStart+0x2c>)
 800df02:	681a      	ldr	r2, [r3, #0]
 800df04:	2a01      	cmp	r2, #1
 800df06:	d10a      	bne.n	800df1e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800df08:	4a07      	ldr	r2, [pc, #28]	; (800df28 <osKernelStart+0x30>)
 800df0a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800df0c:	2202      	movs	r2, #2
 800df0e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800df10:	f001 fcbc 	bl	800f88c <vTaskStartScheduler>
      stat = osOK;
 800df14:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800df16:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800df18:	f06f 0005 	mvn.w	r0, #5
 800df1c:	e7fb      	b.n	800df16 <osKernelStart+0x1e>
      stat = osError;
 800df1e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800df22:	e7f8      	b.n	800df16 <osKernelStart+0x1e>
 800df24:	20005174 	.word	0x20005174
 800df28:	e000ed00 	.word	0xe000ed00

0800df2c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800df2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df2e:	b087      	sub	sp, #28
 800df30:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800df32:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800df34:	460b      	mov	r3, r1
  hTask = NULL;
 800df36:	9205      	str	r2, [sp, #20]
 800df38:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800df3c:	b9d2      	cbnz	r2, 800df74 <osThreadNew+0x48>
 800df3e:	b1c8      	cbz	r0, 800df74 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800df40:	2c00      	cmp	r4, #0
 800df42:	d02f      	beq.n	800dfa4 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800df44:	69a5      	ldr	r5, [r4, #24]
 800df46:	2d00      	cmp	r5, #0
 800df48:	bf08      	it	eq
 800df4a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800df4c:	1e69      	subs	r1, r5, #1
 800df4e:	2937      	cmp	r1, #55	; 0x37
 800df50:	46ac      	mov	ip, r5
 800df52:	d82b      	bhi.n	800dfac <osThreadNew+0x80>
 800df54:	6861      	ldr	r1, [r4, #4]
 800df56:	07c9      	lsls	r1, r1, #31
 800df58:	d428      	bmi.n	800dfac <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800df5a:	6966      	ldr	r6, [r4, #20]
 800df5c:	b16e      	cbz	r6, 800df7a <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800df5e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800df60:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800df64:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800df66:	b157      	cbz	r7, 800df7e <osThreadNew+0x52>
 800df68:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800df6c:	d902      	bls.n	800df74 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800df6e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800df70:	b104      	cbz	r4, 800df74 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800df72:	b9ee      	cbnz	r6, 800dfb0 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800df74:	9805      	ldr	r0, [sp, #20]
}
 800df76:	b007      	add	sp, #28
 800df78:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800df7a:	2280      	movs	r2, #128	; 0x80
 800df7c:	e7f0      	b.n	800df60 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800df7e:	f1be 0f00 	cmp.w	lr, #0
 800df82:	d1f7      	bne.n	800df74 <osThreadNew+0x48>
      if (mem == 0) {
 800df84:	6924      	ldr	r4, [r4, #16]
 800df86:	2c00      	cmp	r4, #0
 800df88:	d1f4      	bne.n	800df74 <osThreadNew+0x48>
 800df8a:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800df8c:	a905      	add	r1, sp, #20
 800df8e:	e9cd c100 	strd	ip, r1, [sp]
 800df92:	b292      	uxth	r2, r2
 800df94:	4621      	mov	r1, r4
 800df96:	f001 faf4 	bl	800f582 <xTaskCreate>
 800df9a:	2801      	cmp	r0, #1
            hTask = NULL;
 800df9c:	bf1c      	itt	ne
 800df9e:	2300      	movne	r3, #0
 800dfa0:	9305      	strne	r3, [sp, #20]
 800dfa2:	e7e7      	b.n	800df74 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800dfa4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800dfa8:	2280      	movs	r2, #128	; 0x80
 800dfaa:	e7ef      	b.n	800df8c <osThreadNew+0x60>
        return (NULL);
 800dfac:	4610      	mov	r0, r2
 800dfae:	e7e2      	b.n	800df76 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800dfb0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800dfb4:	9500      	str	r5, [sp, #0]
 800dfb6:	f001 faac 	bl	800f512 <xTaskCreateStatic>
 800dfba:	9005      	str	r0, [sp, #20]
 800dfbc:	e7da      	b.n	800df74 <osThreadNew+0x48>

0800dfbe <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800dfbe:	b510      	push	{r4, lr}
 800dfc0:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dfc4:	b924      	cbnz	r4, 800dfd0 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800dfc6:	b110      	cbz	r0, 800dfce <osDelay+0x10>
      vTaskDelay(ticks);
 800dfc8:	f001 fc20 	bl	800f80c <vTaskDelay>
    stat = osOK;
 800dfcc:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800dfce:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800dfd0:	f06f 0005 	mvn.w	r0, #5
 800dfd4:	e7fb      	b.n	800dfce <osDelay+0x10>

0800dfd6 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800dfd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dfd8:	4604      	mov	r4, r0
 800dfda:	460e      	mov	r6, r1
 800dfdc:	4615      	mov	r5, r2
 800dfde:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800dfe2:	b11a      	cbz	r2, 800dfec <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800dfe4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800dfe6:	4620      	mov	r0, r4
 800dfe8:	b003      	add	sp, #12
 800dfea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800dfec:	2800      	cmp	r0, #0
 800dfee:	d0f9      	beq.n	800dfe4 <osSemaphoreNew+0xe>
 800dff0:	4288      	cmp	r0, r1
 800dff2:	d3f7      	bcc.n	800dfe4 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800dff4:	b1e5      	cbz	r5, 800e030 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800dff6:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800dffa:	b1bb      	cbz	r3, 800e02c <osSemaphoreNew+0x56>
 800dffc:	2f4f      	cmp	r7, #79	; 0x4f
 800dffe:	d9f1      	bls.n	800dfe4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800e000:	2801      	cmp	r0, #1
 800e002:	d12a      	bne.n	800e05a <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800e004:	2103      	movs	r1, #3
 800e006:	9100      	str	r1, [sp, #0]
 800e008:	4611      	mov	r1, r2
 800e00a:	f000 fcec 	bl	800e9e6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800e00e:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800e010:	2800      	cmp	r0, #0
 800e012:	d0e7      	beq.n	800dfe4 <osSemaphoreNew+0xe>
 800e014:	b1de      	cbz	r6, 800e04e <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e016:	2300      	movs	r3, #0
 800e018:	461a      	mov	r2, r3
 800e01a:	4619      	mov	r1, r3
 800e01c:	f000 fd98 	bl	800eb50 <xQueueGenericSend>
 800e020:	2801      	cmp	r0, #1
 800e022:	d014      	beq.n	800e04e <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800e024:	4620      	mov	r0, r4
 800e026:	f001 f8d3 	bl	800f1d0 <vQueueDelete>
 800e02a:	e7db      	b.n	800dfe4 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800e02c:	2f00      	cmp	r7, #0
 800e02e:	d1d9      	bne.n	800dfe4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800e030:	2c01      	cmp	r4, #1
 800e032:	d105      	bne.n	800e040 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800e034:	2203      	movs	r2, #3
 800e036:	2100      	movs	r1, #0
 800e038:	4620      	mov	r0, r4
 800e03a:	f000 fd22 	bl	800ea82 <xQueueGenericCreate>
 800e03e:	e7e6      	b.n	800e00e <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800e040:	4620      	mov	r0, r4
 800e042:	4631      	mov	r1, r6
 800e044:	f000 fd66 	bl	800eb14 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800e048:	4604      	mov	r4, r0
 800e04a:	2800      	cmp	r0, #0
 800e04c:	d0ca      	beq.n	800dfe4 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800e04e:	b955      	cbnz	r5, 800e066 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800e050:	4629      	mov	r1, r5
 800e052:	4620      	mov	r0, r4
 800e054:	f001 f896 	bl	800f184 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800e058:	e7c5      	b.n	800dfe6 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800e05a:	461a      	mov	r2, r3
 800e05c:	f000 fd38 	bl	800ead0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800e060:	4604      	mov	r4, r0
 800e062:	2800      	cmp	r0, #0
 800e064:	d0be      	beq.n	800dfe4 <osSemaphoreNew+0xe>
          name = attr->name;
 800e066:	682d      	ldr	r5, [r5, #0]
 800e068:	e7f2      	b.n	800e050 <osSemaphoreNew+0x7a>

0800e06a <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800e06a:	b513      	push	{r0, r1, r4, lr}
 800e06c:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e06e:	b308      	cbz	r0, 800e0b4 <osSemaphoreAcquire+0x4a>
 800e070:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e074:	b1b3      	cbz	r3, 800e0a4 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800e076:	b9e9      	cbnz	r1, 800e0b4 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e078:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e07a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e07c:	f001 f833 	bl	800f0e6 <xQueueReceiveFromISR>
 800e080:	2801      	cmp	r0, #1
 800e082:	d114      	bne.n	800e0ae <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e084:	9b01      	ldr	r3, [sp, #4]
 800e086:	b913      	cbnz	r3, 800e08e <osSemaphoreAcquire+0x24>
  stat = osOK;
 800e088:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e08a:	b002      	add	sp, #8
 800e08c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800e08e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e092:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e096:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e09a:	f3bf 8f4f 	dsb	sy
 800e09e:	f3bf 8f6f 	isb	sy
 800e0a2:	e7f1      	b.n	800e088 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800e0a4:	f000 ff5c 	bl	800ef60 <xQueueSemaphoreTake>
 800e0a8:	2801      	cmp	r0, #1
 800e0aa:	d0ed      	beq.n	800e088 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800e0ac:	b92c      	cbnz	r4, 800e0ba <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800e0ae:	f06f 0002 	mvn.w	r0, #2
 800e0b2:	e7ea      	b.n	800e08a <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800e0b4:	f06f 0003 	mvn.w	r0, #3
 800e0b8:	e7e7      	b.n	800e08a <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800e0ba:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e0be:	e7e4      	b.n	800e08a <osSemaphoreAcquire+0x20>

0800e0c0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800e0c0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e0c2:	b310      	cbz	r0, 800e10a <osSemaphoreRelease+0x4a>
 800e0c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e0c8:	b1b3      	cbz	r3, 800e0f8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800e0ca:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e0cc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800e0ce:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e0d0:	f000 fe53 	bl	800ed7a <xQueueGiveFromISR>
 800e0d4:	2801      	cmp	r0, #1
 800e0d6:	d115      	bne.n	800e104 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800e0d8:	9b01      	ldr	r3, [sp, #4]
 800e0da:	b913      	cbnz	r3, 800e0e2 <osSemaphoreRelease+0x22>
  stat = osOK;
 800e0dc:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800e0de:	b002      	add	sp, #8
 800e0e0:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800e0e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0ee:	f3bf 8f4f 	dsb	sy
 800e0f2:	f3bf 8f6f 	isb	sy
 800e0f6:	e7f1      	b.n	800e0dc <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e0f8:	461a      	mov	r2, r3
 800e0fa:	4619      	mov	r1, r3
 800e0fc:	f000 fd28 	bl	800eb50 <xQueueGenericSend>
 800e100:	2801      	cmp	r0, #1
 800e102:	d0eb      	beq.n	800e0dc <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800e104:	f06f 0002 	mvn.w	r0, #2
 800e108:	e7e9      	b.n	800e0de <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800e10a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e10e:	e7e6      	b.n	800e0de <osSemaphoreRelease+0x1e>

0800e110 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800e110:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e112:	4605      	mov	r5, r0
 800e114:	460e      	mov	r6, r1
 800e116:	4614      	mov	r4, r2
 800e118:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e11c:	b11f      	cbz	r7, 800e126 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800e11e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800e120:	4628      	mov	r0, r5
 800e122:	b003      	add	sp, #12
 800e124:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e126:	2800      	cmp	r0, #0
 800e128:	d0f9      	beq.n	800e11e <osMessageQueueNew+0xe>
 800e12a:	2900      	cmp	r1, #0
 800e12c:	d0f7      	beq.n	800e11e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800e12e:	b1da      	cbz	r2, 800e168 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e130:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800e134:	b183      	cbz	r3, 800e158 <osMessageQueueNew+0x48>
 800e136:	2a4f      	cmp	r2, #79	; 0x4f
 800e138:	d9f1      	bls.n	800e11e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e13a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e13c:	2a00      	cmp	r2, #0
 800e13e:	d0ee      	beq.n	800e11e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e140:	6966      	ldr	r6, [r4, #20]
 800e142:	434d      	muls	r5, r1
 800e144:	42ae      	cmp	r6, r5
 800e146:	d3ea      	bcc.n	800e11e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800e148:	9700      	str	r7, [sp, #0]
 800e14a:	f000 fc4c 	bl	800e9e6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800e14e:	4605      	mov	r5, r0
 800e150:	2800      	cmp	r0, #0
 800e152:	d0e4      	beq.n	800e11e <osMessageQueueNew+0xe>
        name = attr->name;
 800e154:	6824      	ldr	r4, [r4, #0]
 800e156:	e011      	b.n	800e17c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800e158:	2a00      	cmp	r2, #0
 800e15a:	d1e0      	bne.n	800e11e <osMessageQueueNew+0xe>
 800e15c:	6923      	ldr	r3, [r4, #16]
 800e15e:	2b00      	cmp	r3, #0
 800e160:	d1dd      	bne.n	800e11e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800e162:	6963      	ldr	r3, [r4, #20]
 800e164:	2b00      	cmp	r3, #0
 800e166:	d1da      	bne.n	800e11e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800e168:	4628      	mov	r0, r5
 800e16a:	2200      	movs	r2, #0
 800e16c:	4631      	mov	r1, r6
 800e16e:	f000 fc88 	bl	800ea82 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800e172:	4605      	mov	r5, r0
 800e174:	2800      	cmp	r0, #0
 800e176:	d0d2      	beq.n	800e11e <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800e178:	2c00      	cmp	r4, #0
 800e17a:	d1eb      	bne.n	800e154 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800e17c:	4621      	mov	r1, r4
 800e17e:	4628      	mov	r0, r5
 800e180:	f001 f800 	bl	800f184 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800e184:	e7cc      	b.n	800e120 <osMessageQueueNew+0x10>

0800e186 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800e186:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e188:	461c      	mov	r4, r3
 800e18a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e18e:	b1c6      	cbz	r6, 800e1c2 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e190:	b318      	cbz	r0, 800e1da <osMessageQueuePut+0x54>
 800e192:	b311      	cbz	r1, 800e1da <osMessageQueuePut+0x54>
 800e194:	bb0b      	cbnz	r3, 800e1da <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e196:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e198:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e19a:	f000 fd8c 	bl	800ecb6 <xQueueGenericSendFromISR>
 800e19e:	2801      	cmp	r0, #1
 800e1a0:	d118      	bne.n	800e1d4 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e1a2:	9b01      	ldr	r3, [sp, #4]
 800e1a4:	b913      	cbnz	r3, 800e1ac <osMessageQueuePut+0x26>
  stat = osOK;
 800e1a6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e1a8:	b002      	add	sp, #8
 800e1aa:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800e1ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e1b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1b8:	f3bf 8f4f 	dsb	sy
 800e1bc:	f3bf 8f6f 	isb	sy
 800e1c0:	e7f1      	b.n	800e1a6 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e1c2:	b150      	cbz	r0, 800e1da <osMessageQueuePut+0x54>
 800e1c4:	b149      	cbz	r1, 800e1da <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e1c6:	4633      	mov	r3, r6
 800e1c8:	4622      	mov	r2, r4
 800e1ca:	f000 fcc1 	bl	800eb50 <xQueueGenericSend>
 800e1ce:	2801      	cmp	r0, #1
 800e1d0:	d0e9      	beq.n	800e1a6 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800e1d2:	b92c      	cbnz	r4, 800e1e0 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800e1d4:	f06f 0002 	mvn.w	r0, #2
 800e1d8:	e7e6      	b.n	800e1a8 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800e1da:	f06f 0003 	mvn.w	r0, #3
 800e1de:	e7e3      	b.n	800e1a8 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800e1e0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e1e4:	e7e0      	b.n	800e1a8 <osMessageQueuePut+0x22>

0800e1e6 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800e1e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e1e8:	461c      	mov	r4, r3
 800e1ea:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e1ee:	b1c3      	cbz	r3, 800e222 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e1f0:	b310      	cbz	r0, 800e238 <osMessageQueueGet+0x52>
 800e1f2:	b309      	cbz	r1, 800e238 <osMessageQueueGet+0x52>
 800e1f4:	bb04      	cbnz	r4, 800e238 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e1f6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e1f8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e1fa:	f000 ff74 	bl	800f0e6 <xQueueReceiveFromISR>
 800e1fe:	2801      	cmp	r0, #1
 800e200:	d117      	bne.n	800e232 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e202:	9b01      	ldr	r3, [sp, #4]
 800e204:	b913      	cbnz	r3, 800e20c <osMessageQueueGet+0x26>
  stat = osOK;
 800e206:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800e208:	b003      	add	sp, #12
 800e20a:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800e20c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e210:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e214:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e218:	f3bf 8f4f 	dsb	sy
 800e21c:	f3bf 8f6f 	isb	sy
 800e220:	e7f1      	b.n	800e206 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e222:	b148      	cbz	r0, 800e238 <osMessageQueueGet+0x52>
 800e224:	b141      	cbz	r1, 800e238 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e226:	4622      	mov	r2, r4
 800e228:	f000 fdfb 	bl	800ee22 <xQueueReceive>
 800e22c:	2801      	cmp	r0, #1
 800e22e:	d0ea      	beq.n	800e206 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800e230:	b92c      	cbnz	r4, 800e23e <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800e232:	f06f 0002 	mvn.w	r0, #2
 800e236:	e7e7      	b.n	800e208 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800e238:	f06f 0003 	mvn.w	r0, #3
 800e23c:	e7e4      	b.n	800e208 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800e23e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800e242:	e7e1      	b.n	800e208 <osMessageQueueGet+0x22>

0800e244 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800e244:	4b03      	ldr	r3, [pc, #12]	; (800e254 <vApplicationGetIdleTaskMemory+0x10>)
 800e246:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800e248:	4b03      	ldr	r3, [pc, #12]	; (800e258 <vApplicationGetIdleTaskMemory+0x14>)
 800e24a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e24c:	2380      	movs	r3, #128	; 0x80
 800e24e:	6013      	str	r3, [r2, #0]
}
 800e250:	4770      	bx	lr
 800e252:	bf00      	nop
 800e254:	20005114 	.word	0x20005114
 800e258:	20004f14 	.word	0x20004f14

0800e25c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800e25c:	4b03      	ldr	r3, [pc, #12]	; (800e26c <vApplicationGetTimerTaskMemory+0x10>)
 800e25e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800e260:	4b03      	ldr	r3, [pc, #12]	; (800e270 <vApplicationGetTimerTaskMemory+0x14>)
 800e262:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e264:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e268:	6013      	str	r3, [r2, #0]
}
 800e26a:	4770      	bx	lr
 800e26c:	20005578 	.word	0x20005578
 800e270:	20005178 	.word	0x20005178

0800e274 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800e274:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e276:	4b0f      	ldr	r3, [pc, #60]	; (800e2b4 <prvInsertBlockIntoFreeList+0x40>)
 800e278:	461a      	mov	r2, r3
 800e27a:	681b      	ldr	r3, [r3, #0]
 800e27c:	4283      	cmp	r3, r0
 800e27e:	d3fb      	bcc.n	800e278 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e280:	6854      	ldr	r4, [r2, #4]
 800e282:	1911      	adds	r1, r2, r4
 800e284:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e286:	bf01      	itttt	eq
 800e288:	6841      	ldreq	r1, [r0, #4]
 800e28a:	4610      	moveq	r0, r2
 800e28c:	1909      	addeq	r1, r1, r4
 800e28e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e290:	6844      	ldr	r4, [r0, #4]
 800e292:	1901      	adds	r1, r0, r4
 800e294:	428b      	cmp	r3, r1
 800e296:	d107      	bne.n	800e2a8 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e298:	4907      	ldr	r1, [pc, #28]	; (800e2b8 <prvInsertBlockIntoFreeList+0x44>)
 800e29a:	6809      	ldr	r1, [r1, #0]
 800e29c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e29e:	bf1f      	itttt	ne
 800e2a0:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e2a2:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e2a4:	1909      	addne	r1, r1, r4
 800e2a6:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e2a8:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800e2aa:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e2ac:	bf18      	it	ne
 800e2ae:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e2b0:	bd10      	pop	{r4, pc}
 800e2b2:	bf00      	nop
 800e2b4:	2000d5f0 	.word	0x2000d5f0
 800e2b8:	200055d8 	.word	0x200055d8

0800e2bc <pvPortMalloc>:
{
 800e2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2c0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800e2c2:	f001 f98b 	bl	800f5dc <vTaskSuspendAll>
		if( pxEnd == NULL )
 800e2c6:	4842      	ldr	r0, [pc, #264]	; (800e3d0 <pvPortMalloc+0x114>)
 800e2c8:	4d42      	ldr	r5, [pc, #264]	; (800e3d4 <pvPortMalloc+0x118>)
 800e2ca:	6803      	ldr	r3, [r0, #0]
 800e2cc:	bb0b      	cbnz	r3, 800e312 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800e2ce:	4942      	ldr	r1, [pc, #264]	; (800e3d8 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e2d0:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e2d2:	bf1f      	itttt	ne
 800e2d4:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e2d6:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800e2da:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800e2de:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e2e0:	bf14      	ite	ne
 800e2e2:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800e2e4:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800e2e8:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e2ea:	4e3c      	ldr	r6, [pc, #240]	; (800e3dc <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800e2ec:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e2ee:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800e2f2:	2300      	movs	r3, #0
 800e2f4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e2f6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e2f8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e2fc:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e2fe:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800e302:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e304:	4a36      	ldr	r2, [pc, #216]	; (800e3e0 <pvPortMalloc+0x124>)
 800e306:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e308:	4a36      	ldr	r2, [pc, #216]	; (800e3e4 <pvPortMalloc+0x128>)
 800e30a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e30c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800e310:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800e312:	682f      	ldr	r7, [r5, #0]
 800e314:	4227      	tst	r7, r4
 800e316:	d155      	bne.n	800e3c4 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800e318:	2c00      	cmp	r4, #0
 800e31a:	d046      	beq.n	800e3aa <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800e31c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800e320:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800e322:	bf1c      	itt	ne
 800e324:	f023 0307 	bicne.w	r3, r3, #7
 800e328:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	d04a      	beq.n	800e3c4 <pvPortMalloc+0x108>
 800e32e:	4c2d      	ldr	r4, [pc, #180]	; (800e3e4 <pvPortMalloc+0x128>)
 800e330:	6826      	ldr	r6, [r4, #0]
 800e332:	429e      	cmp	r6, r3
 800e334:	d346      	bcc.n	800e3c4 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800e336:	4a29      	ldr	r2, [pc, #164]	; (800e3dc <pvPortMalloc+0x120>)
 800e338:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800e33a:	6869      	ldr	r1, [r5, #4]
 800e33c:	4299      	cmp	r1, r3
 800e33e:	d204      	bcs.n	800e34a <pvPortMalloc+0x8e>
 800e340:	f8d5 c000 	ldr.w	ip, [r5]
 800e344:	f1bc 0f00 	cmp.w	ip, #0
 800e348:	d115      	bne.n	800e376 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800e34a:	6800      	ldr	r0, [r0, #0]
 800e34c:	42a8      	cmp	r0, r5
 800e34e:	d039      	beq.n	800e3c4 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e350:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e352:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e354:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e358:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e35a:	2910      	cmp	r1, #16
 800e35c:	d912      	bls.n	800e384 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800e35e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800e360:	0742      	lsls	r2, r0, #29
 800e362:	d00b      	beq.n	800e37c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800e364:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e368:	f383 8811 	msr	BASEPRI, r3
 800e36c:	f3bf 8f6f 	isb	sy
 800e370:	f3bf 8f4f 	dsb	sy
 800e374:	e7fe      	b.n	800e374 <pvPortMalloc+0xb8>
 800e376:	462a      	mov	r2, r5
 800e378:	4665      	mov	r5, ip
 800e37a:	e7de      	b.n	800e33a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800e37c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800e37e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800e380:	f7ff ff78 	bl	800e274 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e384:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e386:	4916      	ldr	r1, [pc, #88]	; (800e3e0 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800e388:	4a17      	ldr	r2, [pc, #92]	; (800e3e8 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e38a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e38c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e38e:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800e390:	2300      	movs	r3, #0
 800e392:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800e394:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e396:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e398:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800e39a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e39e:	bf38      	it	cc
 800e3a0:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e3a2:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e3a6:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800e3a8:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e3aa:	f001 f9bb 	bl	800f724 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e3ae:	0763      	lsls	r3, r4, #29
 800e3b0:	d00a      	beq.n	800e3c8 <pvPortMalloc+0x10c>
 800e3b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b6:	f383 8811 	msr	BASEPRI, r3
 800e3ba:	f3bf 8f6f 	isb	sy
 800e3be:	f3bf 8f4f 	dsb	sy
 800e3c2:	e7fe      	b.n	800e3c2 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800e3c4:	2400      	movs	r4, #0
 800e3c6:	e7f0      	b.n	800e3aa <pvPortMalloc+0xee>
}
 800e3c8:	4620      	mov	r0, r4
 800e3ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e3ce:	bf00      	nop
 800e3d0:	200055d8 	.word	0x200055d8
 800e3d4:	2000d5dc 	.word	0x2000d5dc
 800e3d8:	200055dc 	.word	0x200055dc
 800e3dc:	2000d5f0 	.word	0x2000d5f0
 800e3e0:	2000d5e4 	.word	0x2000d5e4
 800e3e4:	2000d5e0 	.word	0x2000d5e0
 800e3e8:	2000d5e8 	.word	0x2000d5e8

0800e3ec <vPortFree>:
{
 800e3ec:	b510      	push	{r4, lr}
	if( pv != NULL )
 800e3ee:	4604      	mov	r4, r0
 800e3f0:	b390      	cbz	r0, 800e458 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e3f2:	4a1a      	ldr	r2, [pc, #104]	; (800e45c <vPortFree+0x70>)
 800e3f4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e3f8:	6812      	ldr	r2, [r2, #0]
 800e3fa:	4213      	tst	r3, r2
 800e3fc:	d108      	bne.n	800e410 <vPortFree+0x24>
 800e3fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e402:	f383 8811 	msr	BASEPRI, r3
 800e406:	f3bf 8f6f 	isb	sy
 800e40a:	f3bf 8f4f 	dsb	sy
 800e40e:	e7fe      	b.n	800e40e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e410:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e414:	b141      	cbz	r1, 800e428 <vPortFree+0x3c>
 800e416:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e41a:	f383 8811 	msr	BASEPRI, r3
 800e41e:	f3bf 8f6f 	isb	sy
 800e422:	f3bf 8f4f 	dsb	sy
 800e426:	e7fe      	b.n	800e426 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e428:	ea23 0302 	bic.w	r3, r3, r2
 800e42c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800e430:	f001 f8d4 	bl	800f5dc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e434:	4a0a      	ldr	r2, [pc, #40]	; (800e460 <vPortFree+0x74>)
 800e436:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e43a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800e43c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e440:	440b      	add	r3, r1
 800e442:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800e444:	f7ff ff16 	bl	800e274 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800e448:	4a06      	ldr	r2, [pc, #24]	; (800e464 <vPortFree+0x78>)
 800e44a:	6813      	ldr	r3, [r2, #0]
}
 800e44c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800e450:	3301      	adds	r3, #1
 800e452:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800e454:	f001 b966 	b.w	800f724 <xTaskResumeAll>
}
 800e458:	bd10      	pop	{r4, pc}
 800e45a:	bf00      	nop
 800e45c:	2000d5dc 	.word	0x2000d5dc
 800e460:	2000d5e0 	.word	0x2000d5e0
 800e464:	2000d5ec 	.word	0x2000d5ec

0800e468 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e468:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e46c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e470:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e474:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e476:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e478:	2300      	movs	r3, #0
 800e47a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e47c:	4770      	bx	lr

0800e47e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e47e:	2300      	movs	r3, #0
 800e480:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e482:	4770      	bx	lr

0800e484 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e484:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800e486:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e488:	689a      	ldr	r2, [r3, #8]
 800e48a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e48c:	689a      	ldr	r2, [r3, #8]
 800e48e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e490:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e492:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800e494:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e496:	3301      	adds	r3, #1
 800e498:	6003      	str	r3, [r0, #0]
}
 800e49a:	4770      	bx	lr

0800e49c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e49c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e49e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e4a0:	1c63      	adds	r3, r4, #1
 800e4a2:	d10a      	bne.n	800e4ba <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800e4a4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800e4a6:	685a      	ldr	r2, [r3, #4]
 800e4a8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e4aa:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e4ac:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e4ae:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e4b0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800e4b2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e4b4:	3301      	adds	r3, #1
 800e4b6:	6003      	str	r3, [r0, #0]
}
 800e4b8:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e4ba:	f100 0208 	add.w	r2, r0, #8
 800e4be:	4613      	mov	r3, r2
 800e4c0:	6852      	ldr	r2, [r2, #4]
 800e4c2:	6815      	ldr	r5, [r2, #0]
 800e4c4:	42a5      	cmp	r5, r4
 800e4c6:	d9fa      	bls.n	800e4be <vListInsert+0x22>
 800e4c8:	e7ed      	b.n	800e4a6 <vListInsert+0xa>

0800e4ca <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e4ca:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800e4ce:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e4d0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e4d2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e4d4:	6859      	ldr	r1, [r3, #4]
 800e4d6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e4d8:	bf08      	it	eq
 800e4da:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800e4dc:	2200      	movs	r2, #0
 800e4de:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e4e0:	681a      	ldr	r2, [r3, #0]
 800e4e2:	3a01      	subs	r2, #1
 800e4e4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800e4e6:	6818      	ldr	r0, [r3, #0]
}
 800e4e8:	4770      	bx	lr
	...

0800e4ec <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e4ec:	4808      	ldr	r0, [pc, #32]	; (800e510 <prvPortStartFirstTask+0x24>)
 800e4ee:	6800      	ldr	r0, [r0, #0]
 800e4f0:	6800      	ldr	r0, [r0, #0]
 800e4f2:	f380 8808 	msr	MSP, r0
 800e4f6:	f04f 0000 	mov.w	r0, #0
 800e4fa:	f380 8814 	msr	CONTROL, r0
 800e4fe:	b662      	cpsie	i
 800e500:	b661      	cpsie	f
 800e502:	f3bf 8f4f 	dsb	sy
 800e506:	f3bf 8f6f 	isb	sy
 800e50a:	df00      	svc	0
 800e50c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e50e:	0000      	.short	0x0000
 800e510:	e000ed08 	.word	0xe000ed08

0800e514 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e514:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800e524 <vPortEnableVFP+0x10>
 800e518:	6801      	ldr	r1, [r0, #0]
 800e51a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800e51e:	6001      	str	r1, [r0, #0]
 800e520:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e522:	0000      	.short	0x0000
 800e524:	e000ed88 	.word	0xe000ed88

0800e528 <prvTaskExitError>:
{
 800e528:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e52a:	2300      	movs	r3, #0
 800e52c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e52e:	4b0d      	ldr	r3, [pc, #52]	; (800e564 <prvTaskExitError+0x3c>)
 800e530:	681b      	ldr	r3, [r3, #0]
 800e532:	3301      	adds	r3, #1
 800e534:	d008      	beq.n	800e548 <prvTaskExitError+0x20>
 800e536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e53a:	f383 8811 	msr	BASEPRI, r3
 800e53e:	f3bf 8f6f 	isb	sy
 800e542:	f3bf 8f4f 	dsb	sy
 800e546:	e7fe      	b.n	800e546 <prvTaskExitError+0x1e>
 800e548:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e54c:	f383 8811 	msr	BASEPRI, r3
 800e550:	f3bf 8f6f 	isb	sy
 800e554:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e558:	9b01      	ldr	r3, [sp, #4]
 800e55a:	2b00      	cmp	r3, #0
 800e55c:	d0fc      	beq.n	800e558 <prvTaskExitError+0x30>
}
 800e55e:	b002      	add	sp, #8
 800e560:	4770      	bx	lr
 800e562:	bf00      	nop
 800e564:	2000005c 	.word	0x2000005c

0800e568 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e568:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800e56c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e570:	4b07      	ldr	r3, [pc, #28]	; (800e590 <pxPortInitialiseStack+0x28>)
 800e572:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e576:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e57a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e57e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800e582:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e586:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800e58a:	3844      	subs	r0, #68	; 0x44
 800e58c:	4770      	bx	lr
 800e58e:	bf00      	nop
 800e590:	0800e529 	.word	0x0800e529
	...

0800e5a0 <SVC_Handler>:
	__asm volatile (
 800e5a0:	4b07      	ldr	r3, [pc, #28]	; (800e5c0 <pxCurrentTCBConst2>)
 800e5a2:	6819      	ldr	r1, [r3, #0]
 800e5a4:	6808      	ldr	r0, [r1, #0]
 800e5a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5aa:	f380 8809 	msr	PSP, r0
 800e5ae:	f3bf 8f6f 	isb	sy
 800e5b2:	f04f 0000 	mov.w	r0, #0
 800e5b6:	f380 8811 	msr	BASEPRI, r0
 800e5ba:	4770      	bx	lr
 800e5bc:	f3af 8000 	nop.w

0800e5c0 <pxCurrentTCBConst2>:
 800e5c0:	2000d640 	.word	0x2000d640

0800e5c4 <vPortEnterCritical>:
 800e5c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5c8:	f383 8811 	msr	BASEPRI, r3
 800e5cc:	f3bf 8f6f 	isb	sy
 800e5d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e5d4:	4a0a      	ldr	r2, [pc, #40]	; (800e600 <vPortEnterCritical+0x3c>)
 800e5d6:	6813      	ldr	r3, [r2, #0]
 800e5d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e5da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e5dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e5de:	d10e      	bne.n	800e5fe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e5e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e5e4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e5e8:	b2db      	uxtb	r3, r3
 800e5ea:	b143      	cbz	r3, 800e5fe <vPortEnterCritical+0x3a>
 800e5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5f0:	f383 8811 	msr	BASEPRI, r3
 800e5f4:	f3bf 8f6f 	isb	sy
 800e5f8:	f3bf 8f4f 	dsb	sy
 800e5fc:	e7fe      	b.n	800e5fc <vPortEnterCritical+0x38>
}
 800e5fe:	4770      	bx	lr
 800e600:	2000005c 	.word	0x2000005c

0800e604 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e604:	4a08      	ldr	r2, [pc, #32]	; (800e628 <vPortExitCritical+0x24>)
 800e606:	6813      	ldr	r3, [r2, #0]
 800e608:	b943      	cbnz	r3, 800e61c <vPortExitCritical+0x18>
 800e60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e60e:	f383 8811 	msr	BASEPRI, r3
 800e612:	f3bf 8f6f 	isb	sy
 800e616:	f3bf 8f4f 	dsb	sy
 800e61a:	e7fe      	b.n	800e61a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e61c:	3b01      	subs	r3, #1
 800e61e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e620:	b90b      	cbnz	r3, 800e626 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e622:	f383 8811 	msr	BASEPRI, r3
}
 800e626:	4770      	bx	lr
 800e628:	2000005c 	.word	0x2000005c
 800e62c:	00000000 	.word	0x00000000

0800e630 <PendSV_Handler>:
	__asm volatile
 800e630:	f3ef 8009 	mrs	r0, PSP
 800e634:	f3bf 8f6f 	isb	sy
 800e638:	4b15      	ldr	r3, [pc, #84]	; (800e690 <pxCurrentTCBConst>)
 800e63a:	681a      	ldr	r2, [r3, #0]
 800e63c:	f01e 0f10 	tst.w	lr, #16
 800e640:	bf08      	it	eq
 800e642:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e646:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e64a:	6010      	str	r0, [r2, #0]
 800e64c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e650:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e654:	f380 8811 	msr	BASEPRI, r0
 800e658:	f3bf 8f4f 	dsb	sy
 800e65c:	f3bf 8f6f 	isb	sy
 800e660:	f001 f962 	bl	800f928 <vTaskSwitchContext>
 800e664:	f04f 0000 	mov.w	r0, #0
 800e668:	f380 8811 	msr	BASEPRI, r0
 800e66c:	bc09      	pop	{r0, r3}
 800e66e:	6819      	ldr	r1, [r3, #0]
 800e670:	6808      	ldr	r0, [r1, #0]
 800e672:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e676:	f01e 0f10 	tst.w	lr, #16
 800e67a:	bf08      	it	eq
 800e67c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e680:	f380 8809 	msr	PSP, r0
 800e684:	f3bf 8f6f 	isb	sy
 800e688:	4770      	bx	lr
 800e68a:	bf00      	nop
 800e68c:	f3af 8000 	nop.w

0800e690 <pxCurrentTCBConst>:
 800e690:	2000d640 	.word	0x2000d640

0800e694 <xPortSysTickHandler>:
{
 800e694:	b508      	push	{r3, lr}
	__asm volatile
 800e696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e69a:	f383 8811 	msr	BASEPRI, r3
 800e69e:	f3bf 8f6f 	isb	sy
 800e6a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e6a6:	f000 ffa7 	bl	800f5f8 <xTaskIncrementTick>
 800e6aa:	b128      	cbz	r0, 800e6b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e6ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e6b8:	2300      	movs	r3, #0
 800e6ba:	f383 8811 	msr	BASEPRI, r3
}
 800e6be:	bd08      	pop	{r3, pc}

0800e6c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e6c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e6c4:	2300      	movs	r3, #0
 800e6c6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e6c8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e6ca:	4b05      	ldr	r3, [pc, #20]	; (800e6e0 <vPortSetupTimerInterrupt+0x20>)
 800e6cc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e6d0:	681b      	ldr	r3, [r3, #0]
 800e6d2:	fbb3 f3f1 	udiv	r3, r3, r1
 800e6d6:	3b01      	subs	r3, #1
 800e6d8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e6da:	2307      	movs	r3, #7
 800e6dc:	6113      	str	r3, [r2, #16]
}
 800e6de:	4770      	bx	lr
 800e6e0:	20000050 	.word	0x20000050

0800e6e4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e6e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800e6e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e6ea:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e6ee:	4a3a      	ldr	r2, [pc, #232]	; (800e7d8 <xPortStartScheduler+0xf4>)
 800e6f0:	4291      	cmp	r1, r2
 800e6f2:	d108      	bne.n	800e706 <xPortStartScheduler+0x22>
	__asm volatile
 800e6f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f8:	f383 8811 	msr	BASEPRI, r3
 800e6fc:	f3bf 8f6f 	isb	sy
 800e700:	f3bf 8f4f 	dsb	sy
 800e704:	e7fe      	b.n	800e704 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e706:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e70a:	4b34      	ldr	r3, [pc, #208]	; (800e7dc <xPortStartScheduler+0xf8>)
 800e70c:	429a      	cmp	r2, r3
 800e70e:	d108      	bne.n	800e722 <xPortStartScheduler+0x3e>
 800e710:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e714:	f383 8811 	msr	BASEPRI, r3
 800e718:	f3bf 8f6f 	isb	sy
 800e71c:	f3bf 8f4f 	dsb	sy
 800e720:	e7fe      	b.n	800e720 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e722:	4b2f      	ldr	r3, [pc, #188]	; (800e7e0 <xPortStartScheduler+0xfc>)
 800e724:	781a      	ldrb	r2, [r3, #0]
 800e726:	b2d2      	uxtb	r2, r2
 800e728:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e72a:	22ff      	movs	r2, #255	; 0xff
 800e72c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e72e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e730:	4a2c      	ldr	r2, [pc, #176]	; (800e7e4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e732:	b2db      	uxtb	r3, r3
 800e734:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e738:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800e73c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800e740:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e742:	4a29      	ldr	r2, [pc, #164]	; (800e7e8 <xPortStartScheduler+0x104>)
 800e744:	2307      	movs	r3, #7
 800e746:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e748:	2100      	movs	r1, #0
 800e74a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800e74e:	0600      	lsls	r0, r0, #24
 800e750:	f103 34ff 	add.w	r4, r3, #4294967295
 800e754:	d40c      	bmi.n	800e770 <xPortStartScheduler+0x8c>
 800e756:	b111      	cbz	r1, 800e75e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e758:	2b03      	cmp	r3, #3
 800e75a:	6013      	str	r3, [r2, #0]
 800e75c:	d011      	beq.n	800e782 <xPortStartScheduler+0x9e>
 800e75e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e762:	f383 8811 	msr	BASEPRI, r3
 800e766:	f3bf 8f6f 	isb	sy
 800e76a:	f3bf 8f4f 	dsb	sy
 800e76e:	e7fe      	b.n	800e76e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e770:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800e774:	005b      	lsls	r3, r3, #1
 800e776:	b2db      	uxtb	r3, r3
 800e778:	f88d 3003 	strb.w	r3, [sp, #3]
 800e77c:	2101      	movs	r1, #1
 800e77e:	4623      	mov	r3, r4
 800e780:	e7e3      	b.n	800e74a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e782:	f44f 7340 	mov.w	r3, #768	; 0x300
 800e786:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e788:	9b01      	ldr	r3, [sp, #4]
 800e78a:	4a15      	ldr	r2, [pc, #84]	; (800e7e0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e78c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e790:	b2db      	uxtb	r3, r3
 800e792:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e794:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800e798:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e79c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e7a0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800e7a4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e7a8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800e7ac:	f7ff ff88 	bl	800e6c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e7b0:	4b0e      	ldr	r3, [pc, #56]	; (800e7ec <xPortStartScheduler+0x108>)
 800e7b2:	2500      	movs	r5, #0
 800e7b4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800e7b6:	f7ff fead 	bl	800e514 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e7ba:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800e7be:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e7c2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e7c6:	f7ff fe91 	bl	800e4ec <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e7ca:	f001 f8ad 	bl	800f928 <vTaskSwitchContext>
	prvTaskExitError();
 800e7ce:	f7ff feab 	bl	800e528 <prvTaskExitError>
}
 800e7d2:	4628      	mov	r0, r5
 800e7d4:	b003      	add	sp, #12
 800e7d6:	bd30      	pop	{r4, r5, pc}
 800e7d8:	410fc271 	.word	0x410fc271
 800e7dc:	410fc270 	.word	0x410fc270
 800e7e0:	e000e400 	.word	0xe000e400
 800e7e4:	2000d5f8 	.word	0x2000d5f8
 800e7e8:	2000d5fc 	.word	0x2000d5fc
 800e7ec:	2000005c 	.word	0x2000005c

0800e7f0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e7f0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e7f4:	2b0f      	cmp	r3, #15
 800e7f6:	d90e      	bls.n	800e816 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e7f8:	4a11      	ldr	r2, [pc, #68]	; (800e840 <vPortValidateInterruptPriority+0x50>)
 800e7fa:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e7fc:	4a11      	ldr	r2, [pc, #68]	; (800e844 <vPortValidateInterruptPriority+0x54>)
 800e7fe:	7812      	ldrb	r2, [r2, #0]
 800e800:	429a      	cmp	r2, r3
 800e802:	d908      	bls.n	800e816 <vPortValidateInterruptPriority+0x26>
 800e804:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e808:	f383 8811 	msr	BASEPRI, r3
 800e80c:	f3bf 8f6f 	isb	sy
 800e810:	f3bf 8f4f 	dsb	sy
 800e814:	e7fe      	b.n	800e814 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e816:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e81a:	4a0b      	ldr	r2, [pc, #44]	; (800e848 <vPortValidateInterruptPriority+0x58>)
 800e81c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e820:	6812      	ldr	r2, [r2, #0]
 800e822:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e826:	4293      	cmp	r3, r2
 800e828:	d908      	bls.n	800e83c <vPortValidateInterruptPriority+0x4c>
 800e82a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e82e:	f383 8811 	msr	BASEPRI, r3
 800e832:	f3bf 8f6f 	isb	sy
 800e836:	f3bf 8f4f 	dsb	sy
 800e83a:	e7fe      	b.n	800e83a <vPortValidateInterruptPriority+0x4a>
	}
 800e83c:	4770      	bx	lr
 800e83e:	bf00      	nop
 800e840:	e000e3f0 	.word	0xe000e3f0
 800e844:	2000d5f8 	.word	0x2000d5f8
 800e848:	2000d5fc 	.word	0x2000d5fc

0800e84c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800e84c:	b510      	push	{r4, lr}
 800e84e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e850:	f7ff feb8 	bl	800e5c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e854:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e856:	f7ff fed5 	bl	800e604 <vPortExitCritical>

	return xReturn;
}
 800e85a:	fab4 f084 	clz	r0, r4
 800e85e:	0940      	lsrs	r0, r0, #5
 800e860:	bd10      	pop	{r4, pc}

0800e862 <prvCopyDataToQueue>:
{
 800e862:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e864:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e866:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e868:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800e86a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e86c:	b952      	cbnz	r2, 800e884 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e86e:	6807      	ldr	r7, [r0, #0]
 800e870:	bb47      	cbnz	r7, 800e8c4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e872:	6880      	ldr	r0, [r0, #8]
 800e874:	f001 f9b8 	bl	800fbe8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e878:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e87a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e87c:	3601      	adds	r6, #1
 800e87e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e880:	4628      	mov	r0, r5
 800e882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e884:	b965      	cbnz	r5, 800e8a0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e886:	6840      	ldr	r0, [r0, #4]
 800e888:	f017 f906 	bl	8025a98 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e88c:	6863      	ldr	r3, [r4, #4]
 800e88e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e890:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e892:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e894:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e896:	4293      	cmp	r3, r2
 800e898:	d3f0      	bcc.n	800e87c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e89a:	6823      	ldr	r3, [r4, #0]
 800e89c:	6063      	str	r3, [r4, #4]
 800e89e:	e7ed      	b.n	800e87c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e8a0:	68c0      	ldr	r0, [r0, #12]
 800e8a2:	f017 f8f9 	bl	8025a98 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e8a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e8a8:	68e3      	ldr	r3, [r4, #12]
 800e8aa:	4251      	negs	r1, r2
 800e8ac:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e8ae:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e8b0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e8b2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e8b4:	bf3e      	ittt	cc
 800e8b6:	68a3      	ldrcc	r3, [r4, #8]
 800e8b8:	185b      	addcc	r3, r3, r1
 800e8ba:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e8bc:	2d02      	cmp	r5, #2
 800e8be:	d101      	bne.n	800e8c4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e8c0:	b116      	cbz	r6, 800e8c8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800e8c2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800e8c4:	2500      	movs	r5, #0
 800e8c6:	e7d9      	b.n	800e87c <prvCopyDataToQueue+0x1a>
 800e8c8:	4635      	mov	r5, r6
 800e8ca:	e7d7      	b.n	800e87c <prvCopyDataToQueue+0x1a>

0800e8cc <prvCopyDataFromQueue>:
{
 800e8cc:	4603      	mov	r3, r0
 800e8ce:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e8d0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800e8d2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e8d4:	b16a      	cbz	r2, 800e8f2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8d6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e8d8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8da:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e8dc:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e8de:	bf28      	it	cs
 800e8e0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e8e2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e8e4:	bf28      	it	cs
 800e8e6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e8e8:	68d9      	ldr	r1, [r3, #12]
}
 800e8ea:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e8ee:	f017 b8d3 	b.w	8025a98 <memcpy>
}
 800e8f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e8f6:	4770      	bx	lr

0800e8f8 <prvUnlockQueue>:
{
 800e8f8:	b570      	push	{r4, r5, r6, lr}
 800e8fa:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800e8fc:	f7ff fe62 	bl	800e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e900:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e904:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800e908:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e90a:	2d00      	cmp	r5, #0
 800e90c:	dc14      	bgt.n	800e938 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800e90e:	23ff      	movs	r3, #255	; 0xff
 800e910:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e914:	f7ff fe76 	bl	800e604 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e918:	f7ff fe54 	bl	800e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e91c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e920:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800e924:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e926:	2d00      	cmp	r5, #0
 800e928:	dc12      	bgt.n	800e950 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800e92a:	23ff      	movs	r3, #255	; 0xff
 800e92c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800e930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e934:	f7ff be66 	b.w	800e604 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e938:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e93a:	2b00      	cmp	r3, #0
 800e93c:	d0e7      	beq.n	800e90e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e93e:	4630      	mov	r0, r6
 800e940:	f001 f86e 	bl	800fa20 <xTaskRemoveFromEventList>
 800e944:	b108      	cbz	r0, 800e94a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800e946:	f001 f8f7 	bl	800fb38 <vTaskMissedYield>
			--cTxLock;
 800e94a:	3d01      	subs	r5, #1
 800e94c:	b26d      	sxtb	r5, r5
 800e94e:	e7dc      	b.n	800e90a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e950:	6923      	ldr	r3, [r4, #16]
 800e952:	2b00      	cmp	r3, #0
 800e954:	d0e9      	beq.n	800e92a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e956:	4630      	mov	r0, r6
 800e958:	f001 f862 	bl	800fa20 <xTaskRemoveFromEventList>
 800e95c:	b108      	cbz	r0, 800e962 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800e95e:	f001 f8eb 	bl	800fb38 <vTaskMissedYield>
				--cRxLock;
 800e962:	3d01      	subs	r5, #1
 800e964:	b26d      	sxtb	r5, r5
 800e966:	e7de      	b.n	800e926 <prvUnlockQueue+0x2e>

0800e968 <xQueueGenericReset>:
{
 800e968:	b538      	push	{r3, r4, r5, lr}
 800e96a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800e96c:	4604      	mov	r4, r0
 800e96e:	b940      	cbnz	r0, 800e982 <xQueueGenericReset+0x1a>
 800e970:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e974:	f383 8811 	msr	BASEPRI, r3
 800e978:	f3bf 8f6f 	isb	sy
 800e97c:	f3bf 8f4f 	dsb	sy
 800e980:	e7fe      	b.n	800e980 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800e982:	f7ff fe1f 	bl	800e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e986:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800e98a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e98c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e98e:	434b      	muls	r3, r1
 800e990:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e992:	1a5b      	subs	r3, r3, r1
 800e994:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e996:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e998:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e99a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800e99c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e99e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e9a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800e9a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800e9a8:	b9a5      	cbnz	r5, 800e9d4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9aa:	6923      	ldr	r3, [r4, #16]
 800e9ac:	b173      	cbz	r3, 800e9cc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9ae:	f104 0010 	add.w	r0, r4, #16
 800e9b2:	f001 f835 	bl	800fa20 <xTaskRemoveFromEventList>
 800e9b6:	b148      	cbz	r0, 800e9cc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800e9b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e9bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e9c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e9c4:	f3bf 8f4f 	dsb	sy
 800e9c8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800e9cc:	f7ff fe1a 	bl	800e604 <vPortExitCritical>
}
 800e9d0:	2001      	movs	r0, #1
 800e9d2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e9d4:	f104 0010 	add.w	r0, r4, #16
 800e9d8:	f7ff fd46 	bl	800e468 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e9dc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e9e0:	f7ff fd42 	bl	800e468 <vListInitialise>
 800e9e4:	e7f2      	b.n	800e9cc <xQueueGenericReset+0x64>

0800e9e6 <xQueueGenericCreateStatic>:
	{
 800e9e6:	b513      	push	{r0, r1, r4, lr}
 800e9e8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e9ea:	b940      	cbnz	r0, 800e9fe <xQueueGenericCreateStatic+0x18>
 800e9ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f0:	f383 8811 	msr	BASEPRI, r3
 800e9f4:	f3bf 8f6f 	isb	sy
 800e9f8:	f3bf 8f4f 	dsb	sy
 800e9fc:	e7fe      	b.n	800e9fc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800e9fe:	b943      	cbnz	r3, 800ea12 <xQueueGenericCreateStatic+0x2c>
 800ea00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea04:	f383 8811 	msr	BASEPRI, r3
 800ea08:	f3bf 8f6f 	isb	sy
 800ea0c:	f3bf 8f4f 	dsb	sy
 800ea10:	e7fe      	b.n	800ea10 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800ea12:	b14a      	cbz	r2, 800ea28 <xQueueGenericCreateStatic+0x42>
 800ea14:	b991      	cbnz	r1, 800ea3c <xQueueGenericCreateStatic+0x56>
 800ea16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea1a:	f383 8811 	msr	BASEPRI, r3
 800ea1e:	f3bf 8f6f 	isb	sy
 800ea22:	f3bf 8f4f 	dsb	sy
 800ea26:	e7fe      	b.n	800ea26 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800ea28:	b141      	cbz	r1, 800ea3c <xQueueGenericCreateStatic+0x56>
 800ea2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea2e:	f383 8811 	msr	BASEPRI, r3
 800ea32:	f3bf 8f6f 	isb	sy
 800ea36:	f3bf 8f4f 	dsb	sy
 800ea3a:	e7fe      	b.n	800ea3a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800ea3c:	2350      	movs	r3, #80	; 0x50
 800ea3e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800ea40:	9b01      	ldr	r3, [sp, #4]
 800ea42:	2b50      	cmp	r3, #80	; 0x50
 800ea44:	d008      	beq.n	800ea58 <xQueueGenericCreateStatic+0x72>
 800ea46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea4a:	f383 8811 	msr	BASEPRI, r3
 800ea4e:	f3bf 8f6f 	isb	sy
 800ea52:	f3bf 8f4f 	dsb	sy
 800ea56:	e7fe      	b.n	800ea56 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800ea58:	2900      	cmp	r1, #0
 800ea5a:	bf08      	it	eq
 800ea5c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800ea5e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ea60:	6022      	str	r2, [r4, #0]
 800ea62:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800ea64:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ea68:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800ea6c:	4619      	mov	r1, r3
 800ea6e:	4620      	mov	r0, r4
 800ea70:	f7ff ff7a 	bl	800e968 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800ea74:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800ea78:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800ea7c:	4620      	mov	r0, r4
 800ea7e:	b002      	add	sp, #8
 800ea80:	bd10      	pop	{r4, pc}

0800ea82 <xQueueGenericCreate>:
	{
 800ea82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea84:	460d      	mov	r5, r1
 800ea86:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ea88:	4606      	mov	r6, r0
 800ea8a:	b940      	cbnz	r0, 800ea9e <xQueueGenericCreate+0x1c>
 800ea8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea90:	f383 8811 	msr	BASEPRI, r3
 800ea94:	f3bf 8f6f 	isb	sy
 800ea98:	f3bf 8f4f 	dsb	sy
 800ea9c:	e7fe      	b.n	800ea9c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea9e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800eaa0:	3050      	adds	r0, #80	; 0x50
 800eaa2:	f7ff fc0b 	bl	800e2bc <pvPortMalloc>
		if( pxNewQueue != NULL )
 800eaa6:	4604      	mov	r4, r0
 800eaa8:	b170      	cbz	r0, 800eac8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800eaaa:	2300      	movs	r3, #0
 800eaac:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800eab0:	b165      	cbz	r5, 800eacc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800eab2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800eab6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800eaba:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800eabc:	2101      	movs	r1, #1
 800eabe:	4620      	mov	r0, r4
 800eac0:	f7ff ff52 	bl	800e968 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800eac4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800eac8:	4620      	mov	r0, r4
 800eaca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eacc:	4603      	mov	r3, r0
 800eace:	e7f2      	b.n	800eab6 <xQueueGenericCreate+0x34>

0800ead0 <xQueueCreateCountingSemaphoreStatic>:
	{
 800ead0:	b513      	push	{r0, r1, r4, lr}
 800ead2:	4613      	mov	r3, r2
 800ead4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ead6:	b940      	cbnz	r0, 800eaea <xQueueCreateCountingSemaphoreStatic+0x1a>
 800ead8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eadc:	f383 8811 	msr	BASEPRI, r3
 800eae0:	f3bf 8f6f 	isb	sy
 800eae4:	f3bf 8f4f 	dsb	sy
 800eae8:	e7fe      	b.n	800eae8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800eaea:	4288      	cmp	r0, r1
 800eaec:	d208      	bcs.n	800eb00 <xQueueCreateCountingSemaphoreStatic+0x30>
 800eaee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaf2:	f383 8811 	msr	BASEPRI, r3
 800eaf6:	f3bf 8f6f 	isb	sy
 800eafa:	f3bf 8f4f 	dsb	sy
 800eafe:	e7fe      	b.n	800eafe <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800eb00:	2202      	movs	r2, #2
 800eb02:	9200      	str	r2, [sp, #0]
 800eb04:	2200      	movs	r2, #0
 800eb06:	4611      	mov	r1, r2
 800eb08:	f7ff ff6d 	bl	800e9e6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800eb0c:	b100      	cbz	r0, 800eb10 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800eb0e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800eb10:	b002      	add	sp, #8
 800eb12:	bd10      	pop	{r4, pc}

0800eb14 <xQueueCreateCountingSemaphore>:
	{
 800eb14:	b510      	push	{r4, lr}
 800eb16:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800eb18:	b940      	cbnz	r0, 800eb2c <xQueueCreateCountingSemaphore+0x18>
 800eb1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb1e:	f383 8811 	msr	BASEPRI, r3
 800eb22:	f3bf 8f6f 	isb	sy
 800eb26:	f3bf 8f4f 	dsb	sy
 800eb2a:	e7fe      	b.n	800eb2a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800eb2c:	4288      	cmp	r0, r1
 800eb2e:	d208      	bcs.n	800eb42 <xQueueCreateCountingSemaphore+0x2e>
 800eb30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb34:	f383 8811 	msr	BASEPRI, r3
 800eb38:	f3bf 8f6f 	isb	sy
 800eb3c:	f3bf 8f4f 	dsb	sy
 800eb40:	e7fe      	b.n	800eb40 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800eb42:	2202      	movs	r2, #2
 800eb44:	2100      	movs	r1, #0
 800eb46:	f7ff ff9c 	bl	800ea82 <xQueueGenericCreate>
		if( xHandle != NULL )
 800eb4a:	b100      	cbz	r0, 800eb4e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800eb4c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800eb4e:	bd10      	pop	{r4, pc}

0800eb50 <xQueueGenericSend>:
{
 800eb50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eb54:	b085      	sub	sp, #20
 800eb56:	4688      	mov	r8, r1
 800eb58:	9201      	str	r2, [sp, #4]
 800eb5a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800eb5c:	4604      	mov	r4, r0
 800eb5e:	b940      	cbnz	r0, 800eb72 <xQueueGenericSend+0x22>
 800eb60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb64:	f383 8811 	msr	BASEPRI, r3
 800eb68:	f3bf 8f6f 	isb	sy
 800eb6c:	f3bf 8f4f 	dsb	sy
 800eb70:	e7fe      	b.n	800eb70 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eb72:	b951      	cbnz	r1, 800eb8a <xQueueGenericSend+0x3a>
 800eb74:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eb76:	b143      	cbz	r3, 800eb8a <xQueueGenericSend+0x3a>
 800eb78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb7c:	f383 8811 	msr	BASEPRI, r3
 800eb80:	f3bf 8f6f 	isb	sy
 800eb84:	f3bf 8f4f 	dsb	sy
 800eb88:	e7fe      	b.n	800eb88 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800eb8a:	2f02      	cmp	r7, #2
 800eb8c:	d10b      	bne.n	800eba6 <xQueueGenericSend+0x56>
 800eb8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800eb90:	2b01      	cmp	r3, #1
 800eb92:	d008      	beq.n	800eba6 <xQueueGenericSend+0x56>
 800eb94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb98:	f383 8811 	msr	BASEPRI, r3
 800eb9c:	f3bf 8f6f 	isb	sy
 800eba0:	f3bf 8f4f 	dsb	sy
 800eba4:	e7fe      	b.n	800eba4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eba6:	f000 ffcd 	bl	800fb44 <xTaskGetSchedulerState>
 800ebaa:	4606      	mov	r6, r0
 800ebac:	b950      	cbnz	r0, 800ebc4 <xQueueGenericSend+0x74>
 800ebae:	9b01      	ldr	r3, [sp, #4]
 800ebb0:	b14b      	cbz	r3, 800ebc6 <xQueueGenericSend+0x76>
 800ebb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebb6:	f383 8811 	msr	BASEPRI, r3
 800ebba:	f3bf 8f6f 	isb	sy
 800ebbe:	f3bf 8f4f 	dsb	sy
 800ebc2:	e7fe      	b.n	800ebc2 <xQueueGenericSend+0x72>
 800ebc4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800ebc6:	f04f 0900 	mov.w	r9, #0
 800ebca:	e037      	b.n	800ec3c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ebcc:	9d01      	ldr	r5, [sp, #4]
 800ebce:	b91d      	cbnz	r5, 800ebd8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800ebd0:	f7ff fd18 	bl	800e604 <vPortExitCritical>
			return errQUEUE_FULL;
 800ebd4:	2000      	movs	r0, #0
 800ebd6:	e052      	b.n	800ec7e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800ebd8:	b916      	cbnz	r6, 800ebe0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ebda:	a802      	add	r0, sp, #8
 800ebdc:	f000 ff64 	bl	800faa8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ebe0:	f7ff fd10 	bl	800e604 <vPortExitCritical>
		vTaskSuspendAll();
 800ebe4:	f000 fcfa 	bl	800f5dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ebe8:	f7ff fcec 	bl	800e5c4 <vPortEnterCritical>
 800ebec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ebf0:	2bff      	cmp	r3, #255	; 0xff
 800ebf2:	bf08      	it	eq
 800ebf4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800ebf8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebfc:	2bff      	cmp	r3, #255	; 0xff
 800ebfe:	bf08      	it	eq
 800ec00:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800ec04:	f7ff fcfe 	bl	800e604 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ec08:	a901      	add	r1, sp, #4
 800ec0a:	a802      	add	r0, sp, #8
 800ec0c:	f000 ff58 	bl	800fac0 <xTaskCheckForTimeOut>
 800ec10:	2800      	cmp	r0, #0
 800ec12:	d14a      	bne.n	800ecaa <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ec14:	f7ff fcd6 	bl	800e5c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800ec18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec1c:	429a      	cmp	r2, r3
 800ec1e:	d131      	bne.n	800ec84 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ec20:	f7ff fcf0 	bl	800e604 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ec24:	9901      	ldr	r1, [sp, #4]
 800ec26:	f104 0010 	add.w	r0, r4, #16
 800ec2a:	f000 fec1 	bl	800f9b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ec2e:	4620      	mov	r0, r4
 800ec30:	f7ff fe62 	bl	800e8f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ec34:	f000 fd76 	bl	800f724 <xTaskResumeAll>
 800ec38:	b360      	cbz	r0, 800ec94 <xQueueGenericSend+0x144>
 800ec3a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800ec3c:	f7ff fcc2 	bl	800e5c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ec40:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec44:	429a      	cmp	r2, r3
 800ec46:	d301      	bcc.n	800ec4c <xQueueGenericSend+0xfc>
 800ec48:	2f02      	cmp	r7, #2
 800ec4a:	d1bf      	bne.n	800ebcc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec4c:	463a      	mov	r2, r7
 800ec4e:	4641      	mov	r1, r8
 800ec50:	4620      	mov	r0, r4
 800ec52:	f7ff fe06 	bl	800e862 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec58:	b11b      	cbz	r3, 800ec62 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec5a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ec5e:	f000 fedf 	bl	800fa20 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800ec62:	b148      	cbz	r0, 800ec78 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800ec64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec70:	f3bf 8f4f 	dsb	sy
 800ec74:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ec78:	f7ff fcc4 	bl	800e604 <vPortExitCritical>
				return pdPASS;
 800ec7c:	2001      	movs	r0, #1
}
 800ec7e:	b005      	add	sp, #20
 800ec80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ec84:	f7ff fcbe 	bl	800e604 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800ec88:	4620      	mov	r0, r4
 800ec8a:	f7ff fe35 	bl	800e8f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ec8e:	f000 fd49 	bl	800f724 <xTaskResumeAll>
 800ec92:	e7d2      	b.n	800ec3a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800ec94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eca0:	f3bf 8f4f 	dsb	sy
 800eca4:	f3bf 8f6f 	isb	sy
 800eca8:	e7c7      	b.n	800ec3a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800ecaa:	4620      	mov	r0, r4
 800ecac:	f7ff fe24 	bl	800e8f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ecb0:	f000 fd38 	bl	800f724 <xTaskResumeAll>
 800ecb4:	e78e      	b.n	800ebd4 <xQueueGenericSend+0x84>

0800ecb6 <xQueueGenericSendFromISR>:
{
 800ecb6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ecba:	4689      	mov	r9, r1
 800ecbc:	4690      	mov	r8, r2
 800ecbe:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800ecc0:	4604      	mov	r4, r0
 800ecc2:	b940      	cbnz	r0, 800ecd6 <xQueueGenericSendFromISR+0x20>
 800ecc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc8:	f383 8811 	msr	BASEPRI, r3
 800eccc:	f3bf 8f6f 	isb	sy
 800ecd0:	f3bf 8f4f 	dsb	sy
 800ecd4:	e7fe      	b.n	800ecd4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ecd6:	b951      	cbnz	r1, 800ecee <xQueueGenericSendFromISR+0x38>
 800ecd8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ecda:	b143      	cbz	r3, 800ecee <xQueueGenericSendFromISR+0x38>
 800ecdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece0:	f383 8811 	msr	BASEPRI, r3
 800ece4:	f3bf 8f6f 	isb	sy
 800ece8:	f3bf 8f4f 	dsb	sy
 800ecec:	e7fe      	b.n	800ecec <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ecee:	2f02      	cmp	r7, #2
 800ecf0:	d10b      	bne.n	800ed0a <xQueueGenericSendFromISR+0x54>
 800ecf2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ecf4:	2b01      	cmp	r3, #1
 800ecf6:	d008      	beq.n	800ed0a <xQueueGenericSendFromISR+0x54>
 800ecf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecfc:	f383 8811 	msr	BASEPRI, r3
 800ed00:	f3bf 8f6f 	isb	sy
 800ed04:	f3bf 8f4f 	dsb	sy
 800ed08:	e7fe      	b.n	800ed08 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ed0a:	f7ff fd71 	bl	800e7f0 <vPortValidateInterruptPriority>
	__asm volatile
 800ed0e:	f3ef 8611 	mrs	r6, BASEPRI
 800ed12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed16:	f383 8811 	msr	BASEPRI, r3
 800ed1a:	f3bf 8f6f 	isb	sy
 800ed1e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ed22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ed24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ed26:	429a      	cmp	r2, r3
 800ed28:	d301      	bcc.n	800ed2e <xQueueGenericSendFromISR+0x78>
 800ed2a:	2f02      	cmp	r7, #2
 800ed2c:	d123      	bne.n	800ed76 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ed2e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ed32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ed34:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ed36:	463a      	mov	r2, r7
 800ed38:	4649      	mov	r1, r9
 800ed3a:	4620      	mov	r0, r4
 800ed3c:	f7ff fd91 	bl	800e862 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ed40:	1c6b      	adds	r3, r5, #1
 800ed42:	d113      	bne.n	800ed6c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ed46:	b90b      	cbnz	r3, 800ed4c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800ed48:	2001      	movs	r0, #1
 800ed4a:	e00b      	b.n	800ed64 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ed50:	f000 fe66 	bl	800fa20 <xTaskRemoveFromEventList>
 800ed54:	2800      	cmp	r0, #0
 800ed56:	d0f7      	beq.n	800ed48 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ed58:	f1b8 0f00 	cmp.w	r8, #0
 800ed5c:	d0f4      	beq.n	800ed48 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ed5e:	2001      	movs	r0, #1
 800ed60:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ed64:	f386 8811 	msr	BASEPRI, r6
}
 800ed68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ed6c:	3501      	adds	r5, #1
 800ed6e:	b26d      	sxtb	r5, r5
 800ed70:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800ed74:	e7e8      	b.n	800ed48 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800ed76:	2000      	movs	r0, #0
 800ed78:	e7f4      	b.n	800ed64 <xQueueGenericSendFromISR+0xae>

0800ed7a <xQueueGiveFromISR>:
{
 800ed7a:	b570      	push	{r4, r5, r6, lr}
 800ed7c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ed7e:	4604      	mov	r4, r0
 800ed80:	b940      	cbnz	r0, 800ed94 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ed82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed86:	f383 8811 	msr	BASEPRI, r3
 800ed8a:	f3bf 8f6f 	isb	sy
 800ed8e:	f3bf 8f4f 	dsb	sy
 800ed92:	e7fe      	b.n	800ed92 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ed94:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ed96:	b143      	cbz	r3, 800edaa <xQueueGiveFromISR+0x30>
 800ed98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed9c:	f383 8811 	msr	BASEPRI, r3
 800eda0:	f3bf 8f6f 	isb	sy
 800eda4:	f3bf 8f4f 	dsb	sy
 800eda8:	e7fe      	b.n	800eda8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800edaa:	6803      	ldr	r3, [r0, #0]
 800edac:	b953      	cbnz	r3, 800edc4 <xQueueGiveFromISR+0x4a>
 800edae:	6883      	ldr	r3, [r0, #8]
 800edb0:	b143      	cbz	r3, 800edc4 <xQueueGiveFromISR+0x4a>
 800edb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edb6:	f383 8811 	msr	BASEPRI, r3
 800edba:	f3bf 8f6f 	isb	sy
 800edbe:	f3bf 8f4f 	dsb	sy
 800edc2:	e7fe      	b.n	800edc2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800edc4:	f7ff fd14 	bl	800e7f0 <vPortValidateInterruptPriority>
	__asm volatile
 800edc8:	f3ef 8611 	mrs	r6, BASEPRI
 800edcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edd0:	f383 8811 	msr	BASEPRI, r3
 800edd4:	f3bf 8f6f 	isb	sy
 800edd8:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eddc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800edde:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ede0:	4293      	cmp	r3, r2
 800ede2:	d91c      	bls.n	800ee1e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ede4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ede8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800edea:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800edec:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800edee:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800edf0:	d110      	bne.n	800ee14 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800edf4:	b90b      	cbnz	r3, 800edfa <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800edf6:	2001      	movs	r0, #1
 800edf8:	e009      	b.n	800ee0e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edfa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800edfe:	f000 fe0f 	bl	800fa20 <xTaskRemoveFromEventList>
 800ee02:	2800      	cmp	r0, #0
 800ee04:	d0f7      	beq.n	800edf6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800ee06:	2d00      	cmp	r5, #0
 800ee08:	d0f5      	beq.n	800edf6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ee0a:	2001      	movs	r0, #1
 800ee0c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800ee0e:	f386 8811 	msr	BASEPRI, r6
}
 800ee12:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ee14:	3301      	adds	r3, #1
 800ee16:	b25b      	sxtb	r3, r3
 800ee18:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ee1c:	e7eb      	b.n	800edf6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800ee1e:	2000      	movs	r0, #0
 800ee20:	e7f5      	b.n	800ee0e <xQueueGiveFromISR+0x94>

0800ee22 <xQueueReceive>:
{
 800ee22:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ee26:	460f      	mov	r7, r1
 800ee28:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ee2a:	4604      	mov	r4, r0
 800ee2c:	b940      	cbnz	r0, 800ee40 <xQueueReceive+0x1e>
	__asm volatile
 800ee2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee32:	f383 8811 	msr	BASEPRI, r3
 800ee36:	f3bf 8f6f 	isb	sy
 800ee3a:	f3bf 8f4f 	dsb	sy
 800ee3e:	e7fe      	b.n	800ee3e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee40:	b951      	cbnz	r1, 800ee58 <xQueueReceive+0x36>
 800ee42:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ee44:	b143      	cbz	r3, 800ee58 <xQueueReceive+0x36>
 800ee46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee4a:	f383 8811 	msr	BASEPRI, r3
 800ee4e:	f3bf 8f6f 	isb	sy
 800ee52:	f3bf 8f4f 	dsb	sy
 800ee56:	e7fe      	b.n	800ee56 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ee58:	f000 fe74 	bl	800fb44 <xTaskGetSchedulerState>
 800ee5c:	4606      	mov	r6, r0
 800ee5e:	b950      	cbnz	r0, 800ee76 <xQueueReceive+0x54>
 800ee60:	9b01      	ldr	r3, [sp, #4]
 800ee62:	b14b      	cbz	r3, 800ee78 <xQueueReceive+0x56>
 800ee64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee68:	f383 8811 	msr	BASEPRI, r3
 800ee6c:	f3bf 8f6f 	isb	sy
 800ee70:	f3bf 8f4f 	dsb	sy
 800ee74:	e7fe      	b.n	800ee74 <xQueueReceive+0x52>
 800ee76:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800ee78:	f04f 0800 	mov.w	r8, #0
 800ee7c:	e03d      	b.n	800eefa <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ee7e:	9d01      	ldr	r5, [sp, #4]
 800ee80:	b91d      	cbnz	r5, 800ee8a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800ee82:	f7ff fbbf 	bl	800e604 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800ee86:	2000      	movs	r0, #0
 800ee88:	e056      	b.n	800ef38 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800ee8a:	b916      	cbnz	r6, 800ee92 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ee8c:	a802      	add	r0, sp, #8
 800ee8e:	f000 fe0b 	bl	800faa8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ee92:	f7ff fbb7 	bl	800e604 <vPortExitCritical>
		vTaskSuspendAll();
 800ee96:	f000 fba1 	bl	800f5dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ee9a:	f7ff fb93 	bl	800e5c4 <vPortEnterCritical>
 800ee9e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eea2:	2bff      	cmp	r3, #255	; 0xff
 800eea4:	bf08      	it	eq
 800eea6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800eeaa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eeae:	2bff      	cmp	r3, #255	; 0xff
 800eeb0:	bf08      	it	eq
 800eeb2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800eeb6:	f7ff fba5 	bl	800e604 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800eeba:	a901      	add	r1, sp, #4
 800eebc:	a802      	add	r0, sp, #8
 800eebe:	f000 fdff 	bl	800fac0 <xTaskCheckForTimeOut>
 800eec2:	2800      	cmp	r0, #0
 800eec4:	d141      	bne.n	800ef4a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800eec6:	4620      	mov	r0, r4
 800eec8:	f7ff fcc0 	bl	800e84c <prvIsQueueEmpty>
 800eecc:	b3b8      	cbz	r0, 800ef3e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eece:	9901      	ldr	r1, [sp, #4]
 800eed0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800eed4:	f000 fd6c 	bl	800f9b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800eed8:	4620      	mov	r0, r4
 800eeda:	f7ff fd0d 	bl	800e8f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800eede:	f000 fc21 	bl	800f724 <xTaskResumeAll>
 800eee2:	b948      	cbnz	r0, 800eef8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800eee4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eee8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eeec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eef0:	f3bf 8f4f 	dsb	sy
 800eef4:	f3bf 8f6f 	isb	sy
 800eef8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800eefa:	f7ff fb63 	bl	800e5c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eefe:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef00:	2d00      	cmp	r5, #0
 800ef02:	d0bc      	beq.n	800ee7e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ef04:	4639      	mov	r1, r7
 800ef06:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef08:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ef0a:	f7ff fcdf 	bl	800e8cc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef0e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef10:	6923      	ldr	r3, [r4, #16]
 800ef12:	b173      	cbz	r3, 800ef32 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef14:	f104 0010 	add.w	r0, r4, #16
 800ef18:	f000 fd82 	bl	800fa20 <xTaskRemoveFromEventList>
 800ef1c:	b148      	cbz	r0, 800ef32 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800ef1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef2a:	f3bf 8f4f 	dsb	sy
 800ef2e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ef32:	f7ff fb67 	bl	800e604 <vPortExitCritical>
				return pdPASS;
 800ef36:	2001      	movs	r0, #1
}
 800ef38:	b004      	add	sp, #16
 800ef3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800ef3e:	4620      	mov	r0, r4
 800ef40:	f7ff fcda 	bl	800e8f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ef44:	f000 fbee 	bl	800f724 <xTaskResumeAll>
 800ef48:	e7d6      	b.n	800eef8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800ef4a:	4620      	mov	r0, r4
 800ef4c:	f7ff fcd4 	bl	800e8f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ef50:	f000 fbe8 	bl	800f724 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ef54:	4620      	mov	r0, r4
 800ef56:	f7ff fc79 	bl	800e84c <prvIsQueueEmpty>
 800ef5a:	2800      	cmp	r0, #0
 800ef5c:	d0cc      	beq.n	800eef8 <xQueueReceive+0xd6>
 800ef5e:	e792      	b.n	800ee86 <xQueueReceive+0x64>

0800ef60 <xQueueSemaphoreTake>:
{
 800ef60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef62:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800ef64:	4604      	mov	r4, r0
{
 800ef66:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ef68:	b940      	cbnz	r0, 800ef7c <xQueueSemaphoreTake+0x1c>
 800ef6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef6e:	f383 8811 	msr	BASEPRI, r3
 800ef72:	f3bf 8f6f 	isb	sy
 800ef76:	f3bf 8f4f 	dsb	sy
 800ef7a:	e7fe      	b.n	800ef7a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ef7c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800ef7e:	b145      	cbz	r5, 800ef92 <xQueueSemaphoreTake+0x32>
 800ef80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef84:	f383 8811 	msr	BASEPRI, r3
 800ef88:	f3bf 8f6f 	isb	sy
 800ef8c:	f3bf 8f4f 	dsb	sy
 800ef90:	e7fe      	b.n	800ef90 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ef92:	f000 fdd7 	bl	800fb44 <xTaskGetSchedulerState>
 800ef96:	4606      	mov	r6, r0
 800ef98:	b950      	cbnz	r0, 800efb0 <xQueueSemaphoreTake+0x50>
 800ef9a:	9b01      	ldr	r3, [sp, #4]
 800ef9c:	b15b      	cbz	r3, 800efb6 <xQueueSemaphoreTake+0x56>
 800ef9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efa2:	f383 8811 	msr	BASEPRI, r3
 800efa6:	f3bf 8f6f 	isb	sy
 800efaa:	f3bf 8f4f 	dsb	sy
 800efae:	e7fe      	b.n	800efae <xQueueSemaphoreTake+0x4e>
 800efb0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800efb2:	2700      	movs	r7, #0
 800efb4:	e053      	b.n	800f05e <xQueueSemaphoreTake+0xfe>
 800efb6:	4605      	mov	r5, r0
 800efb8:	e7fb      	b.n	800efb2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800efba:	9b01      	ldr	r3, [sp, #4]
 800efbc:	b963      	cbnz	r3, 800efd8 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800efbe:	b145      	cbz	r5, 800efd2 <xQueueSemaphoreTake+0x72>
 800efc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efc4:	f383 8811 	msr	BASEPRI, r3
 800efc8:	f3bf 8f6f 	isb	sy
 800efcc:	f3bf 8f4f 	dsb	sy
 800efd0:	e7fe      	b.n	800efd0 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800efd2:	f7ff fb17 	bl	800e604 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800efd6:	e062      	b.n	800f09e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800efd8:	b916      	cbnz	r6, 800efe0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800efda:	a802      	add	r0, sp, #8
 800efdc:	f000 fd64 	bl	800faa8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800efe0:	f7ff fb10 	bl	800e604 <vPortExitCritical>
		vTaskSuspendAll();
 800efe4:	f000 fafa 	bl	800f5dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800efe8:	f7ff faec 	bl	800e5c4 <vPortEnterCritical>
 800efec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eff0:	2bff      	cmp	r3, #255	; 0xff
 800eff2:	bf08      	it	eq
 800eff4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800eff8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800effc:	2bff      	cmp	r3, #255	; 0xff
 800effe:	bf08      	it	eq
 800f000:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800f004:	f7ff fafe 	bl	800e604 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f008:	a901      	add	r1, sp, #4
 800f00a:	a802      	add	r0, sp, #8
 800f00c:	f000 fd58 	bl	800fac0 <xTaskCheckForTimeOut>
 800f010:	2800      	cmp	r0, #0
 800f012:	d14d      	bne.n	800f0b0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f014:	4620      	mov	r0, r4
 800f016:	f7ff fc19 	bl	800e84c <prvIsQueueEmpty>
 800f01a:	2800      	cmp	r0, #0
 800f01c:	d042      	beq.n	800f0a4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f01e:	6823      	ldr	r3, [r4, #0]
 800f020:	b93b      	cbnz	r3, 800f032 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800f022:	f7ff facf 	bl	800e5c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f026:	68a0      	ldr	r0, [r4, #8]
 800f028:	f000 fd9c 	bl	800fb64 <xTaskPriorityInherit>
 800f02c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800f02e:	f7ff fae9 	bl	800e604 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f032:	9901      	ldr	r1, [sp, #4]
 800f034:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f038:	f000 fcba 	bl	800f9b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f03c:	4620      	mov	r0, r4
 800f03e:	f7ff fc5b 	bl	800e8f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f042:	f000 fb6f 	bl	800f724 <xTaskResumeAll>
 800f046:	b948      	cbnz	r0, 800f05c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800f048:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f04c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f050:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f054:	f3bf 8f4f 	dsb	sy
 800f058:	f3bf 8f6f 	isb	sy
 800f05c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800f05e:	f7ff fab1 	bl	800e5c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f062:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f064:	2b00      	cmp	r3, #0
 800f066:	d0a8      	beq.n	800efba <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f068:	3b01      	subs	r3, #1
 800f06a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f06c:	6823      	ldr	r3, [r4, #0]
 800f06e:	b913      	cbnz	r3, 800f076 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f070:	f000 fe50 	bl	800fd14 <pvTaskIncrementMutexHeldCount>
 800f074:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f076:	6923      	ldr	r3, [r4, #16]
 800f078:	b173      	cbz	r3, 800f098 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f07a:	f104 0010 	add.w	r0, r4, #16
 800f07e:	f000 fccf 	bl	800fa20 <xTaskRemoveFromEventList>
 800f082:	b148      	cbz	r0, 800f098 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800f084:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f088:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f08c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f090:	f3bf 8f4f 	dsb	sy
 800f094:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f098:	f7ff fab4 	bl	800e604 <vPortExitCritical>
				return pdPASS;
 800f09c:	2501      	movs	r5, #1
}
 800f09e:	4628      	mov	r0, r5
 800f0a0:	b005      	add	sp, #20
 800f0a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800f0a4:	4620      	mov	r0, r4
 800f0a6:	f7ff fc27 	bl	800e8f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f0aa:	f000 fb3b 	bl	800f724 <xTaskResumeAll>
 800f0ae:	e7d5      	b.n	800f05c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800f0b0:	4620      	mov	r0, r4
 800f0b2:	f7ff fc21 	bl	800e8f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f0b6:	f000 fb35 	bl	800f724 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f0ba:	4620      	mov	r0, r4
 800f0bc:	f7ff fbc6 	bl	800e84c <prvIsQueueEmpty>
 800f0c0:	2800      	cmp	r0, #0
 800f0c2:	d0cb      	beq.n	800f05c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800f0c4:	2d00      	cmp	r5, #0
 800f0c6:	d0ea      	beq.n	800f09e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800f0c8:	f7ff fa7c 	bl	800e5c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f0cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f0ce:	b119      	cbz	r1, 800f0d8 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f0d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f0d2:	6819      	ldr	r1, [r3, #0]
 800f0d4:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f0d8:	68a0      	ldr	r0, [r4, #8]
 800f0da:	f000 fdc9 	bl	800fc70 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f0de:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800f0e0:	f7ff fa90 	bl	800e604 <vPortExitCritical>
 800f0e4:	e7db      	b.n	800f09e <xQueueSemaphoreTake+0x13e>

0800f0e6 <xQueueReceiveFromISR>:
{
 800f0e6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f0ea:	4689      	mov	r9, r1
 800f0ec:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800f0ee:	4605      	mov	r5, r0
 800f0f0:	b940      	cbnz	r0, 800f104 <xQueueReceiveFromISR+0x1e>
 800f0f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0f6:	f383 8811 	msr	BASEPRI, r3
 800f0fa:	f3bf 8f6f 	isb	sy
 800f0fe:	f3bf 8f4f 	dsb	sy
 800f102:	e7fe      	b.n	800f102 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f104:	b951      	cbnz	r1, 800f11c <xQueueReceiveFromISR+0x36>
 800f106:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f108:	b143      	cbz	r3, 800f11c <xQueueReceiveFromISR+0x36>
 800f10a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f10e:	f383 8811 	msr	BASEPRI, r3
 800f112:	f3bf 8f6f 	isb	sy
 800f116:	f3bf 8f4f 	dsb	sy
 800f11a:	e7fe      	b.n	800f11a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f11c:	f7ff fb68 	bl	800e7f0 <vPortValidateInterruptPriority>
	__asm volatile
 800f120:	f3ef 8711 	mrs	r7, BASEPRI
 800f124:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f128:	f383 8811 	msr	BASEPRI, r3
 800f12c:	f3bf 8f6f 	isb	sy
 800f130:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f134:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f136:	b31c      	cbz	r4, 800f180 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f138:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f13c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800f13e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f140:	4628      	mov	r0, r5
 800f142:	f7ff fbc3 	bl	800e8cc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f146:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800f148:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f14a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f14c:	d113      	bne.n	800f176 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f14e:	692b      	ldr	r3, [r5, #16]
 800f150:	b90b      	cbnz	r3, 800f156 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800f152:	2001      	movs	r0, #1
 800f154:	e00b      	b.n	800f16e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f156:	f105 0010 	add.w	r0, r5, #16
 800f15a:	f000 fc61 	bl	800fa20 <xTaskRemoveFromEventList>
 800f15e:	2800      	cmp	r0, #0
 800f160:	d0f7      	beq.n	800f152 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800f162:	f1b8 0f00 	cmp.w	r8, #0
 800f166:	d0f4      	beq.n	800f152 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f168:	2001      	movs	r0, #1
 800f16a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800f16e:	f387 8811 	msr	BASEPRI, r7
}
 800f172:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f176:	3601      	adds	r6, #1
 800f178:	b276      	sxtb	r6, r6
 800f17a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800f17e:	e7e8      	b.n	800f152 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800f180:	4620      	mov	r0, r4
 800f182:	e7f4      	b.n	800f16e <xQueueReceiveFromISR+0x88>

0800f184 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800f184:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f186:	4a07      	ldr	r2, [pc, #28]	; (800f1a4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f188:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f18a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800f18e:	b92c      	cbnz	r4, 800f19c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f190:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f194:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800f198:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800f19a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f19c:	3301      	adds	r3, #1
 800f19e:	2b08      	cmp	r3, #8
 800f1a0:	d1f3      	bne.n	800f18a <vQueueAddToRegistry+0x6>
 800f1a2:	e7fa      	b.n	800f19a <vQueueAddToRegistry+0x16>
 800f1a4:	2000d600 	.word	0x2000d600

0800f1a8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800f1a8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f1aa:	4a08      	ldr	r2, [pc, #32]	; (800f1cc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f1ac:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f1ae:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800f1b2:	684c      	ldr	r4, [r1, #4]
 800f1b4:	4284      	cmp	r4, r0
 800f1b6:	d104      	bne.n	800f1c2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f1b8:	2000      	movs	r0, #0
 800f1ba:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800f1be:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800f1c0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f1c2:	3301      	adds	r3, #1
 800f1c4:	2b08      	cmp	r3, #8
 800f1c6:	d1f2      	bne.n	800f1ae <vQueueUnregisterQueue+0x6>
 800f1c8:	e7fa      	b.n	800f1c0 <vQueueUnregisterQueue+0x18>
 800f1ca:	bf00      	nop
 800f1cc:	2000d600 	.word	0x2000d600

0800f1d0 <vQueueDelete>:
{
 800f1d0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800f1d2:	4604      	mov	r4, r0
 800f1d4:	b940      	cbnz	r0, 800f1e8 <vQueueDelete+0x18>
	__asm volatile
 800f1d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1da:	f383 8811 	msr	BASEPRI, r3
 800f1de:	f3bf 8f6f 	isb	sy
 800f1e2:	f3bf 8f4f 	dsb	sy
 800f1e6:	e7fe      	b.n	800f1e6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800f1e8:	f7ff ffde 	bl	800f1a8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f1ec:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800f1f0:	b923      	cbnz	r3, 800f1fc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800f1f2:	4620      	mov	r0, r4
}
 800f1f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800f1f8:	f7ff b8f8 	b.w	800e3ec <vPortFree>
}
 800f1fc:	bd10      	pop	{r4, pc}

0800f1fe <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f1fe:	b570      	push	{r4, r5, r6, lr}
 800f200:	4604      	mov	r4, r0
 800f202:	460d      	mov	r5, r1
 800f204:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f206:	f7ff f9dd 	bl	800e5c4 <vPortEnterCritical>
 800f20a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f20e:	2bff      	cmp	r3, #255	; 0xff
 800f210:	bf04      	itt	eq
 800f212:	2300      	moveq	r3, #0
 800f214:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f218:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f21c:	2bff      	cmp	r3, #255	; 0xff
 800f21e:	bf04      	itt	eq
 800f220:	2300      	moveq	r3, #0
 800f222:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f226:	f7ff f9ed 	bl	800e604 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f22a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f22c:	b92b      	cbnz	r3, 800f23a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f22e:	4632      	mov	r2, r6
 800f230:	4629      	mov	r1, r5
 800f232:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f236:	f000 fbd5 	bl	800f9e4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800f23a:	4620      	mov	r0, r4
	}
 800f23c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800f240:	f7ff bb5a 	b.w	800e8f8 <prvUnlockQueue>

0800f244 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f248:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f24a:	f7ff f9bb 	bl	800e5c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f24e:	4b30      	ldr	r3, [pc, #192]	; (800f310 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800f250:	4e30      	ldr	r6, [pc, #192]	; (800f314 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800f252:	681a      	ldr	r2, [r3, #0]
 800f254:	4f30      	ldr	r7, [pc, #192]	; (800f318 <prvAddNewTaskToReadyList+0xd4>)
 800f256:	3201      	adds	r2, #1
 800f258:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800f25a:	6835      	ldr	r5, [r6, #0]
 800f25c:	2d00      	cmp	r5, #0
 800f25e:	d14b      	bne.n	800f2f8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800f260:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f262:	681b      	ldr	r3, [r3, #0]
 800f264:	2b01      	cmp	r3, #1
 800f266:	d11f      	bne.n	800f2a8 <prvAddNewTaskToReadyList+0x64>
 800f268:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f26a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f26c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f26e:	f7ff f8fb 	bl	800e468 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f272:	2d38      	cmp	r5, #56	; 0x38
 800f274:	f108 0814 	add.w	r8, r8, #20
 800f278:	d1f7      	bne.n	800f26a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f27a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800f340 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800f27e:	4d27      	ldr	r5, [pc, #156]	; (800f31c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800f280:	4640      	mov	r0, r8
 800f282:	f7ff f8f1 	bl	800e468 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f286:	4628      	mov	r0, r5
 800f288:	f7ff f8ee 	bl	800e468 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f28c:	4824      	ldr	r0, [pc, #144]	; (800f320 <prvAddNewTaskToReadyList+0xdc>)
 800f28e:	f7ff f8eb 	bl	800e468 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f292:	4824      	ldr	r0, [pc, #144]	; (800f324 <prvAddNewTaskToReadyList+0xe0>)
 800f294:	f7ff f8e8 	bl	800e468 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f298:	4823      	ldr	r0, [pc, #140]	; (800f328 <prvAddNewTaskToReadyList+0xe4>)
 800f29a:	f7ff f8e5 	bl	800e468 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f29e:	4b23      	ldr	r3, [pc, #140]	; (800f32c <prvAddNewTaskToReadyList+0xe8>)
 800f2a0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f2a4:	4b22      	ldr	r3, [pc, #136]	; (800f330 <prvAddNewTaskToReadyList+0xec>)
 800f2a6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800f2a8:	4a22      	ldr	r2, [pc, #136]	; (800f334 <prvAddNewTaskToReadyList+0xf0>)
 800f2aa:	6813      	ldr	r3, [r2, #0]
 800f2ac:	3301      	adds	r3, #1
 800f2ae:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800f2b0:	4a21      	ldr	r2, [pc, #132]	; (800f338 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f2b2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f2b4:	6811      	ldr	r1, [r2, #0]
 800f2b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f2b8:	2014      	movs	r0, #20
 800f2ba:	428b      	cmp	r3, r1
 800f2bc:	fb00 7003 	mla	r0, r0, r3, r7
 800f2c0:	f104 0104 	add.w	r1, r4, #4
 800f2c4:	bf88      	it	hi
 800f2c6:	6013      	strhi	r3, [r2, #0]
 800f2c8:	f7ff f8dc 	bl	800e484 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800f2cc:	f7ff f99a 	bl	800e604 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800f2d0:	4b1a      	ldr	r3, [pc, #104]	; (800f33c <prvAddNewTaskToReadyList+0xf8>)
 800f2d2:	681b      	ldr	r3, [r3, #0]
 800f2d4:	b173      	cbz	r3, 800f2f4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f2d6:	6833      	ldr	r3, [r6, #0]
 800f2d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f2da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f2dc:	429a      	cmp	r2, r3
 800f2de:	d209      	bcs.n	800f2f4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800f2e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f2e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f2e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2ec:	f3bf 8f4f 	dsb	sy
 800f2f0:	f3bf 8f6f 	isb	sy
}
 800f2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800f2f8:	4b10      	ldr	r3, [pc, #64]	; (800f33c <prvAddNewTaskToReadyList+0xf8>)
 800f2fa:	681b      	ldr	r3, [r3, #0]
 800f2fc:	2b00      	cmp	r3, #0
 800f2fe:	d1d3      	bne.n	800f2a8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f300:	6833      	ldr	r3, [r6, #0]
 800f302:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f304:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f306:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800f308:	bf98      	it	ls
 800f30a:	6034      	strls	r4, [r6, #0]
 800f30c:	e7cc      	b.n	800f2a8 <prvAddNewTaskToReadyList+0x64>
 800f30e:	bf00      	nop
 800f310:	2000daac 	.word	0x2000daac
 800f314:	2000d640 	.word	0x2000d640
 800f318:	2000d64c 	.word	0x2000d64c
 800f31c:	2000dad4 	.word	0x2000dad4
 800f320:	2000daf4 	.word	0x2000daf4
 800f324:	2000db20 	.word	0x2000db20
 800f328:	2000db0c 	.word	0x2000db0c
 800f32c:	2000d644 	.word	0x2000d644
 800f330:	2000d648 	.word	0x2000d648
 800f334:	2000dab8 	.word	0x2000dab8
 800f338:	2000dabc 	.word	0x2000dabc
 800f33c:	2000db08 	.word	0x2000db08
 800f340:	2000dac0 	.word	0x2000dac0

0800f344 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800f344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f346:	4b15      	ldr	r3, [pc, #84]	; (800f39c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f348:	4e15      	ldr	r6, [pc, #84]	; (800f3a0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800f34a:	681d      	ldr	r5, [r3, #0]
{
 800f34c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f34e:	6830      	ldr	r0, [r6, #0]
 800f350:	3004      	adds	r0, #4
{
 800f352:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f354:	f7ff f8b9 	bl	800e4ca <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f358:	1c63      	adds	r3, r4, #1
 800f35a:	d107      	bne.n	800f36c <prvAddCurrentTaskToDelayedList+0x28>
 800f35c:	b137      	cbz	r7, 800f36c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f35e:	6831      	ldr	r1, [r6, #0]
 800f360:	4810      	ldr	r0, [pc, #64]	; (800f3a4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800f362:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f366:	3104      	adds	r1, #4
 800f368:	f7ff b88c 	b.w	800e484 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f36c:	6833      	ldr	r3, [r6, #0]
 800f36e:	192c      	adds	r4, r5, r4
 800f370:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f372:	d307      	bcc.n	800f384 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f374:	4b0c      	ldr	r3, [pc, #48]	; (800f3a8 <prvAddCurrentTaskToDelayedList+0x64>)
 800f376:	6818      	ldr	r0, [r3, #0]
 800f378:	6831      	ldr	r1, [r6, #0]
}
 800f37a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f37e:	3104      	adds	r1, #4
 800f380:	f7ff b88c 	b.w	800e49c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f384:	4b09      	ldr	r3, [pc, #36]	; (800f3ac <prvAddCurrentTaskToDelayedList+0x68>)
 800f386:	6818      	ldr	r0, [r3, #0]
 800f388:	6831      	ldr	r1, [r6, #0]
 800f38a:	3104      	adds	r1, #4
 800f38c:	f7ff f886 	bl	800e49c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f390:	4b07      	ldr	r3, [pc, #28]	; (800f3b0 <prvAddCurrentTaskToDelayedList+0x6c>)
 800f392:	681a      	ldr	r2, [r3, #0]
 800f394:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800f396:	bf88      	it	hi
 800f398:	601c      	strhi	r4, [r3, #0]
}
 800f39a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f39c:	2000db34 	.word	0x2000db34
 800f3a0:	2000d640 	.word	0x2000d640
 800f3a4:	2000db0c 	.word	0x2000db0c
 800f3a8:	2000d648 	.word	0x2000d648
 800f3ac:	2000d644 	.word	0x2000d644
 800f3b0:	2000dae8 	.word	0x2000dae8

0800f3b4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f3b4:	4a06      	ldr	r2, [pc, #24]	; (800f3d0 <prvResetNextTaskUnblockTime+0x1c>)
 800f3b6:	6813      	ldr	r3, [r2, #0]
 800f3b8:	6819      	ldr	r1, [r3, #0]
 800f3ba:	4b06      	ldr	r3, [pc, #24]	; (800f3d4 <prvResetNextTaskUnblockTime+0x20>)
 800f3bc:	b919      	cbnz	r1, 800f3c6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f3be:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3c2:	601a      	str	r2, [r3, #0]
}
 800f3c4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3c6:	6812      	ldr	r2, [r2, #0]
 800f3c8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f3ca:	68d2      	ldr	r2, [r2, #12]
 800f3cc:	6852      	ldr	r2, [r2, #4]
 800f3ce:	e7f8      	b.n	800f3c2 <prvResetNextTaskUnblockTime+0xe>
 800f3d0:	2000d644 	.word	0x2000d644
 800f3d4:	2000dae8 	.word	0x2000dae8

0800f3d8 <prvDeleteTCB>:
	{
 800f3d8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f3da:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800f3de:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f3e0:	b93b      	cbnz	r3, 800f3f2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800f3e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f3e4:	f7ff f802 	bl	800e3ec <vPortFree>
				vPortFree( pxTCB );
 800f3e8:	4620      	mov	r0, r4
	}
 800f3ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800f3ee:	f7fe bffd 	b.w	800e3ec <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f3f2:	2b01      	cmp	r3, #1
 800f3f4:	d0f9      	beq.n	800f3ea <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f3f6:	2b02      	cmp	r3, #2
 800f3f8:	d008      	beq.n	800f40c <prvDeleteTCB+0x34>
 800f3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3fe:	f383 8811 	msr	BASEPRI, r3
 800f402:	f3bf 8f6f 	isb	sy
 800f406:	f3bf 8f4f 	dsb	sy
 800f40a:	e7fe      	b.n	800f40a <prvDeleteTCB+0x32>
	}
 800f40c:	bd10      	pop	{r4, pc}
	...

0800f410 <prvIdleTask>:
{
 800f410:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f412:	4c14      	ldr	r4, [pc, #80]	; (800f464 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f414:	4f14      	ldr	r7, [pc, #80]	; (800f468 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800f416:	4d15      	ldr	r5, [pc, #84]	; (800f46c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f418:	6823      	ldr	r3, [r4, #0]
 800f41a:	b983      	cbnz	r3, 800f43e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f41c:	4b14      	ldr	r3, [pc, #80]	; (800f470 <prvIdleTask+0x60>)
 800f41e:	681b      	ldr	r3, [r3, #0]
 800f420:	2b01      	cmp	r3, #1
 800f422:	d909      	bls.n	800f438 <prvIdleTask+0x28>
				taskYIELD();
 800f424:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f428:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f42c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f430:	f3bf 8f4f 	dsb	sy
 800f434:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800f438:	f7f2 fb76 	bl	8001b28 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800f43c:	e7eb      	b.n	800f416 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800f43e:	f7ff f8c1 	bl	800e5c4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f442:	68fb      	ldr	r3, [r7, #12]
 800f444:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f446:	1d30      	adds	r0, r6, #4
 800f448:	f7ff f83f 	bl	800e4ca <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f44c:	682b      	ldr	r3, [r5, #0]
 800f44e:	3b01      	subs	r3, #1
 800f450:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f452:	6823      	ldr	r3, [r4, #0]
 800f454:	3b01      	subs	r3, #1
 800f456:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800f458:	f7ff f8d4 	bl	800e604 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800f45c:	4630      	mov	r0, r6
 800f45e:	f7ff ffbb 	bl	800f3d8 <prvDeleteTCB>
 800f462:	e7d9      	b.n	800f418 <prvIdleTask+0x8>
 800f464:	2000dab0 	.word	0x2000dab0
 800f468:	2000db20 	.word	0x2000db20
 800f46c:	2000daac 	.word	0x2000daac
 800f470:	2000d64c 	.word	0x2000d64c

0800f474 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f478:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f47c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f480:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f482:	4606      	mov	r6, r0
 800f484:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f486:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f488:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f48a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f48c:	f016 fb12 	bl	8025ab4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f490:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800f492:	f1a9 0904 	sub.w	r9, r9, #4
 800f496:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f498:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800f49c:	b3b5      	cbz	r5, 800f50c <prvInitialiseNewTask.constprop.0+0x98>
 800f49e:	1e6b      	subs	r3, r5, #1
 800f4a0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800f4a4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f4a6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f4aa:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800f4ae:	b108      	cbz	r0, 800f4b4 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800f4b0:	42ab      	cmp	r3, r5
 800f4b2:	d1f8      	bne.n	800f4a6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f4b4:	2300      	movs	r3, #0
 800f4b6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f4ba:	9d08      	ldr	r5, [sp, #32]
 800f4bc:	2d37      	cmp	r5, #55	; 0x37
 800f4be:	bf28      	it	cs
 800f4c0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f4c2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f4c6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f4c8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f4ca:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f4cc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f4d0:	f7fe ffd5 	bl	800e47e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4d4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f4d8:	f104 0018 	add.w	r0, r4, #24
 800f4dc:	f7fe ffcf 	bl	800e47e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800f4e0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f4e4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4e6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f4e8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f4ea:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f4ee:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f4f2:	463a      	mov	r2, r7
 800f4f4:	4631      	mov	r1, r6
 800f4f6:	4648      	mov	r0, r9
 800f4f8:	f7ff f836 	bl	800e568 <pxPortInitialiseStack>
 800f4fc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f4fe:	f1b8 0f00 	cmp.w	r8, #0
 800f502:	d001      	beq.n	800f508 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f504:	f8c8 4000 	str.w	r4, [r8]
}
 800f508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f50c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f510:	e7d3      	b.n	800f4ba <prvInitialiseNewTask.constprop.0+0x46>

0800f512 <xTaskCreateStatic>:
	{
 800f512:	b570      	push	{r4, r5, r6, lr}
 800f514:	b086      	sub	sp, #24
 800f516:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f51a:	b945      	cbnz	r5, 800f52e <xTaskCreateStatic+0x1c>
 800f51c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f520:	f383 8811 	msr	BASEPRI, r3
 800f524:	f3bf 8f6f 	isb	sy
 800f528:	f3bf 8f4f 	dsb	sy
 800f52c:	e7fe      	b.n	800f52c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800f52e:	b944      	cbnz	r4, 800f542 <xTaskCreateStatic+0x30>
 800f530:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f534:	f383 8811 	msr	BASEPRI, r3
 800f538:	f3bf 8f6f 	isb	sy
 800f53c:	f3bf 8f4f 	dsb	sy
 800f540:	e7fe      	b.n	800f540 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f542:	2660      	movs	r6, #96	; 0x60
 800f544:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f546:	9e05      	ldr	r6, [sp, #20]
 800f548:	2e60      	cmp	r6, #96	; 0x60
 800f54a:	d008      	beq.n	800f55e <xTaskCreateStatic+0x4c>
 800f54c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f550:	f383 8811 	msr	BASEPRI, r3
 800f554:	f3bf 8f6f 	isb	sy
 800f558:	f3bf 8f4f 	dsb	sy
 800f55c:	e7fe      	b.n	800f55c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f55e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f560:	2502      	movs	r5, #2
 800f562:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f566:	ad04      	add	r5, sp, #16
 800f568:	9501      	str	r5, [sp, #4]
 800f56a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800f56c:	9402      	str	r4, [sp, #8]
 800f56e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f570:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f572:	f7ff ff7f 	bl	800f474 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f576:	4620      	mov	r0, r4
 800f578:	f7ff fe64 	bl	800f244 <prvAddNewTaskToReadyList>
	}
 800f57c:	9804      	ldr	r0, [sp, #16]
 800f57e:	b006      	add	sp, #24
 800f580:	bd70      	pop	{r4, r5, r6, pc}

0800f582 <xTaskCreate>:
	{
 800f582:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f586:	4607      	mov	r7, r0
 800f588:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f58a:	0090      	lsls	r0, r2, #2
	{
 800f58c:	4688      	mov	r8, r1
 800f58e:	4616      	mov	r6, r2
 800f590:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f592:	f7fe fe93 	bl	800e2bc <pvPortMalloc>
			if( pxStack != NULL )
 800f596:	4605      	mov	r5, r0
 800f598:	b1e8      	cbz	r0, 800f5d6 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f59a:	2060      	movs	r0, #96	; 0x60
 800f59c:	f7fe fe8e 	bl	800e2bc <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f5a0:	4604      	mov	r4, r0
 800f5a2:	b1a8      	cbz	r0, 800f5d0 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f5a4:	2300      	movs	r3, #0
 800f5a6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f5aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800f5ac:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f5ae:	9301      	str	r3, [sp, #4]
 800f5b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f5b2:	9002      	str	r0, [sp, #8]
 800f5b4:	9300      	str	r3, [sp, #0]
 800f5b6:	4632      	mov	r2, r6
 800f5b8:	464b      	mov	r3, r9
 800f5ba:	4641      	mov	r1, r8
 800f5bc:	4638      	mov	r0, r7
 800f5be:	f7ff ff59 	bl	800f474 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f5c2:	4620      	mov	r0, r4
 800f5c4:	f7ff fe3e 	bl	800f244 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f5c8:	2001      	movs	r0, #1
	}
 800f5ca:	b005      	add	sp, #20
 800f5cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f5d0:	4628      	mov	r0, r5
 800f5d2:	f7fe ff0b 	bl	800e3ec <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f5d6:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800f5da:	e7f6      	b.n	800f5ca <xTaskCreate+0x48>

0800f5dc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f5dc:	4a02      	ldr	r2, [pc, #8]	; (800f5e8 <vTaskSuspendAll+0xc>)
 800f5de:	6813      	ldr	r3, [r2, #0]
 800f5e0:	3301      	adds	r3, #1
 800f5e2:	6013      	str	r3, [r2, #0]
}
 800f5e4:	4770      	bx	lr
 800f5e6:	bf00      	nop
 800f5e8:	2000dab4 	.word	0x2000dab4

0800f5ec <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f5ec:	4b01      	ldr	r3, [pc, #4]	; (800f5f4 <xTaskGetTickCount+0x8>)
 800f5ee:	6818      	ldr	r0, [r3, #0]
}
 800f5f0:	4770      	bx	lr
 800f5f2:	bf00      	nop
 800f5f4:	2000db34 	.word	0x2000db34

0800f5f8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f5f8:	4b3f      	ldr	r3, [pc, #252]	; (800f6f8 <xTaskIncrementTick+0x100>)
 800f5fa:	681b      	ldr	r3, [r3, #0]
{
 800f5fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f600:	2b00      	cmp	r3, #0
 800f602:	d173      	bne.n	800f6ec <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f604:	4b3d      	ldr	r3, [pc, #244]	; (800f6fc <xTaskIncrementTick+0x104>)
 800f606:	681d      	ldr	r5, [r3, #0]
 800f608:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800f60a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f60c:	b9bd      	cbnz	r5, 800f63e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800f60e:	4b3c      	ldr	r3, [pc, #240]	; (800f700 <xTaskIncrementTick+0x108>)
 800f610:	681a      	ldr	r2, [r3, #0]
 800f612:	6812      	ldr	r2, [r2, #0]
 800f614:	b142      	cbz	r2, 800f628 <xTaskIncrementTick+0x30>
 800f616:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f61a:	f383 8811 	msr	BASEPRI, r3
 800f61e:	f3bf 8f6f 	isb	sy
 800f622:	f3bf 8f4f 	dsb	sy
 800f626:	e7fe      	b.n	800f626 <xTaskIncrementTick+0x2e>
 800f628:	4a36      	ldr	r2, [pc, #216]	; (800f704 <xTaskIncrementTick+0x10c>)
 800f62a:	6819      	ldr	r1, [r3, #0]
 800f62c:	6810      	ldr	r0, [r2, #0]
 800f62e:	6018      	str	r0, [r3, #0]
 800f630:	6011      	str	r1, [r2, #0]
 800f632:	4a35      	ldr	r2, [pc, #212]	; (800f708 <xTaskIncrementTick+0x110>)
 800f634:	6813      	ldr	r3, [r2, #0]
 800f636:	3301      	adds	r3, #1
 800f638:	6013      	str	r3, [r2, #0]
 800f63a:	f7ff febb 	bl	800f3b4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f63e:	4e33      	ldr	r6, [pc, #204]	; (800f70c <xTaskIncrementTick+0x114>)
 800f640:	4f33      	ldr	r7, [pc, #204]	; (800f710 <xTaskIncrementTick+0x118>)
 800f642:	6833      	ldr	r3, [r6, #0]
 800f644:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800f71c <xTaskIncrementTick+0x124>
 800f648:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800f64a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f64e:	d211      	bcs.n	800f674 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f650:	f8d8 3000 	ldr.w	r3, [r8]
 800f654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f656:	2214      	movs	r2, #20
 800f658:	4353      	muls	r3, r2
 800f65a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800f65c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800f65e:	4b2d      	ldr	r3, [pc, #180]	; (800f714 <xTaskIncrementTick+0x11c>)
 800f660:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800f662:	bf28      	it	cs
 800f664:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800f666:	2b00      	cmp	r3, #0
 800f668:	bf18      	it	ne
 800f66a:	2401      	movne	r4, #1
}
 800f66c:	4620      	mov	r0, r4
 800f66e:	b003      	add	sp, #12
 800f670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f674:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800f700 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800f678:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800f720 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f67c:	f8d9 3000 	ldr.w	r3, [r9]
 800f680:	681b      	ldr	r3, [r3, #0]
 800f682:	b91b      	cbnz	r3, 800f68c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f684:	f04f 33ff 	mov.w	r3, #4294967295
 800f688:	6033      	str	r3, [r6, #0]
					break;
 800f68a:	e7e1      	b.n	800f650 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f68c:	f8d9 3000 	ldr.w	r3, [r9]
 800f690:	68db      	ldr	r3, [r3, #12]
 800f692:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f696:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800f69a:	4295      	cmp	r5, r2
 800f69c:	d201      	bcs.n	800f6a2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800f69e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f6a0:	e7d6      	b.n	800f650 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f6a2:	f10b 0104 	add.w	r1, fp, #4
 800f6a6:	4608      	mov	r0, r1
 800f6a8:	9101      	str	r1, [sp, #4]
 800f6aa:	f7fe ff0e 	bl	800e4ca <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f6ae:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800f6b2:	9901      	ldr	r1, [sp, #4]
 800f6b4:	b122      	cbz	r2, 800f6c0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f6b6:	f10b 0018 	add.w	r0, fp, #24
 800f6ba:	f7fe ff06 	bl	800e4ca <uxListRemove>
 800f6be:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f6c0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800f6c4:	f8da 2000 	ldr.w	r2, [sl]
 800f6c8:	2314      	movs	r3, #20
 800f6ca:	4290      	cmp	r0, r2
 800f6cc:	bf88      	it	hi
 800f6ce:	f8ca 0000 	strhi.w	r0, [sl]
 800f6d2:	fb03 7000 	mla	r0, r3, r0, r7
 800f6d6:	f7fe fed5 	bl	800e484 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f6da:	f8d8 1000 	ldr.w	r1, [r8]
 800f6de:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800f6e2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800f6e4:	429a      	cmp	r2, r3
 800f6e6:	bf28      	it	cs
 800f6e8:	2401      	movcs	r4, #1
 800f6ea:	e7c7      	b.n	800f67c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800f6ec:	4a0a      	ldr	r2, [pc, #40]	; (800f718 <xTaskIncrementTick+0x120>)
 800f6ee:	6813      	ldr	r3, [r2, #0]
 800f6f0:	3301      	adds	r3, #1
 800f6f2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800f6f4:	2400      	movs	r4, #0
	return xSwitchRequired;
 800f6f6:	e7b9      	b.n	800f66c <xTaskIncrementTick+0x74>
 800f6f8:	2000dab4 	.word	0x2000dab4
 800f6fc:	2000db34 	.word	0x2000db34
 800f700:	2000d644 	.word	0x2000d644
 800f704:	2000d648 	.word	0x2000d648
 800f708:	2000daec 	.word	0x2000daec
 800f70c:	2000dae8 	.word	0x2000dae8
 800f710:	2000d64c 	.word	0x2000d64c
 800f714:	2000db38 	.word	0x2000db38
 800f718:	2000daf0 	.word	0x2000daf0
 800f71c:	2000d640 	.word	0x2000d640
 800f720:	2000dabc 	.word	0x2000dabc

0800f724 <xTaskResumeAll>:
{
 800f724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800f726:	4c31      	ldr	r4, [pc, #196]	; (800f7ec <xTaskResumeAll+0xc8>)
 800f728:	6823      	ldr	r3, [r4, #0]
 800f72a:	b943      	cbnz	r3, 800f73e <xTaskResumeAll+0x1a>
 800f72c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f730:	f383 8811 	msr	BASEPRI, r3
 800f734:	f3bf 8f6f 	isb	sy
 800f738:	f3bf 8f4f 	dsb	sy
 800f73c:	e7fe      	b.n	800f73c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800f73e:	f7fe ff41 	bl	800e5c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f742:	6823      	ldr	r3, [r4, #0]
 800f744:	3b01      	subs	r3, #1
 800f746:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f748:	6824      	ldr	r4, [r4, #0]
 800f74a:	b12c      	cbz	r4, 800f758 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800f74c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800f74e:	f7fe ff59 	bl	800e604 <vPortExitCritical>
}
 800f752:	4620      	mov	r0, r4
 800f754:	b003      	add	sp, #12
 800f756:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f758:	4b25      	ldr	r3, [pc, #148]	; (800f7f0 <xTaskResumeAll+0xcc>)
 800f75a:	681b      	ldr	r3, [r3, #0]
 800f75c:	2b00      	cmp	r3, #0
 800f75e:	d0f5      	beq.n	800f74c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f760:	4d24      	ldr	r5, [pc, #144]	; (800f7f4 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800f762:	4e25      	ldr	r6, [pc, #148]	; (800f7f8 <xTaskResumeAll+0xd4>)
 800f764:	4f25      	ldr	r7, [pc, #148]	; (800f7fc <xTaskResumeAll+0xd8>)
 800f766:	e01e      	b.n	800f7a6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f768:	68eb      	ldr	r3, [r5, #12]
 800f76a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f76c:	f104 0018 	add.w	r0, r4, #24
 800f770:	f7fe feab 	bl	800e4ca <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f774:	1d21      	adds	r1, r4, #4
 800f776:	4608      	mov	r0, r1
 800f778:	9101      	str	r1, [sp, #4]
 800f77a:	f7fe fea6 	bl	800e4ca <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f77e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f780:	6832      	ldr	r2, [r6, #0]
 800f782:	9901      	ldr	r1, [sp, #4]
 800f784:	2014      	movs	r0, #20
 800f786:	4293      	cmp	r3, r2
 800f788:	fb00 7003 	mla	r0, r0, r3, r7
 800f78c:	bf88      	it	hi
 800f78e:	6033      	strhi	r3, [r6, #0]
 800f790:	f7fe fe78 	bl	800e484 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f794:	4b1a      	ldr	r3, [pc, #104]	; (800f800 <xTaskResumeAll+0xdc>)
 800f796:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f798:	681b      	ldr	r3, [r3, #0]
 800f79a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f79c:	429a      	cmp	r2, r3
 800f79e:	d302      	bcc.n	800f7a6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800f7a0:	4b18      	ldr	r3, [pc, #96]	; (800f804 <xTaskResumeAll+0xe0>)
 800f7a2:	2201      	movs	r2, #1
 800f7a4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f7a6:	682b      	ldr	r3, [r5, #0]
 800f7a8:	2b00      	cmp	r3, #0
 800f7aa:	d1dd      	bne.n	800f768 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800f7ac:	b10c      	cbz	r4, 800f7b2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800f7ae:	f7ff fe01 	bl	800f3b4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f7b2:	4d15      	ldr	r5, [pc, #84]	; (800f808 <xTaskResumeAll+0xe4>)
 800f7b4:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f7b6:	b144      	cbz	r4, 800f7ca <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800f7b8:	4e12      	ldr	r6, [pc, #72]	; (800f804 <xTaskResumeAll+0xe0>)
 800f7ba:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800f7bc:	f7ff ff1c 	bl	800f5f8 <xTaskIncrementTick>
 800f7c0:	b100      	cbz	r0, 800f7c4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800f7c2:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f7c4:	3c01      	subs	r4, #1
 800f7c6:	d1f9      	bne.n	800f7bc <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800f7c8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800f7ca:	4b0e      	ldr	r3, [pc, #56]	; (800f804 <xTaskResumeAll+0xe0>)
 800f7cc:	681b      	ldr	r3, [r3, #0]
 800f7ce:	2b00      	cmp	r3, #0
 800f7d0:	d0bc      	beq.n	800f74c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800f7d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f7d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f7da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f7de:	f3bf 8f4f 	dsb	sy
 800f7e2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f7e6:	2401      	movs	r4, #1
 800f7e8:	e7b1      	b.n	800f74e <xTaskResumeAll+0x2a>
 800f7ea:	bf00      	nop
 800f7ec:	2000dab4 	.word	0x2000dab4
 800f7f0:	2000daac 	.word	0x2000daac
 800f7f4:	2000daf4 	.word	0x2000daf4
 800f7f8:	2000dabc 	.word	0x2000dabc
 800f7fc:	2000d64c 	.word	0x2000d64c
 800f800:	2000d640 	.word	0x2000d640
 800f804:	2000db38 	.word	0x2000db38
 800f808:	2000daf0 	.word	0x2000daf0

0800f80c <vTaskDelay>:
	{
 800f80c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f80e:	b950      	cbnz	r0, 800f826 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f810:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f814:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f818:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f81c:	f3bf 8f4f 	dsb	sy
 800f820:	f3bf 8f6f 	isb	sy
	}
 800f824:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f826:	4b0a      	ldr	r3, [pc, #40]	; (800f850 <vTaskDelay+0x44>)
 800f828:	6819      	ldr	r1, [r3, #0]
 800f82a:	b141      	cbz	r1, 800f83e <vTaskDelay+0x32>
 800f82c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f830:	f383 8811 	msr	BASEPRI, r3
 800f834:	f3bf 8f6f 	isb	sy
 800f838:	f3bf 8f4f 	dsb	sy
 800f83c:	e7fe      	b.n	800f83c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800f83e:	f7ff fecd 	bl	800f5dc <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800f842:	f7ff fd7f 	bl	800f344 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800f846:	f7ff ff6d 	bl	800f724 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800f84a:	2800      	cmp	r0, #0
 800f84c:	d0e0      	beq.n	800f810 <vTaskDelay+0x4>
 800f84e:	e7e9      	b.n	800f824 <vTaskDelay+0x18>
 800f850:	2000dab4 	.word	0x2000dab4

0800f854 <vTaskSetApplicationTaskTag>:
	{
 800f854:	b538      	push	{r3, r4, r5, lr}
 800f856:	460d      	mov	r5, r1
		if( xTask == NULL )
 800f858:	4604      	mov	r4, r0
 800f85a:	b908      	cbnz	r0, 800f860 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800f85c:	4b04      	ldr	r3, [pc, #16]	; (800f870 <vTaskSetApplicationTaskTag+0x1c>)
 800f85e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800f860:	f7fe feb0 	bl	800e5c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800f864:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800f866:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800f86a:	f7fe becb 	b.w	800e604 <vPortExitCritical>
 800f86e:	bf00      	nop
 800f870:	2000d640 	.word	0x2000d640

0800f874 <xTaskCallApplicationTaskHook>:
	{
 800f874:	4603      	mov	r3, r0
 800f876:	4608      	mov	r0, r1
		if( xTask == NULL )
 800f878:	b90b      	cbnz	r3, 800f87e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800f87a:	4b03      	ldr	r3, [pc, #12]	; (800f888 <xTaskCallApplicationTaskHook+0x14>)
 800f87c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800f87e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f880:	b103      	cbz	r3, 800f884 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800f882:	4718      	bx	r3
	}
 800f884:	4618      	mov	r0, r3
 800f886:	4770      	bx	lr
 800f888:	2000d640 	.word	0x2000d640

0800f88c <vTaskStartScheduler>:
{
 800f88c:	b510      	push	{r4, lr}
 800f88e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f890:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f892:	aa07      	add	r2, sp, #28
 800f894:	a906      	add	r1, sp, #24
 800f896:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f898:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f89c:	f7fe fcd2 	bl	800e244 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f8a0:	9b05      	ldr	r3, [sp, #20]
 800f8a2:	9302      	str	r3, [sp, #8]
 800f8a4:	9b06      	ldr	r3, [sp, #24]
 800f8a6:	9a07      	ldr	r2, [sp, #28]
 800f8a8:	4919      	ldr	r1, [pc, #100]	; (800f910 <vTaskStartScheduler+0x84>)
 800f8aa:	481a      	ldr	r0, [pc, #104]	; (800f914 <vTaskStartScheduler+0x88>)
 800f8ac:	e9cd 4300 	strd	r4, r3, [sp]
 800f8b0:	4623      	mov	r3, r4
 800f8b2:	f7ff fe2e 	bl	800f512 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800f8b6:	b340      	cbz	r0, 800f90a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800f8b8:	f000 fa8a 	bl	800fdd0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f8bc:	2801      	cmp	r0, #1
 800f8be:	d119      	bne.n	800f8f4 <vTaskStartScheduler+0x68>
 800f8c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8c4:	f383 8811 	msr	BASEPRI, r3
 800f8c8:	f3bf 8f6f 	isb	sy
 800f8cc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800f8d0:	4b11      	ldr	r3, [pc, #68]	; (800f918 <vTaskStartScheduler+0x8c>)
 800f8d2:	f04f 32ff 	mov.w	r2, #4294967295
 800f8d6:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800f8d8:	4b10      	ldr	r3, [pc, #64]	; (800f91c <vTaskStartScheduler+0x90>)
 800f8da:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f8dc:	4b10      	ldr	r3, [pc, #64]	; (800f920 <vTaskStartScheduler+0x94>)
 800f8de:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800f8e0:	4b10      	ldr	r3, [pc, #64]	; (800f924 <vTaskStartScheduler+0x98>)
 800f8e2:	4621      	mov	r1, r4
 800f8e4:	6818      	ldr	r0, [r3, #0]
 800f8e6:	f7ff ffc5 	bl	800f874 <xTaskCallApplicationTaskHook>
}
 800f8ea:	b008      	add	sp, #32
 800f8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f8f0:	f7fe bef8 	b.w	800e6e4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f8f4:	3001      	adds	r0, #1
 800f8f6:	d108      	bne.n	800f90a <vTaskStartScheduler+0x7e>
 800f8f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8fc:	f383 8811 	msr	BASEPRI, r3
 800f900:	f3bf 8f6f 	isb	sy
 800f904:	f3bf 8f4f 	dsb	sy
 800f908:	e7fe      	b.n	800f908 <vTaskStartScheduler+0x7c>
}
 800f90a:	b008      	add	sp, #32
 800f90c:	bd10      	pop	{r4, pc}
 800f90e:	bf00      	nop
 800f910:	080284ad 	.word	0x080284ad
 800f914:	0800f411 	.word	0x0800f411
 800f918:	2000dae8 	.word	0x2000dae8
 800f91c:	2000db08 	.word	0x2000db08
 800f920:	2000db34 	.word	0x2000db34
 800f924:	2000d640 	.word	0x2000d640

0800f928 <vTaskSwitchContext>:
{
 800f928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f92a:	4b1c      	ldr	r3, [pc, #112]	; (800f99c <vTaskSwitchContext+0x74>)
 800f92c:	681a      	ldr	r2, [r3, #0]
 800f92e:	4b1c      	ldr	r3, [pc, #112]	; (800f9a0 <vTaskSwitchContext+0x78>)
 800f930:	b112      	cbz	r2, 800f938 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800f932:	2201      	movs	r2, #1
 800f934:	601a      	str	r2, [r3, #0]
}
 800f936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800f938:	4c1a      	ldr	r4, [pc, #104]	; (800f9a4 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800f93a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f93c:	4e1a      	ldr	r6, [pc, #104]	; (800f9a8 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800f93e:	6820      	ldr	r0, [r4, #0]
 800f940:	2101      	movs	r1, #1
 800f942:	f7ff ff97 	bl	800f874 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f946:	6832      	ldr	r2, [r6, #0]
 800f948:	4918      	ldr	r1, [pc, #96]	; (800f9ac <vTaskSwitchContext+0x84>)
 800f94a:	2714      	movs	r7, #20
 800f94c:	fb07 f302 	mul.w	r3, r7, r2
 800f950:	18c8      	adds	r0, r1, r3
 800f952:	58cd      	ldr	r5, [r1, r3]
 800f954:	b1ad      	cbz	r5, 800f982 <vTaskSwitchContext+0x5a>
 800f956:	6845      	ldr	r5, [r0, #4]
 800f958:	3308      	adds	r3, #8
 800f95a:	686d      	ldr	r5, [r5, #4]
 800f95c:	6045      	str	r5, [r0, #4]
 800f95e:	440b      	add	r3, r1
 800f960:	429d      	cmp	r5, r3
 800f962:	bf04      	itt	eq
 800f964:	686b      	ldreq	r3, [r5, #4]
 800f966:	6043      	streq	r3, [r0, #4]
 800f968:	2314      	movs	r3, #20
 800f96a:	fb03 1102 	mla	r1, r3, r2, r1
 800f96e:	684b      	ldr	r3, [r1, #4]
 800f970:	68db      	ldr	r3, [r3, #12]
 800f972:	6023      	str	r3, [r4, #0]
 800f974:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800f976:	6820      	ldr	r0, [r4, #0]
 800f978:	2100      	movs	r1, #0
}
 800f97a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800f97e:	f7ff bf79 	b.w	800f874 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f982:	b942      	cbnz	r2, 800f996 <vTaskSwitchContext+0x6e>
 800f984:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f988:	f383 8811 	msr	BASEPRI, r3
 800f98c:	f3bf 8f6f 	isb	sy
 800f990:	f3bf 8f4f 	dsb	sy
 800f994:	e7fe      	b.n	800f994 <vTaskSwitchContext+0x6c>
 800f996:	3a01      	subs	r2, #1
 800f998:	e7d8      	b.n	800f94c <vTaskSwitchContext+0x24>
 800f99a:	bf00      	nop
 800f99c:	2000dab4 	.word	0x2000dab4
 800f9a0:	2000db38 	.word	0x2000db38
 800f9a4:	2000d640 	.word	0x2000d640
 800f9a8:	2000dabc 	.word	0x2000dabc
 800f9ac:	2000d64c 	.word	0x2000d64c

0800f9b0 <vTaskPlaceOnEventList>:
{
 800f9b0:	b510      	push	{r4, lr}
 800f9b2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800f9b4:	b940      	cbnz	r0, 800f9c8 <vTaskPlaceOnEventList+0x18>
 800f9b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9ba:	f383 8811 	msr	BASEPRI, r3
 800f9be:	f3bf 8f6f 	isb	sy
 800f9c2:	f3bf 8f4f 	dsb	sy
 800f9c6:	e7fe      	b.n	800f9c6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f9c8:	4b05      	ldr	r3, [pc, #20]	; (800f9e0 <vTaskPlaceOnEventList+0x30>)
 800f9ca:	6819      	ldr	r1, [r3, #0]
 800f9cc:	3118      	adds	r1, #24
 800f9ce:	f7fe fd65 	bl	800e49c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800f9d2:	4620      	mov	r0, r4
 800f9d4:	2101      	movs	r1, #1
}
 800f9d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800f9da:	f7ff bcb3 	b.w	800f344 <prvAddCurrentTaskToDelayedList>
 800f9de:	bf00      	nop
 800f9e0:	2000d640 	.word	0x2000d640

0800f9e4 <vTaskPlaceOnEventListRestricted>:
	{
 800f9e4:	b538      	push	{r3, r4, r5, lr}
 800f9e6:	460d      	mov	r5, r1
 800f9e8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800f9ea:	b940      	cbnz	r0, 800f9fe <vTaskPlaceOnEventListRestricted+0x1a>
 800f9ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9f0:	f383 8811 	msr	BASEPRI, r3
 800f9f4:	f3bf 8f6f 	isb	sy
 800f9f8:	f3bf 8f4f 	dsb	sy
 800f9fc:	e7fe      	b.n	800f9fc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f9fe:	4b07      	ldr	r3, [pc, #28]	; (800fa1c <vTaskPlaceOnEventListRestricted+0x38>)
 800fa00:	6819      	ldr	r1, [r3, #0]
 800fa02:	3118      	adds	r1, #24
 800fa04:	f7fe fd3e 	bl	800e484 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800fa08:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800fa0a:	4621      	mov	r1, r4
 800fa0c:	bf0c      	ite	eq
 800fa0e:	4628      	moveq	r0, r5
 800fa10:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800fa14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800fa18:	f7ff bc94 	b.w	800f344 <prvAddCurrentTaskToDelayedList>
 800fa1c:	2000d640 	.word	0x2000d640

0800fa20 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa20:	68c3      	ldr	r3, [r0, #12]
{
 800fa22:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa24:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800fa26:	b944      	cbnz	r4, 800fa3a <xTaskRemoveFromEventList+0x1a>
 800fa28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa2c:	f383 8811 	msr	BASEPRI, r3
 800fa30:	f3bf 8f6f 	isb	sy
 800fa34:	f3bf 8f4f 	dsb	sy
 800fa38:	e7fe      	b.n	800fa38 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fa3a:	f104 0118 	add.w	r1, r4, #24
 800fa3e:	4608      	mov	r0, r1
 800fa40:	9101      	str	r1, [sp, #4]
 800fa42:	f7fe fd42 	bl	800e4ca <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa46:	4b12      	ldr	r3, [pc, #72]	; (800fa90 <xTaskRemoveFromEventList+0x70>)
 800fa48:	9901      	ldr	r1, [sp, #4]
 800fa4a:	681b      	ldr	r3, [r3, #0]
 800fa4c:	b9eb      	cbnz	r3, 800fa8a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fa4e:	1d21      	adds	r1, r4, #4
 800fa50:	4608      	mov	r0, r1
 800fa52:	9101      	str	r1, [sp, #4]
 800fa54:	f7fe fd39 	bl	800e4ca <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fa58:	4a0e      	ldr	r2, [pc, #56]	; (800fa94 <xTaskRemoveFromEventList+0x74>)
 800fa5a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa5c:	6810      	ldr	r0, [r2, #0]
 800fa5e:	9901      	ldr	r1, [sp, #4]
 800fa60:	4283      	cmp	r3, r0
 800fa62:	bf88      	it	hi
 800fa64:	6013      	strhi	r3, [r2, #0]
 800fa66:	4a0c      	ldr	r2, [pc, #48]	; (800fa98 <xTaskRemoveFromEventList+0x78>)
 800fa68:	2014      	movs	r0, #20
 800fa6a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fa6e:	f7fe fd09 	bl	800e484 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fa72:	4b0a      	ldr	r3, [pc, #40]	; (800fa9c <xTaskRemoveFromEventList+0x7c>)
 800fa74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fa76:	681b      	ldr	r3, [r3, #0]
 800fa78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa7a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fa7c:	bf85      	ittet	hi
 800fa7e:	4b08      	ldrhi	r3, [pc, #32]	; (800faa0 <xTaskRemoveFromEventList+0x80>)
 800fa80:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fa82:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fa84:	6018      	strhi	r0, [r3, #0]
}
 800fa86:	b002      	add	sp, #8
 800fa88:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fa8a:	4806      	ldr	r0, [pc, #24]	; (800faa4 <xTaskRemoveFromEventList+0x84>)
 800fa8c:	e7ef      	b.n	800fa6e <xTaskRemoveFromEventList+0x4e>
 800fa8e:	bf00      	nop
 800fa90:	2000dab4 	.word	0x2000dab4
 800fa94:	2000dabc 	.word	0x2000dabc
 800fa98:	2000d64c 	.word	0x2000d64c
 800fa9c:	2000d640 	.word	0x2000d640
 800faa0:	2000db38 	.word	0x2000db38
 800faa4:	2000daf4 	.word	0x2000daf4

0800faa8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800faa8:	4b03      	ldr	r3, [pc, #12]	; (800fab8 <vTaskInternalSetTimeOutState+0x10>)
 800faaa:	681b      	ldr	r3, [r3, #0]
 800faac:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800faae:	4b03      	ldr	r3, [pc, #12]	; (800fabc <vTaskInternalSetTimeOutState+0x14>)
 800fab0:	681b      	ldr	r3, [r3, #0]
 800fab2:	6043      	str	r3, [r0, #4]
}
 800fab4:	4770      	bx	lr
 800fab6:	bf00      	nop
 800fab8:	2000daec 	.word	0x2000daec
 800fabc:	2000db34 	.word	0x2000db34

0800fac0 <xTaskCheckForTimeOut>:
{
 800fac0:	b570      	push	{r4, r5, r6, lr}
 800fac2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800fac4:	4605      	mov	r5, r0
 800fac6:	b940      	cbnz	r0, 800fada <xTaskCheckForTimeOut+0x1a>
 800fac8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800facc:	f383 8811 	msr	BASEPRI, r3
 800fad0:	f3bf 8f6f 	isb	sy
 800fad4:	f3bf 8f4f 	dsb	sy
 800fad8:	e7fe      	b.n	800fad8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800fada:	b941      	cbnz	r1, 800faee <xTaskCheckForTimeOut+0x2e>
 800fadc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fae0:	f383 8811 	msr	BASEPRI, r3
 800fae4:	f3bf 8f6f 	isb	sy
 800fae8:	f3bf 8f4f 	dsb	sy
 800faec:	e7fe      	b.n	800faec <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800faee:	f7fe fd69 	bl	800e5c4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800faf2:	4b0f      	ldr	r3, [pc, #60]	; (800fb30 <xTaskCheckForTimeOut+0x70>)
 800faf4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800faf6:	6823      	ldr	r3, [r4, #0]
 800faf8:	1c5a      	adds	r2, r3, #1
 800fafa:	d010      	beq.n	800fb1e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fafc:	480d      	ldr	r0, [pc, #52]	; (800fb34 <xTaskCheckForTimeOut+0x74>)
 800fafe:	682e      	ldr	r6, [r5, #0]
 800fb00:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fb02:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fb04:	4286      	cmp	r6, r0
 800fb06:	d001      	beq.n	800fb0c <xTaskCheckForTimeOut+0x4c>
 800fb08:	428a      	cmp	r2, r1
 800fb0a:	d90f      	bls.n	800fb2c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fb0c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fb0e:	4283      	cmp	r3, r0
 800fb10:	d90a      	bls.n	800fb28 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800fb12:	1a5b      	subs	r3, r3, r1
 800fb14:	4413      	add	r3, r2
 800fb16:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800fb18:	4628      	mov	r0, r5
 800fb1a:	f7ff ffc5 	bl	800faa8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800fb1e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800fb20:	f7fe fd70 	bl	800e604 <vPortExitCritical>
}
 800fb24:	4620      	mov	r0, r4
 800fb26:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800fb28:	2300      	movs	r3, #0
 800fb2a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800fb2c:	2401      	movs	r4, #1
 800fb2e:	e7f7      	b.n	800fb20 <xTaskCheckForTimeOut+0x60>
 800fb30:	2000db34 	.word	0x2000db34
 800fb34:	2000daec 	.word	0x2000daec

0800fb38 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fb38:	4b01      	ldr	r3, [pc, #4]	; (800fb40 <vTaskMissedYield+0x8>)
 800fb3a:	2201      	movs	r2, #1
 800fb3c:	601a      	str	r2, [r3, #0]
}
 800fb3e:	4770      	bx	lr
 800fb40:	2000db38 	.word	0x2000db38

0800fb44 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fb44:	4b05      	ldr	r3, [pc, #20]	; (800fb5c <xTaskGetSchedulerState+0x18>)
 800fb46:	681b      	ldr	r3, [r3, #0]
 800fb48:	b133      	cbz	r3, 800fb58 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fb4a:	4b05      	ldr	r3, [pc, #20]	; (800fb60 <xTaskGetSchedulerState+0x1c>)
 800fb4c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800fb4e:	2b00      	cmp	r3, #0
 800fb50:	bf0c      	ite	eq
 800fb52:	2002      	moveq	r0, #2
 800fb54:	2000      	movne	r0, #0
 800fb56:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fb58:	2001      	movs	r0, #1
	}
 800fb5a:	4770      	bx	lr
 800fb5c:	2000db08 	.word	0x2000db08
 800fb60:	2000dab4 	.word	0x2000dab4

0800fb64 <xTaskPriorityInherit>:
	{
 800fb64:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fb66:	4604      	mov	r4, r0
 800fb68:	b348      	cbz	r0, 800fbbe <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fb6a:	4d1c      	ldr	r5, [pc, #112]	; (800fbdc <xTaskPriorityInherit+0x78>)
 800fb6c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fb6e:	682a      	ldr	r2, [r5, #0]
 800fb70:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fb72:	4293      	cmp	r3, r2
 800fb74:	d229      	bcs.n	800fbca <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fb76:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fb78:	4e19      	ldr	r6, [pc, #100]	; (800fbe0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fb7a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fb7c:	bfa1      	itttt	ge
 800fb7e:	682a      	ldrge	r2, [r5, #0]
 800fb80:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800fb82:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800fb86:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fb88:	2214      	movs	r2, #20
 800fb8a:	fb02 6303 	mla	r3, r2, r3, r6
 800fb8e:	6942      	ldr	r2, [r0, #20]
 800fb90:	429a      	cmp	r2, r3
 800fb92:	d116      	bne.n	800fbc2 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb94:	1d01      	adds	r1, r0, #4
 800fb96:	4608      	mov	r0, r1
 800fb98:	9101      	str	r1, [sp, #4]
 800fb9a:	f7fe fc96 	bl	800e4ca <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fb9e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fba0:	4a10      	ldr	r2, [pc, #64]	; (800fbe4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fba4:	6810      	ldr	r0, [r2, #0]
 800fba6:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fba8:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fbaa:	4283      	cmp	r3, r0
 800fbac:	f04f 0014 	mov.w	r0, #20
 800fbb0:	fb00 6003 	mla	r0, r0, r3, r6
 800fbb4:	bf88      	it	hi
 800fbb6:	6013      	strhi	r3, [r2, #0]
 800fbb8:	f7fe fc64 	bl	800e484 <vListInsertEnd>
				xReturn = pdTRUE;
 800fbbc:	2001      	movs	r0, #1
	}
 800fbbe:	b002      	add	sp, #8
 800fbc0:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fbc2:	682b      	ldr	r3, [r5, #0]
 800fbc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbc6:	62c3      	str	r3, [r0, #44]	; 0x2c
 800fbc8:	e7f8      	b.n	800fbbc <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fbca:	682b      	ldr	r3, [r5, #0]
 800fbcc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fbce:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800fbd0:	42a0      	cmp	r0, r4
 800fbd2:	bf2c      	ite	cs
 800fbd4:	2000      	movcs	r0, #0
 800fbd6:	2001      	movcc	r0, #1
 800fbd8:	e7f1      	b.n	800fbbe <xTaskPriorityInherit+0x5a>
 800fbda:	bf00      	nop
 800fbdc:	2000d640 	.word	0x2000d640
 800fbe0:	2000d64c 	.word	0x2000d64c
 800fbe4:	2000dabc 	.word	0x2000dabc

0800fbe8 <xTaskPriorityDisinherit>:
	{
 800fbe8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800fbea:	b910      	cbnz	r0, 800fbf2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800fbec:	2000      	movs	r0, #0
	}
 800fbee:	b002      	add	sp, #8
 800fbf0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800fbf2:	4b1c      	ldr	r3, [pc, #112]	; (800fc64 <xTaskPriorityDisinherit+0x7c>)
 800fbf4:	681c      	ldr	r4, [r3, #0]
 800fbf6:	4284      	cmp	r4, r0
 800fbf8:	d008      	beq.n	800fc0c <xTaskPriorityDisinherit+0x24>
 800fbfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbfe:	f383 8811 	msr	BASEPRI, r3
 800fc02:	f3bf 8f6f 	isb	sy
 800fc06:	f3bf 8f4f 	dsb	sy
 800fc0a:	e7fe      	b.n	800fc0a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800fc0c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fc0e:	b943      	cbnz	r3, 800fc22 <xTaskPriorityDisinherit+0x3a>
 800fc10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc14:	f383 8811 	msr	BASEPRI, r3
 800fc18:	f3bf 8f6f 	isb	sy
 800fc1c:	f3bf 8f4f 	dsb	sy
 800fc20:	e7fe      	b.n	800fc20 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc22:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fc24:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fc26:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc28:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fc2a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc2c:	d0de      	beq.n	800fbec <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fc2e:	2b00      	cmp	r3, #0
 800fc30:	d1dc      	bne.n	800fbec <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc32:	1d21      	adds	r1, r4, #4
 800fc34:	4608      	mov	r0, r1
 800fc36:	9101      	str	r1, [sp, #4]
 800fc38:	f7fe fc47 	bl	800e4ca <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fc3c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fc3e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fc40:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc42:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800fc46:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fc48:	4a07      	ldr	r2, [pc, #28]	; (800fc68 <xTaskPriorityDisinherit+0x80>)
 800fc4a:	6810      	ldr	r0, [r2, #0]
 800fc4c:	4283      	cmp	r3, r0
 800fc4e:	bf88      	it	hi
 800fc50:	6013      	strhi	r3, [r2, #0]
 800fc52:	4a06      	ldr	r2, [pc, #24]	; (800fc6c <xTaskPriorityDisinherit+0x84>)
 800fc54:	2014      	movs	r0, #20
 800fc56:	fb00 2003 	mla	r0, r0, r3, r2
 800fc5a:	f7fe fc13 	bl	800e484 <vListInsertEnd>
					xReturn = pdTRUE;
 800fc5e:	2001      	movs	r0, #1
		return xReturn;
 800fc60:	e7c5      	b.n	800fbee <xTaskPriorityDisinherit+0x6>
 800fc62:	bf00      	nop
 800fc64:	2000d640 	.word	0x2000d640
 800fc68:	2000dabc 	.word	0x2000dabc
 800fc6c:	2000d64c 	.word	0x2000d64c

0800fc70 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800fc70:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800fc72:	4604      	mov	r4, r0
 800fc74:	2800      	cmp	r0, #0
 800fc76:	d044      	beq.n	800fd02 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800fc78:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800fc7a:	b942      	cbnz	r2, 800fc8e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800fc7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc80:	f383 8811 	msr	BASEPRI, r3
 800fc84:	f3bf 8f6f 	isb	sy
 800fc88:	f3bf 8f4f 	dsb	sy
 800fc8c:	e7fe      	b.n	800fc8c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fc8e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800fc90:	4299      	cmp	r1, r3
 800fc92:	bf38      	it	cc
 800fc94:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fc96:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fc98:	428b      	cmp	r3, r1
 800fc9a:	d032      	beq.n	800fd02 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fc9c:	2a01      	cmp	r2, #1
 800fc9e:	d130      	bne.n	800fd02 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800fca0:	4a19      	ldr	r2, [pc, #100]	; (800fd08 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800fca2:	6812      	ldr	r2, [r2, #0]
 800fca4:	4282      	cmp	r2, r0
 800fca6:	d108      	bne.n	800fcba <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800fca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcac:	f383 8811 	msr	BASEPRI, r3
 800fcb0:	f3bf 8f6f 	isb	sy
 800fcb4:	f3bf 8f4f 	dsb	sy
 800fcb8:	e7fe      	b.n	800fcb8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fcba:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fcbc:	4d13      	ldr	r5, [pc, #76]	; (800fd0c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800fcbe:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fcc0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fcc2:	f04f 0214 	mov.w	r2, #20
 800fcc6:	fb02 5303 	mla	r3, r2, r3, r5
 800fcca:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fccc:	bfa4      	itt	ge
 800fcce:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800fcd2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fcd4:	429a      	cmp	r2, r3
 800fcd6:	d114      	bne.n	800fd02 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fcd8:	1d01      	adds	r1, r0, #4
 800fcda:	4608      	mov	r0, r1
 800fcdc:	9101      	str	r1, [sp, #4]
 800fcde:	f7fe fbf4 	bl	800e4ca <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fce2:	4a0b      	ldr	r2, [pc, #44]	; (800fd10 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800fce4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fce6:	6810      	ldr	r0, [r2, #0]
 800fce8:	9901      	ldr	r1, [sp, #4]
 800fcea:	4283      	cmp	r3, r0
 800fcec:	f04f 0014 	mov.w	r0, #20
 800fcf0:	fb00 5003 	mla	r0, r0, r3, r5
 800fcf4:	bf88      	it	hi
 800fcf6:	6013      	strhi	r3, [r2, #0]
	}
 800fcf8:	b003      	add	sp, #12
 800fcfa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fcfe:	f7fe bbc1 	b.w	800e484 <vListInsertEnd>
	}
 800fd02:	b003      	add	sp, #12
 800fd04:	bd30      	pop	{r4, r5, pc}
 800fd06:	bf00      	nop
 800fd08:	2000d640 	.word	0x2000d640
 800fd0c:	2000d64c 	.word	0x2000d64c
 800fd10:	2000dabc 	.word	0x2000dabc

0800fd14 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fd14:	4b04      	ldr	r3, [pc, #16]	; (800fd28 <pvTaskIncrementMutexHeldCount+0x14>)
 800fd16:	681a      	ldr	r2, [r3, #0]
 800fd18:	b11a      	cbz	r2, 800fd22 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fd1a:	6819      	ldr	r1, [r3, #0]
 800fd1c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fd1e:	3201      	adds	r2, #1
 800fd20:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fd22:	6818      	ldr	r0, [r3, #0]
	}
 800fd24:	4770      	bx	lr
 800fd26:	bf00      	nop
 800fd28:	2000d640 	.word	0x2000d640

0800fd2c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800fd2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800fd2e:	4c11      	ldr	r4, [pc, #68]	; (800fd74 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800fd30:	f7fe fc48 	bl	800e5c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800fd34:	6825      	ldr	r5, [r4, #0]
 800fd36:	b9bd      	cbnz	r5, 800fd68 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800fd38:	4f0f      	ldr	r7, [pc, #60]	; (800fd78 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800fd3a:	4e10      	ldr	r6, [pc, #64]	; (800fd7c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800fd3c:	4638      	mov	r0, r7
 800fd3e:	f7fe fb93 	bl	800e468 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800fd42:	4630      	mov	r0, r6
 800fd44:	f7fe fb90 	bl	800e468 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800fd48:	4b0d      	ldr	r3, [pc, #52]	; (800fd80 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fd4a:	4a0e      	ldr	r2, [pc, #56]	; (800fd84 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800fd4c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800fd4e:	4b0e      	ldr	r3, [pc, #56]	; (800fd88 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fd50:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800fd52:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fd54:	200a      	movs	r0, #10
 800fd56:	4b0d      	ldr	r3, [pc, #52]	; (800fd8c <prvCheckForValidListAndQueue+0x60>)
 800fd58:	9500      	str	r5, [sp, #0]
 800fd5a:	f7fe fe44 	bl	800e9e6 <xQueueGenericCreateStatic>
 800fd5e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800fd60:	b110      	cbz	r0, 800fd68 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800fd62:	490b      	ldr	r1, [pc, #44]	; (800fd90 <prvCheckForValidListAndQueue+0x64>)
 800fd64:	f7ff fa0e 	bl	800f184 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800fd68:	b003      	add	sp, #12
 800fd6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800fd6e:	f7fe bc49 	b.w	800e604 <vPortExitCritical>
 800fd72:	bf00      	nop
 800fd74:	2000dc60 	.word	0x2000dc60
 800fd78:	2000dbe4 	.word	0x2000dbe4
 800fd7c:	2000dbf8 	.word	0x2000dbf8
 800fd80:	2000db3c 	.word	0x2000db3c
 800fd84:	2000db44 	.word	0x2000db44
 800fd88:	2000db40 	.word	0x2000db40
 800fd8c:	2000dc10 	.word	0x2000dc10
 800fd90:	080284b2 	.word	0x080284b2

0800fd94 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800fd94:	4291      	cmp	r1, r2
{
 800fd96:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fd98:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fd9a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800fd9c:	d80a      	bhi.n	800fdb4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd9e:	1ad2      	subs	r2, r2, r3
 800fda0:	6983      	ldr	r3, [r0, #24]
 800fda2:	429a      	cmp	r2, r3
 800fda4:	d20d      	bcs.n	800fdc2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fda6:	4b08      	ldr	r3, [pc, #32]	; (800fdc8 <prvInsertTimerInActiveList+0x34>)
 800fda8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fdaa:	6818      	ldr	r0, [r3, #0]
 800fdac:	f7fe fb76 	bl	800e49c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800fdb0:	2000      	movs	r0, #0
}
 800fdb2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800fdb4:	429a      	cmp	r2, r3
 800fdb6:	d201      	bcs.n	800fdbc <prvInsertTimerInActiveList+0x28>
 800fdb8:	4299      	cmp	r1, r3
 800fdba:	d202      	bcs.n	800fdc2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fdbc:	4b03      	ldr	r3, [pc, #12]	; (800fdcc <prvInsertTimerInActiveList+0x38>)
 800fdbe:	1d01      	adds	r1, r0, #4
 800fdc0:	e7f3      	b.n	800fdaa <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800fdc2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800fdc4:	e7f5      	b.n	800fdb2 <prvInsertTimerInActiveList+0x1e>
 800fdc6:	bf00      	nop
 800fdc8:	2000db40 	.word	0x2000db40
 800fdcc:	2000db3c 	.word	0x2000db3c

0800fdd0 <xTimerCreateTimerTask>:
{
 800fdd0:	b510      	push	{r4, lr}
 800fdd2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800fdd4:	f7ff ffaa 	bl	800fd2c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800fdd8:	4b12      	ldr	r3, [pc, #72]	; (800fe24 <xTimerCreateTimerTask+0x54>)
 800fdda:	681b      	ldr	r3, [r3, #0]
 800fddc:	b1b3      	cbz	r3, 800fe0c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800fdde:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fde0:	aa07      	add	r2, sp, #28
 800fde2:	a906      	add	r1, sp, #24
 800fde4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800fde6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fdea:	f7fe fa37 	bl	800e25c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800fdee:	9b05      	ldr	r3, [sp, #20]
 800fdf0:	9302      	str	r3, [sp, #8]
 800fdf2:	9b06      	ldr	r3, [sp, #24]
 800fdf4:	9301      	str	r3, [sp, #4]
 800fdf6:	2302      	movs	r3, #2
 800fdf8:	9300      	str	r3, [sp, #0]
 800fdfa:	9a07      	ldr	r2, [sp, #28]
 800fdfc:	490a      	ldr	r1, [pc, #40]	; (800fe28 <xTimerCreateTimerTask+0x58>)
 800fdfe:	480b      	ldr	r0, [pc, #44]	; (800fe2c <xTimerCreateTimerTask+0x5c>)
 800fe00:	4623      	mov	r3, r4
 800fe02:	f7ff fb86 	bl	800f512 <xTaskCreateStatic>
 800fe06:	4b0a      	ldr	r3, [pc, #40]	; (800fe30 <xTimerCreateTimerTask+0x60>)
 800fe08:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800fe0a:	b940      	cbnz	r0, 800fe1e <xTimerCreateTimerTask+0x4e>
 800fe0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe10:	f383 8811 	msr	BASEPRI, r3
 800fe14:	f3bf 8f6f 	isb	sy
 800fe18:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800fe1c:	e7fe      	b.n	800fe1c <xTimerCreateTimerTask+0x4c>
}
 800fe1e:	2001      	movs	r0, #1
 800fe20:	b008      	add	sp, #32
 800fe22:	bd10      	pop	{r4, pc}
 800fe24:	2000dc60 	.word	0x2000dc60
 800fe28:	080284b7 	.word	0x080284b7
 800fe2c:	0800ff39 	.word	0x0800ff39
 800fe30:	2000dc64 	.word	0x2000dc64

0800fe34 <xTimerGenericCommand>:
{
 800fe34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fe36:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800fe38:	4604      	mov	r4, r0
{
 800fe3a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800fe3c:	b940      	cbnz	r0, 800fe50 <xTimerGenericCommand+0x1c>
 800fe3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe42:	f383 8811 	msr	BASEPRI, r3
 800fe46:	f3bf 8f6f 	isb	sy
 800fe4a:	f3bf 8f4f 	dsb	sy
 800fe4e:	e7fe      	b.n	800fe4e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800fe50:	4d0d      	ldr	r5, [pc, #52]	; (800fe88 <xTimerGenericCommand+0x54>)
 800fe52:	6828      	ldr	r0, [r5, #0]
 800fe54:	b180      	cbz	r0, 800fe78 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800fe56:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fe58:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fe5c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800fe5e:	dc0d      	bgt.n	800fe7c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fe60:	f7ff fe70 	bl	800fb44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fe64:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fe66:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fe68:	bf08      	it	eq
 800fe6a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800fe6c:	6828      	ldr	r0, [r5, #0]
 800fe6e:	bf18      	it	ne
 800fe70:	461a      	movne	r2, r3
 800fe72:	4669      	mov	r1, sp
 800fe74:	f7fe fe6c 	bl	800eb50 <xQueueGenericSend>
}
 800fe78:	b004      	add	sp, #16
 800fe7a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800fe7c:	2300      	movs	r3, #0
 800fe7e:	4669      	mov	r1, sp
 800fe80:	f7fe ff19 	bl	800ecb6 <xQueueGenericSendFromISR>
 800fe84:	e7f8      	b.n	800fe78 <xTimerGenericCommand+0x44>
 800fe86:	bf00      	nop
 800fe88:	2000dc60 	.word	0x2000dc60

0800fe8c <prvSampleTimeNow>:
{
 800fe8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800fe90:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ff34 <prvSampleTimeNow+0xa8>
{
 800fe94:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800fe96:	f7ff fba9 	bl	800f5ec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fe9a:	f8d8 3000 	ldr.w	r3, [r8]
 800fe9e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800fea0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800fea2:	d940      	bls.n	800ff26 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fea4:	4f21      	ldr	r7, [pc, #132]	; (800ff2c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800fea6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800feaa:	683b      	ldr	r3, [r7, #0]
 800feac:	681a      	ldr	r2, [r3, #0]
 800feae:	b95a      	cbnz	r2, 800fec8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800feb0:	4a1f      	ldr	r2, [pc, #124]	; (800ff30 <prvSampleTimeNow+0xa4>)
 800feb2:	6811      	ldr	r1, [r2, #0]
 800feb4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800feb6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800feb8:	2301      	movs	r3, #1
}
 800feba:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800febc:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800febe:	f8c8 5000 	str.w	r5, [r8]
}
 800fec2:	b004      	add	sp, #16
 800fec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fec8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800feca:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fecc:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fed0:	1d21      	adds	r1, r4, #4
 800fed2:	4608      	mov	r0, r1
 800fed4:	9103      	str	r1, [sp, #12]
 800fed6:	f7fe faf8 	bl	800e4ca <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800feda:	6a23      	ldr	r3, [r4, #32]
 800fedc:	4620      	mov	r0, r4
 800fede:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fee0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fee4:	9903      	ldr	r1, [sp, #12]
 800fee6:	f013 0f04 	tst.w	r3, #4
 800feea:	d0de      	beq.n	800feaa <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800feec:	69a3      	ldr	r3, [r4, #24]
 800feee:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800fef0:	459a      	cmp	sl, r3
 800fef2:	d205      	bcs.n	800ff00 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fef4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fef6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fef8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fefa:	f7fe facf 	bl	800e49c <vListInsert>
 800fefe:	e7d4      	b.n	800feaa <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ff00:	2300      	movs	r3, #0
 800ff02:	f8cd 9000 	str.w	r9, [sp]
 800ff06:	4652      	mov	r2, sl
 800ff08:	4619      	mov	r1, r3
 800ff0a:	4620      	mov	r0, r4
 800ff0c:	f7ff ff92 	bl	800fe34 <xTimerGenericCommand>
				configASSERT( xResult );
 800ff10:	2800      	cmp	r0, #0
 800ff12:	d1ca      	bne.n	800feaa <prvSampleTimeNow+0x1e>
 800ff14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff18:	f383 8811 	msr	BASEPRI, r3
 800ff1c:	f3bf 8f6f 	isb	sy
 800ff20:	f3bf 8f4f 	dsb	sy
 800ff24:	e7fe      	b.n	800ff24 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800ff26:	2300      	movs	r3, #0
 800ff28:	e7c7      	b.n	800feba <prvSampleTimeNow+0x2e>
 800ff2a:	bf00      	nop
 800ff2c:	2000db3c 	.word	0x2000db3c
 800ff30:	2000db40 	.word	0x2000db40
 800ff34:	2000dc0c 	.word	0x2000dc0c

0800ff38 <prvTimerTask>:
{
 800ff38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff3c:	4d6e      	ldr	r5, [pc, #440]	; (80100f8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ff3e:	4e6f      	ldr	r6, [pc, #444]	; (80100fc <prvTimerTask+0x1c4>)
{
 800ff40:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff42:	682b      	ldr	r3, [r5, #0]
 800ff44:	f8d3 8000 	ldr.w	r8, [r3]
 800ff48:	f1b8 0f00 	cmp.w	r8, #0
 800ff4c:	d035      	beq.n	800ffba <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff4e:	68db      	ldr	r3, [r3, #12]
 800ff50:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff54:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800ff56:	f7ff fb41 	bl	800f5dc <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ff5a:	a804      	add	r0, sp, #16
 800ff5c:	f7ff ff96 	bl	800fe8c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800ff60:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ff62:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800ff64:	2b00      	cmp	r3, #0
 800ff66:	d169      	bne.n	801003c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff68:	2c00      	cmp	r4, #0
 800ff6a:	d14c      	bne.n	8010006 <prvTimerTask+0xce>
 800ff6c:	4540      	cmp	r0, r8
 800ff6e:	d350      	bcc.n	8010012 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800ff70:	f7ff fbd8 	bl	800f724 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff74:	682b      	ldr	r3, [r5, #0]
 800ff76:	68db      	ldr	r3, [r3, #12]
 800ff78:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff7a:	1d38      	adds	r0, r7, #4
 800ff7c:	f7fe faa5 	bl	800e4ca <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff80:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ff84:	0758      	lsls	r0, r3, #29
 800ff86:	d51a      	bpl.n	800ffbe <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ff88:	69b9      	ldr	r1, [r7, #24]
 800ff8a:	4643      	mov	r3, r8
 800ff8c:	464a      	mov	r2, r9
 800ff8e:	4441      	add	r1, r8
 800ff90:	4638      	mov	r0, r7
 800ff92:	f7ff feff 	bl	800fd94 <prvInsertTimerInActiveList>
 800ff96:	b1b0      	cbz	r0, 800ffc6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ff98:	9400      	str	r4, [sp, #0]
 800ff9a:	4623      	mov	r3, r4
 800ff9c:	4642      	mov	r2, r8
 800ff9e:	4621      	mov	r1, r4
 800ffa0:	4638      	mov	r0, r7
 800ffa2:	f7ff ff47 	bl	800fe34 <xTimerGenericCommand>
			configASSERT( xResult );
 800ffa6:	b970      	cbnz	r0, 800ffc6 <prvTimerTask+0x8e>
 800ffa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffac:	f383 8811 	msr	BASEPRI, r3
 800ffb0:	f3bf 8f6f 	isb	sy
 800ffb4:	f3bf 8f4f 	dsb	sy
 800ffb8:	e7fe      	b.n	800ffb8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ffba:	2401      	movs	r4, #1
 800ffbc:	e7cb      	b.n	800ff56 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ffbe:	f023 0301 	bic.w	r3, r3, #1
 800ffc2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ffc6:	6a3b      	ldr	r3, [r7, #32]
 800ffc8:	4638      	mov	r0, r7
 800ffca:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ffcc:	6830      	ldr	r0, [r6, #0]
 800ffce:	2200      	movs	r2, #0
 800ffd0:	a904      	add	r1, sp, #16
 800ffd2:	f7fe ff26 	bl	800ee22 <xQueueReceive>
 800ffd6:	2800      	cmp	r0, #0
 800ffd8:	d0b3      	beq.n	800ff42 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ffda:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ffdc:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	db2f      	blt.n	8010042 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ffe2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ffe4:	6963      	ldr	r3, [r4, #20]
 800ffe6:	2b00      	cmp	r3, #0
 800ffe8:	d132      	bne.n	8010050 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ffea:	a803      	add	r0, sp, #12
 800ffec:	f7ff ff4e 	bl	800fe8c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800fff0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800fff2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800fff4:	2b09      	cmp	r3, #9
 800fff6:	d8e9      	bhi.n	800ffcc <prvTimerTask+0x94>
 800fff8:	e8df f003 	tbb	[pc, r3]
 800fffc:	572e2e2e 	.word	0x572e2e2e
 8010000:	2e2e765e 	.word	0x2e2e765e
 8010004:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010006:	4b3e      	ldr	r3, [pc, #248]	; (8010100 <prvTimerTask+0x1c8>)
 8010008:	681b      	ldr	r3, [r3, #0]
 801000a:	681c      	ldr	r4, [r3, #0]
 801000c:	fab4 f484 	clz	r4, r4
 8010010:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010012:	6830      	ldr	r0, [r6, #0]
 8010014:	4622      	mov	r2, r4
 8010016:	eba8 0109 	sub.w	r1, r8, r9
 801001a:	f7ff f8f0 	bl	800f1fe <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 801001e:	f7ff fb81 	bl	800f724 <xTaskResumeAll>
 8010022:	2800      	cmp	r0, #0
 8010024:	d1d2      	bne.n	800ffcc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8010026:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801002a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801002e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010032:	f3bf 8f4f 	dsb	sy
 8010036:	f3bf 8f6f 	isb	sy
 801003a:	e7c7      	b.n	800ffcc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 801003c:	f7ff fb72 	bl	800f724 <xTaskResumeAll>
}
 8010040:	e7c4      	b.n	800ffcc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010042:	9b05      	ldr	r3, [sp, #20]
 8010044:	9907      	ldr	r1, [sp, #28]
 8010046:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8010048:	9b04      	ldr	r3, [sp, #16]
 801004a:	2b00      	cmp	r3, #0
 801004c:	dbbe      	blt.n	800ffcc <prvTimerTask+0x94>
 801004e:	e7c8      	b.n	800ffe2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010050:	1d20      	adds	r0, r4, #4
 8010052:	f7fe fa3a 	bl	800e4ca <uxListRemove>
 8010056:	e7c8      	b.n	800ffea <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010058:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801005c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801005e:	f043 0301 	orr.w	r3, r3, #1
 8010062:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010066:	9b05      	ldr	r3, [sp, #20]
 8010068:	4620      	mov	r0, r4
 801006a:	4419      	add	r1, r3
 801006c:	f7ff fe92 	bl	800fd94 <prvInsertTimerInActiveList>
 8010070:	2800      	cmp	r0, #0
 8010072:	d0ab      	beq.n	800ffcc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010074:	6a23      	ldr	r3, [r4, #32]
 8010076:	4620      	mov	r0, r4
 8010078:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801007a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801007e:	0759      	lsls	r1, r3, #29
 8010080:	d5a4      	bpl.n	800ffcc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010082:	69a2      	ldr	r2, [r4, #24]
 8010084:	9905      	ldr	r1, [sp, #20]
 8010086:	2300      	movs	r3, #0
 8010088:	440a      	add	r2, r1
 801008a:	9300      	str	r3, [sp, #0]
 801008c:	4619      	mov	r1, r3
 801008e:	4620      	mov	r0, r4
 8010090:	f7ff fed0 	bl	800fe34 <xTimerGenericCommand>
							configASSERT( xResult );
 8010094:	2800      	cmp	r0, #0
 8010096:	d199      	bne.n	800ffcc <prvTimerTask+0x94>
 8010098:	f04f 0350 	mov.w	r3, #80	; 0x50
 801009c:	f383 8811 	msr	BASEPRI, r3
 80100a0:	f3bf 8f6f 	isb	sy
 80100a4:	f3bf 8f4f 	dsb	sy
 80100a8:	e7fe      	b.n	80100a8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100aa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100ae:	f023 0301 	bic.w	r3, r3, #1
 80100b2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80100b6:	e789      	b.n	800ffcc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80100b8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80100bc:	f043 0301 	orr.w	r3, r3, #1
 80100c0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80100c4:	9905      	ldr	r1, [sp, #20]
 80100c6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80100c8:	b941      	cbnz	r1, 80100dc <prvTimerTask+0x1a4>
 80100ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ce:	f383 8811 	msr	BASEPRI, r3
 80100d2:	f3bf 8f6f 	isb	sy
 80100d6:	f3bf 8f4f 	dsb	sy
 80100da:	e7fe      	b.n	80100da <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80100dc:	4603      	mov	r3, r0
 80100de:	4401      	add	r1, r0
 80100e0:	4620      	mov	r0, r4
 80100e2:	f7ff fe57 	bl	800fd94 <prvInsertTimerInActiveList>
					break;
 80100e6:	e771      	b.n	800ffcc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80100e8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80100ec:	079a      	lsls	r2, r3, #30
 80100ee:	d4de      	bmi.n	80100ae <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80100f0:	4620      	mov	r0, r4
 80100f2:	f7fe f97b 	bl	800e3ec <vPortFree>
 80100f6:	e769      	b.n	800ffcc <prvTimerTask+0x94>
 80100f8:	2000db3c 	.word	0x2000db3c
 80100fc:	2000dc60 	.word	0x2000dc60
 8010100:	2000db40 	.word	0x2000db40

08010104 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010104:	8880      	ldrh	r0, [r0, #4]
 8010106:	4770      	bx	lr

08010108 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8010108:	b570      	push	{r4, r5, r6, lr}
 801010a:	6803      	ldr	r3, [r0, #0]
 801010c:	4605      	mov	r5, r0
 801010e:	460c      	mov	r4, r1
 8010110:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010112:	2100      	movs	r1, #0
 8010114:	4798      	blx	r3
 8010116:	682b      	ldr	r3, [r5, #0]
 8010118:	4606      	mov	r6, r0
 801011a:	6a1b      	ldr	r3, [r3, #32]
 801011c:	4628      	mov	r0, r5
 801011e:	4798      	blx	r3
 8010120:	1ba4      	subs	r4, r4, r6
 8010122:	b2a4      	uxth	r4, r4
 8010124:	fbb4 f0f0 	udiv	r0, r4, r0
 8010128:	bd70      	pop	{r4, r5, r6, pc}

0801012a <_ZN8touchgfx17AbstractPartition5clearEv>:
 801012a:	2300      	movs	r3, #0
 801012c:	8083      	strh	r3, [r0, #4]
 801012e:	4770      	bx	lr

08010130 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010130:	b510      	push	{r4, lr}
 8010132:	6803      	ldr	r3, [r0, #0]
 8010134:	8881      	ldrh	r1, [r0, #4]
 8010136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010138:	4604      	mov	r4, r0
 801013a:	4798      	blx	r3
 801013c:	88a3      	ldrh	r3, [r4, #4]
 801013e:	3301      	adds	r3, #1
 8010140:	80a3      	strh	r3, [r4, #4]
 8010142:	bd10      	pop	{r4, pc}

08010144 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010144:	6803      	ldr	r3, [r0, #0]
 8010146:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010148:	4718      	bx	r3

0801014a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801014a:	4770      	bx	lr

0801014c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 801014c:	4a02      	ldr	r2, [pc, #8]	; (8010158 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 801014e:	6002      	str	r2, [r0, #0]
 8010150:	2200      	movs	r2, #0
 8010152:	8082      	strh	r2, [r0, #4]
 8010154:	4770      	bx	lr
 8010156:	bf00      	nop
 8010158:	080284c8 	.word	0x080284c8

0801015c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801015c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801015e:	2000      	movs	r0, #0
 8010160:	b12b      	cbz	r3, 801016e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010162:	b920      	cbnz	r0, 801016e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010164:	1a5a      	subs	r2, r3, r1
 8010166:	4250      	negs	r0, r2
 8010168:	4150      	adcs	r0, r2
 801016a:	699b      	ldr	r3, [r3, #24]
 801016c:	e7f8      	b.n	8010160 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801016e:	4770      	bx	lr

08010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010170:	2300      	movs	r3, #0
 8010172:	6148      	str	r0, [r1, #20]
 8010174:	618b      	str	r3, [r1, #24]
 8010176:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010178:	b913      	cbnz	r3, 8010180 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801017a:	6281      	str	r1, [r0, #40]	; 0x28
 801017c:	4770      	bx	lr
 801017e:	4613      	mov	r3, r2
 8010180:	699a      	ldr	r2, [r3, #24]
 8010182:	2a00      	cmp	r2, #0
 8010184:	d1fb      	bne.n	801017e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010186:	6199      	str	r1, [r3, #24]
 8010188:	4770      	bx	lr

0801018a <_ZN8touchgfx9Container9removeAllEv>:
 801018a:	2200      	movs	r2, #0
 801018c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801018e:	b123      	cbz	r3, 801019a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010190:	6999      	ldr	r1, [r3, #24]
 8010192:	6281      	str	r1, [r0, #40]	; 0x28
 8010194:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010198:	e7f8      	b.n	801018c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801019a:	4770      	bx	lr

0801019c <_ZN8touchgfx9Container6unlinkEv>:
 801019c:	2300      	movs	r3, #0
 801019e:	6283      	str	r3, [r0, #40]	; 0x28
 80101a0:	4770      	bx	lr

080101a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80101a2:	2200      	movs	r2, #0
 80101a4:	8002      	strh	r2, [r0, #0]
 80101a6:	8042      	strh	r2, [r0, #2]
 80101a8:	8082      	strh	r2, [r0, #4]
 80101aa:	80c2      	strh	r2, [r0, #6]
 80101ac:	4770      	bx	lr

080101ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80101ae:	b570      	push	{r4, r5, r6, lr}
 80101b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80101b2:	460d      	mov	r5, r1
 80101b4:	4616      	mov	r6, r2
 80101b6:	b13c      	cbz	r4, 80101c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80101b8:	6823      	ldr	r3, [r4, #0]
 80101ba:	4620      	mov	r0, r4
 80101bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80101be:	4632      	mov	r2, r6
 80101c0:	4629      	mov	r1, r5
 80101c2:	4798      	blx	r3
 80101c4:	69a4      	ldr	r4, [r4, #24]
 80101c6:	e7f6      	b.n	80101b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80101c8:	bd70      	pop	{r4, r5, r6, pc}

080101ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80101ca:	b538      	push	{r3, r4, r5, lr}
 80101cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80101ce:	460d      	mov	r5, r1
 80101d0:	b134      	cbz	r4, 80101e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80101d2:	682b      	ldr	r3, [r5, #0]
 80101d4:	4621      	mov	r1, r4
 80101d6:	689b      	ldr	r3, [r3, #8]
 80101d8:	4628      	mov	r0, r5
 80101da:	4798      	blx	r3
 80101dc:	69a4      	ldr	r4, [r4, #24]
 80101de:	e7f7      	b.n	80101d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80101e0:	bd38      	pop	{r3, r4, r5, pc}

080101e2 <_ZNK8touchgfx9Container17invalidateContentEv>:
 80101e2:	b510      	push	{r4, lr}
 80101e4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80101e6:	b12c      	cbz	r4, 80101f4 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 80101e8:	6823      	ldr	r3, [r4, #0]
 80101ea:	4620      	mov	r0, r4
 80101ec:	699b      	ldr	r3, [r3, #24]
 80101ee:	4798      	blx	r3
 80101f0:	69a4      	ldr	r4, [r4, #24]
 80101f2:	e7f8      	b.n	80101e6 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 80101f4:	bd10      	pop	{r4, pc}

080101f6 <_ZN8touchgfx9ContainerD1Ev>:
 80101f6:	4770      	bx	lr

080101f8 <_ZN8touchgfx9ContainerD0Ev>:
 80101f8:	b510      	push	{r4, lr}
 80101fa:	212c      	movs	r1, #44	; 0x2c
 80101fc:	4604      	mov	r4, r0
 80101fe:	f015 fb9e 	bl	802593e <_ZdlPvj>
 8010202:	4620      	mov	r0, r4
 8010204:	bd10      	pop	{r4, pc}

08010206 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010206:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010208:	b19b      	cbz	r3, 8010232 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801020a:	428b      	cmp	r3, r1
 801020c:	d109      	bne.n	8010222 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801020e:	699a      	ldr	r2, [r3, #24]
 8010210:	2100      	movs	r1, #0
 8010212:	6159      	str	r1, [r3, #20]
 8010214:	6282      	str	r2, [r0, #40]	; 0x28
 8010216:	b902      	cbnz	r2, 801021a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010218:	4770      	bx	lr
 801021a:	6199      	str	r1, [r3, #24]
 801021c:	4770      	bx	lr
 801021e:	4613      	mov	r3, r2
 8010220:	b13a      	cbz	r2, 8010232 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010222:	699a      	ldr	r2, [r3, #24]
 8010224:	428a      	cmp	r2, r1
 8010226:	d1fa      	bne.n	801021e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010228:	698a      	ldr	r2, [r1, #24]
 801022a:	619a      	str	r2, [r3, #24]
 801022c:	2300      	movs	r3, #0
 801022e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010232:	4770      	bx	lr

08010234 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010234:	b410      	push	{r4}
 8010236:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010238:	4604      	mov	r4, r0
 801023a:	b92b      	cbnz	r3, 8010248 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 801023c:	6803      	ldr	r3, [r0, #0]
 801023e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010242:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010244:	4611      	mov	r1, r2
 8010246:	4718      	bx	r3
 8010248:	b941      	cbnz	r1, 801025c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801024a:	6193      	str	r3, [r2, #24]
 801024c:	6282      	str	r2, [r0, #40]	; 0x28
 801024e:	6154      	str	r4, [r2, #20]
 8010250:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010254:	4770      	bx	lr
 8010256:	4603      	mov	r3, r0
 8010258:	2800      	cmp	r0, #0
 801025a:	d0f9      	beq.n	8010250 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 801025c:	4299      	cmp	r1, r3
 801025e:	6998      	ldr	r0, [r3, #24]
 8010260:	d1f9      	bne.n	8010256 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010262:	6190      	str	r0, [r2, #24]
 8010264:	618a      	str	r2, [r1, #24]
 8010266:	e7f2      	b.n	801024e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010268 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801026c:	461f      	mov	r7, r3
 801026e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010272:	460d      	mov	r5, r1
 8010274:	4616      	mov	r6, r2
 8010276:	b103      	cbz	r3, 801027a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010278:	6038      	str	r0, [r7, #0]
 801027a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801027c:	b314      	cbz	r4, 80102c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801027e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010282:	b1eb      	cbz	r3, 80102c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010284:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010288:	428d      	cmp	r5, r1
 801028a:	db19      	blt.n	80102c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801028c:	8923      	ldrh	r3, [r4, #8]
 801028e:	b289      	uxth	r1, r1
 8010290:	440b      	add	r3, r1
 8010292:	b21b      	sxth	r3, r3
 8010294:	429d      	cmp	r5, r3
 8010296:	da13      	bge.n	80102c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010298:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801029c:	4296      	cmp	r6, r2
 801029e:	db0f      	blt.n	80102c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102a0:	8963      	ldrh	r3, [r4, #10]
 80102a2:	b292      	uxth	r2, r2
 80102a4:	4413      	add	r3, r2
 80102a6:	b21b      	sxth	r3, r3
 80102a8:	429e      	cmp	r6, r3
 80102aa:	da09      	bge.n	80102c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102ac:	6823      	ldr	r3, [r4, #0]
 80102ae:	1ab2      	subs	r2, r6, r2
 80102b0:	1a69      	subs	r1, r5, r1
 80102b2:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80102b6:	b212      	sxth	r2, r2
 80102b8:	463b      	mov	r3, r7
 80102ba:	b209      	sxth	r1, r1
 80102bc:	4620      	mov	r0, r4
 80102be:	47c0      	blx	r8
 80102c0:	69a4      	ldr	r4, [r4, #24]
 80102c2:	e7db      	b.n	801027c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80102c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80102c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102cc:	4c6e      	ldr	r4, [pc, #440]	; (8010488 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80102ce:	b0a1      	sub	sp, #132	; 0x84
 80102d0:	6824      	ldr	r4, [r4, #0]
 80102d2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80102d4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80102d8:	9303      	str	r3, [sp, #12]
 80102da:	2400      	movs	r4, #0
 80102dc:	802c      	strh	r4, [r5, #0]
 80102de:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80102e0:	802c      	strh	r4, [r5, #0]
 80102e2:	601c      	str	r4, [r3, #0]
 80102e4:	4606      	mov	r6, r0
 80102e6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80102ea:	f7ff ffbd 	bl	8010268 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80102ee:	f1b9 0f03 	cmp.w	r9, #3
 80102f2:	f340 80c2 	ble.w	801047a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80102f6:	4631      	mov	r1, r6
 80102f8:	a80c      	add	r0, sp, #48	; 0x30
 80102fa:	f007 f9df 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80102fe:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010302:	9306      	str	r3, [sp, #24]
 8010304:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010308:	9307      	str	r3, [sp, #28]
 801030a:	9b03      	ldr	r3, [sp, #12]
 801030c:	f8d3 a000 	ldr.w	sl, [r3]
 8010310:	f1ba 0f00 	cmp.w	sl, #0
 8010314:	f000 80b4 	beq.w	8010480 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010318:	4651      	mov	r1, sl
 801031a:	a810      	add	r0, sp, #64	; 0x40
 801031c:	f007 f9ce 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010320:	9b01      	ldr	r3, [sp, #4]
 8010322:	9a06      	ldr	r2, [sp, #24]
 8010324:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010328:	189d      	adds	r5, r3, r2
 801032a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801032e:	9a07      	ldr	r2, [sp, #28]
 8010330:	2002      	movs	r0, #2
 8010332:	fb91 f1f0 	sdiv	r1, r1, r0
 8010336:	4419      	add	r1, r3
 8010338:	1a6d      	subs	r5, r5, r1
 801033a:	9b02      	ldr	r3, [sp, #8]
 801033c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010340:	4413      	add	r3, r2
 8010342:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010346:	fb92 f2f0 	sdiv	r2, r2, r0
 801034a:	440a      	add	r2, r1
 801034c:	1a9b      	subs	r3, r3, r2
 801034e:	435b      	muls	r3, r3
 8010350:	fb05 3505 	mla	r5, r5, r5, r3
 8010354:	4f4d      	ldr	r7, [pc, #308]	; (801048c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010356:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010358:	ac10      	add	r4, sp, #64	; 0x40
 801035a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801035c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801035e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010360:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010362:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010364:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010368:	f1b9 0f0c 	cmp.w	r9, #12
 801036c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010370:	f04f 0303 	mov.w	r3, #3
 8010374:	bfc8      	it	gt
 8010376:	4698      	movgt	r8, r3
 8010378:	f8cd 9000 	str.w	r9, [sp]
 801037c:	f04f 0400 	mov.w	r4, #0
 8010380:	bfdc      	itt	le
 8010382:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010386:	fb92 f8f3 	sdivle	r8, r2, r3
 801038a:	1c63      	adds	r3, r4, #1
 801038c:	aa10      	add	r2, sp, #64	; 0x40
 801038e:	f004 0401 	and.w	r4, r4, #1
 8010392:	9308      	str	r3, [sp, #32]
 8010394:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010398:	9b00      	ldr	r3, [sp, #0]
 801039a:	fb93 f3f8 	sdiv	r3, r3, r8
 801039e:	b29b      	uxth	r3, r3
 80103a0:	3404      	adds	r4, #4
 80103a2:	f04f 0b00 	mov.w	fp, #0
 80103a6:	9304      	str	r3, [sp, #16]
 80103a8:	9a04      	ldr	r2, [sp, #16]
 80103aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80103ae:	fb13 f302 	smulbb	r3, r3, r2
 80103b2:	9a01      	ldr	r2, [sp, #4]
 80103b4:	b29b      	uxth	r3, r3
 80103b6:	1899      	adds	r1, r3, r2
 80103b8:	9305      	str	r3, [sp, #20]
 80103ba:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80103be:	b209      	sxth	r1, r1
 80103c0:	4299      	cmp	r1, r3
 80103c2:	db4d      	blt.n	8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103c4:	8932      	ldrh	r2, [r6, #8]
 80103c6:	4413      	add	r3, r2
 80103c8:	b21b      	sxth	r3, r3
 80103ca:	4299      	cmp	r1, r3
 80103cc:	da48      	bge.n	8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103ce:	9b04      	ldr	r3, [sp, #16]
 80103d0:	6827      	ldr	r7, [r4, #0]
 80103d2:	fb17 f703 	smulbb	r7, r7, r3
 80103d6:	9b02      	ldr	r3, [sp, #8]
 80103d8:	b2bf      	uxth	r7, r7
 80103da:	18fa      	adds	r2, r7, r3
 80103dc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80103e0:	b212      	sxth	r2, r2
 80103e2:	429a      	cmp	r2, r3
 80103e4:	db3c      	blt.n	8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103e6:	8970      	ldrh	r0, [r6, #10]
 80103e8:	4403      	add	r3, r0
 80103ea:	b21b      	sxth	r3, r3
 80103ec:	429a      	cmp	r2, r3
 80103ee:	da37      	bge.n	8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103f0:	2300      	movs	r3, #0
 80103f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80103f4:	4630      	mov	r0, r6
 80103f6:	ab0b      	add	r3, sp, #44	; 0x2c
 80103f8:	f7ff ff36 	bl	8010268 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80103fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80103fe:	b37a      	cbz	r2, 8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010400:	4552      	cmp	r2, sl
 8010402:	d02d      	beq.n	8010460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010404:	4611      	mov	r1, r2
 8010406:	a80e      	add	r0, sp, #56	; 0x38
 8010408:	9209      	str	r2, [sp, #36]	; 0x24
 801040a:	f007 f957 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801040e:	9a06      	ldr	r2, [sp, #24]
 8010410:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010414:	9b01      	ldr	r3, [sp, #4]
 8010416:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801041a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801041e:	4413      	add	r3, r2
 8010420:	f04f 0e02 	mov.w	lr, #2
 8010424:	fb91 f1fe 	sdiv	r1, r1, lr
 8010428:	4401      	add	r1, r0
 801042a:	1a58      	subs	r0, r3, r1
 801042c:	9a07      	ldr	r2, [sp, #28]
 801042e:	9b02      	ldr	r3, [sp, #8]
 8010430:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010434:	fb9c fcfe 	sdiv	ip, ip, lr
 8010438:	4413      	add	r3, r2
 801043a:	448c      	add	ip, r1
 801043c:	eba3 030c 	sub.w	r3, r3, ip
 8010440:	435b      	muls	r3, r3
 8010442:	fb00 3300 	mla	r3, r0, r0, r3
 8010446:	42ab      	cmp	r3, r5
 8010448:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801044a:	d208      	bcs.n	801045e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 801044c:	9803      	ldr	r0, [sp, #12]
 801044e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010450:	6001      	str	r1, [r0, #0]
 8010452:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010454:	9805      	ldr	r0, [sp, #20]
 8010456:	8008      	strh	r0, [r1, #0]
 8010458:	992b      	ldr	r1, [sp, #172]	; 0xac
 801045a:	461d      	mov	r5, r3
 801045c:	800f      	strh	r7, [r1, #0]
 801045e:	4692      	mov	sl, r2
 8010460:	f10b 0b01 	add.w	fp, fp, #1
 8010464:	f1bb 0f04 	cmp.w	fp, #4
 8010468:	f104 0408 	add.w	r4, r4, #8
 801046c:	d19c      	bne.n	80103a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801046e:	9b00      	ldr	r3, [sp, #0]
 8010470:	9c08      	ldr	r4, [sp, #32]
 8010472:	444b      	add	r3, r9
 8010474:	4544      	cmp	r4, r8
 8010476:	9300      	str	r3, [sp, #0]
 8010478:	d187      	bne.n	801038a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 801047a:	b021      	add	sp, #132	; 0x84
 801047c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010480:	f04f 35ff 	mov.w	r5, #4294967295
 8010484:	e766      	b.n	8010354 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010486:	bf00      	nop
 8010488:	2000dc74 	.word	0x2000dc74
 801048c:	08026b14 	.word	0x08026b14

08010490 <_ZN8touchgfx4RectaNERKS0_>:
 8010490:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010494:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010498:	888c      	ldrh	r4, [r1, #4]
 801049a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801049e:	443c      	add	r4, r7
 80104a0:	b2a4      	uxth	r4, r4
 80104a2:	fa0f f884 	sxth.w	r8, r4
 80104a6:	45c1      	cmp	r9, r8
 80104a8:	da2f      	bge.n	801050a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104aa:	8882      	ldrh	r2, [r0, #4]
 80104ac:	444a      	add	r2, r9
 80104ae:	b292      	uxth	r2, r2
 80104b0:	fa0f fe82 	sxth.w	lr, r2
 80104b4:	4577      	cmp	r7, lr
 80104b6:	da28      	bge.n	801050a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104b8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80104bc:	88cb      	ldrh	r3, [r1, #6]
 80104be:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80104c2:	442b      	add	r3, r5
 80104c4:	b21b      	sxth	r3, r3
 80104c6:	429e      	cmp	r6, r3
 80104c8:	da1f      	bge.n	801050a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104ca:	88c3      	ldrh	r3, [r0, #6]
 80104cc:	4433      	add	r3, r6
 80104ce:	b29b      	uxth	r3, r3
 80104d0:	fa0f fc83 	sxth.w	ip, r3
 80104d4:	4565      	cmp	r5, ip
 80104d6:	da18      	bge.n	801050a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104d8:	454f      	cmp	r7, r9
 80104da:	bfb8      	it	lt
 80104dc:	464f      	movlt	r7, r9
 80104de:	42b5      	cmp	r5, r6
 80104e0:	bfb8      	it	lt
 80104e2:	4635      	movlt	r5, r6
 80104e4:	45f0      	cmp	r8, lr
 80104e6:	bfd8      	it	le
 80104e8:	4622      	movle	r2, r4
 80104ea:	1bd2      	subs	r2, r2, r7
 80104ec:	8082      	strh	r2, [r0, #4]
 80104ee:	884a      	ldrh	r2, [r1, #2]
 80104f0:	88c9      	ldrh	r1, [r1, #6]
 80104f2:	8007      	strh	r7, [r0, #0]
 80104f4:	440a      	add	r2, r1
 80104f6:	b292      	uxth	r2, r2
 80104f8:	b211      	sxth	r1, r2
 80104fa:	458c      	cmp	ip, r1
 80104fc:	bfa8      	it	ge
 80104fe:	4613      	movge	r3, r2
 8010500:	1b5b      	subs	r3, r3, r5
 8010502:	80c3      	strh	r3, [r0, #6]
 8010504:	8045      	strh	r5, [r0, #2]
 8010506:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801050a:	2300      	movs	r3, #0
 801050c:	8003      	strh	r3, [r0, #0]
 801050e:	8043      	strh	r3, [r0, #2]
 8010510:	8083      	strh	r3, [r0, #4]
 8010512:	80c3      	strh	r3, [r0, #6]
 8010514:	e7f7      	b.n	8010506 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010516 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010516:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801051a:	2b00      	cmp	r3, #0
 801051c:	dd06      	ble.n	801052c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801051e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010522:	2800      	cmp	r0, #0
 8010524:	bfcc      	ite	gt
 8010526:	2000      	movgt	r0, #0
 8010528:	2001      	movle	r0, #1
 801052a:	4770      	bx	lr
 801052c:	2001      	movs	r0, #1
 801052e:	4770      	bx	lr

08010530 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010534:	2300      	movs	r3, #0
 8010536:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010538:	8003      	strh	r3, [r0, #0]
 801053a:	4604      	mov	r4, r0
 801053c:	8043      	strh	r3, [r0, #2]
 801053e:	8083      	strh	r3, [r0, #4]
 8010540:	80c3      	strh	r3, [r0, #6]
 8010542:	2d00      	cmp	r5, #0
 8010544:	d040      	beq.n	80105c8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010546:	1d28      	adds	r0, r5, #4
 8010548:	f7ff ffe5 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801054c:	b988      	cbnz	r0, 8010572 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801054e:	4620      	mov	r0, r4
 8010550:	f7ff ffe1 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010554:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010558:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801055c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010560:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010564:	b138      	cbz	r0, 8010576 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010566:	8022      	strh	r2, [r4, #0]
 8010568:	8063      	strh	r3, [r4, #2]
 801056a:	f8a4 e004 	strh.w	lr, [r4, #4]
 801056e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010572:	69ad      	ldr	r5, [r5, #24]
 8010574:	e7e5      	b.n	8010542 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010576:	f9b4 0000 	ldrsh.w	r0, [r4]
 801057a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801057e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010582:	4290      	cmp	r0, r2
 8010584:	4607      	mov	r7, r0
 8010586:	bfa8      	it	ge
 8010588:	4617      	movge	r7, r2
 801058a:	4472      	add	r2, lr
 801058c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010590:	8027      	strh	r7, [r4, #0]
 8010592:	4299      	cmp	r1, r3
 8010594:	460e      	mov	r6, r1
 8010596:	4440      	add	r0, r8
 8010598:	bfa8      	it	ge
 801059a:	461e      	movge	r6, r3
 801059c:	4471      	add	r1, lr
 801059e:	4463      	add	r3, ip
 80105a0:	b200      	sxth	r0, r0
 80105a2:	b212      	sxth	r2, r2
 80105a4:	b209      	sxth	r1, r1
 80105a6:	b21b      	sxth	r3, r3
 80105a8:	4290      	cmp	r0, r2
 80105aa:	bfac      	ite	ge
 80105ac:	ebc7 0200 	rsbge	r2, r7, r0
 80105b0:	ebc7 0202 	rsblt	r2, r7, r2
 80105b4:	4299      	cmp	r1, r3
 80105b6:	bfac      	ite	ge
 80105b8:	ebc6 0301 	rsbge	r3, r6, r1
 80105bc:	ebc6 0303 	rsblt	r3, r6, r3
 80105c0:	8066      	strh	r6, [r4, #2]
 80105c2:	80a2      	strh	r2, [r4, #4]
 80105c4:	80e3      	strh	r3, [r4, #6]
 80105c6:	e7d4      	b.n	8010572 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80105c8:	4620      	mov	r0, r4
 80105ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105ce <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80105ce:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80105d2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80105d6:	b383      	cbz	r3, 801063a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80105d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80105da:	b374      	cbz	r4, 801063a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80105dc:	f9b1 5000 	ldrsh.w	r5, [r1]
 80105e0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80105e4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80105e8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80105ec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80105f0:	b303      	cbz	r3, 8010634 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80105f2:	4668      	mov	r0, sp
 80105f4:	1d21      	adds	r1, r4, #4
 80105f6:	f8ad 5000 	strh.w	r5, [sp]
 80105fa:	f8ad 6002 	strh.w	r6, [sp, #2]
 80105fe:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010602:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010606:	f7ff ff43 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801060a:	4668      	mov	r0, sp
 801060c:	f7ff ff83 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010610:	b980      	cbnz	r0, 8010634 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010612:	f8bd 3000 	ldrh.w	r3, [sp]
 8010616:	88a2      	ldrh	r2, [r4, #4]
 8010618:	1a9b      	subs	r3, r3, r2
 801061a:	f8ad 3000 	strh.w	r3, [sp]
 801061e:	88e2      	ldrh	r2, [r4, #6]
 8010620:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010624:	1a9b      	subs	r3, r3, r2
 8010626:	f8ad 3002 	strh.w	r3, [sp, #2]
 801062a:	6823      	ldr	r3, [r4, #0]
 801062c:	4669      	mov	r1, sp
 801062e:	689b      	ldr	r3, [r3, #8]
 8010630:	4620      	mov	r0, r4
 8010632:	4798      	blx	r3
 8010634:	69a4      	ldr	r4, [r4, #24]
 8010636:	2c00      	cmp	r4, #0
 8010638:	d1d8      	bne.n	80105ec <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801063a:	b002      	add	sp, #8
 801063c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010640 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010640:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010642:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010646:	460d      	mov	r5, r1
 8010648:	4616      	mov	r6, r2
 801064a:	b323      	cbz	r3, 8010696 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801064c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801064e:	b314      	cbz	r4, 8010696 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010650:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010654:	b1eb      	cbz	r3, 8010692 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010656:	6828      	ldr	r0, [r5, #0]
 8010658:	6869      	ldr	r1, [r5, #4]
 801065a:	466b      	mov	r3, sp
 801065c:	c303      	stmia	r3!, {r0, r1}
 801065e:	4668      	mov	r0, sp
 8010660:	1d21      	adds	r1, r4, #4
 8010662:	f7ff ff15 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8010666:	4668      	mov	r0, sp
 8010668:	f7ff ff55 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801066c:	b988      	cbnz	r0, 8010692 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801066e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010672:	88a2      	ldrh	r2, [r4, #4]
 8010674:	1a9b      	subs	r3, r3, r2
 8010676:	f8ad 3000 	strh.w	r3, [sp]
 801067a:	88e2      	ldrh	r2, [r4, #6]
 801067c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010680:	1a9b      	subs	r3, r3, r2
 8010682:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010686:	6823      	ldr	r3, [r4, #0]
 8010688:	4632      	mov	r2, r6
 801068a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801068c:	4669      	mov	r1, sp
 801068e:	4620      	mov	r0, r4
 8010690:	4798      	blx	r3
 8010692:	69a4      	ldr	r4, [r4, #24]
 8010694:	e7db      	b.n	801064e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010696:	b002      	add	sp, #8
 8010698:	bd70      	pop	{r4, r5, r6, pc}

0801069a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801069a:	b513      	push	{r0, r1, r4, lr}
 801069c:	6803      	ldr	r3, [r0, #0]
 801069e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80106a2:	2300      	movs	r3, #0
 80106a4:	e9cd 3300 	strd	r3, r3, [sp]
 80106a8:	466b      	mov	r3, sp
 80106aa:	47a0      	blx	r4
 80106ac:	b002      	add	sp, #8
 80106ae:	bd10      	pop	{r4, pc}

080106b0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80106b0:	2301      	movs	r3, #1
 80106b2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80106b6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80106ba:	4770      	bx	lr

080106bc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80106bc:	2301      	movs	r3, #1
 80106be:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80106c2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80106c6:	4770      	bx	lr

080106c8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80106c8:	6843      	ldr	r3, [r0, #4]
 80106ca:	2201      	movs	r2, #1
 80106cc:	725a      	strb	r2, [r3, #9]
 80106ce:	6840      	ldr	r0, [r0, #4]
 80106d0:	6803      	ldr	r3, [r0, #0]
 80106d2:	691b      	ldr	r3, [r3, #16]
 80106d4:	4718      	bx	r3

080106d6 <_ZN8touchgfx3HAL8flushDMAEv>:
 80106d6:	6840      	ldr	r0, [r0, #4]
 80106d8:	6803      	ldr	r3, [r0, #0]
 80106da:	689b      	ldr	r3, [r3, #8]
 80106dc:	4718      	bx	r3

080106de <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80106de:	b530      	push	{r4, r5, lr}
 80106e0:	b08b      	sub	sp, #44	; 0x2c
 80106e2:	6804      	ldr	r4, [r0, #0]
 80106e4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80106e8:	9509      	str	r5, [sp, #36]	; 0x24
 80106ea:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80106ee:	9508      	str	r5, [sp, #32]
 80106f0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80106f4:	9507      	str	r5, [sp, #28]
 80106f6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80106fa:	9506      	str	r5, [sp, #24]
 80106fc:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010700:	9505      	str	r5, [sp, #20]
 8010702:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010706:	9504      	str	r5, [sp, #16]
 8010708:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801070c:	9503      	str	r5, [sp, #12]
 801070e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010712:	9502      	str	r5, [sp, #8]
 8010714:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010718:	e9cd 3500 	strd	r3, r5, [sp]
 801071c:	4613      	mov	r3, r2
 801071e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010720:	2200      	movs	r2, #0
 8010722:	47a0      	blx	r4
 8010724:	b00b      	add	sp, #44	; 0x2c
 8010726:	bd30      	pop	{r4, r5, pc}

08010728 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010728:	4b04      	ldr	r3, [pc, #16]	; (801073c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801072a:	781b      	ldrb	r3, [r3, #0]
 801072c:	b123      	cbz	r3, 8010738 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801072e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8010732:	f080 0001 	eor.w	r0, r0, #1
 8010736:	4770      	bx	lr
 8010738:	2001      	movs	r0, #1
 801073a:	4770      	bx	lr
 801073c:	2000dc72 	.word	0x2000dc72

08010740 <_ZN8touchgfx3HAL8endFrameEv>:
 8010740:	b510      	push	{r4, lr}
 8010742:	4604      	mov	r4, r0
 8010744:	6840      	ldr	r0, [r0, #4]
 8010746:	6803      	ldr	r3, [r0, #0]
 8010748:	689b      	ldr	r3, [r3, #8]
 801074a:	4798      	blx	r3
 801074c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8010750:	b113      	cbz	r3, 8010758 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010752:	2301      	movs	r3, #1
 8010754:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8010758:	bd10      	pop	{r4, pc}

0801075a <_ZN8touchgfx3HAL10initializeEv>:
 801075a:	b510      	push	{r4, lr}
 801075c:	4604      	mov	r4, r0
 801075e:	f7f0 fe0d 	bl	800137c <_ZN8touchgfx10OSWrappers10initializeEv>
 8010762:	6860      	ldr	r0, [r4, #4]
 8010764:	6803      	ldr	r3, [r0, #0]
 8010766:	68db      	ldr	r3, [r3, #12]
 8010768:	4798      	blx	r3
 801076a:	68e0      	ldr	r0, [r4, #12]
 801076c:	6803      	ldr	r3, [r0, #0]
 801076e:	689b      	ldr	r3, [r3, #8]
 8010770:	4798      	blx	r3
 8010772:	6823      	ldr	r3, [r4, #0]
 8010774:	4620      	mov	r0, r4
 8010776:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801077c:	4718      	bx	r3
	...

08010780 <_ZN8touchgfx3HAL4tickEv>:
 8010780:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010782:	6803      	ldr	r3, [r0, #0]
 8010784:	4d5b      	ldr	r5, [pc, #364]	; (80108f4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010786:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801078a:	4604      	mov	r4, r0
 801078c:	4798      	blx	r3
 801078e:	2800      	cmp	r0, #0
 8010790:	f000 8095 	beq.w	80108be <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010794:	2001      	movs	r0, #1
 8010796:	f7f0 fb19 	bl	8000dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801079a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 801079e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80107a2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80107a6:	2600      	movs	r6, #0
 80107a8:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80107ac:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80107b0:	b133      	cbz	r3, 80107c0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80107b2:	6823      	ldr	r3, [r4, #0]
 80107b4:	4620      	mov	r0, r4
 80107b6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80107ba:	4798      	blx	r3
 80107bc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80107c0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80107c4:	6862      	ldr	r2, [r4, #4]
 80107c6:	f083 0301 	eor.w	r3, r3, #1
 80107ca:	7253      	strb	r3, [r2, #9]
 80107cc:	2601      	movs	r6, #1
 80107ce:	702e      	strb	r6, [r5, #0]
 80107d0:	f005 ff42 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 80107d4:	6803      	ldr	r3, [r0, #0]
 80107d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80107d8:	4798      	blx	r3
 80107da:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80107de:	b90b      	cbnz	r3, 80107e4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80107e0:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80107e4:	f005 ff38 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 80107e8:	6803      	ldr	r3, [r0, #0]
 80107ea:	695b      	ldr	r3, [r3, #20]
 80107ec:	4798      	blx	r3
 80107ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80107f0:	6803      	ldr	r3, [r0, #0]
 80107f2:	691b      	ldr	r3, [r3, #16]
 80107f4:	4798      	blx	r3
 80107f6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80107fa:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 80107fe:	3b01      	subs	r3, #1
 8010800:	b2db      	uxtb	r3, r3
 8010802:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8010806:	b10a      	cbz	r2, 801080c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010808:	2b00      	cmp	r3, #0
 801080a:	d1eb      	bne.n	80107e4 <_ZN8touchgfx3HAL4tickEv+0x64>
 801080c:	4a3a      	ldr	r2, [pc, #232]	; (80108f8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801080e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8010812:	7813      	ldrb	r3, [r2, #0]
 8010814:	3301      	adds	r3, #1
 8010816:	b25b      	sxtb	r3, r3
 8010818:	4299      	cmp	r1, r3
 801081a:	7013      	strb	r3, [r2, #0]
 801081c:	dc10      	bgt.n	8010840 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801081e:	68e0      	ldr	r0, [r4, #12]
 8010820:	2300      	movs	r3, #0
 8010822:	7013      	strb	r3, [r2, #0]
 8010824:	6803      	ldr	r3, [r0, #0]
 8010826:	aa03      	add	r2, sp, #12
 8010828:	68db      	ldr	r3, [r3, #12]
 801082a:	a902      	add	r1, sp, #8
 801082c:	4798      	blx	r3
 801082e:	6823      	ldr	r3, [r4, #0]
 8010830:	2800      	cmp	r0, #0
 8010832:	d050      	beq.n	80108d6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010834:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010838:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801083c:	4620      	mov	r0, r4
 801083e:	4798      	blx	r3
 8010840:	6960      	ldr	r0, [r4, #20]
 8010842:	2300      	movs	r3, #0
 8010844:	f88d 3007 	strb.w	r3, [sp, #7]
 8010848:	b158      	cbz	r0, 8010862 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801084a:	6803      	ldr	r3, [r0, #0]
 801084c:	f10d 0107 	add.w	r1, sp, #7
 8010850:	68db      	ldr	r3, [r3, #12]
 8010852:	4798      	blx	r3
 8010854:	b128      	cbz	r0, 8010862 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010856:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010858:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801085c:	6803      	ldr	r3, [r0, #0]
 801085e:	68db      	ldr	r3, [r3, #12]
 8010860:	4798      	blx	r3
 8010862:	f104 001c 	add.w	r0, r4, #28
 8010866:	f014 fc83 	bl	8025170 <_ZN8touchgfx8Gestures4tickEv>
 801086a:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 801086e:	b30b      	cbz	r3, 80108b4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010870:	6920      	ldr	r0, [r4, #16]
 8010872:	6803      	ldr	r3, [r0, #0]
 8010874:	691b      	ldr	r3, [r3, #16]
 8010876:	4798      	blx	r3
 8010878:	6f23      	ldr	r3, [r4, #112]	; 0x70
 801087a:	4606      	mov	r6, r0
 801087c:	b903      	cbnz	r3, 8010880 <_ZN8touchgfx3HAL4tickEv+0x100>
 801087e:	6720      	str	r0, [r4, #112]	; 0x70
 8010880:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010882:	4a1e      	ldr	r2, [pc, #120]	; (80108fc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010884:	1af3      	subs	r3, r6, r3
 8010886:	4293      	cmp	r3, r2
 8010888:	d914      	bls.n	80108b4 <_ZN8touchgfx3HAL4tickEv+0x134>
 801088a:	6920      	ldr	r0, [r4, #16]
 801088c:	6803      	ldr	r3, [r0, #0]
 801088e:	699b      	ldr	r3, [r3, #24]
 8010890:	4798      	blx	r3
 8010892:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010894:	2264      	movs	r2, #100	; 0x64
 8010896:	1af3      	subs	r3, r6, r3
 8010898:	fbb3 f3f2 	udiv	r3, r3, r2
 801089c:	fbb0 f0f3 	udiv	r0, r0, r3
 80108a0:	2800      	cmp	r0, #0
 80108a2:	dc1d      	bgt.n	80108e0 <_ZN8touchgfx3HAL4tickEv+0x160>
 80108a4:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80108a8:	6920      	ldr	r0, [r4, #16]
 80108aa:	6803      	ldr	r3, [r0, #0]
 80108ac:	2100      	movs	r1, #0
 80108ae:	69db      	ldr	r3, [r3, #28]
 80108b0:	4798      	blx	r3
 80108b2:	6726      	str	r6, [r4, #112]	; 0x70
 80108b4:	f005 fed0 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 80108b8:	6803      	ldr	r3, [r0, #0]
 80108ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80108bc:	4798      	blx	r3
 80108be:	6823      	ldr	r3, [r4, #0]
 80108c0:	4620      	mov	r0, r4
 80108c2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80108c6:	4798      	blx	r3
 80108c8:	2001      	movs	r0, #1
 80108ca:	f7f0 faad 	bl	8000e28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80108ce:	2300      	movs	r3, #0
 80108d0:	702b      	strb	r3, [r5, #0]
 80108d2:	b004      	add	sp, #16
 80108d4:	bd70      	pop	{r4, r5, r6, pc}
 80108d6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80108da:	4620      	mov	r0, r4
 80108dc:	4798      	blx	r3
 80108de:	e7af      	b.n	8010840 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80108e0:	2863      	cmp	r0, #99	; 0x63
 80108e2:	bfcb      	itete	gt
 80108e4:	2300      	movgt	r3, #0
 80108e6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80108ea:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80108ee:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80108f2:	e7d9      	b.n	80108a8 <_ZN8touchgfx3HAL4tickEv+0x128>
 80108f4:	2000dc78 	.word	0x2000dc78
 80108f8:	2000dc79 	.word	0x2000dc79
 80108fc:	05f5e100 	.word	0x05f5e100

08010900 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010900:	f7f0 bd6c 	b.w	80013dc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010904 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010904:	6581      	str	r1, [r0, #88]	; 0x58
 8010906:	301c      	adds	r0, #28
 8010908:	f014 bc30 	b.w	802516c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0801090c <_ZN8touchgfx3HAL5touchEll>:
 801090c:	b530      	push	{r4, r5, lr}
 801090e:	b087      	sub	sp, #28
 8010910:	4604      	mov	r4, r0
 8010912:	a804      	add	r0, sp, #16
 8010914:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010918:	f005 fc44 	bl	80161a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 801091c:	9b04      	ldr	r3, [sp, #16]
 801091e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010922:	a906      	add	r1, sp, #24
 8010924:	9b05      	ldr	r3, [sp, #20]
 8010926:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801092a:	a803      	add	r0, sp, #12
 801092c:	f005 fc8c 	bl	8016248 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010930:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8010934:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010938:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801093c:	f104 001c 	add.w	r0, r4, #28
 8010940:	b189      	cbz	r1, 8010966 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010942:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8010946:	9300      	str	r3, [sp, #0]
 8010948:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801094c:	4613      	mov	r3, r2
 801094e:	462a      	mov	r2, r5
 8010950:	f014 fc1c 	bl	802518c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010954:	b128      	cbz	r0, 8010962 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010956:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801095a:	65e3      	str	r3, [r4, #92]	; 0x5c
 801095c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010960:	6623      	str	r3, [r4, #96]	; 0x60
 8010962:	b007      	add	sp, #28
 8010964:	bd30      	pop	{r4, r5, pc}
 8010966:	f014 fc51 	bl	802520c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801096a:	2301      	movs	r3, #1
 801096c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010970:	e7f1      	b.n	8010956 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010972 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010972:	b510      	push	{r4, lr}
 8010974:	2b00      	cmp	r3, #0
 8010976:	d046      	beq.n	8010a06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010978:	ea81 0002 	eor.w	r0, r1, r2
 801097c:	07c4      	lsls	r4, r0, #31
 801097e:	d508      	bpl.n	8010992 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010980:	440b      	add	r3, r1
 8010982:	3a01      	subs	r2, #1
 8010984:	428b      	cmp	r3, r1
 8010986:	d93e      	bls.n	8010a06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010988:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801098c:	f801 0b01 	strb.w	r0, [r1], #1
 8010990:	e7f8      	b.n	8010984 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010992:	07d0      	lsls	r0, r2, #31
 8010994:	bf42      	ittt	mi
 8010996:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801099a:	f801 0b01 	strbmi.w	r0, [r1], #1
 801099e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80109a2:	2b01      	cmp	r3, #1
 80109a4:	d911      	bls.n	80109ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80109a6:	ea81 0402 	eor.w	r4, r1, r2
 80109aa:	07a4      	lsls	r4, r4, #30
 80109ac:	4610      	mov	r0, r2
 80109ae:	d022      	beq.n	80109f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80109b0:	f023 0401 	bic.w	r4, r3, #1
 80109b4:	440c      	add	r4, r1
 80109b6:	428c      	cmp	r4, r1
 80109b8:	4602      	mov	r2, r0
 80109ba:	d904      	bls.n	80109c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80109bc:	8812      	ldrh	r2, [r2, #0]
 80109be:	f821 2b02 	strh.w	r2, [r1], #2
 80109c2:	3002      	adds	r0, #2
 80109c4:	e7f7      	b.n	80109b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80109c6:	f003 0301 	and.w	r3, r3, #1
 80109ca:	f023 0003 	bic.w	r0, r3, #3
 80109ce:	4408      	add	r0, r1
 80109d0:	4288      	cmp	r0, r1
 80109d2:	4614      	mov	r4, r2
 80109d4:	d904      	bls.n	80109e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80109d6:	6824      	ldr	r4, [r4, #0]
 80109d8:	f841 4b04 	str.w	r4, [r1], #4
 80109dc:	3204      	adds	r2, #4
 80109de:	e7f7      	b.n	80109d0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80109e0:	f003 0303 	and.w	r3, r3, #3
 80109e4:	440b      	add	r3, r1
 80109e6:	3a01      	subs	r2, #1
 80109e8:	428b      	cmp	r3, r1
 80109ea:	d90c      	bls.n	8010a06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80109ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80109f0:	f801 0b01 	strb.w	r0, [r1], #1
 80109f4:	e7f8      	b.n	80109e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80109f6:	0790      	lsls	r0, r2, #30
 80109f8:	d0e7      	beq.n	80109ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80109fa:	f832 0b02 	ldrh.w	r0, [r2], #2
 80109fe:	f821 0b02 	strh.w	r0, [r1], #2
 8010a02:	3b02      	subs	r3, #2
 8010a04:	e7e1      	b.n	80109ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010a06:	2001      	movs	r0, #1
 8010a08:	bd10      	pop	{r4, pc}

08010a0a <_ZN8touchgfx3HAL7noTouchEv>:
 8010a0a:	b510      	push	{r4, lr}
 8010a0c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8010a10:	4604      	mov	r4, r0
 8010a12:	b153      	cbz	r3, 8010a2a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010a14:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8010a18:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8010a1c:	2101      	movs	r1, #1
 8010a1e:	301c      	adds	r0, #28
 8010a20:	f014 fbf4 	bl	802520c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010a24:	2300      	movs	r3, #0
 8010a26:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010a2a:	bd10      	pop	{r4, pc}

08010a2c <_ZN8touchgfx3HAL3lcdEv>:
 8010a2c:	4b04      	ldr	r3, [pc, #16]	; (8010a40 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8010a2e:	681b      	ldr	r3, [r3, #0]
 8010a30:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010a34:	b10a      	cbz	r2, 8010a3a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8010a36:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010a38:	b900      	cbnz	r0, 8010a3c <_ZN8touchgfx3HAL3lcdEv+0x10>
 8010a3a:	6898      	ldr	r0, [r3, #8]
 8010a3c:	4770      	bx	lr
 8010a3e:	bf00      	nop
 8010a40:	2000dc74 	.word	0x2000dc74

08010a44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a48:	b085      	sub	sp, #20
 8010a4a:	ad04      	add	r5, sp, #16
 8010a4c:	4604      	mov	r4, r0
 8010a4e:	2000      	movs	r0, #0
 8010a50:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010a54:	69a0      	ldr	r0, [r4, #24]
 8010a56:	6806      	ldr	r6, [r0, #0]
 8010a58:	9501      	str	r5, [sp, #4]
 8010a5a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010a5e:	9500      	str	r5, [sp, #0]
 8010a60:	6835      	ldr	r5, [r6, #0]
 8010a62:	4699      	mov	r9, r3
 8010a64:	460f      	mov	r7, r1
 8010a66:	4690      	mov	r8, r2
 8010a68:	47a8      	blx	r5
 8010a6a:	4d10      	ldr	r5, [pc, #64]	; (8010aac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010a6c:	4606      	mov	r6, r0
 8010a6e:	f8a5 9000 	strh.w	r9, [r5]
 8010a72:	f7ff ffdb 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010a76:	6803      	ldr	r3, [r0, #0]
 8010a78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a7a:	4798      	blx	r3
 8010a7c:	b128      	cbz	r0, 8010a8a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010a7e:	2801      	cmp	r0, #1
 8010a80:	d00b      	beq.n	8010a9a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010a82:	4630      	mov	r0, r6
 8010a84:	b005      	add	sp, #20
 8010a86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a8a:	882b      	ldrh	r3, [r5, #0]
 8010a8c:	fb08 7203 	mla	r2, r8, r3, r7
 8010a90:	9b03      	ldr	r3, [sp, #12]
 8010a92:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010a96:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010a98:	e7f3      	b.n	8010a82 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010a9a:	882a      	ldrh	r2, [r5, #0]
 8010a9c:	9b03      	ldr	r3, [sp, #12]
 8010a9e:	fb08 7202 	mla	r2, r8, r2, r7
 8010aa2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010aa6:	1a9a      	subs	r2, r3, r2
 8010aa8:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010aaa:	e7ea      	b.n	8010a82 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010aac:	2000dc6e 	.word	0x2000dc6e

08010ab0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010ab0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ab2:	b08b      	sub	sp, #44	; 0x2c
 8010ab4:	4617      	mov	r7, r2
 8010ab6:	4604      	mov	r4, r0
 8010ab8:	460e      	mov	r6, r1
 8010aba:	461d      	mov	r5, r3
 8010abc:	f7ff ffb6 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010ac0:	6803      	ldr	r3, [r0, #0]
 8010ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ac4:	4798      	blx	r3
 8010ac6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010aca:	9007      	str	r0, [sp, #28]
 8010acc:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010ad0:	4b0d      	ldr	r3, [pc, #52]	; (8010b08 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010ad2:	6822      	ldr	r2, [r4, #0]
 8010ad4:	881b      	ldrh	r3, [r3, #0]
 8010ad6:	9306      	str	r3, [sp, #24]
 8010ad8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010adc:	9305      	str	r3, [sp, #20]
 8010ade:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010ae2:	9304      	str	r3, [sp, #16]
 8010ae4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ae8:	9303      	str	r3, [sp, #12]
 8010aea:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010aee:	9302      	str	r3, [sp, #8]
 8010af0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010af4:	e9cd 5300 	strd	r5, r3, [sp]
 8010af8:	4631      	mov	r1, r6
 8010afa:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010afc:	463b      	mov	r3, r7
 8010afe:	2200      	movs	r2, #0
 8010b00:	4620      	mov	r0, r4
 8010b02:	47a8      	blx	r5
 8010b04:	b00b      	add	sp, #44	; 0x2c
 8010b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b08:	2000dc6e 	.word	0x2000dc6e

08010b0c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b10:	4698      	mov	r8, r3
 8010b12:	6803      	ldr	r3, [r0, #0]
 8010b14:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010b16:	4b15      	ldr	r3, [pc, #84]	; (8010b6c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010b18:	b08b      	sub	sp, #44	; 0x2c
 8010b1a:	4617      	mov	r7, r2
 8010b1c:	f8b3 9000 	ldrh.w	r9, [r3]
 8010b20:	460e      	mov	r6, r1
 8010b22:	4604      	mov	r4, r0
 8010b24:	f7ff ff82 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010b28:	6803      	ldr	r3, [r0, #0]
 8010b2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b2c:	4798      	blx	r3
 8010b2e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010b32:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010b36:	2302      	movs	r3, #2
 8010b38:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010b3c:	2301      	movs	r3, #1
 8010b3e:	9305      	str	r3, [sp, #20]
 8010b40:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010b44:	9304      	str	r3, [sp, #16]
 8010b46:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010b4a:	9303      	str	r3, [sp, #12]
 8010b4c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010b50:	9302      	str	r3, [sp, #8]
 8010b52:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010b56:	2200      	movs	r2, #0
 8010b58:	e9cd 8300 	strd	r8, r3, [sp]
 8010b5c:	4631      	mov	r1, r6
 8010b5e:	463b      	mov	r3, r7
 8010b60:	4620      	mov	r0, r4
 8010b62:	47a8      	blx	r5
 8010b64:	b00b      	add	sp, #44	; 0x2c
 8010b66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b6a:	bf00      	nop
 8010b6c:	2000dc6e 	.word	0x2000dc6e

08010b70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010b70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b74:	4698      	mov	r8, r3
 8010b76:	6803      	ldr	r3, [r0, #0]
 8010b78:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010b7a:	4b11      	ldr	r3, [pc, #68]	; (8010bc0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010b7c:	b087      	sub	sp, #28
 8010b7e:	f8b3 9000 	ldrh.w	r9, [r3]
 8010b82:	460e      	mov	r6, r1
 8010b84:	4617      	mov	r7, r2
 8010b86:	4604      	mov	r4, r0
 8010b88:	f7ff ff50 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010b8c:	6803      	ldr	r3, [r0, #0]
 8010b8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b90:	4798      	blx	r3
 8010b92:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010b96:	f8cd 900c 	str.w	r9, [sp, #12]
 8010b9a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010b9e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010ba2:	9302      	str	r3, [sp, #8]
 8010ba4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010ba8:	9301      	str	r3, [sp, #4]
 8010baa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010bae:	9300      	str	r3, [sp, #0]
 8010bb0:	463a      	mov	r2, r7
 8010bb2:	4643      	mov	r3, r8
 8010bb4:	4631      	mov	r1, r6
 8010bb6:	4620      	mov	r0, r4
 8010bb8:	47a8      	blx	r5
 8010bba:	b007      	add	sp, #28
 8010bbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bc0:	2000dc6e 	.word	0x2000dc6e

08010bc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc8:	4604      	mov	r4, r0
 8010bca:	b08f      	sub	sp, #60	; 0x3c
 8010bcc:	4610      	mov	r0, r2
 8010bce:	460d      	mov	r5, r1
 8010bd0:	4691      	mov	r9, r2
 8010bd2:	461e      	mov	r6, r3
 8010bd4:	f008 fd14 	bl	8019600 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010bd8:	2800      	cmp	r0, #0
 8010bda:	f000 809d 	beq.w	8010d18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010bde:	6823      	ldr	r3, [r4, #0]
 8010be0:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010d7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010be4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010be6:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010d80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010bea:	4f61      	ldr	r7, [pc, #388]	; (8010d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010bec:	4620      	mov	r0, r4
 8010bee:	4798      	blx	r3
 8010bf0:	6823      	ldr	r3, [r4, #0]
 8010bf2:	4620      	mov	r0, r4
 8010bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010bf6:	4798      	blx	r3
 8010bf8:	f8bb 3000 	ldrh.w	r3, [fp]
 8010bfc:	9301      	str	r3, [sp, #4]
 8010bfe:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010c02:	f8ba 3000 	ldrh.w	r3, [sl]
 8010c06:	9302      	str	r3, [sp, #8]
 8010c08:	883b      	ldrh	r3, [r7, #0]
 8010c0a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010c0e:	9303      	str	r3, [sp, #12]
 8010c10:	4b58      	ldr	r3, [pc, #352]	; (8010d74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010c12:	9305      	str	r3, [sp, #20]
 8010c14:	881a      	ldrh	r2, [r3, #0]
 8010c16:	9204      	str	r2, [sp, #16]
 8010c18:	4640      	mov	r0, r8
 8010c1a:	f008 fd85 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010c1e:	8038      	strh	r0, [r7, #0]
 8010c20:	4640      	mov	r0, r8
 8010c22:	f008 fdb5 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010c26:	9b05      	ldr	r3, [sp, #20]
 8010c28:	b280      	uxth	r0, r0
 8010c2a:	8018      	strh	r0, [r3, #0]
 8010c2c:	4b52      	ldr	r3, [pc, #328]	; (8010d78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010c2e:	781b      	ldrb	r3, [r3, #0]
 8010c30:	2b00      	cmp	r3, #0
 8010c32:	d174      	bne.n	8010d1e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010c34:	883b      	ldrh	r3, [r7, #0]
 8010c36:	f8ab 3000 	strh.w	r3, [fp]
 8010c3a:	f8aa 0000 	strh.w	r0, [sl]
 8010c3e:	4648      	mov	r0, r9
 8010c40:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010c44:	f008 fcdc 	bl	8019600 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010c48:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010c4c:	2200      	movs	r2, #0
 8010c4e:	4611      	mov	r1, r2
 8010c50:	4628      	mov	r0, r5
 8010c52:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010c56:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010c5a:	f7f2 fdbe 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 8010c5e:	2301      	movs	r3, #1
 8010c60:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010c64:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010c68:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010c6c:	2b00      	cmp	r3, #0
 8010c6e:	dd5c      	ble.n	8010d2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010c70:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010c74:	2b00      	cmp	r3, #0
 8010c76:	dd58      	ble.n	8010d2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010c78:	462a      	mov	r2, r5
 8010c7a:	ab0a      	add	r3, sp, #40	; 0x28
 8010c7c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010c80:	6851      	ldr	r1, [r2, #4]
 8010c82:	c303      	stmia	r3!, {r0, r1}
 8010c84:	4631      	mov	r1, r6
 8010c86:	a80a      	add	r0, sp, #40	; 0x28
 8010c88:	f7ff fc02 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8010c8c:	4b38      	ldr	r3, [pc, #224]	; (8010d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010c8e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010c92:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010c96:	2100      	movs	r1, #0
 8010c98:	aa0a      	add	r2, sp, #40	; 0x28
 8010c9a:	4b36      	ldr	r3, [pc, #216]	; (8010d74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010c9c:	910c      	str	r1, [sp, #48]	; 0x30
 8010c9e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010ca2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ca6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010caa:	ab08      	add	r3, sp, #32
 8010cac:	e883 0003 	stmia.w	r3, {r0, r1}
 8010cb0:	4618      	mov	r0, r3
 8010cb2:	a90c      	add	r1, sp, #48	; 0x30
 8010cb4:	f7ff fbec 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8010cb8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010cba:	2b00      	cmp	r3, #0
 8010cbc:	d13c      	bne.n	8010d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010cbe:	2000      	movs	r0, #0
 8010cc0:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8010cc4:	2600      	movs	r6, #0
 8010cc6:	682a      	ldr	r2, [r5, #0]
 8010cc8:	696b      	ldr	r3, [r5, #20]
 8010cca:	616e      	str	r6, [r5, #20]
 8010ccc:	9305      	str	r3, [sp, #20]
 8010cce:	6892      	ldr	r2, [r2, #8]
 8010cd0:	a908      	add	r1, sp, #32
 8010cd2:	4628      	mov	r0, r5
 8010cd4:	4790      	blx	r2
 8010cd6:	9b05      	ldr	r3, [sp, #20]
 8010cd8:	616b      	str	r3, [r5, #20]
 8010cda:	4652      	mov	r2, sl
 8010cdc:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8010ce0:	4649      	mov	r1, r9
 8010ce2:	4628      	mov	r0, r5
 8010ce4:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010ce8:	f7f2 fd77 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 8010cec:	4b23      	ldr	r3, [pc, #140]	; (8010d7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010cee:	9a01      	ldr	r2, [sp, #4]
 8010cf0:	801a      	strh	r2, [r3, #0]
 8010cf2:	4b23      	ldr	r3, [pc, #140]	; (8010d80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010cf4:	9a02      	ldr	r2, [sp, #8]
 8010cf6:	801a      	strh	r2, [r3, #0]
 8010cf8:	4b1d      	ldr	r3, [pc, #116]	; (8010d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010cfa:	9a03      	ldr	r2, [sp, #12]
 8010cfc:	801a      	strh	r2, [r3, #0]
 8010cfe:	4b1d      	ldr	r3, [pc, #116]	; (8010d74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010d00:	9a04      	ldr	r2, [sp, #16]
 8010d02:	801a      	strh	r2, [r3, #0]
 8010d04:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010d08:	6823      	ldr	r3, [r4, #0]
 8010d0a:	4620      	mov	r0, r4
 8010d0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010d0e:	4798      	blx	r3
 8010d10:	6823      	ldr	r3, [r4, #0]
 8010d12:	4620      	mov	r0, r4
 8010d14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d16:	4798      	blx	r3
 8010d18:	b00f      	add	sp, #60	; 0x3c
 8010d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d1e:	883b      	ldrh	r3, [r7, #0]
 8010d20:	f8ab 0000 	strh.w	r0, [fp]
 8010d24:	f8aa 3000 	strh.w	r3, [sl]
 8010d28:	e789      	b.n	8010c3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010d2a:	462a      	mov	r2, r5
 8010d2c:	ab0a      	add	r3, sp, #40	; 0x28
 8010d2e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010d32:	6851      	ldr	r1, [r2, #4]
 8010d34:	c303      	stmia	r3!, {r0, r1}
 8010d36:	e7a9      	b.n	8010c8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010d38:	a807      	add	r0, sp, #28
 8010d3a:	f008 fe65 	bl	8019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d3e:	4606      	mov	r6, r0
 8010d40:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010d42:	6803      	ldr	r3, [r0, #0]
 8010d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d46:	4798      	blx	r3
 8010d48:	4286      	cmp	r6, r0
 8010d4a:	d1b8      	bne.n	8010cbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010d4c:	f7ff fe6e 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010d50:	6803      	ldr	r3, [r0, #0]
 8010d52:	4606      	mov	r6, r0
 8010d54:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010d56:	9305      	str	r3, [sp, #20]
 8010d58:	a807      	add	r0, sp, #28
 8010d5a:	f008 fe55 	bl	8019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d5e:	9b05      	ldr	r3, [sp, #20]
 8010d60:	4601      	mov	r1, r0
 8010d62:	4630      	mov	r0, r6
 8010d64:	4798      	blx	r3
 8010d66:	f080 0001 	eor.w	r0, r0, #1
 8010d6a:	b2c0      	uxtb	r0, r0
 8010d6c:	e7a8      	b.n	8010cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010d6e:	bf00      	nop
 8010d70:	2000dc68 	.word	0x2000dc68
 8010d74:	2000dc6a 	.word	0x2000dc6a
 8010d78:	2000dc6c 	.word	0x2000dc6c
 8010d7c:	2000dc6e 	.word	0x2000dc6e
 8010d80:	2000dc70 	.word	0x2000dc70

08010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010d84:	b510      	push	{r4, lr}
 8010d86:	4b07      	ldr	r3, [pc, #28]	; (8010da4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010d88:	781b      	ldrb	r3, [r3, #0]
 8010d8a:	4604      	mov	r4, r0
 8010d8c:	b13b      	cbz	r3, 8010d9e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010d8e:	6803      	ldr	r3, [r0, #0]
 8010d90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d92:	4798      	blx	r3
 8010d94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010d96:	4283      	cmp	r3, r0
 8010d98:	d101      	bne.n	8010d9e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010d9a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010d9c:	bd10      	pop	{r4, pc}
 8010d9e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010da0:	e7fc      	b.n	8010d9c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010da2:	bf00      	nop
 8010da4:	2000dc72 	.word	0x2000dc72

08010da8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010dac:	b08a      	sub	sp, #40	; 0x28
 8010dae:	461d      	mov	r5, r3
 8010db0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010db4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010db8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010dbc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010dc0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010dc4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010dc8:	2400      	movs	r4, #0
 8010dca:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010dce:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010dd2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010dd6:	4690      	mov	r8, r2
 8010dd8:	4607      	mov	r7, r0
 8010dda:	9404      	str	r4, [sp, #16]
 8010ddc:	f88d 4020 	strb.w	r4, [sp, #32]
 8010de0:	f7ff ffd0 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010de4:	fb06 8505 	mla	r5, r6, r5, r8
 8010de8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010dec:	6878      	ldr	r0, [r7, #4]
 8010dee:	9505      	str	r5, [sp, #20]
 8010df0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010df4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010df8:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010dfc:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010e00:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010e04:	6803      	ldr	r3, [r0, #0]
 8010e06:	a901      	add	r1, sp, #4
 8010e08:	685b      	ldr	r3, [r3, #4]
 8010e0a:	4798      	blx	r3
 8010e0c:	b00a      	add	sp, #40	; 0x28
 8010e0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010e12 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010e12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e16:	b08b      	sub	sp, #44	; 0x2c
 8010e18:	2400      	movs	r4, #0
 8010e1a:	461d      	mov	r5, r3
 8010e1c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010e20:	4688      	mov	r8, r1
 8010e22:	4691      	mov	r9, r2
 8010e24:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010e28:	9404      	str	r4, [sp, #16]
 8010e2a:	4607      	mov	r7, r0
 8010e2c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010e30:	f7ff ffa8 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e34:	fb06 9505 	mla	r5, r6, r5, r9
 8010e38:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010e3c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010e40:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010e44:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010e48:	6878      	ldr	r0, [r7, #4]
 8010e4a:	9505      	str	r5, [sp, #20]
 8010e4c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010e50:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010e54:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010e58:	f8cd 8010 	str.w	r8, [sp, #16]
 8010e5c:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010e60:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010e64:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010e68:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010e6c:	6803      	ldr	r3, [r0, #0]
 8010e6e:	a901      	add	r1, sp, #4
 8010e70:	685b      	ldr	r3, [r3, #4]
 8010e72:	4798      	blx	r3
 8010e74:	b00b      	add	sp, #44	; 0x2c
 8010e76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e80:	b08a      	sub	sp, #40	; 0x28
 8010e82:	4698      	mov	r8, r3
 8010e84:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010e88:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010e8c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010e90:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010e94:	2300      	movs	r3, #0
 8010e96:	2d0b      	cmp	r5, #11
 8010e98:	4606      	mov	r6, r0
 8010e9a:	9304      	str	r3, [sp, #16]
 8010e9c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010ea0:	d138      	bne.n	8010f14 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010ea2:	2380      	movs	r3, #128	; 0x80
 8010ea4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ea8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010eac:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010eb0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010eb4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010eb8:	f88d 0020 	strb.w	r0, [sp, #32]
 8010ebc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010ec0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ec4:	4630      	mov	r0, r6
 8010ec6:	9203      	str	r2, [sp, #12]
 8010ec8:	f7ff ff5c 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ecc:	2c0b      	cmp	r4, #11
 8010ece:	bf98      	it	ls
 8010ed0:	4b1b      	ldrls	r3, [pc, #108]	; (8010f40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010ed2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010ed6:	bf98      	it	ls
 8010ed8:	5d19      	ldrbls	r1, [r3, r4]
 8010eda:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010ede:	bf88      	it	hi
 8010ee0:	2100      	movhi	r1, #0
 8010ee2:	fb02 8307 	mla	r3, r2, r7, r8
 8010ee6:	10c9      	asrs	r1, r1, #3
 8010ee8:	fb01 0003 	mla	r0, r1, r3, r0
 8010eec:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010ef0:	9005      	str	r0, [sp, #20]
 8010ef2:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010ef6:	6870      	ldr	r0, [r6, #4]
 8010ef8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010efc:	2300      	movs	r3, #0
 8010efe:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010f02:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010f06:	6803      	ldr	r3, [r0, #0]
 8010f08:	a901      	add	r1, sp, #4
 8010f0a:	685b      	ldr	r3, [r3, #4]
 8010f0c:	4798      	blx	r3
 8010f0e:	b00a      	add	sp, #40	; 0x28
 8010f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f14:	2d02      	cmp	r5, #2
 8010f16:	d109      	bne.n	8010f2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010f18:	28ff      	cmp	r0, #255	; 0xff
 8010f1a:	d105      	bne.n	8010f28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010f1c:	f1bc 0f00 	cmp.w	ip, #0
 8010f20:	bf14      	ite	ne
 8010f22:	2340      	movne	r3, #64	; 0x40
 8010f24:	2320      	moveq	r3, #32
 8010f26:	e7bd      	b.n	8010ea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f28:	2340      	movs	r3, #64	; 0x40
 8010f2a:	e7bb      	b.n	8010ea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f2c:	28ff      	cmp	r0, #255	; 0xff
 8010f2e:	d105      	bne.n	8010f3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010f30:	f1bc 0f00 	cmp.w	ip, #0
 8010f34:	bf14      	ite	ne
 8010f36:	2304      	movne	r3, #4
 8010f38:	2301      	moveq	r3, #1
 8010f3a:	e7b3      	b.n	8010ea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f3c:	2304      	movs	r3, #4
 8010f3e:	e7b1      	b.n	8010ea4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f40:	08028584 	.word	0x08028584

08010f44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f48:	b08b      	sub	sp, #44	; 0x2c
 8010f4a:	461d      	mov	r5, r3
 8010f4c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010f50:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010f54:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010f58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010f5c:	bf14      	ite	ne
 8010f5e:	2308      	movne	r3, #8
 8010f60:	2302      	moveq	r3, #2
 8010f62:	2400      	movs	r4, #0
 8010f64:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010f68:	4688      	mov	r8, r1
 8010f6a:	4693      	mov	fp, r2
 8010f6c:	9404      	str	r4, [sp, #16]
 8010f6e:	4607      	mov	r7, r0
 8010f70:	f7ff ff08 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f74:	2e0b      	cmp	r6, #11
 8010f76:	bf98      	it	ls
 8010f78:	4b15      	ldrls	r3, [pc, #84]	; (8010fd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010f7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010f7e:	bf98      	it	ls
 8010f80:	5d9c      	ldrbls	r4, [r3, r6]
 8010f82:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010f86:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010f8a:	fb05 b50a 	mla	r5, r5, sl, fp
 8010f8e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010f92:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010f96:	10e4      	asrs	r4, r4, #3
 8010f98:	fb04 0405 	mla	r4, r4, r5, r0
 8010f9c:	2300      	movs	r3, #0
 8010f9e:	6878      	ldr	r0, [r7, #4]
 8010fa0:	9405      	str	r4, [sp, #20]
 8010fa2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010fa6:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010faa:	f8cd 8010 	str.w	r8, [sp, #16]
 8010fae:	f88d 9020 	strb.w	r9, [sp, #32]
 8010fb2:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010fb6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010fba:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010fbe:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010fc2:	6803      	ldr	r3, [r0, #0]
 8010fc4:	a901      	add	r1, sp, #4
 8010fc6:	685b      	ldr	r3, [r3, #4]
 8010fc8:	4798      	blx	r3
 8010fca:	b00b      	add	sp, #44	; 0x2c
 8010fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fd0:	08028584 	.word	0x08028584

08010fd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fd8:	461e      	mov	r6, r3
 8010fda:	4b0a      	ldr	r3, [pc, #40]	; (8011004 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010fdc:	460f      	mov	r7, r1
 8010fde:	881d      	ldrh	r5, [r3, #0]
 8010fe0:	4690      	mov	r8, r2
 8010fe2:	f7ff fd23 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8010fe6:	6803      	ldr	r3, [r0, #0]
 8010fe8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010fea:	4798      	blx	r3
 8010fec:	280b      	cmp	r0, #11
 8010fee:	bf9a      	itte	ls
 8010ff0:	4b05      	ldrls	r3, [pc, #20]	; (8011008 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010ff2:	5c1c      	ldrbls	r4, [r3, r0]
 8010ff4:	2400      	movhi	r4, #0
 8010ff6:	fb08 7005 	mla	r0, r8, r5, r7
 8010ffa:	10e4      	asrs	r4, r4, #3
 8010ffc:	fb04 6000 	mla	r0, r4, r0, r6
 8011000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011004:	2000dc6e 	.word	0x2000dc6e
 8011008:	08028584 	.word	0x08028584

0801100c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 801100c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801100e:	b08b      	sub	sp, #44	; 0x2c
 8011010:	461f      	mov	r7, r3
 8011012:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011016:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801101a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801101e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011022:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011026:	f8ad 301a 	strh.w	r3, [sp, #26]
 801102a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801102e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011032:	2500      	movs	r5, #0
 8011034:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011038:	f88d 3020 	strb.w	r3, [sp, #32]
 801103c:	4604      	mov	r4, r0
 801103e:	4616      	mov	r6, r2
 8011040:	9504      	str	r5, [sp, #16]
 8011042:	f7ff fe9f 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011046:	463a      	mov	r2, r7
 8011048:	4631      	mov	r1, r6
 801104a:	4603      	mov	r3, r0
 801104c:	4620      	mov	r0, r4
 801104e:	f7ff ffc1 	bl	8010fd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011052:	4b0e      	ldr	r3, [pc, #56]	; (801108c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011054:	9005      	str	r0, [sp, #20]
 8011056:	881b      	ldrh	r3, [r3, #0]
 8011058:	f8ad 301e 	strh.w	r3, [sp, #30]
 801105c:	f7ff fce6 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8011060:	6803      	ldr	r3, [r0, #0]
 8011062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011064:	4798      	blx	r3
 8011066:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011068:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 801106c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011070:	9304      	str	r3, [sp, #16]
 8011072:	6860      	ldr	r0, [r4, #4]
 8011074:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011078:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801107c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011080:	6803      	ldr	r3, [r0, #0]
 8011082:	a901      	add	r1, sp, #4
 8011084:	685b      	ldr	r3, [r3, #4]
 8011086:	4798      	blx	r3
 8011088:	b00b      	add	sp, #44	; 0x2c
 801108a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801108c:	2000dc6e 	.word	0x2000dc6e

08011090 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011090:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011092:	b08d      	sub	sp, #52	; 0x34
 8011094:	466b      	mov	r3, sp
 8011096:	e883 0006 	stmia.w	r3, {r1, r2}
 801109a:	2300      	movs	r3, #0
 801109c:	9306      	str	r3, [sp, #24]
 801109e:	6803      	ldr	r3, [r0, #0]
 80110a0:	f8bd 6000 	ldrh.w	r6, [sp]
 80110a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80110a6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80110aa:	2501      	movs	r5, #1
 80110ac:	9503      	str	r5, [sp, #12]
 80110ae:	4604      	mov	r4, r0
 80110b0:	4798      	blx	r3
 80110b2:	463a      	mov	r2, r7
 80110b4:	4631      	mov	r1, r6
 80110b6:	4603      	mov	r3, r0
 80110b8:	4620      	mov	r0, r4
 80110ba:	f7ff ff8b 	bl	8010fd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80110be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80110c0:	9307      	str	r3, [sp, #28]
 80110c2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80110c6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80110ca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80110ce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80110d2:	4b0f      	ldr	r3, [pc, #60]	; (8011110 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80110d4:	9004      	str	r0, [sp, #16]
 80110d6:	881b      	ldrh	r3, [r3, #0]
 80110d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80110dc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80110e0:	f7ff fca4 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 80110e4:	6803      	ldr	r3, [r0, #0]
 80110e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110e8:	4798      	blx	r3
 80110ea:	23ff      	movs	r3, #255	; 0xff
 80110ec:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80110f0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80110f4:	6860      	ldr	r0, [r4, #4]
 80110f6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80110fa:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80110fe:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011102:	6803      	ldr	r3, [r0, #0]
 8011104:	a903      	add	r1, sp, #12
 8011106:	685b      	ldr	r3, [r3, #4]
 8011108:	4798      	blx	r3
 801110a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 801110c:	b00d      	add	sp, #52	; 0x34
 801110e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011110:	2000dc6e 	.word	0x2000dc6e

08011114 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011118:	b08c      	sub	sp, #48	; 0x30
 801111a:	461e      	mov	r6, r3
 801111c:	466d      	mov	r5, sp
 801111e:	2300      	movs	r3, #0
 8011120:	e885 0006 	stmia.w	r5, {r1, r2}
 8011124:	9306      	str	r3, [sp, #24]
 8011126:	6803      	ldr	r3, [r0, #0]
 8011128:	f8bd 7000 	ldrh.w	r7, [sp]
 801112c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801112e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011132:	2501      	movs	r5, #1
 8011134:	9503      	str	r5, [sp, #12]
 8011136:	4604      	mov	r4, r0
 8011138:	4798      	blx	r3
 801113a:	4642      	mov	r2, r8
 801113c:	4639      	mov	r1, r7
 801113e:	4603      	mov	r3, r0
 8011140:	4620      	mov	r0, r4
 8011142:	f7ff ff47 	bl	8010fd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011146:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801114a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801114e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011152:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011156:	4b11      	ldr	r3, [pc, #68]	; (801119c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011158:	9004      	str	r0, [sp, #16]
 801115a:	881b      	ldrh	r3, [r3, #0]
 801115c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011160:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011162:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011166:	9607      	str	r6, [sp, #28]
 8011168:	f7ff fc60 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 801116c:	6803      	ldr	r3, [r0, #0]
 801116e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011170:	4798      	blx	r3
 8011172:	23ff      	movs	r3, #255	; 0xff
 8011174:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011178:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801117c:	6860      	ldr	r0, [r4, #4]
 801117e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011182:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011186:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801118a:	6803      	ldr	r3, [r0, #0]
 801118c:	a903      	add	r1, sp, #12
 801118e:	685b      	ldr	r3, [r3, #4]
 8011190:	4798      	blx	r3
 8011192:	4630      	mov	r0, r6
 8011194:	b00c      	add	sp, #48	; 0x30
 8011196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801119a:	bf00      	nop
 801119c:	2000dc6e 	.word	0x2000dc6e

080111a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80111a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111a2:	b085      	sub	sp, #20
 80111a4:	ac02      	add	r4, sp, #8
 80111a6:	e884 0006 	stmia.w	r4, {r1, r2}
 80111aa:	4605      	mov	r5, r0
 80111ac:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80111b0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80111b4:	f7ff fde6 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80111b8:	463a      	mov	r2, r7
 80111ba:	4603      	mov	r3, r0
 80111bc:	4631      	mov	r1, r6
 80111be:	4628      	mov	r0, r5
 80111c0:	f7ff ff08 	bl	8010fd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80111c4:	4a05      	ldr	r2, [pc, #20]	; (80111dc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80111c6:	682b      	ldr	r3, [r5, #0]
 80111c8:	8812      	ldrh	r2, [r2, #0]
 80111ca:	9200      	str	r2, [sp, #0]
 80111cc:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80111ce:	e894 0006 	ldmia.w	r4, {r1, r2}
 80111d2:	4603      	mov	r3, r0
 80111d4:	4628      	mov	r0, r5
 80111d6:	47b0      	blx	r6
 80111d8:	b005      	add	sp, #20
 80111da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111dc:	2000dc6e 	.word	0x2000dc6e

080111e0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80111e0:	b570      	push	{r4, r5, r6, lr}
 80111e2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 80111e6:	4604      	mov	r4, r0
 80111e8:	b19b      	cbz	r3, 8011212 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80111ea:	2002      	movs	r0, #2
 80111ec:	f7ef fe4a 	bl	8000e84 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80111f0:	2300      	movs	r3, #0
 80111f2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80111f6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80111fa:	6823      	ldr	r3, [r4, #0]
 80111fc:	4620      	mov	r0, r4
 80111fe:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011202:	f7ff fdbf 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011206:	462b      	mov	r3, r5
 8011208:	4601      	mov	r1, r0
 801120a:	4620      	mov	r0, r4
 801120c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011210:	4718      	bx	r3
 8011212:	bd70      	pop	{r4, r5, r6, pc}

08011214 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8011214:	b570      	push	{r4, r5, r6, lr}
 8011216:	4605      	mov	r5, r0
 8011218:	460c      	mov	r4, r1
 801121a:	2003      	movs	r0, #3
 801121c:	b149      	cbz	r1, 8011232 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 801121e:	f7ef fdd5 	bl	8000dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011222:	6928      	ldr	r0, [r5, #16]
 8011224:	b168      	cbz	r0, 8011242 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8011226:	6803      	ldr	r3, [r0, #0]
 8011228:	695b      	ldr	r3, [r3, #20]
 801122a:	2101      	movs	r1, #1
 801122c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011230:	4718      	bx	r3
 8011232:	f7ef fdf9 	bl	8000e28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011236:	6928      	ldr	r0, [r5, #16]
 8011238:	b118      	cbz	r0, 8011242 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801123a:	6803      	ldr	r3, [r0, #0]
 801123c:	4621      	mov	r1, r4
 801123e:	695b      	ldr	r3, [r3, #20]
 8011240:	e7f4      	b.n	801122c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8011242:	bd70      	pop	{r4, r5, r6, pc}

08011244 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011244:	b538      	push	{r3, r4, r5, lr}
 8011246:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 801124a:	428b      	cmp	r3, r1
 801124c:	4604      	mov	r4, r0
 801124e:	460d      	mov	r5, r1
 8011250:	d006      	beq.n	8011260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011252:	6803      	ldr	r3, [r0, #0]
 8011254:	b929      	cbnz	r1, 8011262 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011256:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801125a:	4798      	blx	r3
 801125c:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 8011260:	bd38      	pop	{r3, r4, r5, pc}
 8011262:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011266:	e7f8      	b.n	801125a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011268 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011268:	b510      	push	{r4, lr}
 801126a:	4b0d      	ldr	r3, [pc, #52]	; (80112a0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801126c:	781b      	ldrb	r3, [r3, #0]
 801126e:	4604      	mov	r4, r0
 8011270:	b95b      	cbnz	r3, 801128a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011272:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011276:	2b02      	cmp	r3, #2
 8011278:	d007      	beq.n	801128a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801127a:	6840      	ldr	r0, [r0, #4]
 801127c:	f000 f92a 	bl	80114d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011280:	b118      	cbz	r0, 801128a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011282:	6862      	ldr	r2, [r4, #4]
 8011284:	7a53      	ldrb	r3, [r2, #9]
 8011286:	2b00      	cmp	r3, #0
 8011288:	d0fc      	beq.n	8011284 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801128a:	f7f0 f89f 	bl	80013cc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801128e:	4620      	mov	r0, r4
 8011290:	2100      	movs	r1, #0
 8011292:	f7ff ffd7 	bl	8011244 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011296:	4620      	mov	r0, r4
 8011298:	f7ff fd74 	bl	8010d84 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801129c:	bd10      	pop	{r4, pc}
 801129e:	bf00      	nop
 80112a0:	2000dc72 	.word	0x2000dc72

080112a4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80112a4:	b570      	push	{r4, r5, r6, lr}
 80112a6:	4604      	mov	r4, r0
 80112a8:	6803      	ldr	r3, [r0, #0]
 80112aa:	b919      	cbnz	r1, 80112b4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80112ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112b2:	4718      	bx	r3
 80112b4:	2200      	movs	r2, #0
 80112b6:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 80112ba:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 80112be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112c0:	4798      	blx	r3
 80112c2:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 80112c6:	4605      	mov	r5, r0
 80112c8:	2101      	movs	r1, #1
 80112ca:	4620      	mov	r0, r4
 80112cc:	f7ff ffba 	bl	8011244 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80112d0:	4628      	mov	r0, r5
 80112d2:	bd70      	pop	{r4, r5, r6, pc}

080112d4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80112d4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80112d8:	1a13      	subs	r3, r2, r0
 80112da:	4258      	negs	r0, r3
 80112dc:	4158      	adcs	r0, r3
 80112de:	4770      	bx	lr

080112e0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80112e0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80112e4:	1a9b      	subs	r3, r3, r2
 80112e6:	2b00      	cmp	r3, #0
 80112e8:	bfdc      	itt	le
 80112ea:	6882      	ldrle	r2, [r0, #8]
 80112ec:	189b      	addle	r3, r3, r2
 80112ee:	2b01      	cmp	r3, #1
 80112f0:	bfcc      	ite	gt
 80112f2:	2000      	movgt	r0, #0
 80112f4:	2001      	movle	r0, #1
 80112f6:	4770      	bx	lr

080112f8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80112f8:	6902      	ldr	r2, [r0, #16]
 80112fa:	6843      	ldr	r3, [r0, #4]
 80112fc:	2024      	movs	r0, #36	; 0x24
 80112fe:	fb00 3002 	mla	r0, r0, r2, r3
 8011302:	4770      	bx	lr

08011304 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011304:	6803      	ldr	r3, [r0, #0]
 8011306:	691b      	ldr	r3, [r3, #16]
 8011308:	4718      	bx	r3

0801130a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801130a:	b570      	push	{r4, r5, r6, lr}
 801130c:	2301      	movs	r3, #1
 801130e:	7203      	strb	r3, [r0, #8]
 8011310:	4604      	mov	r4, r0
 8011312:	6840      	ldr	r0, [r0, #4]
 8011314:	6803      	ldr	r3, [r0, #0]
 8011316:	699b      	ldr	r3, [r3, #24]
 8011318:	4798      	blx	r3
 801131a:	6803      	ldr	r3, [r0, #0]
 801131c:	2b40      	cmp	r3, #64	; 0x40
 801131e:	4605      	mov	r5, r0
 8011320:	d00c      	beq.n	801133c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011322:	d810      	bhi.n	8011346 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011324:	2b04      	cmp	r3, #4
 8011326:	d01d      	beq.n	8011364 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011328:	d804      	bhi.n	8011334 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801132a:	2b01      	cmp	r3, #1
 801132c:	d006      	beq.n	801133c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801132e:	2b02      	cmp	r3, #2
 8011330:	d02c      	beq.n	801138c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011332:	bd70      	pop	{r4, r5, r6, pc}
 8011334:	2b08      	cmp	r3, #8
 8011336:	d01d      	beq.n	8011374 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011338:	2b20      	cmp	r3, #32
 801133a:	d1fa      	bne.n	8011332 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801133c:	6823      	ldr	r3, [r4, #0]
 801133e:	4620      	mov	r0, r4
 8011340:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011342:	4798      	blx	r3
 8011344:	e013      	b.n	801136e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011346:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801134a:	d0f7      	beq.n	801133c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801134c:	d804      	bhi.n	8011358 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801134e:	2b80      	cmp	r3, #128	; 0x80
 8011350:	d0f4      	beq.n	801133c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011352:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011356:	e7f0      	b.n	801133a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011358:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801135c:	d0ee      	beq.n	801133c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801135e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011362:	e7e5      	b.n	8011330 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011364:	6823      	ldr	r3, [r4, #0]
 8011366:	7f01      	ldrb	r1, [r0, #28]
 8011368:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801136a:	4620      	mov	r0, r4
 801136c:	4798      	blx	r3
 801136e:	6823      	ldr	r3, [r4, #0]
 8011370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011372:	e006      	b.n	8011382 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011374:	6823      	ldr	r3, [r4, #0]
 8011376:	7f01      	ldrb	r1, [r0, #28]
 8011378:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801137a:	4620      	mov	r0, r4
 801137c:	4798      	blx	r3
 801137e:	6823      	ldr	r3, [r4, #0]
 8011380:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011382:	4629      	mov	r1, r5
 8011384:	4620      	mov	r0, r4
 8011386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801138a:	4718      	bx	r3
 801138c:	6823      	ldr	r3, [r4, #0]
 801138e:	4620      	mov	r0, r4
 8011390:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011392:	4798      	blx	r3
 8011394:	e7f3      	b.n	801137e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011396 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011396:	4770      	bx	lr

08011398 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011398:	4770      	bx	lr

0801139a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801139a:	4770      	bx	lr

0801139c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801139c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80113a0:	1ad2      	subs	r2, r2, r3
 80113a2:	2a00      	cmp	r2, #0
 80113a4:	b510      	push	{r4, lr}
 80113a6:	bfdc      	itt	le
 80113a8:	6884      	ldrle	r4, [r0, #8]
 80113aa:	1912      	addle	r2, r2, r4
 80113ac:	2a01      	cmp	r2, #1
 80113ae:	dd16      	ble.n	80113de <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80113b0:	6842      	ldr	r2, [r0, #4]
 80113b2:	2424      	movs	r4, #36	; 0x24
 80113b4:	fb04 2303 	mla	r3, r4, r3, r2
 80113b8:	f101 0220 	add.w	r2, r1, #32
 80113bc:	f851 4b04 	ldr.w	r4, [r1], #4
 80113c0:	f843 4b04 	str.w	r4, [r3], #4
 80113c4:	4291      	cmp	r1, r2
 80113c6:	d1f9      	bne.n	80113bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80113c8:	780a      	ldrb	r2, [r1, #0]
 80113ca:	701a      	strb	r2, [r3, #0]
 80113cc:	68c3      	ldr	r3, [r0, #12]
 80113ce:	6882      	ldr	r2, [r0, #8]
 80113d0:	f3bf 8f5b 	dmb	ish
 80113d4:	3301      	adds	r3, #1
 80113d6:	429a      	cmp	r2, r3
 80113d8:	bfd8      	it	le
 80113da:	1a9b      	suble	r3, r3, r2
 80113dc:	60c3      	str	r3, [r0, #12]
 80113de:	bd10      	pop	{r4, pc}

080113e0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80113e0:	6903      	ldr	r3, [r0, #16]
 80113e2:	6882      	ldr	r2, [r0, #8]
 80113e4:	f3bf 8f5b 	dmb	ish
 80113e8:	3301      	adds	r3, #1
 80113ea:	429a      	cmp	r2, r3
 80113ec:	bfd8      	it	le
 80113ee:	1a9b      	suble	r3, r3, r2
 80113f0:	6103      	str	r3, [r0, #16]
 80113f2:	4770      	bx	lr

080113f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80113f4:	b570      	push	{r4, r5, r6, lr}
 80113f6:	4604      	mov	r4, r0
 80113f8:	460e      	mov	r6, r1
 80113fa:	6860      	ldr	r0, [r4, #4]
 80113fc:	6803      	ldr	r3, [r0, #0]
 80113fe:	685b      	ldr	r3, [r3, #4]
 8011400:	4798      	blx	r3
 8011402:	2800      	cmp	r0, #0
 8011404:	d1f9      	bne.n	80113fa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011406:	4d0d      	ldr	r5, [pc, #52]	; (801143c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011408:	6828      	ldr	r0, [r5, #0]
 801140a:	6803      	ldr	r3, [r0, #0]
 801140c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801140e:	4798      	blx	r3
 8011410:	f7ef ffea 	bl	80013e8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011414:	6828      	ldr	r0, [r5, #0]
 8011416:	2101      	movs	r1, #1
 8011418:	f7ff ff14 	bl	8011244 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801141c:	6860      	ldr	r0, [r4, #4]
 801141e:	6803      	ldr	r3, [r0, #0]
 8011420:	4631      	mov	r1, r6
 8011422:	689b      	ldr	r3, [r3, #8]
 8011424:	4798      	blx	r3
 8011426:	6823      	ldr	r3, [r4, #0]
 8011428:	4620      	mov	r0, r4
 801142a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801142c:	4798      	blx	r3
 801142e:	6828      	ldr	r0, [r5, #0]
 8011430:	6803      	ldr	r3, [r0, #0]
 8011432:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011436:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011438:	4718      	bx	r3
 801143a:	bf00      	nop
 801143c:	2000dc74 	.word	0x2000dc74

08011440 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011440:	b508      	push	{r3, lr}
 8011442:	f7ef ffc3 	bl	80013cc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011446:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801144a:	f7ef bfc7 	b.w	80013dc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801144e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801144e:	b510      	push	{r4, lr}
 8011450:	2114      	movs	r1, #20
 8011452:	4604      	mov	r4, r0
 8011454:	f014 fa73 	bl	802593e <_ZdlPvj>
 8011458:	4620      	mov	r0, r4
 801145a:	bd10      	pop	{r4, pc}

0801145c <_ZN8touchgfx13DMA_Interface5startEv>:
 801145c:	b510      	push	{r4, lr}
 801145e:	4604      	mov	r4, r0
 8011460:	6840      	ldr	r0, [r0, #4]
 8011462:	6803      	ldr	r3, [r0, #0]
 8011464:	681b      	ldr	r3, [r3, #0]
 8011466:	4798      	blx	r3
 8011468:	b948      	cbnz	r0, 801147e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801146a:	7a63      	ldrb	r3, [r4, #9]
 801146c:	b13b      	cbz	r3, 801147e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801146e:	7a23      	ldrb	r3, [r4, #8]
 8011470:	b92b      	cbnz	r3, 801147e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011472:	6823      	ldr	r3, [r4, #0]
 8011474:	4620      	mov	r0, r4
 8011476:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801147c:	4718      	bx	r3
 801147e:	bd10      	pop	{r4, pc}

08011480 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011480:	b570      	push	{r4, r5, r6, lr}
 8011482:	4604      	mov	r4, r0
 8011484:	6840      	ldr	r0, [r0, #4]
 8011486:	6803      	ldr	r3, [r0, #0]
 8011488:	681b      	ldr	r3, [r3, #0]
 801148a:	4798      	blx	r3
 801148c:	4605      	mov	r5, r0
 801148e:	b930      	cbnz	r0, 801149e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011490:	7a23      	ldrb	r3, [r4, #8]
 8011492:	b123      	cbz	r3, 801149e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011494:	6860      	ldr	r0, [r4, #4]
 8011496:	6803      	ldr	r3, [r0, #0]
 8011498:	695b      	ldr	r3, [r3, #20]
 801149a:	4798      	blx	r3
 801149c:	7225      	strb	r5, [r4, #8]
 801149e:	6860      	ldr	r0, [r4, #4]
 80114a0:	6803      	ldr	r3, [r0, #0]
 80114a2:	681b      	ldr	r3, [r3, #0]
 80114a4:	4798      	blx	r3
 80114a6:	b928      	cbnz	r0, 80114b4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80114a8:	6823      	ldr	r3, [r4, #0]
 80114aa:	4620      	mov	r0, r4
 80114ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114b2:	4718      	bx	r3
 80114b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114b8:	f7ef bf9e 	b.w	80013f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080114bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80114bc:	b510      	push	{r4, lr}
 80114be:	4c04      	ldr	r4, [pc, #16]	; (80114d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80114c0:	6082      	str	r2, [r0, #8]
 80114c2:	2200      	movs	r2, #0
 80114c4:	e9c0 4100 	strd	r4, r1, [r0]
 80114c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80114cc:	bd10      	pop	{r4, pc}
 80114ce:	bf00      	nop
 80114d0:	08028598 	.word	0x08028598

080114d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80114d4:	6840      	ldr	r0, [r0, #4]
 80114d6:	6803      	ldr	r3, [r0, #0]
 80114d8:	681b      	ldr	r3, [r3, #0]
 80114da:	4718      	bx	r3

080114dc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80114dc:	b508      	push	{r3, lr}
 80114de:	4b05      	ldr	r3, [pc, #20]	; (80114f4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80114e0:	6818      	ldr	r0, [r3, #0]
 80114e2:	6803      	ldr	r3, [r0, #0]
 80114e4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80114e8:	4798      	blx	r3
 80114ea:	1e43      	subs	r3, r0, #1
 80114ec:	4258      	negs	r0, r3
 80114ee:	4158      	adcs	r0, r3
 80114f0:	bd08      	pop	{r3, pc}
 80114f2:	bf00      	nop
 80114f4:	2000dc74 	.word	0x2000dc74

080114f8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80114f8:	4770      	bx	lr

080114fa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80114fa:	3808      	subs	r0, #8
 80114fc:	4770      	bx	lr

080114fe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80114fe:	b430      	push	{r4, r5}
 8011500:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011504:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011508:	8a02      	ldrh	r2, [r0, #16]
 801150a:	9202      	str	r2, [sp, #8]
 801150c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011510:	68c2      	ldr	r2, [r0, #12]
 8011512:	4629      	mov	r1, r5
 8011514:	4620      	mov	r0, r4
 8011516:	bc30      	pop	{r4, r5}
 8011518:	f7f0 b92c 	b.w	8001774 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801151c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801151c:	f7f0 b920 	b.w	8001760 <_ZN8touchgfx5paint6rgb5658tearDownEv>

08011520 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011520:	b510      	push	{r4, lr}
 8011522:	2114      	movs	r1, #20
 8011524:	4604      	mov	r4, r0
 8011526:	f014 fa0a 	bl	802593e <_ZdlPvj>
 801152a:	4620      	mov	r0, r4
 801152c:	bd10      	pop	{r4, pc}

0801152e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801152e:	f1a0 0008 	sub.w	r0, r0, #8
 8011532:	e7f5      	b.n	8011520 <_ZN8touchgfx13PainterRGB565D0Ev>

08011534 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011534:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011536:	6803      	ldr	r3, [r0, #0]
 8011538:	460d      	mov	r5, r1
 801153a:	4604      	mov	r4, r0
 801153c:	4601      	mov	r1, r0
 801153e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011540:	a802      	add	r0, sp, #8
 8011542:	4798      	blx	r3
 8011544:	6828      	ldr	r0, [r5, #0]
 8011546:	6869      	ldr	r1, [r5, #4]
 8011548:	466b      	mov	r3, sp
 801154a:	c303      	stmia	r3!, {r0, r1}
 801154c:	4668      	mov	r0, sp
 801154e:	4619      	mov	r1, r3
 8011550:	f7fe ff9e 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8011554:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011556:	b1a8      	cbz	r0, 8011584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 8011558:	6803      	ldr	r3, [r0, #0]
 801155a:	1d21      	adds	r1, r4, #4
 801155c:	68db      	ldr	r3, [r3, #12]
 801155e:	4798      	blx	r3
 8011560:	b180      	cbz	r0, 8011584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 8011562:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011566:	2b00      	cmp	r3, #0
 8011568:	dd0c      	ble.n	8011584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 801156a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801156e:	2d00      	cmp	r5, #0
 8011570:	dd08      	ble.n	8011584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 8011572:	4a2d      	ldr	r2, [pc, #180]	; (8011628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 8011574:	7812      	ldrb	r2, [r2, #0]
 8011576:	b13a      	cbz	r2, 8011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 8011578:	2a01      	cmp	r2, #1
 801157a:	d02d      	beq.n	80115d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 801157c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801157e:	6803      	ldr	r3, [r0, #0]
 8011580:	691b      	ldr	r3, [r3, #16]
 8011582:	4798      	blx	r3
 8011584:	b004      	add	sp, #16
 8011586:	bd70      	pop	{r4, r5, r6, pc}
 8011588:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801158c:	441d      	add	r5, r3
 801158e:	b2ad      	uxth	r5, r5
 8011590:	b22e      	sxth	r6, r5
 8011592:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011596:	42b3      	cmp	r3, r6
 8011598:	daf0      	bge.n	801157c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801159a:	6823      	ldr	r3, [r4, #0]
 801159c:	4669      	mov	r1, sp
 801159e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80115a0:	4620      	mov	r0, r4
 80115a2:	4798      	blx	r3
 80115a4:	b940      	cbnz	r0, 80115b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 80115a6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80115aa:	2b01      	cmp	r3, #1
 80115ac:	d004      	beq.n	80115b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 80115ae:	3301      	adds	r3, #1
 80115b0:	105b      	asrs	r3, r3, #1
 80115b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80115b6:	e7f0      	b.n	801159a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 80115b8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80115bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80115c0:	4413      	add	r3, r2
 80115c2:	b29b      	uxth	r3, r3
 80115c4:	441a      	add	r2, r3
 80115c6:	b212      	sxth	r2, r2
 80115c8:	4296      	cmp	r6, r2
 80115ca:	f8ad 3002 	strh.w	r3, [sp, #2]
 80115ce:	dae0      	bge.n	8011592 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80115d0:	1aeb      	subs	r3, r5, r3
 80115d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80115d6:	e7dc      	b.n	8011592 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80115d8:	f8bd 5000 	ldrh.w	r5, [sp]
 80115dc:	441d      	add	r5, r3
 80115de:	b2ad      	uxth	r5, r5
 80115e0:	b22e      	sxth	r6, r5
 80115e2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80115e6:	42b3      	cmp	r3, r6
 80115e8:	dac8      	bge.n	801157c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80115ea:	6823      	ldr	r3, [r4, #0]
 80115ec:	4669      	mov	r1, sp
 80115ee:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80115f0:	4620      	mov	r0, r4
 80115f2:	4798      	blx	r3
 80115f4:	b940      	cbnz	r0, 8011608 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 80115f6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80115fa:	2b01      	cmp	r3, #1
 80115fc:	d004      	beq.n	8011608 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 80115fe:	3301      	adds	r3, #1
 8011600:	105b      	asrs	r3, r3, #1
 8011602:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011606:	e7f0      	b.n	80115ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 8011608:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801160c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011610:	4413      	add	r3, r2
 8011612:	b29b      	uxth	r3, r3
 8011614:	441a      	add	r2, r3
 8011616:	b212      	sxth	r2, r2
 8011618:	4296      	cmp	r6, r2
 801161a:	f8ad 3000 	strh.w	r3, [sp]
 801161e:	dae0      	bge.n	80115e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011620:	1aeb      	subs	r3, r5, r3
 8011622:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011626:	e7dc      	b.n	80115e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011628:	2000dc6c 	.word	0x2000dc6c

0801162c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801162c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801162e:	6803      	ldr	r3, [r0, #0]
 8011630:	4604      	mov	r4, r0
 8011632:	4601      	mov	r1, r0
 8011634:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011636:	4668      	mov	r0, sp
 8011638:	4798      	blx	r3
 801163a:	2100      	movs	r1, #0
 801163c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011640:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011644:	9102      	str	r1, [sp, #8]
 8011646:	4668      	mov	r0, sp
 8011648:	a902      	add	r1, sp, #8
 801164a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801164e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011652:	f7fe ff1d 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8011656:	6823      	ldr	r3, [r4, #0]
 8011658:	4669      	mov	r1, sp
 801165a:	691b      	ldr	r3, [r3, #16]
 801165c:	4620      	mov	r0, r4
 801165e:	4798      	blx	r3
 8011660:	b004      	add	sp, #16
 8011662:	bd10      	pop	{r4, pc}

08011664 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011664:	2101      	movs	r1, #1
 8011666:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801166a:	490b      	ldr	r1, [pc, #44]	; (8011698 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801166c:	6001      	str	r1, [r0, #0]
 801166e:	2200      	movs	r2, #0
 8011670:	21ff      	movs	r1, #255	; 0xff
 8011672:	8082      	strh	r2, [r0, #4]
 8011674:	80c2      	strh	r2, [r0, #6]
 8011676:	8102      	strh	r2, [r0, #8]
 8011678:	8142      	strh	r2, [r0, #10]
 801167a:	8182      	strh	r2, [r0, #12]
 801167c:	81c2      	strh	r2, [r0, #14]
 801167e:	8202      	strh	r2, [r0, #16]
 8011680:	8242      	strh	r2, [r0, #18]
 8011682:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011686:	61c2      	str	r2, [r0, #28]
 8011688:	8402      	strh	r2, [r0, #32]
 801168a:	8442      	strh	r2, [r0, #34]	; 0x22
 801168c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011690:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011694:	6282      	str	r2, [r0, #40]	; 0x28
 8011696:	4770      	bx	lr
 8011698:	080285f4 	.word	0x080285f4

0801169c <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 801169c:	6301      	str	r1, [r0, #48]	; 0x30
 801169e:	4770      	bx	lr

080116a0 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 80116a0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80116a2:	4770      	bx	lr

080116a4 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 80116a4:	6341      	str	r1, [r0, #52]	; 0x34
 80116a6:	4770      	bx	lr

080116a8 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 80116a8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80116aa:	4770      	bx	lr

080116ac <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 80116ac:	4770      	bx	lr

080116ae <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 80116ae:	4608      	mov	r0, r1
 80116b0:	4770      	bx	lr

080116b2 <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 80116b2:	4608      	mov	r0, r1
 80116b4:	4770      	bx	lr

080116b6 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 80116b6:	b530      	push	{r4, r5, lr}
 80116b8:	460d      	mov	r5, r1
 80116ba:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80116bc:	8949      	ldrh	r1, [r1, #10]
 80116be:	1ac9      	subs	r1, r1, r3
 80116c0:	6803      	ldr	r3, [r0, #0]
 80116c2:	b085      	sub	sp, #20
 80116c4:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 80116c8:	f10d 0206 	add.w	r2, sp, #6
 80116cc:	b209      	sxth	r1, r1
 80116ce:	4604      	mov	r4, r0
 80116d0:	4798      	blx	r3
 80116d2:	b1a0      	cbz	r0, 80116fe <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80116d4:	792b      	ldrb	r3, [r5, #4]
 80116d6:	b993      	cbnz	r3, 80116fe <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80116d8:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80116dc:	b178      	cbz	r0, 80116fe <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80116de:	6803      	ldr	r3, [r0, #0]
 80116e0:	68db      	ldr	r3, [r3, #12]
 80116e2:	4798      	blx	r3
 80116e4:	b158      	cbz	r0, 80116fe <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80116e6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80116ea:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80116ee:	f8ad 3008 	strh.w	r3, [sp, #8]
 80116f2:	9503      	str	r5, [sp, #12]
 80116f4:	6803      	ldr	r3, [r0, #0]
 80116f6:	aa02      	add	r2, sp, #8
 80116f8:	689b      	ldr	r3, [r3, #8]
 80116fa:	4621      	mov	r1, r4
 80116fc:	4798      	blx	r3
 80116fe:	b005      	add	sp, #20
 8011700:	bd30      	pop	{r4, r5, pc}

08011702 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 8011702:	b510      	push	{r4, lr}
 8011704:	428a      	cmp	r2, r1
 8011706:	bfbe      	ittt	lt
 8011708:	460b      	movlt	r3, r1
 801170a:	4611      	movlt	r1, r2
 801170c:	461a      	movlt	r2, r3
 801170e:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 8011712:	428b      	cmp	r3, r1
 8011714:	4604      	mov	r4, r0
 8011716:	d103      	bne.n	8011720 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 8011718:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 801171c:	4293      	cmp	r3, r2
 801171e:	d011      	beq.n	8011744 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 8011720:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8011724:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 8011728:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801172c:	f005 ff2b 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011730:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011734:	f005 ff27 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011738:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 801173c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011740:	f005 bf21 	b.w	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011744:	bd10      	pop	{r4, pc}

08011746 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 8011746:	b510      	push	{r4, lr}
 8011748:	428a      	cmp	r2, r1
 801174a:	bfbe      	ittt	lt
 801174c:	460b      	movlt	r3, r1
 801174e:	4611      	movlt	r1, r2
 8011750:	461a      	movlt	r2, r3
 8011752:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8011756:	428b      	cmp	r3, r1
 8011758:	4604      	mov	r4, r0
 801175a:	d103      	bne.n	8011764 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 801175c:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8011760:	4293      	cmp	r3, r2
 8011762:	d011      	beq.n	8011788 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 8011764:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 8011768:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 801176c:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8011770:	f005 ff09 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011774:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011778:	f005 ff05 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 801177c:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8011780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011784:	f005 beff 	b.w	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011788:	bd10      	pop	{r4, pc}

0801178a <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 801178a:	2300      	movs	r3, #0
 801178c:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 8011790:	3038      	adds	r0, #56	; 0x38
 8011792:	f005 bef8 	b.w	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>

08011796 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 8011796:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801179a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 801179e:	4605      	mov	r5, r0
 80117a0:	4688      	mov	r8, r1
 80117a2:	4617      	mov	r7, r2
 80117a4:	2b00      	cmp	r3, #0
 80117a6:	d03f      	beq.n	8011828 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80117a8:	6803      	ldr	r3, [r0, #0]
 80117aa:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 80117ae:	4798      	blx	r3
 80117b0:	682b      	ldr	r3, [r5, #0]
 80117b2:	4604      	mov	r4, r0
 80117b4:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80117b8:	4628      	mov	r0, r5
 80117ba:	4798      	blx	r3
 80117bc:	4284      	cmp	r4, r0
 80117be:	bfc8      	it	gt
 80117c0:	4623      	movgt	r3, r4
 80117c2:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 80117c6:	bfc4      	itt	gt
 80117c8:	4604      	movgt	r4, r0
 80117ca:	4618      	movgt	r0, r3
 80117cc:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 80117d0:	42b3      	cmp	r3, r6
 80117d2:	da29      	bge.n	8011828 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80117d4:	42b0      	cmp	r0, r6
 80117d6:	bfa8      	it	ge
 80117d8:	4630      	movge	r0, r6
 80117da:	2800      	cmp	r0, #0
 80117dc:	db24      	blt.n	8011828 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80117de:	f1b8 0f00 	cmp.w	r8, #0
 80117e2:	d11e      	bne.n	8011822 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 80117e4:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 80117e8:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80117ec:	460c      	mov	r4, r1
 80117ee:	009a      	lsls	r2, r3, #2
 80117f0:	4298      	cmp	r0, r3
 80117f2:	dd0b      	ble.n	801180c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 80117f4:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 80117f8:	58b6      	ldr	r6, [r6, r2]
 80117fa:	42b1      	cmp	r1, r6
 80117fc:	bfa8      	it	ge
 80117fe:	4631      	movge	r1, r6
 8011800:	42b4      	cmp	r4, r6
 8011802:	bfb8      	it	lt
 8011804:	4634      	movlt	r4, r6
 8011806:	3301      	adds	r3, #1
 8011808:	3204      	adds	r2, #4
 801180a:	e7f1      	b.n	80117f0 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 801180c:	1bc9      	subs	r1, r1, r7
 801180e:	193a      	adds	r2, r7, r4
 8011810:	4291      	cmp	r1, r2
 8011812:	d009      	beq.n	8011828 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 8011814:	682b      	ldr	r3, [r5, #0]
 8011816:	4628      	mov	r0, r5
 8011818:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801181c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011820:	4718      	bx	r3
 8011822:	427c      	negs	r4, r7
 8011824:	4639      	mov	r1, r7
 8011826:	e7e2      	b.n	80117ee <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 8011828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801182c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 801182c:	b530      	push	{r4, r5, lr}
 801182e:	790b      	ldrb	r3, [r1, #4]
 8011830:	2b02      	cmp	r3, #2
 8011832:	b085      	sub	sp, #20
 8011834:	4604      	mov	r4, r0
 8011836:	460d      	mov	r5, r1
 8011838:	d020      	beq.n	801187c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801183a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801183c:	88c9      	ldrh	r1, [r1, #6]
 801183e:	1ac9      	subs	r1, r1, r3
 8011840:	6803      	ldr	r3, [r0, #0]
 8011842:	f10d 0206 	add.w	r2, sp, #6
 8011846:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 801184a:	b209      	sxth	r1, r1
 801184c:	4798      	blx	r3
 801184e:	b1a8      	cbz	r0, 801187c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8011850:	792b      	ldrb	r3, [r5, #4]
 8011852:	2b01      	cmp	r3, #1
 8011854:	d812      	bhi.n	801187c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8011856:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 801185a:	b178      	cbz	r0, 801187c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801185c:	6803      	ldr	r3, [r0, #0]
 801185e:	68db      	ldr	r3, [r3, #12]
 8011860:	4798      	blx	r3
 8011862:	b158      	cbz	r0, 801187c <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8011864:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011868:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 801186c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8011870:	9503      	str	r5, [sp, #12]
 8011872:	6803      	ldr	r3, [r0, #0]
 8011874:	aa02      	add	r2, sp, #8
 8011876:	689b      	ldr	r3, [r3, #8]
 8011878:	4621      	mov	r1, r4
 801187a:	4798      	blx	r3
 801187c:	b005      	add	sp, #20
 801187e:	bd30      	pop	{r4, r5, pc}

08011880 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 8011880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011884:	4604      	mov	r4, r0
 8011886:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 801188a:	9e06      	ldr	r6, [sp, #24]
 801188c:	4690      	mov	r8, r2
 801188e:	461f      	mov	r7, r3
 8011890:	b928      	cbnz	r0, 801189e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8011892:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011896:	8033      	strh	r3, [r6, #0]
 8011898:	803b      	strh	r3, [r7, #0]
 801189a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801189e:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 80118a2:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 80118a6:	1883      	adds	r3, r0, r2
 80118a8:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 80118ac:	1ad2      	subs	r2, r2, r3
 80118ae:	b212      	sxth	r2, r2
 80118b0:	2a01      	cmp	r2, #1
 80118b2:	dc07      	bgt.n	80118c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 80118b4:	2300      	movs	r3, #0
 80118b6:	803b      	strh	r3, [r7, #0]
 80118b8:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 80118bc:	3b01      	subs	r3, #1
 80118be:	8033      	strh	r3, [r6, #0]
 80118c0:	2001      	movs	r0, #1
 80118c2:	e7ea      	b.n	801189a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80118c4:	1a08      	subs	r0, r1, r0
 80118c6:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80118ca:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 80118ce:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80118d0:	1a5b      	subs	r3, r3, r1
 80118d2:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80118d6:	d45b      	bmi.n	8011990 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 80118d8:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80118dc:	fb93 f1f5 	sdiv	r1, r3, r5
 80118e0:	2302      	movs	r3, #2
 80118e2:	fb91 f1f3 	sdiv	r1, r1, r3
 80118e6:	3a01      	subs	r2, #1
 80118e8:	f006 f830 	bl	801794c <_ZN8touchgfx6muldivElll>
 80118ec:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 80118f0:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 80118f4:	2900      	cmp	r1, #0
 80118f6:	db57      	blt.n	80119a8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 80118f8:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 80118fc:	2502      	movs	r5, #2
 80118fe:	fb93 f3fc 	sdiv	r3, r3, ip
 8011902:	fb93 f3f5 	sdiv	r3, r3, r5
 8011906:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 801190a:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 801190e:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 8011912:	1a52      	subs	r2, r2, r1
 8011914:	eba8 0003 	sub.w	r0, r8, r3
 8011918:	ea4f 1040 	mov.w	r0, r0, lsl #5
 801191c:	d450      	bmi.n	80119c0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 801191e:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 8011922:	fb92 f1fc 	sdiv	r1, r2, ip
 8011926:	2202      	movs	r2, #2
 8011928:	fb91 f1f2 	sdiv	r1, r1, r2
 801192c:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8011930:	4413      	add	r3, r2
 8011932:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8011936:	1ad2      	subs	r2, r2, r3
 8011938:	b212      	sxth	r2, r2
 801193a:	3a01      	subs	r2, #1
 801193c:	f006 f806 	bl	801794c <_ZN8touchgfx6muldivElll>
 8011940:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8011944:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011946:	2b00      	cmp	r3, #0
 8011948:	db46      	blt.n	80119d8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 801194a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801194e:	fb93 f3f2 	sdiv	r3, r3, r2
 8011952:	2202      	movs	r2, #2
 8011954:	fb93 f3f2 	sdiv	r3, r3, r2
 8011958:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 801195c:	429d      	cmp	r5, r3
 801195e:	bfde      	ittt	le
 8011960:	461a      	movle	r2, r3
 8011962:	462b      	movle	r3, r5
 8011964:	4615      	movle	r5, r2
 8011966:	2d00      	cmp	r5, #0
 8011968:	bfa4      	itt	ge
 801196a:	351f      	addge	r5, #31
 801196c:	116d      	asrge	r5, r5, #5
 801196e:	f04f 0020 	mov.w	r0, #32
 8011972:	bfb8      	it	lt
 8011974:	fb95 f5f0 	sdivlt	r5, r5, r0
 8011978:	b22d      	sxth	r5, r5
 801197a:	2d00      	cmp	r5, #0
 801197c:	b21b      	sxth	r3, r3
 801197e:	fb93 f3f0 	sdiv	r3, r3, r0
 8011982:	803b      	strh	r3, [r7, #0]
 8011984:	8035      	strh	r5, [r6, #0]
 8011986:	da33      	bge.n	80119f0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 8011988:	2000      	movs	r0, #0
 801198a:	8030      	strh	r0, [r6, #0]
 801198c:	8038      	strh	r0, [r7, #0]
 801198e:	e784      	b.n	801189a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8011990:	f06f 0101 	mvn.w	r1, #1
 8011994:	fb01 5303 	mla	r3, r1, r3, r5
 8011998:	1e59      	subs	r1, r3, #1
 801199a:	2302      	movs	r3, #2
 801199c:	fb91 f1f5 	sdiv	r1, r1, r5
 80119a0:	fb91 f1f3 	sdiv	r1, r1, r3
 80119a4:	4249      	negs	r1, r1
 80119a6:	e79e      	b.n	80118e6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 80119a8:	f06f 0301 	mvn.w	r3, #1
 80119ac:	fb03 c301 	mla	r3, r3, r1, ip
 80119b0:	3b01      	subs	r3, #1
 80119b2:	2502      	movs	r5, #2
 80119b4:	fb93 f3fc 	sdiv	r3, r3, ip
 80119b8:	fb93 f3f5 	sdiv	r3, r3, r5
 80119bc:	425b      	negs	r3, r3
 80119be:	e7a2      	b.n	8011906 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 80119c0:	f06f 0101 	mvn.w	r1, #1
 80119c4:	fb01 c202 	mla	r2, r1, r2, ip
 80119c8:	1e51      	subs	r1, r2, #1
 80119ca:	2202      	movs	r2, #2
 80119cc:	fb91 f1fc 	sdiv	r1, r1, ip
 80119d0:	fb91 f1f2 	sdiv	r1, r1, r2
 80119d4:	4249      	negs	r1, r1
 80119d6:	e7a9      	b.n	801192c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 80119d8:	f06f 0101 	mvn.w	r1, #1
 80119dc:	fb01 2303 	mla	r3, r1, r3, r2
 80119e0:	3b01      	subs	r3, #1
 80119e2:	fb93 f3f2 	sdiv	r3, r3, r2
 80119e6:	2202      	movs	r2, #2
 80119e8:	fb93 f3f2 	sdiv	r3, r3, r2
 80119ec:	425b      	negs	r3, r3
 80119ee:	e7b3      	b.n	8011958 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 80119f0:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80119f4:	f9b7 2000 	ldrsh.w	r2, [r7]
 80119f8:	4293      	cmp	r3, r2
 80119fa:	dc05      	bgt.n	8011a08 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 80119fc:	3b01      	subs	r3, #1
 80119fe:	b21b      	sxth	r3, r3
 8011a00:	8033      	strh	r3, [r6, #0]
 8011a02:	2000      	movs	r0, #0
 8011a04:	803b      	strh	r3, [r7, #0]
 8011a06:	e748      	b.n	801189a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8011a08:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8011a0c:	803a      	strh	r2, [r7, #0]
 8011a0e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8011a12:	f9b6 2000 	ldrsh.w	r2, [r6]
 8011a16:	4293      	cmp	r3, r2
 8011a18:	bfdc      	itt	le
 8011a1a:	f103 33ff 	addle.w	r3, r3, #4294967295
 8011a1e:	b21a      	sxthle	r2, r3
 8011a20:	8032      	strh	r2, [r6, #0]
 8011a22:	e74d      	b.n	80118c0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

08011a24 <_ZN8touchgfx9ContainerC1Ev>:
 8011a24:	2101      	movs	r1, #1
 8011a26:	2200      	movs	r2, #0
 8011a28:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011a2c:	4909      	ldr	r1, [pc, #36]	; (8011a54 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 8011a2e:	8082      	strh	r2, [r0, #4]
 8011a30:	80c2      	strh	r2, [r0, #6]
 8011a32:	8102      	strh	r2, [r0, #8]
 8011a34:	8142      	strh	r2, [r0, #10]
 8011a36:	8182      	strh	r2, [r0, #12]
 8011a38:	81c2      	strh	r2, [r0, #14]
 8011a3a:	8202      	strh	r2, [r0, #16]
 8011a3c:	8242      	strh	r2, [r0, #18]
 8011a3e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011a42:	61c2      	str	r2, [r0, #28]
 8011a44:	8402      	strh	r2, [r0, #32]
 8011a46:	8442      	strh	r2, [r0, #34]	; 0x22
 8011a48:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011a4c:	6001      	str	r1, [r0, #0]
 8011a4e:	6282      	str	r2, [r0, #40]	; 0x28
 8011a50:	4770      	bx	lr
 8011a52:	bf00      	nop
 8011a54:	080284fc 	.word	0x080284fc

08011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 8011a58:	6800      	ldr	r0, [r0, #0]
 8011a5a:	2800      	cmp	r0, #0
 8011a5c:	bfbd      	ittte	lt
 8011a5e:	380f      	sublt	r0, #15
 8011a60:	2320      	movlt	r3, #32
 8011a62:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011a66:	3010      	addge	r0, #16
 8011a68:	bfa8      	it	ge
 8011a6a:	1140      	asrge	r0, r0, #5
 8011a6c:	4770      	bx	lr

08011a6e <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8011a6e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a72:	4605      	mov	r5, r0
 8011a74:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8011a78:	4688      	mov	r8, r1
 8011a7a:	4691      	mov	r9, r2
 8011a7c:	469a      	mov	sl, r3
 8011a7e:	b360      	cbz	r0, 8011ada <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8011a80:	2700      	movs	r7, #0
 8011a82:	f04f 3bff 	mov.w	fp, #4294967295
 8011a86:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 8011a8a:	b23e      	sxth	r6, r7
 8011a8c:	42b3      	cmp	r3, r6
 8011a8e:	dd23      	ble.n	8011ad8 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8011a90:	682b      	ldr	r3, [r5, #0]
 8011a92:	4631      	mov	r1, r6
 8011a94:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8011a98:	4628      	mov	r0, r5
 8011a9a:	4798      	blx	r3
 8011a9c:	9001      	str	r0, [sp, #4]
 8011a9e:	a801      	add	r0, sp, #4
 8011aa0:	f7ff ffda 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8011aa4:	682b      	ldr	r3, [r5, #0]
 8011aa6:	eba0 0008 	sub.w	r0, r0, r8
 8011aaa:	b204      	sxth	r4, r0
 8011aac:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8011ab0:	4631      	mov	r1, r6
 8011ab2:	4628      	mov	r0, r5
 8011ab4:	4798      	blx	r3
 8011ab6:	9001      	str	r0, [sp, #4]
 8011ab8:	a801      	add	r0, sp, #4
 8011aba:	f7ff ffcd 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8011abe:	eba0 0009 	sub.w	r0, r0, r9
 8011ac2:	fb10 f000 	smulbb	r0, r0, r0
 8011ac6:	fb04 0404 	mla	r4, r4, r4, r0
 8011aca:	455c      	cmp	r4, fp
 8011acc:	bf3c      	itt	cc
 8011ace:	f8aa 6000 	strhcc.w	r6, [sl]
 8011ad2:	46a3      	movcc	fp, r4
 8011ad4:	3701      	adds	r7, #1
 8011ad6:	e7d6      	b.n	8011a86 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8011ad8:	2001      	movs	r0, #1
 8011ada:	b003      	add	sp, #12
 8011adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011ae0 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8011ae0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011ae4:	4604      	mov	r4, r0
 8011ae6:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8011aea:	4688      	mov	r8, r1
 8011aec:	4691      	mov	r9, r2
 8011aee:	b1f8      	cbz	r0, 8011b30 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 8011af0:	2500      	movs	r5, #0
 8011af2:	f04f 37ff 	mov.w	r7, #4294967295
 8011af6:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8011afa:	b22e      	sxth	r6, r5
 8011afc:	42b3      	cmp	r3, r6
 8011afe:	dd16      	ble.n	8011b2e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 8011b00:	6823      	ldr	r3, [r4, #0]
 8011b02:	4631      	mov	r1, r6
 8011b04:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8011b08:	4620      	mov	r0, r4
 8011b0a:	4798      	blx	r3
 8011b0c:	9001      	str	r0, [sp, #4]
 8011b0e:	a801      	add	r0, sp, #4
 8011b10:	f7ff ffa2 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8011b14:	b200      	sxth	r0, r0
 8011b16:	eba0 0008 	sub.w	r0, r0, r8
 8011b1a:	2800      	cmp	r0, #0
 8011b1c:	bfb8      	it	lt
 8011b1e:	4240      	neglt	r0, r0
 8011b20:	42b8      	cmp	r0, r7
 8011b22:	bf3c      	itt	cc
 8011b24:	f8a9 6000 	strhcc.w	r6, [r9]
 8011b28:	4607      	movcc	r7, r0
 8011b2a:	3501      	adds	r5, #1
 8011b2c:	e7e3      	b.n	8011af6 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 8011b2e:	2001      	movs	r0, #1
 8011b30:	b003      	add	sp, #12
 8011b32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08011b36 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 8011b36:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 8011b3a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011b3e:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 8011b42:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 8011b46:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8011b4a:	4770      	bx	lr

08011b4c <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8011b4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011b4e:	4604      	mov	r4, r0
 8011b50:	3038      	adds	r0, #56	; 0x38
 8011b52:	460d      	mov	r5, r1
 8011b54:	f7fe fb0c 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011b58:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8011b5c:	9200      	str	r2, [sp, #0]
 8011b5e:	2200      	movs	r2, #0
 8011b60:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011b64:	4611      	mov	r1, r2
 8011b66:	4628      	mov	r0, r5
 8011b68:	f7f1 fe44 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011b6c:	b003      	add	sp, #12
 8011b6e:	bd30      	pop	{r4, r5, pc}

08011b70 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8011b70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011b72:	4604      	mov	r4, r0
 8011b74:	3064      	adds	r0, #100	; 0x64
 8011b76:	460d      	mov	r5, r1
 8011b78:	f7fe fafa 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011b7c:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8011b80:	9200      	str	r2, [sp, #0]
 8011b82:	2200      	movs	r2, #0
 8011b84:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8011b88:	4611      	mov	r1, r2
 8011b8a:	4628      	mov	r0, r5
 8011b8c:	f7f1 fe32 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011b90:	b003      	add	sp, #12
 8011b92:	bd30      	pop	{r4, r5, pc}

08011b94 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8011b94:	b538      	push	{r3, r4, r5, lr}
 8011b96:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8011b9a:	428b      	cmp	r3, r1
 8011b9c:	460d      	mov	r5, r1
 8011b9e:	dd08      	ble.n	8011bb2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8011ba0:	6e04      	ldr	r4, [r0, #96]	; 0x60
 8011ba2:	b134      	cbz	r4, 8011bb2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8011ba4:	6823      	ldr	r3, [r4, #0]
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011baa:	4629      	mov	r1, r5
 8011bac:	4798      	blx	r3
 8011bae:	69a4      	ldr	r4, [r4, #24]
 8011bb0:	e7f7      	b.n	8011ba2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8011bb2:	bd38      	pop	{r3, r4, r5, pc}

08011bb4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 8011bb4:	b570      	push	{r4, r5, r6, lr}
 8011bb6:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 8011bba:	4606      	mov	r6, r0
 8011bbc:	460d      	mov	r5, r1
 8011bbe:	b134      	cbz	r4, 8011bce <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 8011bc0:	6823      	ldr	r3, [r4, #0]
 8011bc2:	4620      	mov	r0, r4
 8011bc4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011bc6:	4629      	mov	r1, r5
 8011bc8:	4798      	blx	r3
 8011bca:	69a4      	ldr	r4, [r4, #24]
 8011bcc:	e7f7      	b.n	8011bbe <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 8011bce:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 8011bd2:	b134      	cbz	r4, 8011be2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 8011bd4:	6823      	ldr	r3, [r4, #0]
 8011bd6:	4620      	mov	r0, r4
 8011bd8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011bda:	4629      	mov	r1, r5
 8011bdc:	4798      	blx	r3
 8011bde:	69a4      	ldr	r4, [r4, #24]
 8011be0:	e7f7      	b.n	8011bd2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 8011be2:	bd70      	pop	{r4, r5, r6, pc}

08011be4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 8011be4:	b538      	push	{r3, r4, r5, lr}
 8011be6:	4604      	mov	r4, r0
 8011be8:	2500      	movs	r5, #0
 8011bea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8011bee:	42ab      	cmp	r3, r5
 8011bf0:	db05      	blt.n	8011bfe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 8011bf2:	b229      	sxth	r1, r5
 8011bf4:	4620      	mov	r0, r4
 8011bf6:	f7ff ffdd 	bl	8011bb4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 8011bfa:	3501      	adds	r5, #1
 8011bfc:	e7f5      	b.n	8011bea <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 8011bfe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8011c02:	f005 fcc0 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8011c06:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8011c0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011c0e:	f005 bcba 	b.w	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>

08011c12 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8011c12:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011c14:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8011c16:	4604      	mov	r4, r0
 8011c18:	b15d      	cbz	r5, 8011c32 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 8011c1a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8011c1e:	9200      	str	r2, [sp, #0]
 8011c20:	2200      	movs	r2, #0
 8011c22:	4628      	mov	r0, r5
 8011c24:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011c28:	4611      	mov	r1, r2
 8011c2a:	f7f1 fde3 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011c2e:	69ad      	ldr	r5, [r5, #24]
 8011c30:	e7f2      	b.n	8011c18 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8011c32:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8011c36:	b15d      	cbz	r5, 8011c50 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8011c38:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 8011c3c:	9200      	str	r2, [sp, #0]
 8011c3e:	2200      	movs	r2, #0
 8011c40:	4628      	mov	r0, r5
 8011c42:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 8011c46:	4611      	mov	r1, r2
 8011c48:	f7f1 fdd4 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011c4c:	69ad      	ldr	r5, [r5, #24]
 8011c4e:	e7f2      	b.n	8011c36 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8011c50:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 8011c54:	b15d      	cbz	r5, 8011c6e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8011c56:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8011c5a:	9200      	str	r2, [sp, #0]
 8011c5c:	2200      	movs	r2, #0
 8011c5e:	4628      	mov	r0, r5
 8011c60:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8011c64:	4611      	mov	r1, r2
 8011c66:	f7f1 fdc5 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011c6a:	69ad      	ldr	r5, [r5, #24]
 8011c6c:	e7f2      	b.n	8011c54 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8011c6e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 8011c72:	b15d      	cbz	r5, 8011c8c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8011c74:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8011c78:	9200      	str	r2, [sp, #0]
 8011c7a:	2200      	movs	r2, #0
 8011c7c:	4628      	mov	r0, r5
 8011c7e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 8011c82:	4611      	mov	r1, r2
 8011c84:	f7f1 fdb6 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011c88:	69ad      	ldr	r5, [r5, #24]
 8011c8a:	e7f2      	b.n	8011c72 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8011c8c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8011c90:	b15d      	cbz	r5, 8011caa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8011c92:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8011c96:	9200      	str	r2, [sp, #0]
 8011c98:	2200      	movs	r2, #0
 8011c9a:	4628      	mov	r0, r5
 8011c9c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8011ca0:	4611      	mov	r1, r2
 8011ca2:	f7f1 fda7 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011ca6:	69ad      	ldr	r5, [r5, #24]
 8011ca8:	e7f2      	b.n	8011c90 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8011caa:	6823      	ldr	r3, [r4, #0]
 8011cac:	695b      	ldr	r3, [r3, #20]
 8011cae:	4620      	mov	r0, r4
 8011cb0:	b003      	add	sp, #12
 8011cb2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011cb6:	4718      	bx	r3

08011cb8 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8011cb8:	b430      	push	{r4, r5}
 8011cba:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 8011cbe:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 8011cc2:	b28a      	uxth	r2, r1
 8011cc4:	1b15      	subs	r5, r2, r4
 8011cc6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 8011cca:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 8011cce:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 8011cd2:	442c      	add	r4, r5
 8011cd4:	1b12      	subs	r2, r2, r4
 8011cd6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011cda:	8101      	strh	r1, [r0, #8]
 8011cdc:	bc30      	pop	{r4, r5}
 8011cde:	f7ff bf98 	b.w	8011c12 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08011ce2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 8011ce2:	b430      	push	{r4, r5}
 8011ce4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 8011ce8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 8011cec:	b28a      	uxth	r2, r1
 8011cee:	1b15      	subs	r5, r2, r4
 8011cf0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 8011cf4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 8011cf8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 8011cfc:	442c      	add	r4, r5
 8011cfe:	1b12      	subs	r2, r2, r4
 8011d00:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8011d04:	8141      	strh	r1, [r0, #10]
 8011d06:	bc30      	pop	{r4, r5}
 8011d08:	f7ff bf83 	b.w	8011c12 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08011d0c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 8011d0c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011d10:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 8011d14:	fa1f fa83 	uxth.w	sl, r3
 8011d18:	4699      	mov	r9, r3
 8011d1a:	8903      	ldrh	r3, [r0, #8]
 8011d1c:	4604      	mov	r4, r0
 8011d1e:	4615      	mov	r5, r2
 8011d20:	fa1f f887 	uxth.w	r8, r7
 8011d24:	4452      	add	r2, sl
 8011d26:	8940      	ldrh	r0, [r0, #10]
 8011d28:	1a9b      	subs	r3, r3, r2
 8011d2a:	eb08 0201 	add.w	r2, r8, r1
 8011d2e:	1a80      	subs	r0, r0, r2
 8011d30:	b200      	sxth	r0, r0
 8011d32:	460e      	mov	r6, r1
 8011d34:	9000      	str	r0, [sp, #0]
 8011d36:	460a      	mov	r2, r1
 8011d38:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011d3c:	4629      	mov	r1, r5
 8011d3e:	b21b      	sxth	r3, r3
 8011d40:	f7f1 fd58 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011d44:	2200      	movs	r2, #0
 8011d46:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011d4a:	9600      	str	r6, [sp, #0]
 8011d4c:	4611      	mov	r1, r2
 8011d4e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8011d52:	f7f1 fd4f 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011d56:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d5a:	9300      	str	r3, [sp, #0]
 8011d5c:	2200      	movs	r2, #0
 8011d5e:	462b      	mov	r3, r5
 8011d60:	4611      	mov	r1, r2
 8011d62:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8011d66:	f7f1 fd45 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011d6a:	8921      	ldrh	r1, [r4, #8]
 8011d6c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d70:	9300      	str	r3, [sp, #0]
 8011d72:	eba1 010a 	sub.w	r1, r1, sl
 8011d76:	464b      	mov	r3, r9
 8011d78:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8011d7c:	2200      	movs	r2, #0
 8011d7e:	b209      	sxth	r1, r1
 8011d80:	f7f1 fd38 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011d84:	8962      	ldrh	r2, [r4, #10]
 8011d86:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011d8a:	9700      	str	r7, [sp, #0]
 8011d8c:	eba2 0208 	sub.w	r2, r2, r8
 8011d90:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8011d94:	b212      	sxth	r2, r2
 8011d96:	2100      	movs	r1, #0
 8011d98:	f7f1 fd2c 	bl	80037f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8011d9c:	4620      	mov	r0, r4
 8011d9e:	b002      	add	sp, #8
 8011da0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011da4:	f7ff bf35 	b.w	8011c12 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08011da8 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8011da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dac:	b085      	sub	sp, #20
 8011dae:	4604      	mov	r4, r0
 8011db0:	9103      	str	r1, [sp, #12]
 8011db2:	f7ff fe37 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011db6:	4b2d      	ldr	r3, [pc, #180]	; (8011e6c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 8011db8:	6023      	str	r3, [r4, #0]
 8011dba:	2601      	movs	r6, #1
 8011dbc:	23ff      	movs	r3, #255	; 0xff
 8011dbe:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8011dc2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011dc6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 8011dca:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011dce:	4658      	mov	r0, fp
 8011dd0:	f7ff fe28 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011dd4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8011dd8:	4648      	mov	r0, r9
 8011dda:	f7ff fe23 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011dde:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 8011de2:	4640      	mov	r0, r8
 8011de4:	f7ff fe1e 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011de8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 8011dec:	4650      	mov	r0, sl
 8011dee:	f7ff fe19 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011df2:	4638      	mov	r0, r7
 8011df4:	f7ff fe16 	bl	8011a24 <_ZN8touchgfx9ContainerC1Ev>
 8011df8:	2500      	movs	r5, #0
 8011dfa:	9903      	ldr	r1, [sp, #12]
 8011dfc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 8011e00:	4620      	mov	r0, r4
 8011e02:	4659      	mov	r1, fp
 8011e04:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8011e08:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8011e0c:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 8011e10:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 8011e14:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8011e18:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 8011e1c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011e20:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011e24:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8011e28:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8011e2c:	f7fe f9a0 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e30:	4651      	mov	r1, sl
 8011e32:	4620      	mov	r0, r4
 8011e34:	f7fe f99c 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e38:	4649      	mov	r1, r9
 8011e3a:	4620      	mov	r0, r4
 8011e3c:	f7fe f998 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e40:	4641      	mov	r1, r8
 8011e42:	4620      	mov	r0, r4
 8011e44:	f7fe f994 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e48:	4639      	mov	r1, r7
 8011e4a:	4620      	mov	r0, r4
 8011e4c:	f7fe f990 	bl	8010170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e50:	4620      	mov	r0, r4
 8011e52:	9500      	str	r5, [sp, #0]
 8011e54:	462b      	mov	r3, r5
 8011e56:	462a      	mov	r2, r5
 8011e58:	4629      	mov	r1, r5
 8011e5a:	f7ff ff57 	bl	8011d0c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8011e5e:	4620      	mov	r0, r4
 8011e60:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8011e64:	b005      	add	sp, #20
 8011e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e6a:	bf00      	nop
 8011e6c:	08028804 	.word	0x08028804

08011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8011e70:	4291      	cmp	r1, r2
 8011e72:	4613      	mov	r3, r2
 8011e74:	d003      	beq.n	8011e7e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8011e76:	460a      	mov	r2, r1
 8011e78:	4619      	mov	r1, r3
 8011e7a:	f005 bd67 	b.w	801794c <_ZN8touchgfx6muldivElll>
 8011e7e:	4770      	bx	lr

08011e80 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 8011e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e84:	6803      	ldr	r3, [r0, #0]
 8011e86:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8011e8a:	460d      	mov	r5, r1
 8011e8c:	4604      	mov	r4, r0
 8011e8e:	4798      	blx	r3
 8011e90:	42a8      	cmp	r0, r5
 8011e92:	4606      	mov	r6, r0
 8011e94:	d024      	beq.n	8011ee0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 8011e96:	6823      	ldr	r3, [r4, #0]
 8011e98:	4601      	mov	r1, r0
 8011e9a:	462a      	mov	r2, r5
 8011e9c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 8011ea0:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 8011ea4:	f7ff ffe4 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8011ea8:	462a      	mov	r2, r5
 8011eaa:	4680      	mov	r8, r0
 8011eac:	4631      	mov	r1, r6
 8011eae:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 8011eb2:	f7ff ffdd 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8011eb6:	4641      	mov	r1, r8
 8011eb8:	4602      	mov	r2, r0
 8011eba:	4620      	mov	r0, r4
 8011ebc:	47b8      	blx	r7
 8011ebe:	462a      	mov	r2, r5
 8011ec0:	4631      	mov	r1, r6
 8011ec2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8011ec6:	f7ff ffd3 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8011eca:	462a      	mov	r2, r5
 8011ecc:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 8011ed0:	4631      	mov	r1, r6
 8011ed2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8011ed6:	f7ff ffcb 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8011eda:	6325      	str	r5, [r4, #48]	; 0x30
 8011edc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 8011ee0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011ee4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 8011ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011ee8:	4604      	mov	r4, r0
 8011eea:	460f      	mov	r7, r1
 8011eec:	b1ba      	cbz	r2, 8011f1e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8011eee:	6803      	ldr	r3, [r0, #0]
 8011ef0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8011ef4:	4798      	blx	r3
 8011ef6:	2600      	movs	r6, #0
 8011ef8:	4681      	mov	r9, r0
 8011efa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8011efe:	b235      	sxth	r5, r6
 8011f00:	42ab      	cmp	r3, r5
 8011f02:	f106 0601 	add.w	r6, r6, #1
 8011f06:	dd0a      	ble.n	8011f1e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8011f08:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 8011f0c:	463a      	mov	r2, r7
 8011f0e:	4649      	mov	r1, r9
 8011f10:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8011f14:	f7ff ffac 	bl	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8011f18:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8011f1c:	e7ed      	b.n	8011efa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 8011f1e:	6367      	str	r7, [r4, #52]	; 0x34
 8011f20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08011f24 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 8011f24:	b570      	push	{r4, r5, r6, lr}
 8011f26:	6803      	ldr	r3, [r0, #0]
 8011f28:	4604      	mov	r4, r0
 8011f2a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8011f2e:	460d      	mov	r5, r1
 8011f30:	4798      	blx	r3
 8011f32:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011f36:	3301      	adds	r3, #1
 8011f38:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 8011f3c:	6823      	ldr	r3, [r4, #0]
 8011f3e:	4629      	mov	r1, r5
 8011f40:	4620      	mov	r0, r4
 8011f42:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8011f46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f4a:	4718      	bx	r3

08011f4c <_ZN8touchgfx16GraphElementLineD1Ev>:
 8011f4c:	4770      	bx	lr

08011f4e <_ZN8touchgfx16GraphElementLineD0Ev>:
 8011f4e:	b510      	push	{r4, lr}
 8011f50:	2130      	movs	r1, #48	; 0x30
 8011f52:	4604      	mov	r4, r0
 8011f54:	f013 fcf3 	bl	802593e <_ZdlPvj>
 8011f58:	4620      	mov	r0, r4
 8011f5a:	bd10      	pop	{r4, pc}

08011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8011f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f5e:	4604      	mov	r4, r0
 8011f60:	4608      	mov	r0, r1
 8011f62:	460d      	mov	r5, r1
 8011f64:	f7fe fad7 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f68:	b978      	cbnz	r0, 8011f8a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8011f6a:	4620      	mov	r0, r4
 8011f6c:	f7fe fad3 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f70:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011f74:	b150      	cbz	r0, 8011f8c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011f76:	8026      	strh	r6, [r4, #0]
 8011f78:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011f7c:	8063      	strh	r3, [r4, #2]
 8011f7e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011f82:	80a3      	strh	r3, [r4, #4]
 8011f84:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011f88:	80e3      	strh	r3, [r4, #6]
 8011f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011f8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011f90:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011f94:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011f98:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8011f9c:	88ed      	ldrh	r5, [r5, #6]
 8011f9e:	42b1      	cmp	r1, r6
 8011fa0:	460f      	mov	r7, r1
 8011fa2:	bfa8      	it	ge
 8011fa4:	4637      	movge	r7, r6
 8011fa6:	4293      	cmp	r3, r2
 8011fa8:	4618      	mov	r0, r3
 8011faa:	4466      	add	r6, ip
 8011fac:	bfa8      	it	ge
 8011fae:	4610      	movge	r0, r2
 8011fb0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011fb4:	8027      	strh	r7, [r4, #0]
 8011fb6:	442a      	add	r2, r5
 8011fb8:	88e5      	ldrh	r5, [r4, #6]
 8011fba:	8060      	strh	r0, [r4, #2]
 8011fbc:	4461      	add	r1, ip
 8011fbe:	442b      	add	r3, r5
 8011fc0:	b236      	sxth	r6, r6
 8011fc2:	b209      	sxth	r1, r1
 8011fc4:	b212      	sxth	r2, r2
 8011fc6:	b21b      	sxth	r3, r3
 8011fc8:	428e      	cmp	r6, r1
 8011fca:	bfac      	ite	ge
 8011fcc:	ebc7 0106 	rsbge	r1, r7, r6
 8011fd0:	ebc7 0101 	rsblt	r1, r7, r1
 8011fd4:	429a      	cmp	r2, r3
 8011fd6:	bfac      	ite	ge
 8011fd8:	ebc0 0202 	rsbge	r2, r0, r2
 8011fdc:	ebc0 0203 	rsblt	r2, r0, r3
 8011fe0:	80a1      	strh	r1, [r4, #4]
 8011fe2:	80e2      	strh	r2, [r4, #6]
 8011fe4:	e7d1      	b.n	8011f8a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

08011fe6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011fe6:	6800      	ldr	r0, [r0, #0]
 8011fe8:	2800      	cmp	r0, #0
 8011fea:	bfb9      	ittee	lt
 8011fec:	2320      	movlt	r3, #32
 8011fee:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011ff2:	301f      	addge	r0, #31
 8011ff4:	1140      	asrge	r0, r0, #5
 8011ff6:	4770      	bx	lr

08011ff8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 8011ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ffc:	6803      	ldr	r3, [r0, #0]
 8011ffe:	6945      	ldr	r5, [r0, #20]
 8012000:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012002:	b093      	sub	sp, #76	; 0x4c
 8012004:	4604      	mov	r4, r0
 8012006:	460f      	mov	r7, r1
 8012008:	2d00      	cmp	r5, #0
 801200a:	f000 81ad 	beq.w	8012368 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 801200e:	696d      	ldr	r5, [r5, #20]
 8012010:	4798      	blx	r3
 8012012:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012016:	2b00      	cmp	r3, #0
 8012018:	d077      	beq.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801201a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801201e:	fb13 f000 	smulbb	r0, r3, r0
 8012022:	b283      	uxth	r3, r0
 8012024:	1c58      	adds	r0, r3, #1
 8012026:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801202a:	1200      	asrs	r0, r0, #8
 801202c:	d06d      	beq.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801202e:	b2c3      	uxtb	r3, r0
 8012030:	9308      	str	r3, [sp, #32]
 8012032:	6823      	ldr	r3, [r4, #0]
 8012034:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8012038:	462a      	mov	r2, r5
 801203a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801203e:	4621      	mov	r1, r4
 8012040:	4640      	mov	r0, r8
 8012042:	4798      	blx	r3
 8012044:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012048:	ae0e      	add	r6, sp, #56	; 0x38
 801204a:	e886 0003 	stmia.w	r6, {r0, r1}
 801204e:	4639      	mov	r1, r7
 8012050:	4630      	mov	r0, r6
 8012052:	f7fe fa1d 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8012056:	6823      	ldr	r3, [r4, #0]
 8012058:	4629      	mov	r1, r5
 801205a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801205e:	4620      	mov	r0, r4
 8012060:	4798      	blx	r3
 8012062:	6823      	ldr	r3, [r4, #0]
 8012064:	4607      	mov	r7, r0
 8012066:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801206a:	4629      	mov	r1, r5
 801206c:	4620      	mov	r0, r4
 801206e:	4798      	blx	r3
 8012070:	4681      	mov	r9, r0
 8012072:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 8012076:	0103      	lsls	r3, r0, #4
 8012078:	9309      	str	r3, [sp, #36]	; 0x24
 801207a:	6823      	ldr	r3, [r4, #0]
 801207c:	4629      	mov	r1, r5
 801207e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8012082:	4620      	mov	r0, r4
 8012084:	4798      	blx	r3
 8012086:	b203      	sxth	r3, r0
 8012088:	9306      	str	r3, [sp, #24]
 801208a:	6823      	ldr	r3, [r4, #0]
 801208c:	4629      	mov	r1, r5
 801208e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012092:	4620      	mov	r0, r4
 8012094:	4798      	blx	r3
 8012096:	2f00      	cmp	r7, #0
 8012098:	b203      	sxth	r3, r0
 801209a:	9307      	str	r3, [sp, #28]
 801209c:	d138      	bne.n	8012110 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 801209e:	f1b9 0f00 	cmp.w	r9, #0
 80120a2:	d132      	bne.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80120a4:	6823      	ldr	r3, [r4, #0]
 80120a6:	464a      	mov	r2, r9
 80120a8:	4629      	mov	r1, r5
 80120aa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80120ae:	4620      	mov	r0, r4
 80120b0:	4798      	blx	r3
 80120b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80120b4:	1ac0      	subs	r0, r0, r3
 80120b6:	9010      	str	r0, [sp, #64]	; 0x40
 80120b8:	4640      	mov	r0, r8
 80120ba:	f7ff fccd 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80120be:	6823      	ldr	r3, [r4, #0]
 80120c0:	4607      	mov	r7, r0
 80120c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80120c6:	4629      	mov	r1, r5
 80120c8:	4620      	mov	r0, r4
 80120ca:	4798      	blx	r3
 80120cc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80120d0:	1a38      	subs	r0, r7, r0
 80120d2:	fa0f f880 	sxth.w	r8, r0
 80120d6:	eb13 0f08 	cmn.w	r3, r8
 80120da:	d416      	bmi.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80120dc:	6823      	ldr	r3, [r4, #0]
 80120de:	4629      	mov	r1, r5
 80120e0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80120e4:	4620      	mov	r0, r4
 80120e6:	4798      	blx	r3
 80120e8:	4580      	cmp	r8, r0
 80120ea:	da0e      	bge.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80120ec:	9a08      	ldr	r2, [sp, #32]
 80120ee:	6823      	ldr	r3, [r4, #0]
 80120f0:	9202      	str	r2, [sp, #8]
 80120f2:	b23f      	sxth	r7, r7
 80120f4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80120f8:	9201      	str	r2, [sp, #4]
 80120fa:	9700      	str	r7, [sp, #0]
 80120fc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8012100:	4631      	mov	r1, r6
 8012102:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012106:	4620      	mov	r0, r4
 8012108:	47a8      	blx	r5
 801210a:	b013      	add	sp, #76	; 0x4c
 801210c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012110:	ddfb      	ble.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012112:	6823      	ldr	r3, [r4, #0]
 8012114:	4629      	mov	r1, r5
 8012116:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801211a:	4620      	mov	r0, r4
 801211c:	4798      	blx	r3
 801211e:	6823      	ldr	r3, [r4, #0]
 8012120:	4683      	mov	fp, r0
 8012122:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012126:	4629      	mov	r1, r5
 8012128:	4620      	mov	r0, r4
 801212a:	4798      	blx	r3
 801212c:	eba0 030b 	sub.w	r3, r0, fp
 8012130:	2b00      	cmp	r3, #0
 8012132:	bfb8      	it	lt
 8012134:	425b      	neglt	r3, r3
 8012136:	fb93 f3f7 	sdiv	r3, r3, r7
 801213a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 801213e:	4680      	mov	r8, r0
 8012140:	dce3      	bgt.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012142:	6823      	ldr	r3, [r4, #0]
 8012144:	465a      	mov	r2, fp
 8012146:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801214a:	4629      	mov	r1, r5
 801214c:	4620      	mov	r0, r4
 801214e:	4798      	blx	r3
 8012150:	6823      	ldr	r3, [r4, #0]
 8012152:	4606      	mov	r6, r0
 8012154:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8012158:	4642      	mov	r2, r8
 801215a:	4629      	mov	r1, r5
 801215c:	4620      	mov	r0, r4
 801215e:	4798      	blx	r3
 8012160:	42b0      	cmp	r0, r6
 8012162:	bfa2      	ittt	ge
 8012164:	4643      	movge	r3, r8
 8012166:	46d8      	movge	r8, fp
 8012168:	469b      	movge	fp, r3
 801216a:	45d8      	cmp	r8, fp
 801216c:	bfac      	ite	ge
 801216e:	f04f 33ff 	movge.w	r3, #4294967295
 8012172:	2301      	movlt	r3, #1
 8012174:	fb98 f6f7 	sdiv	r6, r8, r7
 8012178:	fb9b f2f7 	sdiv	r2, fp, r7
 801217c:	1af6      	subs	r6, r6, r3
 801217e:	441a      	add	r2, r3
 8012180:	4296      	cmp	r6, r2
 8012182:	bfac      	ite	ge
 8012184:	f04f 3aff 	movge.w	sl, #4294967295
 8012188:	f04f 0a01 	movlt.w	sl, #1
 801218c:	f1b9 0f00 	cmp.w	r9, #0
 8012190:	d13e      	bne.n	8012210 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 8012192:	fb07 fb0a 	mul.w	fp, r7, sl
 8012196:	eb0a 0802 	add.w	r8, sl, r2
 801219a:	4377      	muls	r7, r6
 801219c:	45b0      	cmp	r8, r6
 801219e:	d0b4      	beq.n	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80121a0:	6823      	ldr	r3, [r4, #0]
 80121a2:	463a      	mov	r2, r7
 80121a4:	4629      	mov	r1, r5
 80121a6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80121aa:	4620      	mov	r0, r4
 80121ac:	4798      	blx	r3
 80121ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80121b0:	1ac0      	subs	r0, r0, r3
 80121b2:	9010      	str	r0, [sp, #64]	; 0x40
 80121b4:	a810      	add	r0, sp, #64	; 0x40
 80121b6:	f7ff fc4f 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80121ba:	6823      	ldr	r3, [r4, #0]
 80121bc:	4681      	mov	r9, r0
 80121be:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80121c2:	4629      	mov	r1, r5
 80121c4:	4620      	mov	r0, r4
 80121c6:	4798      	blx	r3
 80121c8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80121cc:	eba9 0000 	sub.w	r0, r9, r0
 80121d0:	b203      	sxth	r3, r0
 80121d2:	42da      	cmn	r2, r3
 80121d4:	9304      	str	r3, [sp, #16]
 80121d6:	d418      	bmi.n	801220a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 80121d8:	6822      	ldr	r2, [r4, #0]
 80121da:	4629      	mov	r1, r5
 80121dc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 80121e0:	4620      	mov	r0, r4
 80121e2:	4790      	blx	r2
 80121e4:	9b04      	ldr	r3, [sp, #16]
 80121e6:	4283      	cmp	r3, r0
 80121e8:	da0f      	bge.n	801220a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 80121ea:	9b08      	ldr	r3, [sp, #32]
 80121ec:	9302      	str	r3, [sp, #8]
 80121ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80121f2:	6822      	ldr	r2, [r4, #0]
 80121f4:	9301      	str	r3, [sp, #4]
 80121f6:	fa0f f389 	sxth.w	r3, r9
 80121fa:	9300      	str	r3, [sp, #0]
 80121fc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 8012200:	a90e      	add	r1, sp, #56	; 0x38
 8012202:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012206:	4620      	mov	r0, r4
 8012208:	47c8      	blx	r9
 801220a:	4456      	add	r6, sl
 801220c:	445f      	add	r7, fp
 801220e:	e7c5      	b.n	801219c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 8012210:	fb98 f8f9 	sdiv	r8, r8, r9
 8012214:	eba8 0203 	sub.w	r2, r8, r3
 8012218:	fb9b f8f9 	sdiv	r8, fp, r9
 801221c:	4498      	add	r8, r3
 801221e:	4542      	cmp	r2, r8
 8012220:	bfac      	ite	ge
 8012222:	f04f 33ff 	movge.w	r3, #4294967295
 8012226:	2301      	movlt	r3, #1
 8012228:	930a      	str	r3, [sp, #40]	; 0x28
 801222a:	6823      	ldr	r3, [r4, #0]
 801222c:	9204      	str	r2, [sp, #16]
 801222e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8012232:	fb02 f209 	mul.w	r2, r2, r9
 8012236:	4629      	mov	r1, r5
 8012238:	4620      	mov	r0, r4
 801223a:	4798      	blx	r3
 801223c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 8012240:	f84b 0d08 	str.w	r0, [fp, #-8]!
 8012244:	4658      	mov	r0, fp
 8012246:	f7ff fc07 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801224a:	b203      	sxth	r3, r0
 801224c:	9305      	str	r3, [sp, #20]
 801224e:	6823      	ldr	r3, [r4, #0]
 8012250:	fb06 f207 	mul.w	r2, r6, r7
 8012254:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8012258:	4629      	mov	r1, r5
 801225a:	4620      	mov	r0, r4
 801225c:	4798      	blx	r3
 801225e:	9010      	str	r0, [sp, #64]	; 0x40
 8012260:	4658      	mov	r0, fp
 8012262:	f7ff fbf9 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012266:	fb07 f20a 	mul.w	r2, r7, sl
 801226a:	920b      	str	r2, [sp, #44]	; 0x2c
 801226c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801226e:	4442      	add	r2, r8
 8012270:	b203      	sxth	r3, r0
 8012272:	920c      	str	r2, [sp, #48]	; 0x30
 8012274:	9a05      	ldr	r2, [sp, #20]
 8012276:	429a      	cmp	r2, r3
 8012278:	dc16      	bgt.n	80122a8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 801227a:	eb06 080a 	add.w	r8, r6, sl
 801227e:	fb07 f808 	mul.w	r8, r7, r8
 8012282:	9a05      	ldr	r2, [sp, #20]
 8012284:	429a      	cmp	r2, r3
 8012286:	db54      	blt.n	8012332 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 8012288:	6823      	ldr	r3, [r4, #0]
 801228a:	4642      	mov	r2, r8
 801228c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8012290:	4629      	mov	r1, r5
 8012292:	4620      	mov	r0, r4
 8012294:	4798      	blx	r3
 8012296:	9010      	str	r0, [sp, #64]	; 0x40
 8012298:	4658      	mov	r0, fp
 801229a:	f7ff fbdd 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801229e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80122a0:	4456      	add	r6, sl
 80122a2:	b203      	sxth	r3, r0
 80122a4:	4490      	add	r8, r2
 80122a6:	e7ec      	b.n	8012282 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 80122a8:	6823      	ldr	r3, [r4, #0]
 80122aa:	fb07 f206 	mul.w	r2, r7, r6
 80122ae:	4629      	mov	r1, r5
 80122b0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80122b4:	4620      	mov	r0, r4
 80122b6:	4798      	blx	r3
 80122b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80122ba:	1ac0      	subs	r0, r0, r3
 80122bc:	9010      	str	r0, [sp, #64]	; 0x40
 80122be:	4658      	mov	r0, fp
 80122c0:	f7ff fbca 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80122c4:	6823      	ldr	r3, [r4, #0]
 80122c6:	4680      	mov	r8, r0
 80122c8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80122cc:	4629      	mov	r1, r5
 80122ce:	4620      	mov	r0, r4
 80122d0:	4798      	blx	r3
 80122d2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80122d6:	eba8 0000 	sub.w	r0, r8, r0
 80122da:	b203      	sxth	r3, r0
 80122dc:	42da      	cmn	r2, r3
 80122de:	930d      	str	r3, [sp, #52]	; 0x34
 80122e0:	d418      	bmi.n	8012314 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 80122e2:	6822      	ldr	r2, [r4, #0]
 80122e4:	4629      	mov	r1, r5
 80122e6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 80122ea:	4620      	mov	r0, r4
 80122ec:	4790      	blx	r2
 80122ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80122f0:	4283      	cmp	r3, r0
 80122f2:	da0f      	bge.n	8012314 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 80122f4:	9b08      	ldr	r3, [sp, #32]
 80122f6:	9302      	str	r3, [sp, #8]
 80122f8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80122fc:	6822      	ldr	r2, [r4, #0]
 80122fe:	9301      	str	r3, [sp, #4]
 8012300:	fa0f f388 	sxth.w	r3, r8
 8012304:	9300      	str	r3, [sp, #0]
 8012306:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 801230a:	a90e      	add	r1, sp, #56	; 0x38
 801230c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012310:	4620      	mov	r0, r4
 8012312:	47c0      	blx	r8
 8012314:	6823      	ldr	r3, [r4, #0]
 8012316:	4456      	add	r6, sl
 8012318:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801231c:	fb06 f207 	mul.w	r2, r6, r7
 8012320:	4629      	mov	r1, r5
 8012322:	4620      	mov	r0, r4
 8012324:	4798      	blx	r3
 8012326:	9010      	str	r0, [sp, #64]	; 0x40
 8012328:	4658      	mov	r0, fp
 801232a:	f7ff fb95 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801232e:	b203      	sxth	r3, r0
 8012330:	e7a0      	b.n	8012274 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8012332:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012334:	930d      	str	r3, [sp, #52]	; 0x34
 8012336:	9b04      	ldr	r3, [sp, #16]
 8012338:	4413      	add	r3, r2
 801233a:	9304      	str	r3, [sp, #16]
 801233c:	9a04      	ldr	r2, [sp, #16]
 801233e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012340:	4293      	cmp	r3, r2
 8012342:	f43f aee2 	beq.w	801210a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012346:	9b04      	ldr	r3, [sp, #16]
 8012348:	6822      	ldr	r2, [r4, #0]
 801234a:	4629      	mov	r1, r5
 801234c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 8012350:	4620      	mov	r0, r4
 8012352:	fb03 f209 	mul.w	r2, r3, r9
 8012356:	47c0      	blx	r8
 8012358:	9010      	str	r0, [sp, #64]	; 0x40
 801235a:	4658      	mov	r0, fp
 801235c:	f7ff fb7c 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012360:	b203      	sxth	r3, r0
 8012362:	9305      	str	r3, [sp, #20]
 8012364:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012366:	e785      	b.n	8012274 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8012368:	4798      	blx	r3
 801236a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801236e:	deff      	udf	#255	; 0xff

08012370 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012370:	b510      	push	{r4, lr}
 8012372:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012376:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801237a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801237e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012382:	13a4      	asrs	r4, r4, #14
 8012384:	139b      	asrs	r3, r3, #14
 8012386:	429c      	cmp	r4, r3
 8012388:	bfb8      	it	lt
 801238a:	461c      	movlt	r4, r3
 801238c:	2c01      	cmp	r4, #1
 801238e:	dd07      	ble.n	80123a0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012390:	fb91 f1f4 	sdiv	r1, r1, r4
 8012394:	fb90 f0f4 	sdiv	r0, r0, r4
 8012398:	f7ff ffea 	bl	8012370 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801239c:	4360      	muls	r0, r4
 801239e:	bd10      	pop	{r4, pc}
 80123a0:	4340      	muls	r0, r0
 80123a2:	fb01 0101 	mla	r1, r1, r1, r0
 80123a6:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80123aa:	bfb4      	ite	lt
 80123ac:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 80123b0:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 80123b4:	2000      	movs	r0, #0
 80123b6:	18c2      	adds	r2, r0, r3
 80123b8:	428a      	cmp	r2, r1
 80123ba:	bf9c      	itt	ls
 80123bc:	1898      	addls	r0, r3, r2
 80123be:	1a89      	subls	r1, r1, r2
 80123c0:	089b      	lsrs	r3, r3, #2
 80123c2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 80123c6:	d1f6      	bne.n	80123b6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 80123c8:	e7e9      	b.n	801239e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080123ca <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 80123ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123cc:	9906      	ldr	r1, [sp, #24]
 80123ce:	4291      	cmp	r1, r2
 80123d0:	bfbc      	itt	lt
 80123d2:	9206      	strlt	r2, [sp, #24]
 80123d4:	460a      	movlt	r2, r1
 80123d6:	9907      	ldr	r1, [sp, #28]
 80123d8:	428b      	cmp	r3, r1
 80123da:	4606      	mov	r6, r0
 80123dc:	461c      	mov	r4, r3
 80123de:	f04f 0020 	mov.w	r0, #32
 80123e2:	bfc8      	it	gt
 80123e4:	460c      	movgt	r4, r1
 80123e6:	fb92 f5f0 	sdiv	r5, r2, r0
 80123ea:	fb94 f4f0 	sdiv	r4, r4, r0
 80123ee:	a806      	add	r0, sp, #24
 80123f0:	bfc8      	it	gt
 80123f2:	9307      	strgt	r3, [sp, #28]
 80123f4:	f7ff fdf7 	bl	8011fe6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80123f8:	4607      	mov	r7, r0
 80123fa:	a807      	add	r0, sp, #28
 80123fc:	f7ff fdf3 	bl	8011fe6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012400:	1b7a      	subs	r2, r7, r5
 8012402:	1b00      	subs	r0, r0, r4
 8012404:	80f0      	strh	r0, [r6, #6]
 8012406:	8035      	strh	r5, [r6, #0]
 8012408:	8074      	strh	r4, [r6, #2]
 801240a:	80b2      	strh	r2, [r6, #4]
 801240c:	4630      	mov	r0, r6
 801240e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012410 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 8012410:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012412:	9c08      	ldr	r4, [sp, #32]
 8012414:	2602      	movs	r6, #2
 8012416:	3401      	adds	r4, #1
 8012418:	fb94 f4f6 	sdiv	r4, r4, r6
 801241c:	18a6      	adds	r6, r4, r2
 801241e:	191f      	adds	r7, r3, r4
 8012420:	e9cd 6700 	strd	r6, r7, [sp]
 8012424:	1b1b      	subs	r3, r3, r4
 8012426:	1b12      	subs	r2, r2, r4
 8012428:	4605      	mov	r5, r0
 801242a:	f7ff ffce 	bl	80123ca <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 801242e:	4628      	mov	r0, r5
 8012430:	b003      	add	sp, #12
 8012432:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012434 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 8012434:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012438:	6943      	ldr	r3, [r0, #20]
 801243a:	b087      	sub	sp, #28
 801243c:	4606      	mov	r6, r0
 801243e:	460d      	mov	r5, r1
 8012440:	2b00      	cmp	r3, #0
 8012442:	d072      	beq.n	801252a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 8012444:	695c      	ldr	r4, [r3, #20]
 8012446:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 801244a:	6823      	ldr	r3, [r4, #0]
 801244c:	4620      	mov	r0, r4
 801244e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012452:	4798      	blx	r3
 8012454:	6823      	ldr	r3, [r4, #0]
 8012456:	4680      	mov	r8, r0
 8012458:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801245c:	4629      	mov	r1, r5
 801245e:	4620      	mov	r0, r4
 8012460:	4798      	blx	r3
 8012462:	017f      	lsls	r7, r7, #5
 8012464:	4603      	mov	r3, r0
 8012466:	9700      	str	r7, [sp, #0]
 8012468:	4642      	mov	r2, r8
 801246a:	4631      	mov	r1, r6
 801246c:	a802      	add	r0, sp, #8
 801246e:	f7ff ffcf 	bl	8012410 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8012472:	2d00      	cmp	r5, #0
 8012474:	dd1b      	ble.n	80124ae <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 8012476:	6823      	ldr	r3, [r4, #0]
 8012478:	f105 38ff 	add.w	r8, r5, #4294967295
 801247c:	fa0f f888 	sxth.w	r8, r8
 8012480:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012484:	4641      	mov	r1, r8
 8012486:	4620      	mov	r0, r4
 8012488:	4798      	blx	r3
 801248a:	6823      	ldr	r3, [r4, #0]
 801248c:	4681      	mov	r9, r0
 801248e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012492:	4641      	mov	r1, r8
 8012494:	4620      	mov	r0, r4
 8012496:	4798      	blx	r3
 8012498:	4631      	mov	r1, r6
 801249a:	4603      	mov	r3, r0
 801249c:	9700      	str	r7, [sp, #0]
 801249e:	a804      	add	r0, sp, #16
 80124a0:	464a      	mov	r2, r9
 80124a2:	f7ff ffb5 	bl	8012410 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80124a6:	a904      	add	r1, sp, #16
 80124a8:	a802      	add	r0, sp, #8
 80124aa:	f7ff fd57 	bl	8011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80124ae:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80124b2:	3b01      	subs	r3, #1
 80124b4:	429d      	cmp	r5, r3
 80124b6:	da19      	bge.n	80124ec <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 80124b8:	6823      	ldr	r3, [r4, #0]
 80124ba:	3501      	adds	r5, #1
 80124bc:	b22d      	sxth	r5, r5
 80124be:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80124c2:	4629      	mov	r1, r5
 80124c4:	4620      	mov	r0, r4
 80124c6:	4798      	blx	r3
 80124c8:	6823      	ldr	r3, [r4, #0]
 80124ca:	4680      	mov	r8, r0
 80124cc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80124d0:	4629      	mov	r1, r5
 80124d2:	4620      	mov	r0, r4
 80124d4:	4798      	blx	r3
 80124d6:	4631      	mov	r1, r6
 80124d8:	4603      	mov	r3, r0
 80124da:	9700      	str	r7, [sp, #0]
 80124dc:	a804      	add	r0, sp, #16
 80124de:	4642      	mov	r2, r8
 80124e0:	f7ff ff96 	bl	8012410 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80124e4:	a904      	add	r1, sp, #16
 80124e6:	a802      	add	r0, sp, #8
 80124e8:	f7ff fd38 	bl	8011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80124ec:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 80124f0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 80124f4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 80124f8:	18ca      	adds	r2, r1, r3
 80124fa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 80124fe:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012502:	1a9b      	subs	r3, r3, r2
 8012504:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012508:	2200      	movs	r2, #0
 801250a:	a904      	add	r1, sp, #16
 801250c:	a802      	add	r0, sp, #8
 801250e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012512:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012516:	f7fd ffbb 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801251a:	6833      	ldr	r3, [r6, #0]
 801251c:	a902      	add	r1, sp, #8
 801251e:	691b      	ldr	r3, [r3, #16]
 8012520:	4630      	mov	r0, r6
 8012522:	4798      	blx	r3
 8012524:	b007      	add	sp, #28
 8012526:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801252a:	681b      	ldr	r3, [r3, #0]
 801252c:	deff      	udf	#255	; 0xff

0801252e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 801252e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012532:	2b00      	cmp	r3, #0
 8012534:	da05      	bge.n	8012542 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 8012536:	880a      	ldrh	r2, [r1, #0]
 8012538:	b29b      	uxth	r3, r3
 801253a:	441a      	add	r2, r3
 801253c:	425b      	negs	r3, r3
 801253e:	800a      	strh	r2, [r1, #0]
 8012540:	808b      	strh	r3, [r1, #4]
 8012542:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012546:	2b00      	cmp	r3, #0
 8012548:	da05      	bge.n	8012556 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 801254a:	884a      	ldrh	r2, [r1, #2]
 801254c:	b29b      	uxth	r3, r3
 801254e:	441a      	add	r2, r3
 8012550:	425b      	negs	r3, r3
 8012552:	804a      	strh	r2, [r1, #2]
 8012554:	80cb      	strh	r3, [r1, #6]
 8012556:	4770      	bx	lr

08012558 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 8012558:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801255a:	4604      	mov	r4, r0
 801255c:	460d      	mov	r5, r1
 801255e:	6801      	ldr	r1, [r0, #0]
 8012560:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 8012564:	9001      	str	r0, [sp, #4]
 8012566:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801256a:	9000      	str	r0, [sp, #0]
 801256c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 8012570:	a802      	add	r0, sp, #8
 8012572:	4621      	mov	r1, r4
 8012574:	47b0      	blx	r6
 8012576:	a902      	add	r1, sp, #8
 8012578:	4620      	mov	r0, r4
 801257a:	f7ff ffd8 	bl	801252e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 801257e:	a802      	add	r0, sp, #8
 8012580:	4629      	mov	r1, r5
 8012582:	f7fd ff85 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8012586:	a802      	add	r0, sp, #8
 8012588:	f7fd ffc5 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801258c:	b968      	cbnz	r0, 80125aa <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 801258e:	6823      	ldr	r3, [r4, #0]
 8012590:	a902      	add	r1, sp, #8
 8012592:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012594:	4620      	mov	r0, r4
 8012596:	4798      	blx	r3
 8012598:	f7fe fa48 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 801259c:	6803      	ldr	r3, [r0, #0]
 801259e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80125a0:	6a1d      	ldr	r5, [r3, #32]
 80125a2:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80125a6:	a902      	add	r1, sp, #8
 80125a8:	47a8      	blx	r5
 80125aa:	b004      	add	sp, #16
 80125ac:	bd70      	pop	{r4, r5, r6, pc}

080125ae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 80125ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125b2:	b08b      	sub	sp, #44	; 0x2c
 80125b4:	461e      	mov	r6, r3
 80125b6:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 80125ba:	9304      	str	r3, [sp, #16]
 80125bc:	429e      	cmp	r6, r3
 80125be:	4689      	mov	r9, r1
 80125c0:	4615      	mov	r5, r2
 80125c2:	d072      	beq.n	80126aa <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 80125c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80125c8:	015b      	lsls	r3, r3, #5
 80125ca:	9303      	str	r3, [sp, #12]
 80125cc:	6813      	ldr	r3, [r2, #0]
 80125ce:	4610      	mov	r0, r2
 80125d0:	4631      	mov	r1, r6
 80125d2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80125d6:	4798      	blx	r3
 80125d8:	ab0a      	add	r3, sp, #40	; 0x28
 80125da:	4634      	mov	r4, r6
 80125dc:	f843 0d10 	str.w	r0, [r3, #-16]!
 80125e0:	4618      	mov	r0, r3
 80125e2:	f7ff fa39 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80125e6:	682b      	ldr	r3, [r5, #0]
 80125e8:	4631      	mov	r1, r6
 80125ea:	0147      	lsls	r7, r0, #5
 80125ec:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80125f0:	4628      	mov	r0, r5
 80125f2:	4798      	blx	r3
 80125f4:	ab0a      	add	r3, sp, #40	; 0x28
 80125f6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 80125fa:	4618      	mov	r0, r3
 80125fc:	f7ff fa2c 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012600:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8012604:	4642      	mov	r2, r8
 8012606:	4639      	mov	r1, r7
 8012608:	4648      	mov	r0, r9
 801260a:	f013 f927 	bl	802585c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801260e:	2301      	movs	r3, #1
 8012610:	9300      	str	r3, [sp, #0]
 8012612:	9b00      	ldr	r3, [sp, #0]
 8012614:	441c      	add	r4, r3
 8012616:	682b      	ldr	r3, [r5, #0]
 8012618:	b224      	sxth	r4, r4
 801261a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801261e:	4621      	mov	r1, r4
 8012620:	4628      	mov	r0, r5
 8012622:	4798      	blx	r3
 8012624:	9008      	str	r0, [sp, #32]
 8012626:	a808      	add	r0, sp, #32
 8012628:	f7ff fa16 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801262c:	0143      	lsls	r3, r0, #5
 801262e:	9301      	str	r3, [sp, #4]
 8012630:	682b      	ldr	r3, [r5, #0]
 8012632:	4621      	mov	r1, r4
 8012634:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012638:	4628      	mov	r0, r5
 801263a:	4798      	blx	r3
 801263c:	9009      	str	r0, [sp, #36]	; 0x24
 801263e:	a809      	add	r0, sp, #36	; 0x24
 8012640:	f7ff fa0a 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012644:	0143      	lsls	r3, r0, #5
 8012646:	9302      	str	r3, [sp, #8]
 8012648:	9b01      	ldr	r3, [sp, #4]
 801264a:	eba3 0b07 	sub.w	fp, r3, r7
 801264e:	9b02      	ldr	r3, [sp, #8]
 8012650:	eba3 0a08 	sub.w	sl, r3, r8
 8012654:	4651      	mov	r1, sl
 8012656:	4658      	mov	r0, fp
 8012658:	f7ff fe8a 	bl	8012370 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801265c:	b318      	cbz	r0, 80126a6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 801265e:	4602      	mov	r2, r0
 8012660:	4651      	mov	r1, sl
 8012662:	9005      	str	r0, [sp, #20]
 8012664:	9803      	ldr	r0, [sp, #12]
 8012666:	f005 f971 	bl	801794c <_ZN8touchgfx6muldivElll>
 801266a:	2302      	movs	r3, #2
 801266c:	fb90 faf3 	sdiv	sl, r0, r3
 8012670:	9b05      	ldr	r3, [sp, #20]
 8012672:	9803      	ldr	r0, [sp, #12]
 8012674:	461a      	mov	r2, r3
 8012676:	4659      	mov	r1, fp
 8012678:	f005 f968 	bl	801794c <_ZN8touchgfx6muldivElll>
 801267c:	2302      	movs	r3, #2
 801267e:	eba7 010a 	sub.w	r1, r7, sl
 8012682:	fb90 fbf3 	sdiv	fp, r0, r3
 8012686:	4648      	mov	r0, r9
 8012688:	eb0b 0208 	add.w	r2, fp, r8
 801268c:	f012 ffbc 	bl	8025608 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012690:	9b02      	ldr	r3, [sp, #8]
 8012692:	eb03 020b 	add.w	r2, r3, fp
 8012696:	9b01      	ldr	r3, [sp, #4]
 8012698:	4648      	mov	r0, r9
 801269a:	eba3 010a 	sub.w	r1, r3, sl
 801269e:	f012 ffb3 	bl	8025608 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80126a2:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 80126a6:	42a6      	cmp	r6, r4
 80126a8:	db02      	blt.n	80126b0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 80126aa:	b00b      	add	sp, #44	; 0x2c
 80126ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126b0:	9b00      	ldr	r3, [sp, #0]
 80126b2:	9a04      	ldr	r2, [sp, #16]
 80126b4:	42a2      	cmp	r2, r4
 80126b6:	bf08      	it	eq
 80126b8:	f04f 33ff 	moveq.w	r3, #4294967295
 80126bc:	e7a8      	b.n	8012610 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

080126c0 <_ZN8touchgfx6CanvasD1Ev>:
 80126c0:	b510      	push	{r4, lr}
 80126c2:	4b04      	ldr	r3, [pc, #16]	; (80126d4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80126c4:	4604      	mov	r4, r0
 80126c6:	f840 3b20 	str.w	r3, [r0], #32
 80126ca:	f001 fc5b 	bl	8013f84 <_ZN8touchgfx7OutlineD1Ev>
 80126ce:	4620      	mov	r0, r4
 80126d0:	bd10      	pop	{r4, pc}
 80126d2:	bf00      	nop
 80126d4:	08028934 	.word	0x08028934

080126d8 <_ZN8touchgfx6CanvasD0Ev>:
 80126d8:	b510      	push	{r4, lr}
 80126da:	4604      	mov	r4, r0
 80126dc:	f7ff fff0 	bl	80126c0 <_ZN8touchgfx6CanvasD1Ev>
 80126e0:	4620      	mov	r0, r4
 80126e2:	2170      	movs	r1, #112	; 0x70
 80126e4:	f013 f92b 	bl	802593e <_ZdlPvj>
 80126e8:	4620      	mov	r0, r4
 80126ea:	bd10      	pop	{r4, pc}

080126ec <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 80126ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126f0:	6943      	ldr	r3, [r0, #20]
 80126f2:	b0a2      	sub	sp, #136	; 0x88
 80126f4:	4606      	mov	r6, r0
 80126f6:	460f      	mov	r7, r1
 80126f8:	2b00      	cmp	r3, #0
 80126fa:	d06a      	beq.n	80127d2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 80126fc:	695c      	ldr	r4, [r3, #20]
 80126fe:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8012702:	2b01      	cmp	r3, #1
 8012704:	dc04      	bgt.n	8012710 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 8012706:	2401      	movs	r4, #1
 8012708:	4620      	mov	r0, r4
 801270a:	b022      	add	sp, #136	; 0x88
 801270c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012710:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012714:	ad22      	add	r5, sp, #136	; 0x88
 8012716:	011b      	lsls	r3, r3, #4
 8012718:	f845 3d70 	str.w	r3, [r5, #-112]!
 801271c:	4628      	mov	r0, r5
 801271e:	f7ff fc62 	bl	8011fe6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012722:	8839      	ldrh	r1, [r7, #0]
 8012724:	88ba      	ldrh	r2, [r7, #4]
 8012726:	6823      	ldr	r3, [r4, #0]
 8012728:	b280      	uxth	r0, r0
 801272a:	440a      	add	r2, r1
 801272c:	4402      	add	r2, r0
 801272e:	1a09      	subs	r1, r1, r0
 8012730:	f10d 000e 	add.w	r0, sp, #14
 8012734:	9000      	str	r0, [sp, #0]
 8012736:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 801273a:	b212      	sxth	r2, r2
 801273c:	ab03      	add	r3, sp, #12
 801273e:	b209      	sxth	r1, r1
 8012740:	4620      	mov	r0, r4
 8012742:	47c0      	blx	r8
 8012744:	2800      	cmp	r0, #0
 8012746:	d0de      	beq.n	8012706 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 8012748:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 801274c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 8012750:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8012754:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012758:	18ca      	adds	r2, r1, r3
 801275a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801275e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012762:	1a9b      	subs	r3, r3, r2
 8012764:	4639      	mov	r1, r7
 8012766:	2200      	movs	r2, #0
 8012768:	a804      	add	r0, sp, #16
 801276a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801276e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012772:	f7fd fe8d 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8012776:	aa04      	add	r2, sp, #16
 8012778:	4631      	mov	r1, r6
 801277a:	4628      	mov	r0, r5
 801277c:	f012 fe96 	bl	80254ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012780:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 8012784:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012788:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801278c:	2f00      	cmp	r7, #0
 801278e:	dd03      	ble.n	8012798 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 8012790:	42bb      	cmp	r3, r7
 8012792:	da01      	bge.n	8012798 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 8012794:	42ba      	cmp	r2, r7
 8012796:	da0f      	bge.n	80127b8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 8012798:	9200      	str	r2, [sp, #0]
 801279a:	4622      	mov	r2, r4
 801279c:	4629      	mov	r1, r5
 801279e:	4630      	mov	r0, r6
 80127a0:	f7ff ff05 	bl	80125ae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 80127a4:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 80127a8:	4628      	mov	r0, r5
 80127aa:	f012 ffa9 	bl	8025700 <_ZN8touchgfx6Canvas6renderEh>
 80127ae:	4604      	mov	r4, r0
 80127b0:	4628      	mov	r0, r5
 80127b2:	f7ff ff85 	bl	80126c0 <_ZN8touchgfx6CanvasD1Ev>
 80127b6:	e7a7      	b.n	8012708 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 80127b8:	1e7a      	subs	r2, r7, #1
 80127ba:	b212      	sxth	r2, r2
 80127bc:	9200      	str	r2, [sp, #0]
 80127be:	4629      	mov	r1, r5
 80127c0:	4622      	mov	r2, r4
 80127c2:	4630      	mov	r0, r6
 80127c4:	f7ff fef3 	bl	80125ae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 80127c8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80127cc:	9300      	str	r3, [sp, #0]
 80127ce:	463b      	mov	r3, r7
 80127d0:	e7e3      	b.n	801279a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 80127d2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 80127d6:	deff      	udf	#255	; 0xff

080127d8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 80127d8:	4770      	bx	lr

080127da <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 80127da:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80127dc:	b118      	cbz	r0, 80127e6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80127de:	6803      	ldr	r3, [r0, #0]
 80127e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80127e4:	4718      	bx	r3
 80127e6:	4770      	bx	lr

080127e8 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 80127e8:	680b      	ldr	r3, [r1, #0]
 80127ea:	4608      	mov	r0, r1
 80127ec:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80127f0:	4718      	bx	r3

080127f2 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 80127f2:	680b      	ldr	r3, [r1, #0]
 80127f4:	4608      	mov	r0, r1
 80127f6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80127fa:	4718      	bx	r3

080127fc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 80127fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012800:	4a37      	ldr	r2, [pc, #220]	; (80128e0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 8012802:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012804:	8812      	ldrh	r2, [r2, #0]
 8012806:	429a      	cmp	r2, r3
 8012808:	b087      	sub	sp, #28
 801280a:	4604      	mov	r4, r0
 801280c:	4689      	mov	r9, r1
 801280e:	d937      	bls.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 8012810:	4a34      	ldr	r2, [pc, #208]	; (80128e4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 8012812:	6812      	ldr	r2, [r2, #0]
 8012814:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012818:	4b33      	ldr	r3, [pc, #204]	; (80128e8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 801281a:	681b      	ldr	r3, [r3, #0]
 801281c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8012820:	f1b8 0f00 	cmp.w	r8, #0
 8012824:	d02c      	beq.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 8012826:	6803      	ldr	r3, [r0, #0]
 8012828:	6945      	ldr	r5, [r0, #20]
 801282a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801282c:	2d00      	cmp	r5, #0
 801282e:	d052      	beq.n	80128d6 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 8012830:	696f      	ldr	r7, [r5, #20]
 8012832:	4798      	blx	r3
 8012834:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 8012838:	fb15 f000 	smulbb	r0, r5, r0
 801283c:	b280      	uxth	r0, r0
 801283e:	1c45      	adds	r5, r0, #1
 8012840:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012844:	122d      	asrs	r5, r5, #8
 8012846:	d01b      	beq.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 8012848:	6823      	ldr	r3, [r4, #0]
 801284a:	4639      	mov	r1, r7
 801284c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012850:	4620      	mov	r0, r4
 8012852:	4798      	blx	r3
 8012854:	6823      	ldr	r3, [r4, #0]
 8012856:	4606      	mov	r6, r0
 8012858:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801285c:	4639      	mov	r1, r7
 801285e:	4620      	mov	r0, r4
 8012860:	4798      	blx	r3
 8012862:	b2ed      	uxtb	r5, r5
 8012864:	4683      	mov	fp, r0
 8012866:	b970      	cbnz	r0, 8012886 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 8012868:	b96e      	cbnz	r6, 8012886 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 801286a:	e9cd 6501 	strd	r6, r5, [sp, #4]
 801286e:	6823      	ldr	r3, [r4, #0]
 8012870:	9600      	str	r6, [sp, #0]
 8012872:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 8012876:	4642      	mov	r2, r8
 8012878:	463b      	mov	r3, r7
 801287a:	4649      	mov	r1, r9
 801287c:	4620      	mov	r0, r4
 801287e:	47a8      	blx	r5
 8012880:	b007      	add	sp, #28
 8012882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012886:	2e00      	cmp	r6, #0
 8012888:	ddfa      	ble.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801288a:	6823      	ldr	r3, [r4, #0]
 801288c:	4639      	mov	r1, r7
 801288e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012892:	4620      	mov	r0, r4
 8012894:	4798      	blx	r3
 8012896:	6823      	ldr	r3, [r4, #0]
 8012898:	4682      	mov	sl, r0
 801289a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801289e:	4639      	mov	r1, r7
 80128a0:	4620      	mov	r0, r4
 80128a2:	4798      	blx	r3
 80128a4:	4582      	cmp	sl, r0
 80128a6:	bfde      	ittt	le
 80128a8:	4603      	movle	r3, r0
 80128aa:	4650      	movle	r0, sl
 80128ac:	469a      	movle	sl, r3
 80128ae:	ebaa 0300 	sub.w	r3, sl, r0
 80128b2:	fb93 f3f6 	sdiv	r3, r3, r6
 80128b6:	2b64      	cmp	r3, #100	; 0x64
 80128b8:	dce2      	bgt.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 80128ba:	e9cd b503 	strd	fp, r5, [sp, #12]
 80128be:	e9cd a601 	strd	sl, r6, [sp, #4]
 80128c2:	6823      	ldr	r3, [r4, #0]
 80128c4:	9000      	str	r0, [sp, #0]
 80128c6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80128ca:	4642      	mov	r2, r8
 80128cc:	463b      	mov	r3, r7
 80128ce:	4649      	mov	r1, r9
 80128d0:	4620      	mov	r0, r4
 80128d2:	47a8      	blx	r5
 80128d4:	e7d4      	b.n	8012880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 80128d6:	4798      	blx	r3
 80128d8:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 80128dc:	deff      	udf	#255	; 0xff
 80128de:	bf00      	nop
 80128e0:	2000dcd0 	.word	0x2000dcd0
 80128e4:	2000dccc 	.word	0x2000dccc
 80128e8:	2000dcd4 	.word	0x2000dcd4

080128ec <_ZN8touchgfx12GraphLabelsYD1Ev>:
 80128ec:	4770      	bx	lr

080128ee <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 80128ee:	b538      	push	{r3, r4, r5, lr}
 80128f0:	680a      	ldr	r2, [r1, #0]
 80128f2:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 80128f6:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 80128fa:	4608      	mov	r0, r1
 80128fc:	4790      	blx	r2
 80128fe:	4629      	mov	r1, r5
 8012900:	4602      	mov	r2, r0
 8012902:	4620      	mov	r0, r4
 8012904:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012908:	f7ff bab2 	b.w	8011e70 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0801290c <_ZN8touchgfx12GraphLabelsYD0Ev>:
 801290c:	b510      	push	{r4, lr}
 801290e:	214c      	movs	r1, #76	; 0x4c
 8012910:	4604      	mov	r4, r0
 8012912:	f013 f814 	bl	802593e <_ZdlPvj>
 8012916:	4620      	mov	r0, r4
 8012918:	bd10      	pop	{r4, pc}

0801291a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 801291a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801291e:	b08d      	sub	sp, #52	; 0x34
 8012920:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 8012924:	9309      	str	r3, [sp, #36]	; 0x24
 8012926:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 801292a:	930a      	str	r3, [sp, #40]	; 0x28
 801292c:	4606      	mov	r6, r0
 801292e:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012932:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 8012936:	f1b9 0f00 	cmp.w	r9, #0
 801293a:	d117      	bne.n	801296c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 801293c:	2f00      	cmp	r7, #0
 801293e:	dc7c      	bgt.n	8012a3a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 8012940:	f1b8 0f00 	cmp.w	r8, #0
 8012944:	da01      	bge.n	801294a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8012946:	2f00      	cmp	r7, #0
 8012948:	d17a      	bne.n	8012a40 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 801294a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801294c:	9318      	str	r3, [sp, #96]	; 0x60
 801294e:	2300      	movs	r3, #0
 8012950:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 8012954:	6832      	ldr	r2, [r6, #0]
 8012956:	9907      	ldr	r1, [sp, #28]
 8012958:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 801295c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012960:	4630      	mov	r0, r6
 8012962:	46a4      	mov	ip, r4
 8012964:	b00d      	add	sp, #52	; 0x34
 8012966:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801296a:	4760      	bx	ip
 801296c:	fb97 f4f9 	sdiv	r4, r7, r9
 8012970:	1e63      	subs	r3, r4, #1
 8012972:	9305      	str	r3, [sp, #20]
 8012974:	f1ba 0f00 	cmp.w	sl, #0
 8012978:	d122      	bne.n	80129c0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 801297a:	fb98 faf9 	sdiv	sl, r8, r9
 801297e:	fb03 f509 	mul.w	r5, r3, r9
 8012982:	f10a 0a02 	add.w	sl, sl, #2
 8012986:	9b05      	ldr	r3, [sp, #20]
 8012988:	459a      	cmp	sl, r3
 801298a:	d059      	beq.n	8012a40 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 801298c:	42af      	cmp	r7, r5
 801298e:	dc5a      	bgt.n	8012a46 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 8012990:	45a8      	cmp	r8, r5
 8012992:	da01      	bge.n	8012998 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 8012994:	42af      	cmp	r7, r5
 8012996:	db0e      	blt.n	80129b6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8012998:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801299a:	9302      	str	r3, [sp, #8]
 801299c:	9905      	ldr	r1, [sp, #20]
 801299e:	6b73      	ldr	r3, [r6, #52]	; 0x34
 80129a0:	6832      	ldr	r2, [r6, #0]
 80129a2:	434b      	muls	r3, r1
 80129a4:	e9cd 5300 	strd	r5, r3, [sp]
 80129a8:	9907      	ldr	r1, [sp, #28]
 80129aa:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 80129ae:	4630      	mov	r0, r6
 80129b0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80129b4:	47d8      	blx	fp
 80129b6:	9b05      	ldr	r3, [sp, #20]
 80129b8:	3301      	adds	r3, #1
 80129ba:	9305      	str	r3, [sp, #20]
 80129bc:	444d      	add	r5, r9
 80129be:	e7e2      	b.n	8012986 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 80129c0:	fb97 f3fa 	sdiv	r3, r7, sl
 80129c4:	3b01      	subs	r3, #1
 80129c6:	9306      	str	r3, [sp, #24]
 80129c8:	9a06      	ldr	r2, [sp, #24]
 80129ca:	fb98 f3fa 	sdiv	r3, r8, sl
 80129ce:	fb02 fb0a 	mul.w	fp, r2, sl
 80129d2:	9a05      	ldr	r2, [sp, #20]
 80129d4:	3302      	adds	r3, #2
 80129d6:	fb02 f509 	mul.w	r5, r2, r9
 80129da:	930b      	str	r3, [sp, #44]	; 0x2c
 80129dc:	45ab      	cmp	fp, r5
 80129de:	dd1d      	ble.n	8012a1c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 80129e0:	42af      	cmp	r7, r5
 80129e2:	dc08      	bgt.n	80129f6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 80129e4:	45a8      	cmp	r8, r5
 80129e6:	da08      	bge.n	80129fa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 80129e8:	42af      	cmp	r7, r5
 80129ea:	da06      	bge.n	80129fa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 80129ec:	9b05      	ldr	r3, [sp, #20]
 80129ee:	3301      	adds	r3, #1
 80129f0:	9305      	str	r3, [sp, #20]
 80129f2:	444d      	add	r5, r9
 80129f4:	e7f2      	b.n	80129dc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 80129f6:	45a8      	cmp	r8, r5
 80129f8:	dcf8      	bgt.n	80129ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 80129fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80129fc:	9302      	str	r3, [sp, #8]
 80129fe:	9905      	ldr	r1, [sp, #20]
 8012a00:	6b73      	ldr	r3, [r6, #52]	; 0x34
 8012a02:	6832      	ldr	r2, [r6, #0]
 8012a04:	434b      	muls	r3, r1
 8012a06:	e9cd 5300 	strd	r5, r3, [sp]
 8012a0a:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8012a0e:	9907      	ldr	r1, [sp, #28]
 8012a10:	461c      	mov	r4, r3
 8012a12:	4630      	mov	r0, r6
 8012a14:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012a18:	47a0      	blx	r4
 8012a1a:	e7e7      	b.n	80129ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8012a1c:	45ab      	cmp	fp, r5
 8012a1e:	db04      	blt.n	8012a2a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 8012a20:	9b05      	ldr	r3, [sp, #20]
 8012a22:	3301      	adds	r3, #1
 8012a24:	9305      	str	r3, [sp, #20]
 8012a26:	444d      	add	r5, r9
 8012a28:	e7f8      	b.n	8012a1c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8012a2a:	9b06      	ldr	r3, [sp, #24]
 8012a2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a2e:	3301      	adds	r3, #1
 8012a30:	4293      	cmp	r3, r2
 8012a32:	9306      	str	r3, [sp, #24]
 8012a34:	d004      	beq.n	8012a40 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8012a36:	44d3      	add	fp, sl
 8012a38:	e7d0      	b.n	80129dc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8012a3a:	f1b8 0f00 	cmp.w	r8, #0
 8012a3e:	dd84      	ble.n	801294a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8012a40:	b00d      	add	sp, #52	; 0x34
 8012a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a46:	45a8      	cmp	r8, r5
 8012a48:	dcb5      	bgt.n	80129b6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8012a4a:	e7a5      	b.n	8012998 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

08012a4c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 8012a4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a50:	f1b3 0900 	subs.w	r9, r3, #0
 8012a54:	460d      	mov	r5, r1
 8012a56:	4690      	mov	r8, r2
 8012a58:	9f08      	ldr	r7, [sp, #32]
 8012a5a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 8012a5e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012a60:	da18      	bge.n	8012a94 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8012a62:	2a01      	cmp	r2, #1
 8012a64:	dd16      	ble.n	8012a94 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8012a66:	232d      	movs	r3, #45	; 0x2d
 8012a68:	800b      	strh	r3, [r1, #0]
 8012a6a:	f1c9 0900 	rsb	r9, r9, #0
 8012a6e:	2001      	movs	r0, #1
 8012a70:	2f00      	cmp	r7, #0
 8012a72:	d111      	bne.n	8012a98 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 8012a74:	eba8 0100 	sub.w	r1, r8, r0
 8012a78:	2302      	movs	r3, #2
 8012a7a:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8012a7e:	fb96 f3f3 	sdiv	r3, r6, r3
 8012a82:	4a24      	ldr	r2, [pc, #144]	; (8012b14 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8012a84:	444b      	add	r3, r9
 8012a86:	b289      	uxth	r1, r1
 8012a88:	fb93 f3f6 	sdiv	r3, r3, r6
 8012a8c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a90:	f006 bd90 	b.w	80195b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012a94:	2000      	movs	r0, #0
 8012a96:	e7eb      	b.n	8012a70 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 8012a98:	dd39      	ble.n	8012b0e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8012a9a:	fb99 f4f6 	sdiv	r4, r9, r6
 8012a9e:	eba8 0100 	sub.w	r1, r8, r0
 8012aa2:	4623      	mov	r3, r4
 8012aa4:	4a1b      	ldr	r2, [pc, #108]	; (8012b14 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8012aa6:	b289      	uxth	r1, r1
 8012aa8:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8012aac:	f006 fd82 	bl	80195b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012ab0:	4628      	mov	r0, r5
 8012ab2:	f006 fa0b 	bl	8018ecc <_ZN8touchgfx7Unicode6strlenEPKt>
 8012ab6:	f108 38ff 	add.w	r8, r8, #4294967295
 8012aba:	4580      	cmp	r8, r0
 8012abc:	dd27      	ble.n	8012b0e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8012abe:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 8012ac2:	fb06 9314 	mls	r3, r6, r4, r9
 8012ac6:	3001      	adds	r0, #1
 8012ac8:	2200      	movs	r2, #0
 8012aca:	f04f 090a 	mov.w	r9, #10
 8012ace:	f107 3aff 	add.w	sl, r7, #4294967295
 8012ad2:	f04f 0e02 	mov.w	lr, #2
 8012ad6:	fb96 fefe 	sdiv	lr, r6, lr
 8012ada:	4580      	cmp	r8, r0
 8012adc:	4684      	mov	ip, r0
 8012ade:	dd13      	ble.n	8012b08 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 8012ae0:	fb09 f303 	mul.w	r3, r9, r3
 8012ae4:	4592      	cmp	sl, r2
 8012ae6:	f102 0201 	add.w	r2, r2, #1
 8012aea:	bf08      	it	eq
 8012aec:	4473      	addeq	r3, lr
 8012aee:	f100 0c01 	add.w	ip, r0, #1
 8012af2:	fb93 f4f6 	sdiv	r4, r3, r6
 8012af6:	4297      	cmp	r7, r2
 8012af8:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8012afc:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 8012b00:	fb06 3314 	mls	r3, r6, r4, r3
 8012b04:	4660      	mov	r0, ip
 8012b06:	d1e8      	bne.n	8012ada <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 8012b08:	2300      	movs	r3, #0
 8012b0a:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 8012b0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012b12:	bf00      	nop
 8012b14:	080289b8 	.word	0x080289b8

08012b18 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 8012b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b1c:	4698      	mov	r8, r3
 8012b1e:	b099      	sub	sp, #100	; 0x64
 8012b20:	681b      	ldr	r3, [r3, #0]
 8012b22:	4604      	mov	r4, r0
 8012b24:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8012b28:	4689      	mov	r9, r1
 8012b2a:	4640      	mov	r0, r8
 8012b2c:	9922      	ldr	r1, [sp, #136]	; 0x88
 8012b2e:	4617      	mov	r7, r2
 8012b30:	4798      	blx	r3
 8012b32:	ae18      	add	r6, sp, #96	; 0x60
 8012b34:	f846 0d28 	str.w	r0, [r6, #-40]!
 8012b38:	4630      	mov	r0, r6
 8012b3a:	f7fe ff8d 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012b3e:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 8012b42:	1ac0      	subs	r0, r0, r3
 8012b44:	b200      	sxth	r0, r0
 8012b46:	2800      	cmp	r0, #0
 8012b48:	f2c0 80c0 	blt.w	8012ccc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 8012b4c:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 8012b50:	441a      	add	r2, r3
 8012b52:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 8012b56:	1a9b      	subs	r3, r3, r2
 8012b58:	b21b      	sxth	r3, r3
 8012b5a:	4298      	cmp	r0, r3
 8012b5c:	f280 80b6 	bge.w	8012ccc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 8012b60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012b62:	9302      	str	r3, [sp, #8]
 8012b64:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8012b68:	9301      	str	r3, [sp, #4]
 8012b6a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 8012b6e:	9300      	str	r3, [sp, #0]
 8012b70:	4631      	mov	r1, r6
 8012b72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8012b74:	f8df a174 	ldr.w	sl, [pc, #372]	; 8012cec <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 8012b78:	2214      	movs	r2, #20
 8012b7a:	4620      	mov	r0, r4
 8012b7c:	f7ff ff66 	bl	8012a4c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8012b80:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012b84:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 8012b86:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012b8a:	683b      	ldr	r3, [r7, #0]
 8012b8c:	f040 80a1 	bne.w	8012cd2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 8012b90:	f8da 0000 	ldr.w	r0, [sl]
 8012b94:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8012b96:	f7f6 f94d 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8012b9a:	4632      	mov	r2, r6
 8012b9c:	4601      	mov	r1, r0
 8012b9e:	4638      	mov	r0, r7
 8012ba0:	47a8      	blx	r5
 8012ba2:	683b      	ldr	r3, [r7, #0]
 8012ba4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 8012ba6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 8012baa:	4605      	mov	r5, r0
 8012bac:	f8da 0000 	ldr.w	r0, [sl]
 8012bb0:	f7f6 f940 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8012bb4:	4632      	mov	r2, r6
 8012bb6:	4601      	mov	r1, r0
 8012bb8:	4638      	mov	r0, r7
 8012bba:	47d8      	blx	fp
 8012bbc:	683b      	ldr	r3, [r7, #0]
 8012bbe:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 8012bc0:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 8012bc4:	fb15 f500 	smulbb	r5, r5, r0
 8012bc8:	f8da 0000 	ldr.w	r0, [sl]
 8012bcc:	f7f6 f932 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8012bd0:	4632      	mov	r2, r6
 8012bd2:	4601      	mov	r1, r0
 8012bd4:	4638      	mov	r0, r7
 8012bd6:	47d8      	blx	fp
 8012bd8:	b2ad      	uxth	r5, r5
 8012bda:	4405      	add	r5, r0
 8012bdc:	b2ad      	uxth	r5, r5
 8012bde:	f8d8 3000 	ldr.w	r3, [r8]
 8012be2:	9922      	ldr	r1, [sp, #136]	; 0x88
 8012be4:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8012be8:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 8012bec:	4640      	mov	r0, r8
 8012bee:	4798      	blx	r3
 8012bf0:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 8012bf4:	f04f 0800 	mov.w	r8, #0
 8012bf8:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 8012bfc:	4658      	mov	r0, fp
 8012bfe:	f7fe ff2b 	bl	8011a58 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012c02:	4450      	add	r0, sl
 8012c04:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012c08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c0c:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 8012c10:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012c14:	f8ad 8014 	strh.w	r8, [sp, #20]
 8012c18:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012c1c:	ad05      	add	r5, sp, #20
 8012c1e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012c22:	f10d 0a1c 	add.w	sl, sp, #28
 8012c26:	e88a 0003 	stmia.w	sl, {r0, r1}
 8012c2a:	4649      	mov	r1, r9
 8012c2c:	4650      	mov	r0, sl
 8012c2e:	f7fd fc2f 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8012c32:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012c36:	4543      	cmp	r3, r8
 8012c38:	dd48      	ble.n	8012ccc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 8012c3a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012c3e:	4543      	cmp	r3, r8
 8012c40:	dd44      	ble.n	8012ccc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 8012c42:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8012c46:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012c4a:	1a9b      	subs	r3, r3, r2
 8012c4c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c50:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012c54:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8012c58:	1a9b      	subs	r3, r3, r2
 8012c5a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012c5e:	6823      	ldr	r3, [r4, #0]
 8012c60:	4620      	mov	r0, r4
 8012c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c64:	4629      	mov	r1, r5
 8012c66:	4798      	blx	r3
 8012c68:	4b1f      	ldr	r3, [pc, #124]	; (8012ce8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 8012c6a:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 8012c6e:	681b      	ldr	r3, [r3, #0]
 8012c70:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 8012c74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012c76:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 8012c7a:	785b      	ldrb	r3, [r3, #1]
 8012c7c:	920b      	str	r2, [sp, #44]	; 0x2c
 8012c7e:	f3c3 0001 	ubfx	r0, r3, #0, #2
 8012c82:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012c86:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012c8a:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 8012c8e:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 8012c92:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 8012c96:	9709      	str	r7, [sp, #36]	; 0x24
 8012c98:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012c9c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8012ca0:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 8012ca4:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 8012ca8:	f7fd fec0 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8012cac:	4b0f      	ldr	r3, [pc, #60]	; (8012cec <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 8012cae:	4604      	mov	r4, r0
 8012cb0:	4649      	mov	r1, r9
 8012cb2:	6818      	ldr	r0, [r3, #0]
 8012cb4:	f7f6 f8be 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8012cb8:	e9cd 6802 	strd	r6, r8, [sp, #8]
 8012cbc:	e9cd b000 	strd	fp, r0, [sp]
 8012cc0:	4653      	mov	r3, sl
 8012cc2:	e895 0006 	ldmia.w	r5, {r1, r2}
 8012cc6:	4620      	mov	r0, r4
 8012cc8:	f7f6 f866 	bl	8008d98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012ccc:	b019      	add	sp, #100	; 0x64
 8012cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012cd2:	f8da 0000 	ldr.w	r0, [sl]
 8012cd6:	699d      	ldr	r5, [r3, #24]
 8012cd8:	f7f6 f8ac 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8012cdc:	4632      	mov	r2, r6
 8012cde:	4601      	mov	r1, r0
 8012ce0:	4638      	mov	r0, r7
 8012ce2:	47a8      	blx	r5
 8012ce4:	4605      	mov	r5, r0
 8012ce6:	e77a      	b.n	8012bde <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 8012ce8:	2000dccc 	.word	0x2000dccc
 8012cec:	2000dcd8 	.word	0x2000dcd8

08012cf0 <_ZN8touchgfx15GraphScrollData5clearEv>:
 8012cf0:	b510      	push	{r4, lr}
 8012cf2:	4604      	mov	r4, r0
 8012cf4:	f7fe fd49 	bl	801178a <_ZN8touchgfx17AbstractDataGraph5clearEv>
 8012cf8:	2300      	movs	r3, #0
 8012cfa:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 8012cfe:	bd10      	pop	{r4, pc}

08012d00 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 8012d00:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8012d04:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 8012d08:	429a      	cmp	r2, r3
 8012d0a:	d101      	bne.n	8012d10 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 8012d0c:	f7fe bf6a 	b.w	8011be4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 8012d10:	4770      	bx	lr

08012d12 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 8012d12:	b538      	push	{r3, r4, r5, lr}
 8012d14:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 8012d18:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 8012d1c:	42a5      	cmp	r5, r4
 8012d1e:	da04      	bge.n	8012d2a <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 8012d20:	6803      	ldr	r3, [r0, #0]
 8012d22:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8012d26:	4798      	blx	r3
 8012d28:	bd38      	pop	{r3, r4, r5, pc}
 8012d2a:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012d2e:	4408      	add	r0, r1
 8012d30:	1b00      	subs	r0, r0, r4
 8012d32:	e7f9      	b.n	8012d28 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

08012d34 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 8012d34:	b570      	push	{r4, r5, r6, lr}
 8012d36:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 8012d3a:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 8012d3e:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8012d42:	4604      	mov	r4, r0
 8012d44:	1c6b      	adds	r3, r5, #1
 8012d46:	b21b      	sxth	r3, r3
 8012d48:	42ae      	cmp	r6, r5
 8012d4a:	bf08      	it	eq
 8012d4c:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 8012d50:	fb93 f0f2 	sdiv	r0, r3, r2
 8012d54:	fb02 3010 	mls	r0, r2, r0, r3
 8012d58:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8012d5c:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 8012d60:	4296      	cmp	r6, r2
 8012d62:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 8012d66:	d108      	bne.n	8012d7a <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 8012d68:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8012d6c:	f004 fc0b 	bl	8017586 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012d70:	4620      	mov	r0, r4
 8012d72:	f7fe ff37 	bl	8011be4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 8012d76:	4628      	mov	r0, r5
 8012d78:	bd70      	pop	{r4, r5, r6, pc}
 8012d7a:	4629      	mov	r1, r5
 8012d7c:	4620      	mov	r0, r4
 8012d7e:	f7fe ff09 	bl	8011b94 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8012d82:	e7f8      	b.n	8012d76 <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

08012d84 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012d84:	b508      	push	{r3, lr}
 8012d86:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8012d8a:	b10b      	cbz	r3, 8012d90 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 8012d8c:	f7f0 fc85 	bl	800369a <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d90:	bd08      	pop	{r3, pc}

08012d92 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8012d92:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012d96:	4770      	bx	lr

08012d98 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8012d98:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8012d9c:	4770      	bx	lr

08012d9e <_ZN8touchgfx13ScalableImageD1Ev>:
 8012d9e:	4770      	bx	lr

08012da0 <_ZN8touchgfx13ScalableImageD0Ev>:
 8012da0:	b510      	push	{r4, lr}
 8012da2:	212c      	movs	r1, #44	; 0x2c
 8012da4:	4604      	mov	r4, r0
 8012da6:	f012 fdca 	bl	802593e <_ZdlPvj>
 8012daa:	4620      	mov	r0, r4
 8012dac:	bd10      	pop	{r4, pc}

08012dae <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8012dae:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012db0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012db4:	2bff      	cmp	r3, #255	; 0xff
 8012db6:	4605      	mov	r5, r0
 8012db8:	d11e      	bne.n	8012df8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8012dba:	f101 0426 	add.w	r4, r1, #38	; 0x26
 8012dbe:	4621      	mov	r1, r4
 8012dc0:	4668      	mov	r0, sp
 8012dc2:	f006 fd19 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012dc6:	4620      	mov	r0, r4
 8012dc8:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 8012dcc:	f006 fcac 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012dd0:	4286      	cmp	r6, r0
 8012dd2:	d111      	bne.n	8012df8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8012dd4:	4621      	mov	r1, r4
 8012dd6:	a802      	add	r0, sp, #8
 8012dd8:	f006 fd0e 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012ddc:	4620      	mov	r0, r4
 8012dde:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012de2:	f006 fcd5 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012de6:	4286      	cmp	r6, r0
 8012de8:	d106      	bne.n	8012df8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8012dea:	4621      	mov	r1, r4
 8012dec:	4628      	mov	r0, r5
 8012dee:	f006 fd03 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012df2:	4628      	mov	r0, r5
 8012df4:	b004      	add	sp, #16
 8012df6:	bd70      	pop	{r4, r5, r6, pc}
 8012df8:	2300      	movs	r3, #0
 8012dfa:	802b      	strh	r3, [r5, #0]
 8012dfc:	806b      	strh	r3, [r5, #2]
 8012dfe:	80ab      	strh	r3, [r5, #4]
 8012e00:	80eb      	strh	r3, [r5, #6]
 8012e02:	e7f6      	b.n	8012df2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>

08012e04 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8012e04:	b538      	push	{r3, r4, r5, lr}
 8012e06:	2300      	movs	r3, #0
 8012e08:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012e0c:	8083      	strh	r3, [r0, #4]
 8012e0e:	80c3      	strh	r3, [r0, #6]
 8012e10:	8103      	strh	r3, [r0, #8]
 8012e12:	8143      	strh	r3, [r0, #10]
 8012e14:	8183      	strh	r3, [r0, #12]
 8012e16:	81c3      	strh	r3, [r0, #14]
 8012e18:	8203      	strh	r3, [r0, #16]
 8012e1a:	8243      	strh	r3, [r0, #18]
 8012e1c:	61c3      	str	r3, [r0, #28]
 8012e1e:	8403      	strh	r3, [r0, #32]
 8012e20:	8443      	strh	r3, [r0, #34]	; 0x22
 8012e22:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8012e26:	2501      	movs	r5, #1
 8012e28:	4b08      	ldr	r3, [pc, #32]	; (8012e4c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 8012e2a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 8012e2e:	6003      	str	r3, [r0, #0]
 8012e30:	880b      	ldrh	r3, [r1, #0]
 8012e32:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012e34:	23ff      	movs	r3, #255	; 0xff
 8012e36:	4604      	mov	r4, r0
 8012e38:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012e3c:	f000 ff4d 	bl	8013cda <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012e40:	4b03      	ldr	r3, [pc, #12]	; (8012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8012e42:	6023      	str	r3, [r4, #0]
 8012e44:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8012e48:	4620      	mov	r0, r4
 8012e4a:	bd38      	pop	{r3, r4, r5, pc}
 8012e4c:	08028c44 	.word	0x08028c44
 8012e50:	08028a64 	.word	0x08028a64

08012e54 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8012e54:	4603      	mov	r3, r0
 8012e56:	3026      	adds	r0, #38	; 0x26
 8012e58:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8012e5c:	b90b      	cbnz	r3, 8012e62 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8012e5e:	f004 bccb 	b.w	80177f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8012e62:	f004 bcd9 	b.w	8017818 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08012e68 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8012e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e6c:	4604      	mov	r4, r0
 8012e6e:	469b      	mov	fp, r3
 8012e70:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8012e74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012e78:	f9b1 6000 	ldrsh.w	r6, [r1]
 8012e7c:	8888      	ldrh	r0, [r1, #4]
 8012e7e:	b0b3      	sub	sp, #204	; 0xcc
 8012e80:	4430      	add	r0, r6
 8012e82:	b280      	uxth	r0, r0
 8012e84:	9206      	str	r2, [sp, #24]
 8012e86:	fa0f fe80 	sxth.w	lr, r0
 8012e8a:	2200      	movs	r2, #0
 8012e8c:	4596      	cmp	lr, r2
 8012e8e:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 8012e92:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 8012e96:	9211      	str	r2, [sp, #68]	; 0x44
 8012e98:	f340 811a 	ble.w	80130d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8012e9c:	45b4      	cmp	ip, r6
 8012e9e:	f340 8117 	ble.w	80130d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8012ea2:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012ea6:	88ca      	ldrh	r2, [r1, #6]
 8012ea8:	442a      	add	r2, r5
 8012eaa:	b292      	uxth	r2, r2
 8012eac:	b211      	sxth	r1, r2
 8012eae:	2900      	cmp	r1, #0
 8012eb0:	f340 810e 	ble.w	80130d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8012eb4:	42ab      	cmp	r3, r5
 8012eb6:	f340 810b 	ble.w	80130d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8012eba:	45f4      	cmp	ip, lr
 8012ebc:	bfb8      	it	lt
 8012ebe:	fa1f f08c 	uxthlt.w	r0, ip
 8012ec2:	428b      	cmp	r3, r1
 8012ec4:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012ec8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012ecc:	bfb8      	it	lt
 8012ece:	b29a      	uxthlt	r2, r3
 8012ed0:	1b80      	subs	r0, r0, r6
 8012ed2:	1b52      	subs	r2, r2, r5
 8012ed4:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8012ed8:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8012edc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8012ee0:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8012ee4:	ab11      	add	r3, sp, #68	; 0x44
 8012ee6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012eea:	6822      	ldr	r2, [r4, #0]
 8012eec:	9307      	str	r3, [sp, #28]
 8012eee:	ad13      	add	r5, sp, #76	; 0x4c
 8012ef0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8012ef2:	e885 0003 	stmia.w	r5, {r0, r1}
 8012ef6:	4629      	mov	r1, r5
 8012ef8:	4620      	mov	r0, r4
 8012efa:	4790      	blx	r2
 8012efc:	4621      	mov	r1, r4
 8012efe:	a815      	add	r0, sp, #84	; 0x54
 8012f00:	f004 fbdc 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f04:	a815      	add	r0, sp, #84	; 0x54
 8012f06:	f003 f9cd 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f0a:	9b07      	ldr	r3, [sp, #28]
 8012f0c:	1d26      	adds	r6, r4, #4
 8012f0e:	4618      	mov	r0, r3
 8012f10:	4631      	mov	r1, r6
 8012f12:	f003 fa0b 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f16:	4628      	mov	r0, r5
 8012f18:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8012f1c:	f003 f9c2 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f20:	4628      	mov	r0, r5
 8012f22:	f006 fced 	bl	8019900 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012f26:	9007      	str	r0, [sp, #28]
 8012f28:	2800      	cmp	r0, #0
 8012f2a:	f000 80ce 	beq.w	80130ca <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 8012f2e:	f8db 2000 	ldr.w	r2, [fp]
 8012f32:	9209      	str	r2, [sp, #36]	; 0x24
 8012f34:	f8db 2004 	ldr.w	r2, [fp, #4]
 8012f38:	920a      	str	r2, [sp, #40]	; 0x28
 8012f3a:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012f3e:	920b      	str	r2, [sp, #44]	; 0x2c
 8012f40:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012f44:	920c      	str	r2, [sp, #48]	; 0x30
 8012f46:	f8da 2000 	ldr.w	r2, [sl]
 8012f4a:	920d      	str	r2, [sp, #52]	; 0x34
 8012f4c:	f8da 2004 	ldr.w	r2, [sl, #4]
 8012f50:	920e      	str	r2, [sp, #56]	; 0x38
 8012f52:	f8da 2008 	ldr.w	r2, [sl, #8]
 8012f56:	920f      	str	r2, [sp, #60]	; 0x3c
 8012f58:	f8da 200c 	ldr.w	r2, [sl, #12]
 8012f5c:	9210      	str	r2, [sp, #64]	; 0x40
 8012f5e:	a90d      	add	r1, sp, #52	; 0x34
 8012f60:	4632      	mov	r2, r6
 8012f62:	a809      	add	r0, sp, #36	; 0x24
 8012f64:	f003 f9c6 	bl	80162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012f68:	4632      	mov	r2, r6
 8012f6a:	a90e      	add	r1, sp, #56	; 0x38
 8012f6c:	a80a      	add	r0, sp, #40	; 0x28
 8012f6e:	f003 f9c1 	bl	80162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012f72:	4632      	mov	r2, r6
 8012f74:	a90f      	add	r1, sp, #60	; 0x3c
 8012f76:	a80b      	add	r0, sp, #44	; 0x2c
 8012f78:	f003 f9bc 	bl	80162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012f7c:	4632      	mov	r2, r6
 8012f7e:	a910      	add	r1, sp, #64	; 0x40
 8012f80:	a80c      	add	r0, sp, #48	; 0x30
 8012f82:	f003 f9b7 	bl	80162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012f86:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8012f8a:	edd7 3a00 	vldr	s7, [r7]
 8012f8e:	ed97 5a01 	vldr	s10, [r7, #4]
 8012f92:	edd9 2a00 	vldr	s5, [r9]
 8012f96:	ed98 3a00 	vldr	s6, [r8]
 8012f9a:	ed99 4a01 	vldr	s8, [r9, #4]
 8012f9e:	edd8 4a01 	vldr	s9, [r8, #4]
 8012fa2:	edd9 5a02 	vldr	s11, [r9, #8]
 8012fa6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8012faa:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8012fae:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 8012fb2:	eef0 6a67 	vmov.f32	s13, s15
 8012fb6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8012fba:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 8012fbe:	eeb0 7a67 	vmov.f32	s14, s15
 8012fc2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8012fc6:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 8012fca:	eeb0 6a67 	vmov.f32	s12, s15
 8012fce:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012fd2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8012fd6:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 8012fda:	ee16 6a10 	vmov	r6, s12
 8012fde:	eeb0 6a67 	vmov.f32	s12, s15
 8012fe2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012fe6:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8012fea:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 8012fee:	ee16 0a10 	vmov	r0, s12
 8012ff2:	eeb0 6a67 	vmov.f32	s12, s15
 8012ff6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012ffa:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8012ffe:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 8013002:	ee16 1a10 	vmov	r1, s12
 8013006:	eeb0 6a67 	vmov.f32	s12, s15
 801300a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801300e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8013012:	ee16 2a10 	vmov	r2, s12
 8013016:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801301a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801301e:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8013022:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8013026:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801302a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801302e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8013032:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8013036:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801303a:	f8d8 b008 	ldr.w	fp, [r8, #8]
 801303e:	68ff      	ldr	r7, [r7, #12]
 8013040:	9624      	str	r6, [sp, #144]	; 0x90
 8013042:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 8013046:	922d      	str	r2, [sp, #180]	; 0xb4
 8013048:	4a23      	ldr	r2, [pc, #140]	; (80130d8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 801304a:	9b06      	ldr	r3, [sp, #24]
 801304c:	8812      	ldrh	r2, [r2, #0]
 801304e:	9317      	str	r3, [sp, #92]	; 0x5c
 8013050:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8013054:	9b07      	ldr	r3, [sp, #28]
 8013056:	9218      	str	r2, [sp, #96]	; 0x60
 8013058:	4628      	mov	r0, r5
 801305a:	9319      	str	r3, [sp, #100]	; 0x64
 801305c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8013060:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8013064:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8013068:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801306c:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8013070:	9731      	str	r7, [sp, #196]	; 0xc4
 8013072:	f006 fc75 	bl	8019960 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013076:	901a      	str	r0, [sp, #104]	; 0x68
 8013078:	4628      	mov	r0, r5
 801307a:	f006 fb55 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801307e:	901b      	str	r0, [sp, #108]	; 0x6c
 8013080:	4628      	mov	r0, r5
 8013082:	f006 fb85 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013086:	901c      	str	r0, [sp, #112]	; 0x70
 8013088:	4628      	mov	r0, r5
 801308a:	f006 fb4d 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801308e:	4b13      	ldr	r3, [pc, #76]	; (80130dc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 8013090:	901d      	str	r0, [sp, #116]	; 0x74
 8013092:	681b      	ldr	r3, [r3, #0]
 8013094:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013098:	b10a      	cbz	r2, 801309e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 801309a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801309c:	b905      	cbnz	r5, 80130a0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 801309e:	689d      	ldr	r5, [r3, #8]
 80130a0:	682b      	ldr	r3, [r5, #0]
 80130a2:	4620      	mov	r0, r4
 80130a4:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 80130a6:	f7ff fed5 	bl	8012e54 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 80130aa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80130ae:	9304      	str	r3, [sp, #16]
 80130b0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80130b4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80130b8:	ab13      	add	r3, sp, #76	; 0x4c
 80130ba:	9301      	str	r3, [sp, #4]
 80130bc:	ab15      	add	r3, sp, #84	; 0x54
 80130be:	9300      	str	r3, [sp, #0]
 80130c0:	aa1e      	add	r2, sp, #120	; 0x78
 80130c2:	ab19      	add	r3, sp, #100	; 0x64
 80130c4:	a917      	add	r1, sp, #92	; 0x5c
 80130c6:	4628      	mov	r0, r5
 80130c8:	47b0      	blx	r6
 80130ca:	b033      	add	sp, #204	; 0xcc
 80130cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130d0:	2300      	movs	r3, #0
 80130d2:	9312      	str	r3, [sp, #72]	; 0x48
 80130d4:	e706      	b.n	8012ee4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 80130d6:	bf00      	nop
 80130d8:	2000dc6e 	.word	0x2000dc6e
 80130dc:	2000dc74 	.word	0x2000dc74

080130e0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 80130e0:	b570      	push	{r4, r5, r6, lr}
 80130e2:	ed2d 8b04 	vpush	{d8-d9}
 80130e6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80130ea:	b098      	sub	sp, #96	; 0x60
 80130ec:	4604      	mov	r4, r0
 80130ee:	460e      	mov	r6, r1
 80130f0:	2b00      	cmp	r3, #0
 80130f2:	d065      	beq.n	80131c0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 80130f4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80130f8:	ed9f 8a38 	vldr	s16, [pc, #224]	; 80131dc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 80130fc:	ee09 3a10 	vmov	s18, r3
 8013100:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013104:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8013108:	ee08 3a90 	vmov	s17, r3
 801310c:	4628      	mov	r0, r5
 801310e:	4b34      	ldr	r3, [pc, #208]	; (80131e0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8013110:	930c      	str	r3, [sp, #48]	; 0x30
 8013112:	930d      	str	r3, [sp, #52]	; 0x34
 8013114:	930e      	str	r3, [sp, #56]	; 0x38
 8013116:	930f      	str	r3, [sp, #60]	; 0x3c
 8013118:	f006 fb06 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801311c:	ee07 0a90 	vmov	s15, r0
 8013120:	4628      	mov	r0, r5
 8013122:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 8013126:	f006 fb33 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801312a:	4b2e      	ldr	r3, [pc, #184]	; (80131e4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 801312c:	781b      	ldrb	r3, [r3, #0]
 801312e:	ee07 0a90 	vmov	s15, r0
 8013132:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8013136:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 801313a:	2b01      	cmp	r3, #1
 801313c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8013140:	ee39 9a08 	vadd.f32	s18, s18, s16
 8013144:	ee78 8a88 	vadd.f32	s17, s17, s16
 8013148:	eef0 7a48 	vmov.f32	s15, s16
 801314c:	d13c      	bne.n	80131c8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 801314e:	eef0 6a69 	vmov.f32	s13, s19
 8013152:	eeb0 6a47 	vmov.f32	s12, s14
 8013156:	eef0 5a47 	vmov.f32	s11, s14
 801315a:	ee19 3a90 	vmov	r3, s19
 801315e:	eeb0 7a48 	vmov.f32	s14, s16
 8013162:	eef0 9a48 	vmov.f32	s19, s16
 8013166:	9314      	str	r3, [sp, #80]	; 0x50
 8013168:	ab14      	add	r3, sp, #80	; 0x50
 801316a:	9303      	str	r3, [sp, #12]
 801316c:	ab10      	add	r3, sp, #64	; 0x40
 801316e:	9302      	str	r3, [sp, #8]
 8013170:	ab0c      	add	r3, sp, #48	; 0x30
 8013172:	9301      	str	r3, [sp, #4]
 8013174:	ab08      	add	r3, sp, #32
 8013176:	9300      	str	r3, [sp, #0]
 8013178:	2200      	movs	r2, #0
 801317a:	ab04      	add	r3, sp, #16
 801317c:	4631      	mov	r1, r6
 801317e:	4620      	mov	r0, r4
 8013180:	edcd 7a04 	vstr	s15, [sp, #16]
 8013184:	ed8d 9a05 	vstr	s18, [sp, #20]
 8013188:	ed8d 9a06 	vstr	s18, [sp, #24]
 801318c:	edcd 7a07 	vstr	s15, [sp, #28]
 8013190:	edcd 7a08 	vstr	s15, [sp, #32]
 8013194:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 8013198:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 801319c:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 80131a0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80131a4:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 80131a8:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 80131ac:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 80131b0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80131b4:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 80131b8:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 80131bc:	f7ff fe54 	bl	8012e68 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80131c0:	b018      	add	sp, #96	; 0x60
 80131c2:	ecbd 8b04 	vpop	{d8-d9}
 80131c6:	bd70      	pop	{r4, r5, r6, pc}
 80131c8:	eef0 6a47 	vmov.f32	s13, s14
 80131cc:	eef0 5a69 	vmov.f32	s11, s19
 80131d0:	eeb0 6a48 	vmov.f32	s12, s16
 80131d4:	ee18 3a10 	vmov	r3, s16
 80131d8:	e7c5      	b.n	8013166 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 80131da:	bf00      	nop
 80131dc:	00000000 	.word	0x00000000
 80131e0:	42c80000 	.word	0x42c80000
 80131e4:	2000dc6c 	.word	0x2000dc6c

080131e8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80131e8:	2000      	movs	r0, #0
 80131ea:	4770      	bx	lr

080131ec <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80131ec:	4b07      	ldr	r3, [pc, #28]	; (801320c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80131ee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80131f0:	881b      	ldrh	r3, [r3, #0]
 80131f2:	4293      	cmp	r3, r2
 80131f4:	bf81      	itttt	hi
 80131f6:	4b06      	ldrhi	r3, [pc, #24]	; (8013210 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80131f8:	681b      	ldrhi	r3, [r3, #0]
 80131fa:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80131fe:	7858      	ldrbhi	r0, [r3, #1]
 8013200:	bf8c      	ite	hi
 8013202:	f000 0003 	andhi.w	r0, r0, #3
 8013206:	2000      	movls	r0, #0
 8013208:	4770      	bx	lr
 801320a:	bf00      	nop
 801320c:	2000dcd0 	.word	0x2000dcd0
 8013210:	2000dccc 	.word	0x2000dccc

08013214 <_ZN8touchgfx8TextAreaD1Ev>:
 8013214:	4770      	bx	lr
	...

08013218 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801321c:	4b10      	ldr	r3, [pc, #64]	; (8013260 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801321e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013220:	881b      	ldrh	r3, [r3, #0]
 8013222:	428b      	cmp	r3, r1
 8013224:	4604      	mov	r4, r0
 8013226:	d918      	bls.n	801325a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013228:	6803      	ldr	r3, [r0, #0]
 801322a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801322c:	4b0d      	ldr	r3, [pc, #52]	; (8013264 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801322e:	6818      	ldr	r0, [r3, #0]
 8013230:	f7f5 fe00 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013234:	6823      	ldr	r3, [r4, #0]
 8013236:	4606      	mov	r6, r0
 8013238:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801323a:	4620      	mov	r0, r4
 801323c:	4798      	blx	r3
 801323e:	6823      	ldr	r3, [r4, #0]
 8013240:	4607      	mov	r7, r0
 8013242:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013246:	4620      	mov	r0, r4
 8013248:	4798      	blx	r3
 801324a:	463a      	mov	r2, r7
 801324c:	4603      	mov	r3, r0
 801324e:	4631      	mov	r1, r6
 8013250:	4620      	mov	r0, r4
 8013252:	46ac      	mov	ip, r5
 8013254:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013258:	4760      	bx	ip
 801325a:	2000      	movs	r0, #0
 801325c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013260:	2000dcd0 	.word	0x2000dcd0
 8013264:	2000dcd8 	.word	0x2000dcd8

08013268 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013268:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801326c:	4b17      	ldr	r3, [pc, #92]	; (80132cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801326e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013270:	881b      	ldrh	r3, [r3, #0]
 8013272:	428b      	cmp	r3, r1
 8013274:	4604      	mov	r4, r0
 8013276:	d926      	bls.n	80132c6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8013278:	4b15      	ldr	r3, [pc, #84]	; (80132d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801327a:	681b      	ldr	r3, [r3, #0]
 801327c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013280:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013284:	4b13      	ldr	r3, [pc, #76]	; (80132d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013286:	7855      	ldrb	r5, [r2, #1]
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801328e:	6833      	ldr	r3, [r6, #0]
 8013290:	69df      	ldr	r7, [r3, #28]
 8013292:	4b11      	ldr	r3, [pc, #68]	; (80132d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013294:	6818      	ldr	r0, [r3, #0]
 8013296:	f7f5 fdcd 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 801329a:	6823      	ldr	r3, [r4, #0]
 801329c:	4680      	mov	r8, r0
 801329e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132a0:	4620      	mov	r0, r4
 80132a2:	4798      	blx	r3
 80132a4:	6823      	ldr	r3, [r4, #0]
 80132a6:	4681      	mov	r9, r0
 80132a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80132ac:	4620      	mov	r0, r4
 80132ae:	4798      	blx	r3
 80132b0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80132b4:	9000      	str	r0, [sp, #0]
 80132b6:	464b      	mov	r3, r9
 80132b8:	4642      	mov	r2, r8
 80132ba:	4629      	mov	r1, r5
 80132bc:	4630      	mov	r0, r6
 80132be:	47b8      	blx	r7
 80132c0:	b003      	add	sp, #12
 80132c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80132c6:	2000      	movs	r0, #0
 80132c8:	e7fa      	b.n	80132c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80132ca:	bf00      	nop
 80132cc:	2000dcd0 	.word	0x2000dcd0
 80132d0:	2000dccc 	.word	0x2000dccc
 80132d4:	2000dcd4 	.word	0x2000dcd4
 80132d8:	2000dcd8 	.word	0x2000dcd8

080132dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80132dc:	b40e      	push	{r1, r2, r3}
 80132de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132e2:	4b2f      	ldr	r3, [pc, #188]	; (80133a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80132e4:	881a      	ldrh	r2, [r3, #0]
 80132e6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80132e8:	429a      	cmp	r2, r3
 80132ea:	b09d      	sub	sp, #116	; 0x74
 80132ec:	4604      	mov	r4, r0
 80132ee:	d954      	bls.n	801339a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80132f0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80133a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80132f4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80133a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80132f8:	aa26      	add	r2, sp, #152	; 0x98
 80132fa:	9202      	str	r2, [sp, #8]
 80132fc:	f8d9 2000 	ldr.w	r2, [r9]
 8013300:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013304:	f8d8 3000 	ldr.w	r3, [r8]
 8013308:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801330c:	682b      	ldr	r3, [r5, #0]
 801330e:	4628      	mov	r0, r5
 8013310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013312:	4798      	blx	r3
 8013314:	b207      	sxth	r7, r0
 8013316:	4606      	mov	r6, r0
 8013318:	a803      	add	r0, sp, #12
 801331a:	f004 fe73 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 801331e:	682b      	ldr	r3, [r5, #0]
 8013320:	4628      	mov	r0, r5
 8013322:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013324:	4798      	blx	r3
 8013326:	682b      	ldr	r3, [r5, #0]
 8013328:	4682      	mov	sl, r0
 801332a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801332c:	4628      	mov	r0, r5
 801332e:	4798      	blx	r3
 8013330:	4653      	mov	r3, sl
 8013332:	9000      	str	r0, [sp, #0]
 8013334:	9a02      	ldr	r2, [sp, #8]
 8013336:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013338:	a803      	add	r0, sp, #12
 801333a:	f004 febe 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801333e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013340:	f8d9 3000 	ldr.w	r3, [r9]
 8013344:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8013348:	8925      	ldrh	r5, [r4, #8]
 801334a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801334e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8013352:	eba5 050c 	sub.w	r5, r5, ip
 8013356:	784a      	ldrb	r2, [r1, #1]
 8013358:	f8d8 3000 	ldr.w	r3, [r8]
 801335c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8013360:	b22d      	sxth	r5, r5
 8013362:	9500      	str	r5, [sp, #0]
 8013364:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8013368:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801336c:	a803      	add	r0, sp, #12
 801336e:	f002 fcad 	bl	8015ccc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013372:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8013376:	18b9      	adds	r1, r7, r2
 8013378:	2900      	cmp	r1, #0
 801337a:	b203      	sxth	r3, r0
 801337c:	dd0b      	ble.n	8013396 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801337e:	3b01      	subs	r3, #1
 8013380:	fb13 f302 	smulbb	r3, r3, r2
 8013384:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013388:	b21f      	sxth	r7, r3
 801338a:	4638      	mov	r0, r7
 801338c:	b01d      	add	sp, #116	; 0x74
 801338e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013392:	b003      	add	sp, #12
 8013394:	4770      	bx	lr
 8013396:	2b00      	cmp	r3, #0
 8013398:	dcf7      	bgt.n	801338a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801339a:	2700      	movs	r7, #0
 801339c:	e7f5      	b.n	801338a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801339e:	bf00      	nop
 80133a0:	2000dcd0 	.word	0x2000dcd0
 80133a4:	2000dccc 	.word	0x2000dccc
 80133a8:	2000dcd4 	.word	0x2000dcd4

080133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80133ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133b0:	4bbb      	ldr	r3, [pc, #748]	; (80136a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 80133b2:	460c      	mov	r4, r1
 80133b4:	881b      	ldrh	r3, [r3, #0]
 80133b6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80133b8:	428b      	cmp	r3, r1
 80133ba:	b0a9      	sub	sp, #164	; 0xa4
 80133bc:	4681      	mov	r9, r0
 80133be:	d809      	bhi.n	80133d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80133c0:	2300      	movs	r3, #0
 80133c2:	f04f 32ff 	mov.w	r2, #4294967295
 80133c6:	e9c0 3200 	strd	r3, r2, [r0]
 80133ca:	6083      	str	r3, [r0, #8]
 80133cc:	4648      	mov	r0, r9
 80133ce:	b029      	add	sp, #164	; 0xa4
 80133d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133d4:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 80136a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80133d8:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 80136ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 80133dc:	f8db 3000 	ldr.w	r3, [fp]
 80133e0:	f8d8 0000 	ldr.w	r0, [r8]
 80133e4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80133e8:	4bae      	ldr	r3, [pc, #696]	; (80136a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80133ea:	681b      	ldr	r3, [r3, #0]
 80133ec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80133f0:	f7f5 fd20 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 80133f4:	682b      	ldr	r3, [r5, #0]
 80133f6:	4607      	mov	r7, r0
 80133f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133fa:	4628      	mov	r0, r5
 80133fc:	4798      	blx	r3
 80133fe:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 8013400:	f8cd 800c 	str.w	r8, [sp, #12]
 8013404:	4430      	add	r0, r6
 8013406:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 801340a:	b283      	uxth	r3, r0
 801340c:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 8013410:	9302      	str	r3, [sp, #8]
 8013412:	4650      	mov	r0, sl
 8013414:	2e00      	cmp	r6, #0
 8013416:	f040 8091 	bne.w	801353c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801341a:	f004 fdf3 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 801341e:	682b      	ldr	r3, [r5, #0]
 8013420:	4628      	mov	r0, r5
 8013422:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013424:	4798      	blx	r3
 8013426:	682b      	ldr	r3, [r5, #0]
 8013428:	9005      	str	r0, [sp, #20]
 801342a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801342c:	4628      	mov	r0, r5
 801342e:	4798      	blx	r3
 8013430:	6823      	ldr	r3, [r4, #0]
 8013432:	4680      	mov	r8, r0
 8013434:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013436:	4620      	mov	r0, r4
 8013438:	4798      	blx	r3
 801343a:	6822      	ldr	r2, [r4, #0]
 801343c:	9004      	str	r0, [sp, #16]
 801343e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8013442:	4620      	mov	r0, r4
 8013444:	4790      	blx	r2
 8013446:	9905      	ldr	r1, [sp, #20]
 8013448:	9b04      	ldr	r3, [sp, #16]
 801344a:	9001      	str	r0, [sp, #4]
 801344c:	9300      	str	r3, [sp, #0]
 801344e:	460a      	mov	r2, r1
 8013450:	4643      	mov	r3, r8
 8013452:	4639      	mov	r1, r7
 8013454:	4650      	mov	r0, sl
 8013456:	f004 fe45 	bl	80180e4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801345a:	4637      	mov	r7, r6
 801345c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801345e:	f8db 3000 	ldr.w	r3, [fp]
 8013462:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013466:	4629      	mov	r1, r5
 8013468:	785b      	ldrb	r3, [r3, #1]
 801346a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801346e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013472:	4650      	mov	r0, sl
 8013474:	f002 f97c 	bl	8015770 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013478:	4287      	cmp	r7, r0
 801347a:	bfb8      	it	lt
 801347c:	b207      	sxthlt	r7, r0
 801347e:	3601      	adds	r6, #1
 8013480:	4650      	mov	r0, sl
 8013482:	b2b6      	uxth	r6, r6
 8013484:	f004 fde5 	bl	8018052 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013488:	2800      	cmp	r0, #0
 801348a:	d0e7      	beq.n	801345c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 801348c:	9b02      	ldr	r3, [sp, #8]
 801348e:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 8013492:	fb13 f606 	smulbb	r6, r3, r6
 8013496:	eba6 0608 	sub.w	r6, r6, r8
 801349a:	b2b6      	uxth	r6, r6
 801349c:	fa0f f886 	sxth.w	r8, r6
 80134a0:	f1b8 0f00 	cmp.w	r8, #0
 80134a4:	dd06      	ble.n	80134b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 80134a6:	682b      	ldr	r3, [r5, #0]
 80134a8:	4628      	mov	r0, r5
 80134aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80134ac:	4798      	blx	r3
 80134ae:	4430      	add	r0, r6
 80134b0:	fa0f f880 	sxth.w	r8, r0
 80134b4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80134b8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80134bc:	6823      	ldr	r3, [r4, #0]
 80134be:	bf08      	it	eq
 80134c0:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 80134c4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80134c6:	bf18      	it	ne
 80134c8:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 80134cc:	4620      	mov	r0, r4
 80134ce:	4798      	blx	r3
 80134d0:	2801      	cmp	r0, #1
 80134d2:	b2ba      	uxth	r2, r7
 80134d4:	f000 80d1 	beq.w	801367a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 80134d8:	2802      	cmp	r0, #2
 80134da:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80134de:	f000 80d2 	beq.w	8013686 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 80134e2:	b21e      	sxth	r6, r3
 80134e4:	7a29      	ldrb	r1, [r5, #8]
 80134e6:	7a6d      	ldrb	r5, [r5, #9]
 80134e8:	1a76      	subs	r6, r6, r1
 80134ea:	4429      	add	r1, r5
 80134ec:	440a      	add	r2, r1
 80134ee:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 80134f2:	b2b3      	uxth	r3, r6
 80134f4:	b292      	uxth	r2, r2
 80134f6:	2902      	cmp	r1, #2
 80134f8:	b21f      	sxth	r7, r3
 80134fa:	b216      	sxth	r6, r2
 80134fc:	f000 80c6 	beq.w	801368c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 8013500:	2903      	cmp	r1, #3
 8013502:	f000 80d5 	beq.w	80136b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 8013506:	2901      	cmp	r1, #1
 8013508:	f040 80db 	bne.w	80136c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 801350c:	8923      	ldrh	r3, [r4, #8]
 801350e:	4632      	mov	r2, r6
 8013510:	eba3 0308 	sub.w	r3, r3, r8
 8013514:	4646      	mov	r6, r8
 8013516:	463d      	mov	r5, r7
 8013518:	4690      	mov	r8, r2
 801351a:	b21f      	sxth	r7, r3
 801351c:	9b03      	ldr	r3, [sp, #12]
 801351e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013520:	6818      	ldr	r0, [r3, #0]
 8013522:	f7f5 fc87 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013526:	f8a9 7000 	strh.w	r7, [r9]
 801352a:	f8a9 5002 	strh.w	r5, [r9, #2]
 801352e:	f8a9 6004 	strh.w	r6, [r9, #4]
 8013532:	f8a9 8006 	strh.w	r8, [r9, #6]
 8013536:	f8c9 0008 	str.w	r0, [r9, #8]
 801353a:	e747      	b.n	80133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801353c:	f004 fd62 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8013540:	682b      	ldr	r3, [r5, #0]
 8013542:	4628      	mov	r0, r5
 8013544:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013546:	4798      	blx	r3
 8013548:	682b      	ldr	r3, [r5, #0]
 801354a:	4606      	mov	r6, r0
 801354c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801354e:	4628      	mov	r0, r5
 8013550:	4798      	blx	r3
 8013552:	6823      	ldr	r3, [r4, #0]
 8013554:	4680      	mov	r8, r0
 8013556:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013558:	4620      	mov	r0, r4
 801355a:	4798      	blx	r3
 801355c:	6822      	ldr	r2, [r4, #0]
 801355e:	9004      	str	r0, [sp, #16]
 8013560:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8013564:	4620      	mov	r0, r4
 8013566:	4790      	blx	r2
 8013568:	9b04      	ldr	r3, [sp, #16]
 801356a:	9001      	str	r0, [sp, #4]
 801356c:	4632      	mov	r2, r6
 801356e:	9300      	str	r3, [sp, #0]
 8013570:	4639      	mov	r1, r7
 8013572:	4643      	mov	r3, r8
 8013574:	4650      	mov	r0, sl
 8013576:	f004 fdb5 	bl	80180e4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801357a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801357e:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8013582:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013584:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013588:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801358c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013590:	bf0a      	itet	eq
 8013592:	4642      	moveq	r2, r8
 8013594:	461a      	movne	r2, r3
 8013596:	4698      	moveq	r8, r3
 8013598:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801359c:	1ad2      	subs	r2, r2, r3
 801359e:	f8db 3000 	ldr.w	r3, [fp]
 80135a2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80135a6:	7859      	ldrb	r1, [r3, #1]
 80135a8:	f8cd a020 	str.w	sl, [sp, #32]
 80135ac:	2300      	movs	r3, #0
 80135ae:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80135b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80135b6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80135ba:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80135be:	950a      	str	r5, [sp, #40]	; 0x28
 80135c0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80135c4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80135c8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80135cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80135d0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80135d4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80135d8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80135dc:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80135e0:	b350      	cbz	r0, 8013638 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 80135e2:	682b      	ldr	r3, [r5, #0]
 80135e4:	4628      	mov	r0, r5
 80135e6:	695b      	ldr	r3, [r3, #20]
 80135e8:	4798      	blx	r3
 80135ea:	4607      	mov	r7, r0
 80135ec:	b320      	cbz	r0, 8013638 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 80135ee:	980a      	ldr	r0, [sp, #40]	; 0x28
 80135f0:	6803      	ldr	r3, [r0, #0]
 80135f2:	4639      	mov	r1, r7
 80135f4:	68db      	ldr	r3, [r3, #12]
 80135f6:	4798      	blx	r3
 80135f8:	4606      	mov	r6, r0
 80135fa:	b1e8      	cbz	r0, 8013638 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 80135fc:	7b43      	ldrb	r3, [r0, #13]
 80135fe:	7a82      	ldrb	r2, [r0, #10]
 8013600:	005b      	lsls	r3, r3, #1
 8013602:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013606:	4313      	orrs	r3, r2
 8013608:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801360c:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 8013610:	2b04      	cmp	r3, #4
 8013612:	d111      	bne.n	8013638 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 8013614:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013616:	6803      	ldr	r3, [r0, #0]
 8013618:	4632      	mov	r2, r6
 801361a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801361c:	4639      	mov	r1, r7
 801361e:	4798      	blx	r3
 8013620:	7b73      	ldrb	r3, [r6, #13]
 8013622:	005b      	lsls	r3, r3, #1
 8013624:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013628:	7ab3      	ldrb	r3, [r6, #10]
 801362a:	4313      	orrs	r3, r2
 801362c:	4418      	add	r0, r3
 801362e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013632:	4418      	add	r0, r3
 8013634:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8013638:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801363c:	2600      	movs	r6, #0
 801363e:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 8013642:	4637      	mov	r7, r6
 8013644:	45c3      	cmp	fp, r8
 8013646:	bfd4      	ite	le
 8013648:	2100      	movle	r1, #0
 801364a:	2101      	movgt	r1, #1
 801364c:	a807      	add	r0, sp, #28
 801364e:	f002 fa6e 	bl	8015b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8013652:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8013656:	429f      	cmp	r7, r3
 8013658:	bfb8      	it	lt
 801365a:	b21f      	sxthlt	r7, r3
 801365c:	9b02      	ldr	r3, [sp, #8]
 801365e:	eba8 0803 	sub.w	r8, r8, r3
 8013662:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8013666:	3601      	adds	r6, #1
 8013668:	b2b6      	uxth	r6, r6
 801366a:	fa0f f888 	sxth.w	r8, r8
 801366e:	2b00      	cmp	r3, #0
 8013670:	f43f af0c 	beq.w	801348c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 8013674:	45c2      	cmp	sl, r8
 8013676:	dbe5      	blt.n	8013644 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 8013678:	e708      	b.n	801348c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 801367a:	1bf6      	subs	r6, r6, r7
 801367c:	2702      	movs	r7, #2
 801367e:	fb96 f6f7 	sdiv	r6, r6, r7
 8013682:	b236      	sxth	r6, r6
 8013684:	e72e      	b.n	80134e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 8013686:	4413      	add	r3, r2
 8013688:	1af6      	subs	r6, r6, r3
 801368a:	e7fa      	b.n	8013682 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 801368c:	8925      	ldrh	r5, [r4, #8]
 801368e:	1aad      	subs	r5, r5, r2
 8013690:	1aed      	subs	r5, r5, r3
 8013692:	b22f      	sxth	r7, r5
 8013694:	8965      	ldrh	r5, [r4, #10]
 8013696:	eba5 0508 	sub.w	r5, r5, r8
 801369a:	b22d      	sxth	r5, r5
 801369c:	e73e      	b.n	801351c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 801369e:	bf00      	nop
 80136a0:	2000dcd0 	.word	0x2000dcd0
 80136a4:	2000dcd4 	.word	0x2000dcd4
 80136a8:	2000dccc 	.word	0x2000dccc
 80136ac:	2000dcd8 	.word	0x2000dcd8
 80136b0:	8965      	ldrh	r5, [r4, #10]
 80136b2:	1aad      	subs	r5, r5, r2
 80136b4:	1aed      	subs	r5, r5, r3
 80136b6:	4633      	mov	r3, r6
 80136b8:	b22d      	sxth	r5, r5
 80136ba:	4646      	mov	r6, r8
 80136bc:	2700      	movs	r7, #0
 80136be:	4698      	mov	r8, r3
 80136c0:	e72c      	b.n	801351c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 80136c2:	2500      	movs	r5, #0
 80136c4:	e72a      	b.n	801351c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 80136c6:	bf00      	nop

080136c8 <_ZN8touchgfx8TextAreaD0Ev>:
 80136c8:	b510      	push	{r4, lr}
 80136ca:	2148      	movs	r1, #72	; 0x48
 80136cc:	4604      	mov	r4, r0
 80136ce:	f012 f936 	bl	802593e <_ZdlPvj>
 80136d2:	4620      	mov	r0, r4
 80136d4:	bd10      	pop	{r4, pc}
	...

080136d8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80136d8:	b513      	push	{r0, r1, r4, lr}
 80136da:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80136de:	4604      	mov	r4, r0
 80136e0:	b1fb      	cbz	r3, 8013722 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80136e2:	4b16      	ldr	r3, [pc, #88]	; (801373c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80136e4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80136e6:	881b      	ldrh	r3, [r3, #0]
 80136e8:	428b      	cmp	r3, r1
 80136ea:	d91a      	bls.n	8013722 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80136ec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80136f0:	2b00      	cmp	r3, #0
 80136f2:	dd16      	ble.n	8013722 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80136f4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80136f8:	2b00      	cmp	r3, #0
 80136fa:	dd12      	ble.n	8013722 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80136fc:	4b10      	ldr	r3, [pc, #64]	; (8013740 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80136fe:	6818      	ldr	r0, [r3, #0]
 8013700:	f7f5 fb98 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013704:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013708:	6822      	ldr	r2, [r4, #0]
 801370a:	2b00      	cmp	r3, #0
 801370c:	db06      	blt.n	801371c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801370e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013712:	2b00      	cmp	r3, #0
 8013714:	db02      	blt.n	801371c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013716:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013718:	4298      	cmp	r0, r3
 801371a:	d004      	beq.n	8013726 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801371c:	6953      	ldr	r3, [r2, #20]
 801371e:	4620      	mov	r0, r4
 8013720:	4798      	blx	r3
 8013722:	b002      	add	sp, #8
 8013724:	bd10      	pop	{r4, pc}
 8013726:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801372a:	c903      	ldmia	r1, {r0, r1}
 801372c:	466b      	mov	r3, sp
 801372e:	e883 0003 	stmia.w	r3, {r0, r1}
 8013732:	6912      	ldr	r2, [r2, #16]
 8013734:	4619      	mov	r1, r3
 8013736:	4620      	mov	r0, r4
 8013738:	4790      	blx	r2
 801373a:	e7f2      	b.n	8013722 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801373c:	2000dcd0 	.word	0x2000dcd0
 8013740:	2000dcd8 	.word	0x2000dcd8

08013744 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013748:	4b44      	ldr	r3, [pc, #272]	; (801385c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801374a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801374c:	881b      	ldrh	r3, [r3, #0]
 801374e:	4293      	cmp	r3, r2
 8013750:	b08e      	sub	sp, #56	; 0x38
 8013752:	4604      	mov	r4, r0
 8013754:	d97e      	bls.n	8013854 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013756:	6808      	ldr	r0, [r1, #0]
 8013758:	4d41      	ldr	r5, [pc, #260]	; (8013860 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801375a:	6849      	ldr	r1, [r1, #4]
 801375c:	ab05      	add	r3, sp, #20
 801375e:	c303      	stmia	r3!, {r0, r1}
 8013760:	4611      	mov	r1, r2
 8013762:	6828      	ldr	r0, [r5, #0]
 8013764:	f7f5 fb66 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013768:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801376c:	2b00      	cmp	r3, #0
 801376e:	db11      	blt.n	8013794 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013770:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013774:	2b00      	cmp	r3, #0
 8013776:	db0d      	blt.n	8013794 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013778:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801377a:	4298      	cmp	r0, r3
 801377c:	d10a      	bne.n	8013794 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801377e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013782:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013786:	ab09      	add	r3, sp, #36	; 0x24
 8013788:	e883 0003 	stmia.w	r3, {r0, r1}
 801378c:	4619      	mov	r1, r3
 801378e:	a805      	add	r0, sp, #20
 8013790:	f7fc fe7e 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8013794:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013798:	2b00      	cmp	r3, #0
 801379a:	dd5b      	ble.n	8013854 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801379c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80137a0:	2b00      	cmp	r3, #0
 80137a2:	dd57      	ble.n	8013854 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137a4:	4f2f      	ldr	r7, [pc, #188]	; (8013864 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80137a6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80137a8:	683b      	ldr	r3, [r7, #0]
 80137aa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80137ae:	4b2e      	ldr	r3, [pc, #184]	; (8013868 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80137b0:	681b      	ldr	r3, [r3, #0]
 80137b2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80137b6:	2e00      	cmp	r6, #0
 80137b8:	d04c      	beq.n	8013854 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137ba:	6823      	ldr	r3, [r4, #0]
 80137bc:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80137c0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80137c2:	4620      	mov	r0, r4
 80137c4:	4798      	blx	r3
 80137c6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80137c8:	683b      	ldr	r3, [r7, #0]
 80137ca:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80137ce:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80137d2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80137d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80137d8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80137dc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80137e0:	785b      	ldrb	r3, [r3, #1]
 80137e2:	9609      	str	r6, [sp, #36]	; 0x24
 80137e4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80137e8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80137ec:	4b1f      	ldr	r3, [pc, #124]	; (801386c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80137ee:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80137f2:	681b      	ldr	r3, [r3, #0]
 80137f4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80137f8:	910b      	str	r1, [sp, #44]	; 0x2c
 80137fa:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80137fe:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8013802:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8013806:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801380a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801380e:	b10a      	cbz	r2, 8013814 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013810:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8013812:	b906      	cbnz	r6, 8013816 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8013814:	689e      	ldr	r6, [r3, #8]
 8013816:	af07      	add	r7, sp, #28
 8013818:	4621      	mov	r1, r4
 801381a:	4638      	mov	r0, r7
 801381c:	f003 ff4e 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013820:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013822:	6828      	ldr	r0, [r5, #0]
 8013824:	f7f5 fb06 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013828:	6823      	ldr	r3, [r4, #0]
 801382a:	4605      	mov	r5, r0
 801382c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801382e:	4620      	mov	r0, r4
 8013830:	4798      	blx	r3
 8013832:	6823      	ldr	r3, [r4, #0]
 8013834:	4680      	mov	r8, r0
 8013836:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801383a:	4620      	mov	r0, r4
 801383c:	4798      	blx	r3
 801383e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013842:	ab09      	add	r3, sp, #36	; 0x24
 8013844:	9300      	str	r3, [sp, #0]
 8013846:	9501      	str	r5, [sp, #4]
 8013848:	ab05      	add	r3, sp, #20
 801384a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801384e:	4630      	mov	r0, r6
 8013850:	f7f5 faa2 	bl	8008d98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013854:	b00e      	add	sp, #56	; 0x38
 8013856:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801385a:	bf00      	nop
 801385c:	2000dcd0 	.word	0x2000dcd0
 8013860:	2000dcd8 	.word	0x2000dcd8
 8013864:	2000dccc 	.word	0x2000dccc
 8013868:	2000dcd4 	.word	0x2000dcd4
 801386c:	2000dc74 	.word	0x2000dc74

08013870 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8013870:	b570      	push	{r4, r5, r6, lr}
 8013872:	6803      	ldr	r3, [r0, #0]
 8013874:	4604      	mov	r4, r0
 8013876:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013878:	4615      	mov	r5, r2
 801387a:	4798      	blx	r3
 801387c:	6823      	ldr	r3, [r4, #0]
 801387e:	4629      	mov	r1, r5
 8013880:	4620      	mov	r0, r4
 8013882:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013884:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013888:	4718      	bx	r3
	...

0801388c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801388c:	b538      	push	{r3, r4, r5, lr}
 801388e:	4b0e      	ldr	r3, [pc, #56]	; (80138c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013890:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013892:	881b      	ldrh	r3, [r3, #0]
 8013894:	429a      	cmp	r2, r3
 8013896:	4604      	mov	r4, r0
 8013898:	d214      	bcs.n	80138c4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801389a:	6803      	ldr	r3, [r0, #0]
 801389c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801389e:	4798      	blx	r3
 80138a0:	6823      	ldr	r3, [r4, #0]
 80138a2:	4605      	mov	r5, r0
 80138a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80138a6:	4620      	mov	r0, r4
 80138a8:	4798      	blx	r3
 80138aa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80138ae:	b22d      	sxth	r5, r5
 80138b0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80138b4:	4601      	mov	r1, r0
 80138b6:	bf06      	itte	eq
 80138b8:	4602      	moveq	r2, r0
 80138ba:	4629      	moveq	r1, r5
 80138bc:	462a      	movne	r2, r5
 80138be:	4620      	mov	r0, r4
 80138c0:	f7ff ffd6 	bl	8013870 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80138c4:	bd38      	pop	{r3, r4, r5, pc}
 80138c6:	bf00      	nop
 80138c8:	2000dcd0 	.word	0x2000dcd0

080138cc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80138cc:	b530      	push	{r4, r5, lr}
 80138ce:	888b      	ldrh	r3, [r1, #4]
 80138d0:	8583      	strh	r3, [r0, #44]	; 0x2c
 80138d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80138d6:	b085      	sub	sp, #20
 80138d8:	4604      	mov	r4, r0
 80138da:	b923      	cbnz	r3, 80138e6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80138dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80138e0:	b90b      	cbnz	r3, 80138e6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80138e2:	f7ff ffd3 	bl	801388c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80138e6:	6823      	ldr	r3, [r4, #0]
 80138e8:	466d      	mov	r5, sp
 80138ea:	4621      	mov	r1, r4
 80138ec:	4628      	mov	r0, r5
 80138ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80138f2:	4798      	blx	r3
 80138f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80138f8:	343c      	adds	r4, #60	; 0x3c
 80138fa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80138fe:	b005      	add	sp, #20
 8013900:	bd30      	pop	{r4, r5, pc}

08013902 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013902:	2300      	movs	r3, #0
 8013904:	8083      	strh	r3, [r0, #4]
 8013906:	80c3      	strh	r3, [r0, #6]
 8013908:	8003      	strh	r3, [r0, #0]
 801390a:	8043      	strh	r3, [r0, #2]
 801390c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013910:	2bff      	cmp	r3, #255	; 0xff
 8013912:	bf01      	itttt	eq
 8013914:	890b      	ldrheq	r3, [r1, #8]
 8013916:	8083      	strheq	r3, [r0, #4]
 8013918:	894b      	ldrheq	r3, [r1, #10]
 801391a:	80c3      	strheq	r3, [r0, #6]
 801391c:	4770      	bx	lr
	...

08013920 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013920:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013922:	4604      	mov	r4, r0
 8013924:	6808      	ldr	r0, [r1, #0]
 8013926:	6849      	ldr	r1, [r1, #4]
 8013928:	466b      	mov	r3, sp
 801392a:	c303      	stmia	r3!, {r0, r1}
 801392c:	6823      	ldr	r3, [r4, #0]
 801392e:	4669      	mov	r1, sp
 8013930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013932:	4620      	mov	r0, r4
 8013934:	4798      	blx	r3
 8013936:	4b08      	ldr	r3, [pc, #32]	; (8013958 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013938:	681b      	ldr	r3, [r3, #0]
 801393a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801393e:	b10a      	cbz	r2, 8013944 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013940:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013942:	b900      	cbnz	r0, 8013946 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013944:	6898      	ldr	r0, [r3, #8]
 8013946:	6803      	ldr	r3, [r0, #0]
 8013948:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801394a:	6a1d      	ldr	r5, [r3, #32]
 801394c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8013950:	4669      	mov	r1, sp
 8013952:	47a8      	blx	r5
 8013954:	b003      	add	sp, #12
 8013956:	bd30      	pop	{r4, r5, pc}
 8013958:	2000dc74 	.word	0x2000dc74

0801395c <_ZN8touchgfx3BoxD1Ev>:
 801395c:	4770      	bx	lr

0801395e <_ZN8touchgfx3BoxD0Ev>:
 801395e:	b510      	push	{r4, lr}
 8013960:	212c      	movs	r1, #44	; 0x2c
 8013962:	4604      	mov	r4, r0
 8013964:	f011 ffeb 	bl	802593e <_ZdlPvj>
 8013968:	4620      	mov	r0, r4
 801396a:	bd10      	pop	{r4, pc}

0801396c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801396c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013970:	b12a      	cbz	r2, 801397e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013972:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013976:	b112      	cbz	r2, 801397e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013978:	6803      	ldr	r3, [r0, #0]
 801397a:	695b      	ldr	r3, [r3, #20]
 801397c:	4718      	bx	r3
 801397e:	4770      	bx	lr

08013980 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013980:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013984:	4770      	bx	lr

08013986 <_ZN8touchgfx6ButtonD1Ev>:
 8013986:	4770      	bx	lr

08013988 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013988:	b570      	push	{r4, r5, r6, lr}
 801398a:	880b      	ldrh	r3, [r1, #0]
 801398c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801398e:	4605      	mov	r5, r0
 8013990:	8813      	ldrh	r3, [r2, #0]
 8013992:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013996:	4604      	mov	r4, r0
 8013998:	4628      	mov	r0, r5
 801399a:	f005 fec5 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801399e:	4606      	mov	r6, r0
 80139a0:	4628      	mov	r0, r5
 80139a2:	f005 fef5 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80139a6:	6823      	ldr	r3, [r4, #0]
 80139a8:	4605      	mov	r5, r0
 80139aa:	4631      	mov	r1, r6
 80139ac:	4620      	mov	r0, r4
 80139ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80139b0:	4798      	blx	r3
 80139b2:	6823      	ldr	r3, [r4, #0]
 80139b4:	4629      	mov	r1, r5
 80139b6:	4620      	mov	r0, r4
 80139b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80139ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80139be:	4718      	bx	r3

080139c0 <_ZN8touchgfx6ButtonD0Ev>:
 80139c0:	b510      	push	{r4, lr}
 80139c2:	2134      	movs	r1, #52	; 0x34
 80139c4:	4604      	mov	r4, r0
 80139c6:	f011 ffba 	bl	802593e <_ZdlPvj>
 80139ca:	4620      	mov	r0, r4
 80139cc:	bd10      	pop	{r4, pc}

080139ce <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80139ce:	b510      	push	{r4, lr}
 80139d0:	4604      	mov	r4, r0
 80139d2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80139d4:	b150      	cbz	r0, 80139ec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80139d6:	6803      	ldr	r3, [r0, #0]
 80139d8:	68db      	ldr	r3, [r3, #12]
 80139da:	4798      	blx	r3
 80139dc:	b130      	cbz	r0, 80139ec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80139de:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80139e0:	6803      	ldr	r3, [r0, #0]
 80139e2:	4621      	mov	r1, r4
 80139e4:	689b      	ldr	r3, [r3, #8]
 80139e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80139ea:	4718      	bx	r3
 80139ec:	bd10      	pop	{r4, pc}

080139ee <_ZNK8touchgfx6Button12getSolidRectEv>:
 80139ee:	b510      	push	{r4, lr}
 80139f0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80139f4:	2bff      	cmp	r3, #255	; 0xff
 80139f6:	4604      	mov	r4, r0
 80139f8:	d006      	beq.n	8013a08 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80139fa:	2300      	movs	r3, #0
 80139fc:	8003      	strh	r3, [r0, #0]
 80139fe:	8043      	strh	r3, [r0, #2]
 8013a00:	8083      	strh	r3, [r0, #4]
 8013a02:	80c3      	strh	r3, [r0, #6]
 8013a04:	4620      	mov	r0, r4
 8013a06:	bd10      	pop	{r4, pc}
 8013a08:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013a0c:	b11b      	cbz	r3, 8013a16 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013a0e:	3130      	adds	r1, #48	; 0x30
 8013a10:	f005 fef2 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a14:	e7f6      	b.n	8013a04 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013a16:	312e      	adds	r1, #46	; 0x2e
 8013a18:	e7fa      	b.n	8013a10 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013a1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a20:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013a24:	b08a      	sub	sp, #40	; 0x28
 8013a26:	4604      	mov	r4, r0
 8013a28:	4688      	mov	r8, r1
 8013a2a:	2b00      	cmp	r3, #0
 8013a2c:	d066      	beq.n	8013afc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013a2e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013a30:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013a34:	a805      	add	r0, sp, #20
 8013a36:	f005 fe77 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a3a:	4607      	mov	r7, r0
 8013a3c:	a805      	add	r0, sp, #20
 8013a3e:	f005 fea7 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a42:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013a46:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013a4a:	4432      	add	r2, r6
 8013a4c:	b292      	uxth	r2, r2
 8013a4e:	2300      	movs	r3, #0
 8013a50:	fa0f fc82 	sxth.w	ip, r2
 8013a54:	459c      	cmp	ip, r3
 8013a56:	9306      	str	r3, [sp, #24]
 8013a58:	dd52      	ble.n	8013b00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a5a:	42b7      	cmp	r7, r6
 8013a5c:	dd50      	ble.n	8013b00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a5e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013a62:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013a66:	442b      	add	r3, r5
 8013a68:	b29b      	uxth	r3, r3
 8013a6a:	b219      	sxth	r1, r3
 8013a6c:	2900      	cmp	r1, #0
 8013a6e:	dd47      	ble.n	8013b00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a70:	42a8      	cmp	r0, r5
 8013a72:	dd45      	ble.n	8013b00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013a74:	4567      	cmp	r7, ip
 8013a76:	bfb8      	it	lt
 8013a78:	b2ba      	uxthlt	r2, r7
 8013a7a:	4288      	cmp	r0, r1
 8013a7c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013a80:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013a84:	bfb8      	it	lt
 8013a86:	b283      	uxthlt	r3, r0
 8013a88:	1b92      	subs	r2, r2, r6
 8013a8a:	1b5b      	subs	r3, r3, r5
 8013a8c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013a90:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013a94:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013a98:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013a9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013aa0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013aa4:	429a      	cmp	r2, r3
 8013aa6:	d026      	beq.n	8013af6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013aa8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013aac:	2b00      	cmp	r3, #0
 8013aae:	dd22      	ble.n	8013af6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ab0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013ab4:	2b00      	cmp	r3, #0
 8013ab6:	dd1e      	ble.n	8013af6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ab8:	2300      	movs	r3, #0
 8013aba:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013abe:	6823      	ldr	r3, [r4, #0]
 8013ac0:	a908      	add	r1, sp, #32
 8013ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ac4:	4620      	mov	r0, r4
 8013ac6:	4798      	blx	r3
 8013ac8:	4b0f      	ldr	r3, [pc, #60]	; (8013b08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013aca:	681b      	ldr	r3, [r3, #0]
 8013acc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013ad0:	b10a      	cbz	r2, 8013ad6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013ad2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013ad4:	b900      	cbnz	r0, 8013ad8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013ad6:	6898      	ldr	r0, [r3, #8]
 8013ad8:	6801      	ldr	r1, [r0, #0]
 8013ada:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013ade:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013ae2:	2501      	movs	r5, #1
 8013ae4:	9502      	str	r5, [sp, #8]
 8013ae6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013aea:	9401      	str	r4, [sp, #4]
 8013aec:	ac06      	add	r4, sp, #24
 8013aee:	9400      	str	r4, [sp, #0]
 8013af0:	688c      	ldr	r4, [r1, #8]
 8013af2:	a905      	add	r1, sp, #20
 8013af4:	47a0      	blx	r4
 8013af6:	b00a      	add	sp, #40	; 0x28
 8013af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013afc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013afe:	e797      	b.n	8013a30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013b00:	2300      	movs	r3, #0
 8013b02:	9307      	str	r3, [sp, #28]
 8013b04:	e7ca      	b.n	8013a9c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013b06:	bf00      	nop
 8013b08:	2000dc74 	.word	0x2000dc74

08013b0c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013b0c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013b10:	b12a      	cbz	r2, 8013b1e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b12:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013b16:	b112      	cbz	r2, 8013b1e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b18:	6803      	ldr	r3, [r0, #0]
 8013b1a:	695b      	ldr	r3, [r3, #20]
 8013b1c:	4718      	bx	r3
 8013b1e:	4770      	bx	lr

08013b20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013b20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b24:	4b2f      	ldr	r3, [pc, #188]	; (8013be4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013b26:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013b28:	881b      	ldrh	r3, [r3, #0]
 8013b2a:	4293      	cmp	r3, r2
 8013b2c:	b08d      	sub	sp, #52	; 0x34
 8013b2e:	4604      	mov	r4, r0
 8013b30:	460f      	mov	r7, r1
 8013b32:	d954      	bls.n	8013bde <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013b34:	4b2c      	ldr	r3, [pc, #176]	; (8013be8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013b36:	6819      	ldr	r1, [r3, #0]
 8013b38:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013b3c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013b40:	4a2a      	ldr	r2, [pc, #168]	; (8013bec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013b42:	6812      	ldr	r2, [r2, #0]
 8013b44:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013b48:	2900      	cmp	r1, #0
 8013b4a:	d048      	beq.n	8013bde <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013b4c:	785a      	ldrb	r2, [r3, #1]
 8013b4e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013b52:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013b56:	4b26      	ldr	r3, [pc, #152]	; (8013bf0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013b58:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013b5c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013b60:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013b64:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013b66:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013b6a:	9107      	str	r1, [sp, #28]
 8013b6c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013b70:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013b74:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013b78:	681a      	ldr	r2, [r3, #0]
 8013b7a:	f88d 8020 	strb.w	r8, [sp, #32]
 8013b7e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 8013b82:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013b86:	9609      	str	r6, [sp, #36]	; 0x24
 8013b88:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013b8c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013b90:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013b94:	b10b      	cbz	r3, 8013b9a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013b96:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013b98:	b905      	cbnz	r5, 8013b9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013b9a:	6895      	ldr	r5, [r2, #8]
 8013b9c:	ae05      	add	r6, sp, #20
 8013b9e:	4621      	mov	r1, r4
 8013ba0:	4630      	mov	r0, r6
 8013ba2:	f003 fd8b 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013ba6:	4b13      	ldr	r3, [pc, #76]	; (8013bf4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013ba8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013baa:	6818      	ldr	r0, [r3, #0]
 8013bac:	f7f5 f942 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013bb0:	6823      	ldr	r3, [r4, #0]
 8013bb2:	4680      	mov	r8, r0
 8013bb4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013bb6:	4620      	mov	r0, r4
 8013bb8:	4798      	blx	r3
 8013bba:	6823      	ldr	r3, [r4, #0]
 8013bbc:	4681      	mov	r9, r0
 8013bbe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013bc2:	4620      	mov	r0, r4
 8013bc4:	4798      	blx	r3
 8013bc6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013bca:	ab07      	add	r3, sp, #28
 8013bcc:	9300      	str	r3, [sp, #0]
 8013bce:	f8cd 8004 	str.w	r8, [sp, #4]
 8013bd2:	463b      	mov	r3, r7
 8013bd4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013bd8:	4628      	mov	r0, r5
 8013bda:	f7f5 f8dd 	bl	8008d98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013bde:	b00d      	add	sp, #52	; 0x34
 8013be0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013be4:	2000dcd0 	.word	0x2000dcd0
 8013be8:	2000dccc 	.word	0x2000dccc
 8013bec:	2000dcd4 	.word	0x2000dcd4
 8013bf0:	2000dc74 	.word	0x2000dc74
 8013bf4:	2000dcd8 	.word	0x2000dcd8

08013bf8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 8013bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013bfc:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8013c00:	b0a0      	sub	sp, #128	; 0x80
 8013c02:	4604      	mov	r4, r0
 8013c04:	b193      	cbz	r3, 8013c2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013c06:	4b30      	ldr	r3, [pc, #192]	; (8013cc8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 8013c08:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013c0a:	881b      	ldrh	r3, [r3, #0]
 8013c0c:	428b      	cmp	r3, r1
 8013c0e:	d90d      	bls.n	8013c2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013c10:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013c14:	2b00      	cmp	r3, #0
 8013c16:	dd09      	ble.n	8013c2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013c18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013c1c:	2b00      	cmp	r3, #0
 8013c1e:	dd05      	ble.n	8013c2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013c20:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8013c24:	b12b      	cbz	r3, 8013c32 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 8013c26:	6803      	ldr	r3, [r0, #0]
 8013c28:	695b      	ldr	r3, [r3, #20]
 8013c2a:	4798      	blx	r3
 8013c2c:	b020      	add	sp, #128	; 0x80
 8013c2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c32:	4b26      	ldr	r3, [pc, #152]	; (8013ccc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 8013c34:	681b      	ldr	r3, [r3, #0]
 8013c36:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013c3a:	4b25      	ldr	r3, [pc, #148]	; (8013cd0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 8013c3c:	681b      	ldr	r3, [r3, #0]
 8013c3e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013c42:	4b24      	ldr	r3, [pc, #144]	; (8013cd4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 8013c44:	6818      	ldr	r0, [r3, #0]
 8013c46:	f7f5 f8f5 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013c4a:	4606      	mov	r6, r0
 8013c4c:	a807      	add	r0, sp, #28
 8013c4e:	f004 f9d9 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8013c52:	682b      	ldr	r3, [r5, #0]
 8013c54:	4628      	mov	r0, r5
 8013c56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013c58:	4798      	blx	r3
 8013c5a:	682b      	ldr	r3, [r5, #0]
 8013c5c:	4607      	mov	r7, r0
 8013c5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013c60:	4628      	mov	r0, r5
 8013c62:	4798      	blx	r3
 8013c64:	6823      	ldr	r3, [r4, #0]
 8013c66:	4605      	mov	r5, r0
 8013c68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013c6a:	4620      	mov	r0, r4
 8013c6c:	4798      	blx	r3
 8013c6e:	6823      	ldr	r3, [r4, #0]
 8013c70:	4680      	mov	r8, r0
 8013c72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013c76:	4620      	mov	r0, r4
 8013c78:	4798      	blx	r3
 8013c7a:	462b      	mov	r3, r5
 8013c7c:	e9cd 8000 	strd	r8, r0, [sp]
 8013c80:	463a      	mov	r2, r7
 8013c82:	a807      	add	r0, sp, #28
 8013c84:	4631      	mov	r1, r6
 8013c86:	f004 fa2d 	bl	80180e4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8013c8a:	a807      	add	r0, sp, #28
 8013c8c:	f004 fde6 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013c90:	280a      	cmp	r0, #10
 8013c92:	d103      	bne.n	8013c9c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 8013c94:	6823      	ldr	r3, [r4, #0]
 8013c96:	4620      	mov	r0, r4
 8013c98:	695b      	ldr	r3, [r3, #20]
 8013c9a:	e7c6      	b.n	8013c2a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 8013c9c:	a807      	add	r0, sp, #28
 8013c9e:	f004 fddd 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013ca2:	2800      	cmp	r0, #0
 8013ca4:	d1f4      	bne.n	8013c90 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 8013ca6:	ad04      	add	r5, sp, #16
 8013ca8:	4621      	mov	r1, r4
 8013caa:	4628      	mov	r0, r5
 8013cac:	f7ff fb7e 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8013cb0:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013cb4:	6822      	ldr	r2, [r4, #0]
 8013cb6:	ab02      	add	r3, sp, #8
 8013cb8:	e883 0003 	stmia.w	r3, {r0, r1}
 8013cbc:	6912      	ldr	r2, [r2, #16]
 8013cbe:	4619      	mov	r1, r3
 8013cc0:	4620      	mov	r0, r4
 8013cc2:	4790      	blx	r2
 8013cc4:	e7b2      	b.n	8013c2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8013cc6:	bf00      	nop
 8013cc8:	2000dcd0 	.word	0x2000dcd0
 8013ccc:	2000dccc 	.word	0x2000dccc
 8013cd0:	2000dcd4 	.word	0x2000dcd4
 8013cd4:	2000dcd8 	.word	0x2000dcd8

08013cd8 <_ZN8touchgfx5ImageD1Ev>:
 8013cd8:	4770      	bx	lr

08013cda <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013cda:	b570      	push	{r4, r5, r6, lr}
 8013cdc:	880b      	ldrh	r3, [r1, #0]
 8013cde:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013ce0:	4604      	mov	r4, r0
 8013ce2:	4608      	mov	r0, r1
 8013ce4:	460d      	mov	r5, r1
 8013ce6:	f005 fd1f 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013cea:	4606      	mov	r6, r0
 8013cec:	4628      	mov	r0, r5
 8013cee:	f005 fd4f 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013cf2:	6823      	ldr	r3, [r4, #0]
 8013cf4:	4605      	mov	r5, r0
 8013cf6:	4631      	mov	r1, r6
 8013cf8:	4620      	mov	r0, r4
 8013cfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013cfc:	4798      	blx	r3
 8013cfe:	6823      	ldr	r3, [r4, #0]
 8013d00:	4629      	mov	r1, r5
 8013d02:	4620      	mov	r0, r4
 8013d04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013d06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d0a:	4718      	bx	r3

08013d0c <_ZN8touchgfx5ImageD0Ev>:
 8013d0c:	b510      	push	{r4, lr}
 8013d0e:	212c      	movs	r1, #44	; 0x2c
 8013d10:	4604      	mov	r4, r0
 8013d12:	f011 fe14 	bl	802593e <_ZdlPvj>
 8013d16:	4620      	mov	r0, r4
 8013d18:	bd10      	pop	{r4, pc}

08013d1a <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013d1a:	b510      	push	{r4, lr}
 8013d1c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013d20:	2bff      	cmp	r3, #255	; 0xff
 8013d22:	4604      	mov	r4, r0
 8013d24:	d006      	beq.n	8013d34 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013d26:	2300      	movs	r3, #0
 8013d28:	8003      	strh	r3, [r0, #0]
 8013d2a:	8043      	strh	r3, [r0, #2]
 8013d2c:	8083      	strh	r3, [r0, #4]
 8013d2e:	80c3      	strh	r3, [r0, #6]
 8013d30:	4620      	mov	r0, r4
 8013d32:	bd10      	pop	{r4, pc}
 8013d34:	3126      	adds	r1, #38	; 0x26
 8013d36:	f005 fd5f 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013d3a:	e7f9      	b.n	8013d30 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013d3c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d40:	4604      	mov	r4, r0
 8013d42:	b088      	sub	sp, #32
 8013d44:	f854 3b26 	ldr.w	r3, [r4], #38
 8013d48:	2500      	movs	r5, #0
 8013d4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d4c:	460f      	mov	r7, r1
 8013d4e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013d52:	a904      	add	r1, sp, #16
 8013d54:	4606      	mov	r6, r0
 8013d56:	4798      	blx	r3
 8013d58:	4620      	mov	r0, r4
 8013d5a:	f005 fce5 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013d5e:	4680      	mov	r8, r0
 8013d60:	4620      	mov	r0, r4
 8013d62:	f005 fd15 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013d66:	9506      	str	r5, [sp, #24]
 8013d68:	ad06      	add	r5, sp, #24
 8013d6a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013d6e:	4639      	mov	r1, r7
 8013d70:	4628      	mov	r0, r5
 8013d72:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013d76:	f7fc fb8b 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8013d7a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013d7e:	2b00      	cmp	r3, #0
 8013d80:	dd19      	ble.n	8013db6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013d82:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013d86:	2b00      	cmp	r3, #0
 8013d88:	dd15      	ble.n	8013db6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013d8a:	4b0c      	ldr	r3, [pc, #48]	; (8013dbc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013d8c:	681b      	ldr	r3, [r3, #0]
 8013d8e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013d92:	b10a      	cbz	r2, 8013d98 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013d94:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013d96:	b900      	cbnz	r0, 8013d9a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013d98:	6898      	ldr	r0, [r3, #8]
 8013d9a:	6801      	ldr	r1, [r0, #0]
 8013d9c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013da0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013da4:	2701      	movs	r7, #1
 8013da6:	9702      	str	r7, [sp, #8]
 8013da8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013dac:	e9cd 5600 	strd	r5, r6, [sp]
 8013db0:	688d      	ldr	r5, [r1, #8]
 8013db2:	4621      	mov	r1, r4
 8013db4:	47a8      	blx	r5
 8013db6:	b008      	add	sp, #32
 8013db8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013dbc:	2000dc74 	.word	0x2000dc74

08013dc0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013dc0:	4770      	bx	lr

08013dc2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013dc2:	b510      	push	{r4, lr}
 8013dc4:	2148      	movs	r1, #72	; 0x48
 8013dc6:	4604      	mov	r4, r0
 8013dc8:	f011 fdb9 	bl	802593e <_ZdlPvj>
 8013dcc:	4620      	mov	r0, r4
 8013dce:	bd10      	pop	{r4, pc}

08013dd0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013dd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013dd4:	b08d      	sub	sp, #52	; 0x34
 8013dd6:	4604      	mov	r4, r0
 8013dd8:	4688      	mov	r8, r1
 8013dda:	f7ff fe1f 	bl	8013a1c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013dde:	4a4d      	ldr	r2, [pc, #308]	; (8013f14 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 8013de0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013de2:	8812      	ldrh	r2, [r2, #0]
 8013de4:	429a      	cmp	r2, r3
 8013de6:	f240 8081 	bls.w	8013eec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 8013dea:	4e4b      	ldr	r6, [pc, #300]	; (8013f18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 8013dec:	6832      	ldr	r2, [r6, #0]
 8013dee:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013df2:	4b4a      	ldr	r3, [pc, #296]	; (8013f1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 8013df4:	681b      	ldr	r3, [r3, #0]
 8013df6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8013dfa:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8013dfe:	2300      	movs	r3, #0
 8013e00:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8013e04:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8013e08:	2b03      	cmp	r3, #3
 8013e0a:	d811      	bhi.n	8013e30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013e0c:	e8df f003 	tbb	[pc, r3]
 8013e10:	71027102 	.word	0x71027102
 8013e14:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013e18:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013e1c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013e20:	1a9b      	subs	r3, r3, r2
 8013e22:	2002      	movs	r0, #2
 8013e24:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013e28:	fb93 f3f0 	sdiv	r3, r3, r0
 8013e2c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013e30:	ad03      	add	r5, sp, #12
 8013e32:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013e36:	f10d 0914 	add.w	r9, sp, #20
 8013e3a:	e889 0003 	stmia.w	r9, {r0, r1}
 8013e3e:	4641      	mov	r1, r8
 8013e40:	4648      	mov	r0, r9
 8013e42:	f7fc fb25 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8013e46:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013e4a:	2b00      	cmp	r3, #0
 8013e4c:	dd4e      	ble.n	8013eec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 8013e4e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013e52:	2b00      	cmp	r3, #0
 8013e54:	dd4a      	ble.n	8013eec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 8013e56:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013e5a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013e5e:	1a9b      	subs	r3, r3, r2
 8013e60:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013e64:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013e68:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013e6c:	1a9b      	subs	r3, r3, r2
 8013e6e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013e72:	6823      	ldr	r3, [r4, #0]
 8013e74:	4629      	mov	r1, r5
 8013e76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e78:	4620      	mov	r0, r4
 8013e7a:	4798      	blx	r3
 8013e7c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013e80:	2b00      	cmp	r3, #0
 8013e82:	d045      	beq.n	8013f10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 8013e84:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013e86:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013e88:	6833      	ldr	r3, [r6, #0]
 8013e8a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013e8e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013e92:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013e96:	785b      	ldrb	r3, [r3, #1]
 8013e98:	9209      	str	r2, [sp, #36]	; 0x24
 8013e9a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 8013e9e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013ea2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013ea6:	2300      	movs	r3, #0
 8013ea8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013eac:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013eb0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013eb4:	4b1a      	ldr	r3, [pc, #104]	; (8013f20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 8013eb6:	9707      	str	r7, [sp, #28]
 8013eb8:	681b      	ldr	r3, [r3, #0]
 8013eba:	f88d 6020 	strb.w	r6, [sp, #32]
 8013ebe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013ec2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013ec6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013eca:	b10a      	cbz	r2, 8013ed0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 8013ecc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013ece:	b904      	cbnz	r4, 8013ed2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013ed0:	689c      	ldr	r4, [r3, #8]
 8013ed2:	4b14      	ldr	r3, [pc, #80]	; (8013f24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 8013ed4:	6818      	ldr	r0, [r3, #0]
 8013ed6:	f7f4 ffad 	bl	8008e34 <_ZNK8touchgfx5Texts7getTextEt>
 8013eda:	ab07      	add	r3, sp, #28
 8013edc:	9001      	str	r0, [sp, #4]
 8013ede:	9300      	str	r3, [sp, #0]
 8013ee0:	e895 0006 	ldmia.w	r5, {r1, r2}
 8013ee4:	464b      	mov	r3, r9
 8013ee6:	4620      	mov	r0, r4
 8013ee8:	f7f4 ff56 	bl	8008d98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013eec:	b00d      	add	sp, #52	; 0x34
 8013eee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ef2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8013ef6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013efa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013efe:	1a9b      	subs	r3, r3, r2
 8013f00:	2002      	movs	r0, #2
 8013f02:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013f06:	fb93 f3f0 	sdiv	r3, r3, r0
 8013f0a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013f0e:	e78f      	b.n	8013e30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013f10:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013f12:	e7b8      	b.n	8013e86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 8013f14:	2000dcd0 	.word	0x2000dcd0
 8013f18:	2000dccc 	.word	0x2000dccc
 8013f1c:	2000dcd4 	.word	0x2000dcd4
 8013f20:	2000dc74 	.word	0x2000dc74
 8013f24:	2000dcd8 	.word	0x2000dcd8

08013f28 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013f28:	b510      	push	{r4, lr}
 8013f2a:	2101      	movs	r1, #1
 8013f2c:	4c13      	ldr	r4, [pc, #76]	; (8013f7c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013f2e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013f32:	2200      	movs	r2, #0
 8013f34:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013f38:	6004      	str	r4, [r0, #0]
 8013f3a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013f3e:	4c10      	ldr	r4, [pc, #64]	; (8013f80 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013f40:	8082      	strh	r2, [r0, #4]
 8013f42:	80c2      	strh	r2, [r0, #6]
 8013f44:	8102      	strh	r2, [r0, #8]
 8013f46:	8142      	strh	r2, [r0, #10]
 8013f48:	8182      	strh	r2, [r0, #12]
 8013f4a:	81c2      	strh	r2, [r0, #14]
 8013f4c:	8202      	strh	r2, [r0, #16]
 8013f4e:	8242      	strh	r2, [r0, #18]
 8013f50:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013f54:	61c2      	str	r2, [r0, #28]
 8013f56:	8402      	strh	r2, [r0, #32]
 8013f58:	8442      	strh	r2, [r0, #34]	; 0x22
 8013f5a:	6282      	str	r2, [r0, #40]	; 0x28
 8013f5c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013f60:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013f62:	8601      	strh	r1, [r0, #48]	; 0x30
 8013f64:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013f68:	6344      	str	r4, [r0, #52]	; 0x34
 8013f6a:	8701      	strh	r1, [r0, #56]	; 0x38
 8013f6c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013f70:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013f74:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 8013f78:	bd10      	pop	{r4, pc}
 8013f7a:	bf00      	nop
 8013f7c:	08028cb0 	.word	0x08028cb0
 8013f80:	08027304 	.word	0x08027304

08013f84 <_ZN8touchgfx7OutlineD1Ev>:
 8013f84:	4770      	bx	lr

08013f86 <_ZN8touchgfx7OutlineD0Ev>:
 8013f86:	b510      	push	{r4, lr}
 8013f88:	2130      	movs	r1, #48	; 0x30
 8013f8a:	4604      	mov	r4, r0
 8013f8c:	f011 fcd7 	bl	802593e <_ZdlPvj>
 8013f90:	4620      	mov	r0, r4
 8013f92:	bd10      	pop	{r4, pc}

08013f94 <_ZN8touchgfx7Outline5resetEv>:
 8013f94:	b510      	push	{r4, lr}
 8013f96:	4604      	mov	r4, r0
 8013f98:	f000 fe8c 	bl	8014cb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013f9c:	60e0      	str	r0, [r4, #12]
 8013f9e:	f000 fe8f 	bl	8014cc0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013fa2:	68e3      	ldr	r3, [r4, #12]
 8013fa4:	6123      	str	r3, [r4, #16]
 8013fa6:	08c0      	lsrs	r0, r0, #3
 8013fa8:	2200      	movs	r2, #0
 8013faa:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013fae:	3801      	subs	r0, #1
 8013fb0:	6060      	str	r0, [r4, #4]
 8013fb2:	60a2      	str	r2, [r4, #8]
 8013fb4:	8019      	strh	r1, [r3, #0]
 8013fb6:	8059      	strh	r1, [r3, #2]
 8013fb8:	809a      	strh	r2, [r3, #4]
 8013fba:	80da      	strh	r2, [r3, #6]
 8013fbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013fbe:	f023 0301 	bic.w	r3, r3, #1
 8013fc2:	f043 0302 	orr.w	r3, r3, #2
 8013fc6:	6263      	str	r3, [r4, #36]	; 0x24
 8013fc8:	bd10      	pop	{r4, pc}
	...

08013fcc <_ZN8touchgfx7OutlineC1Ev>:
 8013fcc:	b510      	push	{r4, lr}
 8013fce:	4b0a      	ldr	r3, [pc, #40]	; (8013ff8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013fd0:	6003      	str	r3, [r0, #0]
 8013fd2:	2300      	movs	r3, #0
 8013fd4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013fd8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013fdc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013fe0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8013fe4:	6243      	str	r3, [r0, #36]	; 0x24
 8013fe6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013fea:	4604      	mov	r4, r0
 8013fec:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013ff0:	f7ff ffd0 	bl	8013f94 <_ZN8touchgfx7Outline5resetEv>
 8013ff4:	4620      	mov	r0, r4
 8013ff6:	bd10      	pop	{r4, pc}
 8013ff8:	08028d24 	.word	0x08028d24

08013ffc <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014000:	b093      	sub	sp, #76	; 0x4c
 8014002:	1156      	asrs	r6, r2, #5
 8014004:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8014006:	9305      	str	r3, [sp, #20]
 8014008:	f004 051f 	and.w	r5, r4, #31
 801400c:	1153      	asrs	r3, r2, #5
 801400e:	9504      	str	r5, [sp, #16]
 8014010:	1165      	asrs	r5, r4, #5
 8014012:	9303      	str	r3, [sp, #12]
 8014014:	42ae      	cmp	r6, r5
 8014016:	ea4f 1364 	mov.w	r3, r4, asr #5
 801401a:	9306      	str	r3, [sp, #24]
 801401c:	f002 031f 	and.w	r3, r2, #31
 8014020:	f040 80f8 	bne.w	8014214 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8014024:	9c04      	ldr	r4, [sp, #16]
 8014026:	9a05      	ldr	r2, [sp, #20]
 8014028:	42a3      	cmp	r3, r4
 801402a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801402e:	6902      	ldr	r2, [r0, #16]
 8014030:	d125      	bne.n	801407e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8014032:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014036:	459e      	cmp	lr, r3
 8014038:	d103      	bne.n	8014042 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801403a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801403e:	429e      	cmp	r6, r3
 8014040:	d035      	beq.n	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014042:	88d1      	ldrh	r1, [r2, #6]
 8014044:	8893      	ldrh	r3, [r2, #4]
 8014046:	430b      	orrs	r3, r1
 8014048:	d010      	beq.n	801406c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801404a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801404e:	2b00      	cmp	r3, #0
 8014050:	db0c      	blt.n	801406c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014052:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014054:	428b      	cmp	r3, r1
 8014056:	da09      	bge.n	801406c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014058:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801405c:	428b      	cmp	r3, r1
 801405e:	bf38      	it	cc
 8014060:	3208      	addcc	r2, #8
 8014062:	f103 0301 	add.w	r3, r3, #1
 8014066:	bf38      	it	cc
 8014068:	6102      	strcc	r2, [r0, #16]
 801406a:	6083      	str	r3, [r0, #8]
 801406c:	6903      	ldr	r3, [r0, #16]
 801406e:	9a03      	ldr	r2, [sp, #12]
 8014070:	f8a3 e000 	strh.w	lr, [r3]
 8014074:	805a      	strh	r2, [r3, #2]
 8014076:	2200      	movs	r2, #0
 8014078:	809a      	strh	r2, [r3, #4]
 801407a:	80da      	strh	r2, [r3, #6]
 801407c:	e017      	b.n	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801407e:	9c05      	ldr	r4, [sp, #20]
 8014080:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8014084:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014088:	f004 041f 	and.w	r4, r4, #31
 801408c:	114e      	asrs	r6, r1, #5
 801408e:	9402      	str	r4, [sp, #8]
 8014090:	9c04      	ldr	r4, [sp, #16]
 8014092:	4576      	cmp	r6, lr
 8014094:	f001 0c1f 	and.w	ip, r1, #31
 8014098:	eba4 0403 	sub.w	r4, r4, r3
 801409c:	d10a      	bne.n	80140b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801409e:	9b02      	ldr	r3, [sp, #8]
 80140a0:	449c      	add	ip, r3
 80140a2:	44a0      	add	r8, r4
 80140a4:	fb04 a40c 	mla	r4, r4, ip, sl
 80140a8:	f8a2 8004 	strh.w	r8, [r2, #4]
 80140ac:	80d4      	strh	r4, [r2, #6]
 80140ae:	b013      	add	sp, #76	; 0x4c
 80140b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140b4:	9d05      	ldr	r5, [sp, #20]
 80140b6:	1a69      	subs	r1, r5, r1
 80140b8:	bf5b      	ittet	pl
 80140ba:	f1cc 0520 	rsbpl	r5, ip, #32
 80140be:	436c      	mulpl	r4, r5
 80140c0:	2500      	movmi	r5, #0
 80140c2:	2520      	movpl	r5, #32
 80140c4:	bf44      	itt	mi
 80140c6:	fb04 f40c 	mulmi.w	r4, r4, ip
 80140ca:	4249      	negmi	r1, r1
 80140cc:	9501      	str	r5, [sp, #4]
 80140ce:	9f01      	ldr	r7, [sp, #4]
 80140d0:	fb94 f5f1 	sdiv	r5, r4, r1
 80140d4:	fb01 4415 	mls	r4, r1, r5, r4
 80140d8:	bf54      	ite	pl
 80140da:	f04f 0901 	movpl.w	r9, #1
 80140de:	f04f 39ff 	movmi.w	r9, #4294967295
 80140e2:	2c00      	cmp	r4, #0
 80140e4:	bfb8      	it	lt
 80140e6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80140ea:	44bc      	add	ip, r7
 80140ec:	44a8      	add	r8, r5
 80140ee:	fb05 ac0c 	mla	ip, r5, ip, sl
 80140f2:	f8a2 8004 	strh.w	r8, [r2, #4]
 80140f6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80140fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80140fe:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014102:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014106:	bfb8      	it	lt
 8014108:	1864      	addlt	r4, r4, r1
 801410a:	ea58 0202 	orrs.w	r2, r8, r2
 801410e:	444e      	add	r6, r9
 8014110:	d011      	beq.n	8014136 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014112:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014116:	f1b8 0f00 	cmp.w	r8, #0
 801411a:	db0c      	blt.n	8014136 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801411c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801411e:	4590      	cmp	r8, r2
 8014120:	da09      	bge.n	8014136 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014122:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8014126:	4590      	cmp	r8, r2
 8014128:	bf3c      	itt	cc
 801412a:	f10c 0208 	addcc.w	r2, ip, #8
 801412e:	6102      	strcc	r2, [r0, #16]
 8014130:	f108 0201 	add.w	r2, r8, #1
 8014134:	6082      	str	r2, [r0, #8]
 8014136:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801413a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801413e:	f8ac 6000 	strh.w	r6, [ip]
 8014142:	2700      	movs	r7, #0
 8014144:	45b6      	cmp	lr, r6
 8014146:	f8ac 2002 	strh.w	r2, [ip, #2]
 801414a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801414e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014152:	442b      	add	r3, r5
 8014154:	d04d      	beq.n	80141f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8014156:	9f04      	ldr	r7, [sp, #16]
 8014158:	1aff      	subs	r7, r7, r3
 801415a:	443d      	add	r5, r7
 801415c:	016d      	lsls	r5, r5, #5
 801415e:	fb95 f8f1 	sdiv	r8, r5, r1
 8014162:	fb01 5518 	mls	r5, r1, r8, r5
 8014166:	2d00      	cmp	r5, #0
 8014168:	bfb8      	it	lt
 801416a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801416e:	f108 0701 	add.w	r7, r8, #1
 8014172:	bfb8      	it	lt
 8014174:	186d      	addlt	r5, r5, r1
 8014176:	1a64      	subs	r4, r4, r1
 8014178:	9703      	str	r7, [sp, #12]
 801417a:	f04f 0a00 	mov.w	sl, #0
 801417e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014182:	1964      	adds	r4, r4, r5
 8014184:	bf58      	it	pl
 8014186:	9f03      	ldrpl	r7, [sp, #12]
 8014188:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801418c:	bf48      	it	mi
 801418e:	4647      	movmi	r7, r8
 8014190:	44bb      	add	fp, r7
 8014192:	f8ac b004 	strh.w	fp, [ip, #4]
 8014196:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801419a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801419e:	f8ac b006 	strh.w	fp, [ip, #6]
 80141a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80141a6:	443b      	add	r3, r7
 80141a8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80141ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80141b0:	bf58      	it	pl
 80141b2:	1a64      	subpl	r4, r4, r1
 80141b4:	ea5b 0707 	orrs.w	r7, fp, r7
 80141b8:	444e      	add	r6, r9
 80141ba:	d011      	beq.n	80141e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80141bc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80141c0:	f1bb 0f00 	cmp.w	fp, #0
 80141c4:	db0c      	blt.n	80141e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80141c6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80141c8:	45bb      	cmp	fp, r7
 80141ca:	da09      	bge.n	80141e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80141cc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80141d0:	45bb      	cmp	fp, r7
 80141d2:	bf3c      	itt	cc
 80141d4:	f10c 0708 	addcc.w	r7, ip, #8
 80141d8:	6107      	strcc	r7, [r0, #16]
 80141da:	f10b 0701 	add.w	r7, fp, #1
 80141de:	6087      	str	r7, [r0, #8]
 80141e0:	6907      	ldr	r7, [r0, #16]
 80141e2:	45b6      	cmp	lr, r6
 80141e4:	803e      	strh	r6, [r7, #0]
 80141e6:	807a      	strh	r2, [r7, #2]
 80141e8:	f8a7 a004 	strh.w	sl, [r7, #4]
 80141ec:	f8a7 a006 	strh.w	sl, [r7, #6]
 80141f0:	d1c5      	bne.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80141f2:	9a04      	ldr	r2, [sp, #16]
 80141f4:	1ad3      	subs	r3, r2, r3
 80141f6:	6902      	ldr	r2, [r0, #16]
 80141f8:	8891      	ldrh	r1, [r2, #4]
 80141fa:	88d6      	ldrh	r6, [r2, #6]
 80141fc:	4419      	add	r1, r3
 80141fe:	8091      	strh	r1, [r2, #4]
 8014200:	9902      	ldr	r1, [sp, #8]
 8014202:	f101 0c20 	add.w	ip, r1, #32
 8014206:	9901      	ldr	r1, [sp, #4]
 8014208:	ebac 0c01 	sub.w	ip, ip, r1
 801420c:	fb03 630c 	mla	r3, r3, ip, r6
 8014210:	80d3      	strh	r3, [r2, #6]
 8014212:	e74c      	b.n	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014214:	9d05      	ldr	r5, [sp, #20]
 8014216:	1aa2      	subs	r2, r4, r2
 8014218:	eba5 0501 	sub.w	r5, r5, r1
 801421c:	9508      	str	r5, [sp, #32]
 801421e:	9202      	str	r2, [sp, #8]
 8014220:	f140 8128 	bpl.w	8014474 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8014224:	9a03      	ldr	r2, [sp, #12]
 8014226:	2a00      	cmp	r2, #0
 8014228:	f6ff af41 	blt.w	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801422c:	9a02      	ldr	r2, [sp, #8]
 801422e:	4252      	negs	r2, r2
 8014230:	9202      	str	r2, [sp, #8]
 8014232:	9a06      	ldr	r2, [sp, #24]
 8014234:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014238:	f04f 34ff 	mov.w	r4, #4294967295
 801423c:	9206      	str	r2, [sp, #24]
 801423e:	462a      	mov	r2, r5
 8014240:	940b      	str	r4, [sp, #44]	; 0x2c
 8014242:	435a      	muls	r2, r3
 8014244:	2400      	movs	r4, #0
 8014246:	9d02      	ldr	r5, [sp, #8]
 8014248:	9401      	str	r4, [sp, #4]
 801424a:	9c02      	ldr	r4, [sp, #8]
 801424c:	fb92 f4f4 	sdiv	r4, r2, r4
 8014250:	fb05 2214 	mls	r2, r5, r4, r2
 8014254:	2a00      	cmp	r2, #0
 8014256:	9207      	str	r2, [sp, #28]
 8014258:	bfbc      	itt	lt
 801425a:	1952      	addlt	r2, r2, r5
 801425c:	9207      	strlt	r2, [sp, #28]
 801425e:	9a01      	ldr	r2, [sp, #4]
 8014260:	6905      	ldr	r5, [r0, #16]
 8014262:	bfb8      	it	lt
 8014264:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014268:	eb04 0901 	add.w	r9, r4, r1
 801426c:	429a      	cmp	r2, r3
 801426e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8014272:	f040 8112 	bne.w	801449a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8014276:	f9b5 3000 	ldrsh.w	r3, [r5]
 801427a:	429e      	cmp	r6, r3
 801427c:	d104      	bne.n	8014288 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801427e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014282:	9a03      	ldr	r2, [sp, #12]
 8014284:	429a      	cmp	r2, r3
 8014286:	d01b      	beq.n	80142c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014288:	88ea      	ldrh	r2, [r5, #6]
 801428a:	88ab      	ldrh	r3, [r5, #4]
 801428c:	4313      	orrs	r3, r2
 801428e:	d010      	beq.n	80142b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014290:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014294:	2a00      	cmp	r2, #0
 8014296:	db0c      	blt.n	80142b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014298:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801429a:	429a      	cmp	r2, r3
 801429c:	da09      	bge.n	80142b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801429e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80142a2:	429a      	cmp	r2, r3
 80142a4:	bf38      	it	cc
 80142a6:	3508      	addcc	r5, #8
 80142a8:	f102 0201 	add.w	r2, r2, #1
 80142ac:	bf38      	it	cc
 80142ae:	6105      	strcc	r5, [r0, #16]
 80142b0:	6082      	str	r2, [r0, #8]
 80142b2:	6903      	ldr	r3, [r0, #16]
 80142b4:	9a03      	ldr	r2, [sp, #12]
 80142b6:	805a      	strh	r2, [r3, #2]
 80142b8:	2200      	movs	r2, #0
 80142ba:	801e      	strh	r6, [r3, #0]
 80142bc:	809a      	strh	r2, [r3, #4]
 80142be:	80da      	strh	r2, [r3, #6]
 80142c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142c2:	9a03      	ldr	r2, [sp, #12]
 80142c4:	6901      	ldr	r1, [r0, #16]
 80142c6:	441a      	add	r2, r3
 80142c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80142cc:	42b3      	cmp	r3, r6
 80142ce:	d103      	bne.n	80142d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80142d0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80142d4:	429a      	cmp	r2, r3
 80142d6:	d01a      	beq.n	801430e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80142d8:	88cc      	ldrh	r4, [r1, #6]
 80142da:	888b      	ldrh	r3, [r1, #4]
 80142dc:	4323      	orrs	r3, r4
 80142de:	d010      	beq.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80142e0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80142e4:	2c00      	cmp	r4, #0
 80142e6:	db0c      	blt.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80142e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80142ea:	429c      	cmp	r4, r3
 80142ec:	da09      	bge.n	8014302 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80142ee:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80142f2:	429c      	cmp	r4, r3
 80142f4:	bf38      	it	cc
 80142f6:	3108      	addcc	r1, #8
 80142f8:	f104 0401 	add.w	r4, r4, #1
 80142fc:	bf38      	it	cc
 80142fe:	6101      	strcc	r1, [r0, #16]
 8014300:	6084      	str	r4, [r0, #8]
 8014302:	6903      	ldr	r3, [r0, #16]
 8014304:	2100      	movs	r1, #0
 8014306:	801e      	strh	r6, [r3, #0]
 8014308:	805a      	strh	r2, [r3, #2]
 801430a:	8099      	strh	r1, [r3, #4]
 801430c:	80d9      	strh	r1, [r3, #6]
 801430e:	9b06      	ldr	r3, [sp, #24]
 8014310:	4293      	cmp	r3, r2
 8014312:	f000 8082 	beq.w	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8014316:	9b08      	ldr	r3, [sp, #32]
 8014318:	9c02      	ldr	r4, [sp, #8]
 801431a:	9902      	ldr	r1, [sp, #8]
 801431c:	015b      	lsls	r3, r3, #5
 801431e:	fb93 f1f1 	sdiv	r1, r3, r1
 8014322:	fb04 3311 	mls	r3, r4, r1, r3
 8014326:	2b00      	cmp	r3, #0
 8014328:	9103      	str	r1, [sp, #12]
 801432a:	9308      	str	r3, [sp, #32]
 801432c:	da04      	bge.n	8014338 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801432e:	1e4b      	subs	r3, r1, #1
 8014330:	9303      	str	r3, [sp, #12]
 8014332:	9b08      	ldr	r3, [sp, #32]
 8014334:	4423      	add	r3, r4
 8014336:	9308      	str	r3, [sp, #32]
 8014338:	9b07      	ldr	r3, [sp, #28]
 801433a:	9902      	ldr	r1, [sp, #8]
 801433c:	1a5b      	subs	r3, r3, r1
 801433e:	9307      	str	r3, [sp, #28]
 8014340:	9b01      	ldr	r3, [sp, #4]
 8014342:	f1c3 0320 	rsb	r3, r3, #32
 8014346:	930e      	str	r3, [sp, #56]	; 0x38
 8014348:	990e      	ldr	r1, [sp, #56]	; 0x38
 801434a:	9b01      	ldr	r3, [sp, #4]
 801434c:	1a5b      	subs	r3, r3, r1
 801434e:	464f      	mov	r7, r9
 8014350:	930a      	str	r3, [sp, #40]	; 0x28
 8014352:	2600      	movs	r6, #0
 8014354:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014358:	185b      	adds	r3, r3, r1
 801435a:	bf58      	it	pl
 801435c:	9902      	ldrpl	r1, [sp, #8]
 801435e:	9307      	str	r3, [sp, #28]
 8014360:	bf5d      	ittte	pl
 8014362:	1a5b      	subpl	r3, r3, r1
 8014364:	9307      	strpl	r3, [sp, #28]
 8014366:	9b03      	ldrpl	r3, [sp, #12]
 8014368:	9903      	ldrmi	r1, [sp, #12]
 801436a:	bf58      	it	pl
 801436c:	1c59      	addpl	r1, r3, #1
 801436e:	4489      	add	r9, r1
 8014370:	2a00      	cmp	r2, #0
 8014372:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8014376:	db2e      	blt.n	80143d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014378:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801437a:	4293      	cmp	r3, r2
 801437c:	dd2b      	ble.n	80143d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801437e:	9c01      	ldr	r4, [sp, #4]
 8014380:	6905      	ldr	r5, [r0, #16]
 8014382:	46a0      	mov	r8, r4
 8014384:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014386:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801438a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801438e:	45a0      	cmp	r8, r4
 8014390:	f040 814f 	bne.w	8014632 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8014394:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014398:	4551      	cmp	r1, sl
 801439a:	d103      	bne.n	80143a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 801439c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80143a0:	4291      	cmp	r1, r2
 80143a2:	d018      	beq.n	80143d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80143a4:	ea5c 010e 	orrs.w	r1, ip, lr
 80143a8:	d00f      	beq.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80143aa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80143ae:	2900      	cmp	r1, #0
 80143b0:	db0b      	blt.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80143b2:	428b      	cmp	r3, r1
 80143b4:	dd09      	ble.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80143b6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80143ba:	4299      	cmp	r1, r3
 80143bc:	bf38      	it	cc
 80143be:	3508      	addcc	r5, #8
 80143c0:	f101 0101 	add.w	r1, r1, #1
 80143c4:	bf38      	it	cc
 80143c6:	6105      	strcc	r5, [r0, #16]
 80143c8:	6081      	str	r1, [r0, #8]
 80143ca:	6903      	ldr	r3, [r0, #16]
 80143cc:	f8a3 a000 	strh.w	sl, [r3]
 80143d0:	805a      	strh	r2, [r3, #2]
 80143d2:	809e      	strh	r6, [r3, #4]
 80143d4:	80de      	strh	r6, [r3, #6]
 80143d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80143d8:	6901      	ldr	r1, [r0, #16]
 80143da:	441a      	add	r2, r3
 80143dc:	88cc      	ldrh	r4, [r1, #6]
 80143de:	888b      	ldrh	r3, [r1, #4]
 80143e0:	4323      	orrs	r3, r4
 80143e2:	d010      	beq.n	8014406 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80143e4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80143e8:	2c00      	cmp	r4, #0
 80143ea:	db0c      	blt.n	8014406 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80143ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80143ee:	429c      	cmp	r4, r3
 80143f0:	da09      	bge.n	8014406 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80143f2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80143f6:	429c      	cmp	r4, r3
 80143f8:	bf38      	it	cc
 80143fa:	3108      	addcc	r1, #8
 80143fc:	f104 0401 	add.w	r4, r4, #1
 8014400:	bf38      	it	cc
 8014402:	6101      	strcc	r1, [r0, #16]
 8014404:	6084      	str	r4, [r0, #8]
 8014406:	6903      	ldr	r3, [r0, #16]
 8014408:	f8a3 a000 	strh.w	sl, [r3]
 801440c:	805a      	strh	r2, [r3, #2]
 801440e:	809e      	strh	r6, [r3, #4]
 8014410:	80de      	strh	r6, [r3, #6]
 8014412:	9b06      	ldr	r3, [sp, #24]
 8014414:	4293      	cmp	r3, r2
 8014416:	464f      	mov	r7, r9
 8014418:	d19c      	bne.n	8014354 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801441a:	9b01      	ldr	r3, [sp, #4]
 801441c:	6907      	ldr	r7, [r0, #16]
 801441e:	f1c3 0620 	rsb	r6, r3, #32
 8014422:	9b05      	ldr	r3, [sp, #20]
 8014424:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014428:	9b04      	ldr	r3, [sp, #16]
 801442a:	429e      	cmp	r6, r3
 801442c:	f040 81cc 	bne.w	80147c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014430:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014434:	459e      	cmp	lr, r3
 8014436:	d104      	bne.n	8014442 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014438:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801443c:	429a      	cmp	r2, r3
 801443e:	f43f ae36 	beq.w	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014442:	88f9      	ldrh	r1, [r7, #6]
 8014444:	88bb      	ldrh	r3, [r7, #4]
 8014446:	430b      	orrs	r3, r1
 8014448:	d010      	beq.n	801446c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801444a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801444e:	2b00      	cmp	r3, #0
 8014450:	db0c      	blt.n	801446c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014452:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014454:	428b      	cmp	r3, r1
 8014456:	da09      	bge.n	801446c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014458:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801445c:	428b      	cmp	r3, r1
 801445e:	bf38      	it	cc
 8014460:	3708      	addcc	r7, #8
 8014462:	f103 0301 	add.w	r3, r3, #1
 8014466:	bf38      	it	cc
 8014468:	6107      	strcc	r7, [r0, #16]
 801446a:	6083      	str	r3, [r0, #8]
 801446c:	6903      	ldr	r3, [r0, #16]
 801446e:	f8a3 e000 	strh.w	lr, [r3]
 8014472:	e5ff      	b.n	8014074 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014474:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014476:	9c03      	ldr	r4, [sp, #12]
 8014478:	42a2      	cmp	r2, r4
 801447a:	f6ff ae18 	blt.w	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801447e:	9c06      	ldr	r4, [sp, #24]
 8014480:	42a2      	cmp	r2, r4
 8014482:	bfb8      	it	lt
 8014484:	3201      	addlt	r2, #1
 8014486:	9c08      	ldr	r4, [sp, #32]
 8014488:	bfb8      	it	lt
 801448a:	9206      	strlt	r2, [sp, #24]
 801448c:	f1c3 0220 	rsb	r2, r3, #32
 8014490:	4362      	muls	r2, r4
 8014492:	2401      	movs	r4, #1
 8014494:	940b      	str	r4, [sp, #44]	; 0x2c
 8014496:	2420      	movs	r4, #32
 8014498:	e6d5      	b.n	8014246 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 801449a:	f009 021f 	and.w	r2, r9, #31
 801449e:	ea4f 1861 	mov.w	r8, r1, asr #5
 80144a2:	920c      	str	r2, [sp, #48]	; 0x30
 80144a4:	9a01      	ldr	r2, [sp, #4]
 80144a6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80144aa:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80144ae:	45b0      	cmp	r8, r6
 80144b0:	f001 011f 	and.w	r1, r1, #31
 80144b4:	eba2 0203 	sub.w	r2, r2, r3
 80144b8:	d108      	bne.n	80144cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80144ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80144bc:	4419      	add	r1, r3
 80144be:	4496      	add	lr, r2
 80144c0:	fb02 a101 	mla	r1, r2, r1, sl
 80144c4:	f8a5 e004 	strh.w	lr, [r5, #4]
 80144c8:	80e9      	strh	r1, [r5, #6]
 80144ca:	e6f9      	b.n	80142c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80144cc:	2c00      	cmp	r4, #0
 80144ce:	f2c0 80a9 	blt.w	8014624 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80144d2:	2701      	movs	r7, #1
 80144d4:	f1c1 0c20 	rsb	ip, r1, #32
 80144d8:	970a      	str	r7, [sp, #40]	; 0x28
 80144da:	fb02 f20c 	mul.w	r2, r2, ip
 80144de:	2720      	movs	r7, #32
 80144e0:	9709      	str	r7, [sp, #36]	; 0x24
 80144e2:	fb92 fcf4 	sdiv	ip, r2, r4
 80144e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80144e8:	fb04 221c 	mls	r2, r4, ip, r2
 80144ec:	2a00      	cmp	r2, #0
 80144ee:	bfb8      	it	lt
 80144f0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80144f4:	4439      	add	r1, r7
 80144f6:	fb0c a101 	mla	r1, ip, r1, sl
 80144fa:	80e9      	strh	r1, [r5, #6]
 80144fc:	44e6      	add	lr, ip
 80144fe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014500:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014504:	eb08 0501 	add.w	r5, r8, r1
 8014508:	6901      	ldr	r1, [r0, #16]
 801450a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801450e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014512:	bfb8      	it	lt
 8014514:	1912      	addlt	r2, r2, r4
 8014516:	ea58 070e 	orrs.w	r7, r8, lr
 801451a:	d010      	beq.n	801453e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801451c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014520:	f1be 0f00 	cmp.w	lr, #0
 8014524:	db0b      	blt.n	801453e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014526:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014528:	45be      	cmp	lr, r7
 801452a:	da08      	bge.n	801453e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801452c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014530:	45be      	cmp	lr, r7
 8014532:	bf3c      	itt	cc
 8014534:	3108      	addcc	r1, #8
 8014536:	6101      	strcc	r1, [r0, #16]
 8014538:	f10e 0101 	add.w	r1, lr, #1
 801453c:	6081      	str	r1, [r0, #8]
 801453e:	6901      	ldr	r1, [r0, #16]
 8014540:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014544:	800d      	strh	r5, [r1, #0]
 8014546:	f04f 0e00 	mov.w	lr, #0
 801454a:	42ae      	cmp	r6, r5
 801454c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014550:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014554:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014558:	4463      	add	r3, ip
 801455a:	d054      	beq.n	8014606 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801455c:	9901      	ldr	r1, [sp, #4]
 801455e:	1ac9      	subs	r1, r1, r3
 8014560:	4461      	add	r1, ip
 8014562:	0149      	lsls	r1, r1, #5
 8014564:	fb91 fef4 	sdiv	lr, r1, r4
 8014568:	fb04 111e 	mls	r1, r4, lr, r1
 801456c:	2900      	cmp	r1, #0
 801456e:	bfb8      	it	lt
 8014570:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014574:	f10e 0701 	add.w	r7, lr, #1
 8014578:	bfb8      	it	lt
 801457a:	1909      	addlt	r1, r1, r4
 801457c:	1b12      	subs	r2, r2, r4
 801457e:	970d      	str	r7, [sp, #52]	; 0x34
 8014580:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014584:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8014586:	f8ba b004 	ldrh.w	fp, [sl, #4]
 801458a:	1852      	adds	r2, r2, r1
 801458c:	bf54      	ite	pl
 801458e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8014592:	46f4      	movmi	ip, lr
 8014594:	44e3      	add	fp, ip
 8014596:	f8aa b004 	strh.w	fp, [sl, #4]
 801459a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801459e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80145a2:	f8aa b006 	strh.w	fp, [sl, #6]
 80145a6:	4463      	add	r3, ip
 80145a8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80145ac:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80145b0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80145b4:	bf58      	it	pl
 80145b6:	1b12      	subpl	r2, r2, r4
 80145b8:	443d      	add	r5, r7
 80145ba:	ea5b 070a 	orrs.w	r7, fp, sl
 80145be:	d014      	beq.n	80145ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80145c0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80145c4:	f1ba 0f00 	cmp.w	sl, #0
 80145c8:	db0f      	blt.n	80145ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80145ca:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80145cc:	45ba      	cmp	sl, r7
 80145ce:	da0c      	bge.n	80145ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80145d0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80145d4:	45ba      	cmp	sl, r7
 80145d6:	bf38      	it	cc
 80145d8:	f10c 0c08 	addcc.w	ip, ip, #8
 80145dc:	f10a 0a01 	add.w	sl, sl, #1
 80145e0:	bf38      	it	cc
 80145e2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80145e6:	f8c0 a008 	str.w	sl, [r0, #8]
 80145ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80145ee:	f04f 0700 	mov.w	r7, #0
 80145f2:	42ae      	cmp	r6, r5
 80145f4:	f8ac 5000 	strh.w	r5, [ip]
 80145f8:	f8ac 8002 	strh.w	r8, [ip, #2]
 80145fc:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014600:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014604:	d1bc      	bne.n	8014580 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014606:	6904      	ldr	r4, [r0, #16]
 8014608:	9a01      	ldr	r2, [sp, #4]
 801460a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801460c:	1ad3      	subs	r3, r2, r3
 801460e:	88a2      	ldrh	r2, [r4, #4]
 8014610:	441a      	add	r2, r3
 8014612:	80a2      	strh	r2, [r4, #4]
 8014614:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014616:	3120      	adds	r1, #32
 8014618:	1a89      	subs	r1, r1, r2
 801461a:	88e2      	ldrh	r2, [r4, #6]
 801461c:	fb03 2301 	mla	r3, r3, r1, r2
 8014620:	80e3      	strh	r3, [r4, #6]
 8014622:	e64d      	b.n	80142c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014624:	f04f 37ff 	mov.w	r7, #4294967295
 8014628:	970a      	str	r7, [sp, #40]	; 0x28
 801462a:	434a      	muls	r2, r1
 801462c:	4264      	negs	r4, r4
 801462e:	2700      	movs	r7, #0
 8014630:	e756      	b.n	80144e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014632:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014636:	f009 031f 	and.w	r3, r9, #31
 801463a:	45d0      	cmp	r8, sl
 801463c:	f007 071f 	and.w	r7, r7, #31
 8014640:	930f      	str	r3, [sp, #60]	; 0x3c
 8014642:	fa1f fc8c 	uxth.w	ip, ip
 8014646:	fa1f fe8e 	uxth.w	lr, lr
 801464a:	d10a      	bne.n	8014662 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 801464c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801464e:	449c      	add	ip, r3
 8014650:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014652:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014656:	441f      	add	r7, r3
 8014658:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801465a:	fb03 e707 	mla	r7, r3, r7, lr
 801465e:	80ef      	strh	r7, [r5, #6]
 8014660:	e6b9      	b.n	80143d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014662:	2900      	cmp	r1, #0
 8014664:	f2c0 80a8 	blt.w	80147b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014668:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801466a:	f1c7 0320 	rsb	r3, r7, #32
 801466e:	4363      	muls	r3, r4
 8014670:	2401      	movs	r4, #1
 8014672:	940d      	str	r4, [sp, #52]	; 0x34
 8014674:	2420      	movs	r4, #32
 8014676:	940c      	str	r4, [sp, #48]	; 0x30
 8014678:	fb93 f4f1 	sdiv	r4, r3, r1
 801467c:	fb01 3b14 	mls	fp, r1, r4, r3
 8014680:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014682:	f1bb 0f00 	cmp.w	fp, #0
 8014686:	bfb8      	it	lt
 8014688:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801468c:	441f      	add	r7, r3
 801468e:	fb04 e707 	mla	r7, r4, r7, lr
 8014692:	44a4      	add	ip, r4
 8014694:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014698:	80ef      	strh	r7, [r5, #6]
 801469a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801469e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146a0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80146a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80146a8:	bfb8      	it	lt
 80146aa:	448b      	addlt	fp, r1
 80146ac:	eb08 0503 	add.w	r5, r8, r3
 80146b0:	ea5e 0307 	orrs.w	r3, lr, r7
 80146b4:	d011      	beq.n	80146da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80146b6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80146ba:	f1be 0f00 	cmp.w	lr, #0
 80146be:	db0c      	blt.n	80146da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80146c0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80146c2:	45be      	cmp	lr, r7
 80146c4:	da09      	bge.n	80146da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80146c6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80146ca:	45be      	cmp	lr, r7
 80146cc:	bf3c      	itt	cc
 80146ce:	f10c 0708 	addcc.w	r7, ip, #8
 80146d2:	6107      	strcc	r7, [r0, #16]
 80146d4:	f10e 0701 	add.w	r7, lr, #1
 80146d8:	6087      	str	r7, [r0, #8]
 80146da:	6907      	ldr	r7, [r0, #16]
 80146dc:	b213      	sxth	r3, r2
 80146de:	9310      	str	r3, [sp, #64]	; 0x40
 80146e0:	807b      	strh	r3, [r7, #2]
 80146e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80146e4:	803d      	strh	r5, [r7, #0]
 80146e6:	4555      	cmp	r5, sl
 80146e8:	80be      	strh	r6, [r7, #4]
 80146ea:	80fe      	strh	r6, [r7, #6]
 80146ec:	eb04 0c03 	add.w	ip, r4, r3
 80146f0:	d051      	beq.n	8014796 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80146f2:	9b01      	ldr	r3, [sp, #4]
 80146f4:	eba3 070c 	sub.w	r7, r3, ip
 80146f8:	443c      	add	r4, r7
 80146fa:	0164      	lsls	r4, r4, #5
 80146fc:	fb94 f8f1 	sdiv	r8, r4, r1
 8014700:	fb01 4418 	mls	r4, r1, r8, r4
 8014704:	2c00      	cmp	r4, #0
 8014706:	bfb8      	it	lt
 8014708:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801470c:	ebab 0301 	sub.w	r3, fp, r1
 8014710:	f108 0701 	add.w	r7, r8, #1
 8014714:	bfb8      	it	lt
 8014716:	1864      	addlt	r4, r4, r1
 8014718:	9309      	str	r3, [sp, #36]	; 0x24
 801471a:	9711      	str	r7, [sp, #68]	; 0x44
 801471c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801471e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014722:	191b      	adds	r3, r3, r4
 8014724:	bf58      	it	pl
 8014726:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014728:	f8be b004 	ldrh.w	fp, [lr, #4]
 801472c:	9309      	str	r3, [sp, #36]	; 0x24
 801472e:	bf48      	it	mi
 8014730:	4647      	movmi	r7, r8
 8014732:	44bb      	add	fp, r7
 8014734:	f8ae b004 	strh.w	fp, [lr, #4]
 8014738:	f8be b006 	ldrh.w	fp, [lr, #6]
 801473c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014740:	f8ae b006 	strh.w	fp, [lr, #6]
 8014744:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014748:	44bc      	add	ip, r7
 801474a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801474c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014750:	443d      	add	r5, r7
 8014752:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014756:	bf5c      	itt	pl
 8014758:	1a5b      	subpl	r3, r3, r1
 801475a:	9309      	strpl	r3, [sp, #36]	; 0x24
 801475c:	ea5b 0307 	orrs.w	r3, fp, r7
 8014760:	d011      	beq.n	8014786 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014762:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014766:	f1bb 0f00 	cmp.w	fp, #0
 801476a:	db0c      	blt.n	8014786 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801476c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801476e:	45bb      	cmp	fp, r7
 8014770:	da09      	bge.n	8014786 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014772:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014776:	45bb      	cmp	fp, r7
 8014778:	bf3c      	itt	cc
 801477a:	f10e 0708 	addcc.w	r7, lr, #8
 801477e:	6107      	strcc	r7, [r0, #16]
 8014780:	f10b 0701 	add.w	r7, fp, #1
 8014784:	6087      	str	r7, [r0, #8]
 8014786:	6907      	ldr	r7, [r0, #16]
 8014788:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801478a:	803d      	strh	r5, [r7, #0]
 801478c:	4555      	cmp	r5, sl
 801478e:	807b      	strh	r3, [r7, #2]
 8014790:	80be      	strh	r6, [r7, #4]
 8014792:	80fe      	strh	r6, [r7, #6]
 8014794:	d1c2      	bne.n	801471c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014796:	9b01      	ldr	r3, [sp, #4]
 8014798:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801479a:	eba3 0c0c 	sub.w	ip, r3, ip
 801479e:	6903      	ldr	r3, [r0, #16]
 80147a0:	8899      	ldrh	r1, [r3, #4]
 80147a2:	4461      	add	r1, ip
 80147a4:	8099      	strh	r1, [r3, #4]
 80147a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80147a8:	3720      	adds	r7, #32
 80147aa:	1a7f      	subs	r7, r7, r1
 80147ac:	88d9      	ldrh	r1, [r3, #6]
 80147ae:	fb0c 1c07 	mla	ip, ip, r7, r1
 80147b2:	f8a3 c006 	strh.w	ip, [r3, #6]
 80147b6:	e60e      	b.n	80143d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80147b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147ba:	f04f 34ff 	mov.w	r4, #4294967295
 80147be:	940d      	str	r4, [sp, #52]	; 0x34
 80147c0:	437b      	muls	r3, r7
 80147c2:	4249      	negs	r1, r1
 80147c4:	2400      	movs	r4, #0
 80147c6:	e756      	b.n	8014676 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80147c8:	9905      	ldr	r1, [sp, #20]
 80147ca:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80147ce:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80147d2:	f001 011f 	and.w	r1, r1, #31
 80147d6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80147da:	9102      	str	r1, [sp, #8]
 80147dc:	9904      	ldr	r1, [sp, #16]
 80147de:	45f3      	cmp	fp, lr
 80147e0:	f009 0c1f 	and.w	ip, r9, #31
 80147e4:	eba1 0406 	sub.w	r4, r1, r6
 80147e8:	d108      	bne.n	80147fc <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80147ea:	9b02      	ldr	r3, [sp, #8]
 80147ec:	449c      	add	ip, r3
 80147ee:	44a0      	add	r8, r4
 80147f0:	fb04 a40c 	mla	r4, r4, ip, sl
 80147f4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80147f8:	80fc      	strh	r4, [r7, #6]
 80147fa:	e458      	b.n	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80147fc:	9905      	ldr	r1, [sp, #20]
 80147fe:	ebb1 0109 	subs.w	r1, r1, r9
 8014802:	bf5b      	ittet	pl
 8014804:	f1cc 0520 	rsbpl	r5, ip, #32
 8014808:	436c      	mulpl	r4, r5
 801480a:	2500      	movmi	r5, #0
 801480c:	2520      	movpl	r5, #32
 801480e:	bf44      	itt	mi
 8014810:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014814:	4249      	negmi	r1, r1
 8014816:	9501      	str	r5, [sp, #4]
 8014818:	9b01      	ldr	r3, [sp, #4]
 801481a:	fb94 f5f1 	sdiv	r5, r4, r1
 801481e:	fb01 4415 	mls	r4, r1, r5, r4
 8014822:	bf54      	ite	pl
 8014824:	f04f 0901 	movpl.w	r9, #1
 8014828:	f04f 39ff 	movmi.w	r9, #4294967295
 801482c:	2c00      	cmp	r4, #0
 801482e:	bfb8      	it	lt
 8014830:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014834:	449c      	add	ip, r3
 8014836:	44a8      	add	r8, r5
 8014838:	fb05 ac0c 	mla	ip, r5, ip, sl
 801483c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014840:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014844:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014848:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801484c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014850:	bfb8      	it	lt
 8014852:	1864      	addlt	r4, r4, r1
 8014854:	ea58 0707 	orrs.w	r7, r8, r7
 8014858:	eb0b 0309 	add.w	r3, fp, r9
 801485c:	d011      	beq.n	8014882 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801485e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014862:	f1b8 0f00 	cmp.w	r8, #0
 8014866:	db0c      	blt.n	8014882 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014868:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801486a:	45b8      	cmp	r8, r7
 801486c:	da09      	bge.n	8014882 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801486e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014872:	45b8      	cmp	r8, r7
 8014874:	bf3c      	itt	cc
 8014876:	f10c 0708 	addcc.w	r7, ip, #8
 801487a:	6107      	strcc	r7, [r0, #16]
 801487c:	f108 0701 	add.w	r7, r8, #1
 8014880:	6087      	str	r7, [r0, #8]
 8014882:	6907      	ldr	r7, [r0, #16]
 8014884:	f04f 0c00 	mov.w	ip, #0
 8014888:	b212      	sxth	r2, r2
 801488a:	459e      	cmp	lr, r3
 801488c:	803b      	strh	r3, [r7, #0]
 801488e:	807a      	strh	r2, [r7, #2]
 8014890:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014894:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014898:	442e      	add	r6, r5
 801489a:	d04d      	beq.n	8014938 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801489c:	9f04      	ldr	r7, [sp, #16]
 801489e:	1bbf      	subs	r7, r7, r6
 80148a0:	443d      	add	r5, r7
 80148a2:	016d      	lsls	r5, r5, #5
 80148a4:	fb95 f8f1 	sdiv	r8, r5, r1
 80148a8:	fb01 5518 	mls	r5, r1, r8, r5
 80148ac:	4565      	cmp	r5, ip
 80148ae:	bfb8      	it	lt
 80148b0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80148b4:	f108 0701 	add.w	r7, r8, #1
 80148b8:	bfb8      	it	lt
 80148ba:	186d      	addlt	r5, r5, r1
 80148bc:	1a64      	subs	r4, r4, r1
 80148be:	9703      	str	r7, [sp, #12]
 80148c0:	f04f 0a00 	mov.w	sl, #0
 80148c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80148c8:	1964      	adds	r4, r4, r5
 80148ca:	bf58      	it	pl
 80148cc:	9f03      	ldrpl	r7, [sp, #12]
 80148ce:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80148d2:	bf48      	it	mi
 80148d4:	4647      	movmi	r7, r8
 80148d6:	44bb      	add	fp, r7
 80148d8:	f8ac b004 	strh.w	fp, [ip, #4]
 80148dc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80148e0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80148e4:	f8ac b006 	strh.w	fp, [ip, #6]
 80148e8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80148ec:	443e      	add	r6, r7
 80148ee:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80148f2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80148f6:	bf58      	it	pl
 80148f8:	1a64      	subpl	r4, r4, r1
 80148fa:	ea5b 0707 	orrs.w	r7, fp, r7
 80148fe:	444b      	add	r3, r9
 8014900:	d011      	beq.n	8014926 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014902:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014906:	f1bb 0f00 	cmp.w	fp, #0
 801490a:	db0c      	blt.n	8014926 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801490c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801490e:	45bb      	cmp	fp, r7
 8014910:	da09      	bge.n	8014926 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014912:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014916:	45bb      	cmp	fp, r7
 8014918:	bf3c      	itt	cc
 801491a:	f10c 0708 	addcc.w	r7, ip, #8
 801491e:	6107      	strcc	r7, [r0, #16]
 8014920:	f10b 0701 	add.w	r7, fp, #1
 8014924:	6087      	str	r7, [r0, #8]
 8014926:	6907      	ldr	r7, [r0, #16]
 8014928:	459e      	cmp	lr, r3
 801492a:	803b      	strh	r3, [r7, #0]
 801492c:	807a      	strh	r2, [r7, #2]
 801492e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014932:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014936:	d1c5      	bne.n	80148c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014938:	9b04      	ldr	r3, [sp, #16]
 801493a:	1b9e      	subs	r6, r3, r6
 801493c:	6903      	ldr	r3, [r0, #16]
 801493e:	889a      	ldrh	r2, [r3, #4]
 8014940:	4432      	add	r2, r6
 8014942:	809a      	strh	r2, [r3, #4]
 8014944:	9a02      	ldr	r2, [sp, #8]
 8014946:	f102 0c20 	add.w	ip, r2, #32
 801494a:	9a01      	ldr	r2, [sp, #4]
 801494c:	ebac 0c02 	sub.w	ip, ip, r2
 8014950:	88da      	ldrh	r2, [r3, #6]
 8014952:	fb06 260c 	mla	r6, r6, ip, r2
 8014956:	80de      	strh	r6, [r3, #6]
 8014958:	f7ff bba9 	b.w	80140ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801495c <_ZN8touchgfx7Outline6lineToEii>:
 801495c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801495e:	079b      	lsls	r3, r3, #30
 8014960:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014962:	460e      	mov	r6, r1
 8014964:	4615      	mov	r5, r2
 8014966:	d511      	bpl.n	801498c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014968:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801496c:	ea86 0701 	eor.w	r7, r6, r1
 8014970:	ea85 0302 	eor.w	r3, r5, r2
 8014974:	433b      	orrs	r3, r7
 8014976:	d009      	beq.n	801498c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014978:	4633      	mov	r3, r6
 801497a:	9500      	str	r5, [sp, #0]
 801497c:	f7ff fb3e 	bl	8013ffc <_ZN8touchgfx7Outline10renderLineEiiii>
 8014980:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014982:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014986:	f043 0301 	orr.w	r3, r3, #1
 801498a:	6243      	str	r3, [r0, #36]	; 0x24
 801498c:	b003      	add	sp, #12
 801498e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014990 <_ZN8touchgfx7Outline6moveToEii>:
 8014990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014992:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014994:	4615      	mov	r5, r2
 8014996:	079a      	lsls	r2, r3, #30
 8014998:	4604      	mov	r4, r0
 801499a:	460e      	mov	r6, r1
 801499c:	d401      	bmi.n	80149a2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801499e:	f7ff faf9 	bl	8013f94 <_ZN8touchgfx7Outline5resetEv>
 80149a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80149a4:	07db      	lsls	r3, r3, #31
 80149a6:	d504      	bpl.n	80149b2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 80149a8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80149ac:	4620      	mov	r0, r4
 80149ae:	f7ff ffd5 	bl	801495c <_ZN8touchgfx7Outline6lineToEii>
 80149b2:	6923      	ldr	r3, [r4, #16]
 80149b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80149b8:	1170      	asrs	r0, r6, #5
 80149ba:	4290      	cmp	r0, r2
 80149bc:	ea4f 1165 	mov.w	r1, r5, asr #5
 80149c0:	d103      	bne.n	80149ca <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80149c2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80149c6:	4291      	cmp	r1, r2
 80149c8:	d01a      	beq.n	8014a00 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80149ca:	88df      	ldrh	r7, [r3, #6]
 80149cc:	889a      	ldrh	r2, [r3, #4]
 80149ce:	433a      	orrs	r2, r7
 80149d0:	d010      	beq.n	80149f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80149d2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80149d6:	2a00      	cmp	r2, #0
 80149d8:	db0c      	blt.n	80149f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80149da:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80149dc:	42ba      	cmp	r2, r7
 80149de:	da09      	bge.n	80149f4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80149e0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80149e4:	42ba      	cmp	r2, r7
 80149e6:	bf38      	it	cc
 80149e8:	3308      	addcc	r3, #8
 80149ea:	f102 0201 	add.w	r2, r2, #1
 80149ee:	bf38      	it	cc
 80149f0:	6123      	strcc	r3, [r4, #16]
 80149f2:	60a2      	str	r2, [r4, #8]
 80149f4:	6923      	ldr	r3, [r4, #16]
 80149f6:	2200      	movs	r2, #0
 80149f8:	8018      	strh	r0, [r3, #0]
 80149fa:	8059      	strh	r1, [r3, #2]
 80149fc:	809a      	strh	r2, [r3, #4]
 80149fe:	80da      	strh	r2, [r3, #6]
 8014a00:	6166      	str	r6, [r4, #20]
 8014a02:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014a06:	6225      	str	r5, [r4, #32]
 8014a08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014a0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014a0a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014a0e:	b0d0      	sub	sp, #320	; 0x140
 8014a10:	466c      	mov	r4, sp
 8014a12:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014a16:	4627      	mov	r7, r4
 8014a18:	1a0d      	subs	r5, r1, r0
 8014a1a:	2d48      	cmp	r5, #72	; 0x48
 8014a1c:	f100 0308 	add.w	r3, r0, #8
 8014a20:	f340 80d5 	ble.w	8014bce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014a24:	112d      	asrs	r5, r5, #4
 8014a26:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014a2a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014a2e:	6816      	ldr	r6, [r2, #0]
 8014a30:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014a34:	6006      	str	r6, [r0, #0]
 8014a36:	6856      	ldr	r6, [r2, #4]
 8014a38:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014a3c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014a40:	6046      	str	r6, [r0, #4]
 8014a42:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014a46:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014a4a:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014a4e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014a52:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014a56:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014a5a:	4565      	cmp	r5, ip
 8014a5c:	f1a1 0208 	sub.w	r2, r1, #8
 8014a60:	db06      	blt.n	8014a70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014a62:	d119      	bne.n	8014a98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014a64:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014a68:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014a6c:	42ae      	cmp	r6, r5
 8014a6e:	dd13      	ble.n	8014a98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014a70:	460e      	mov	r6, r1
 8014a72:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014a76:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014a7a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014a7e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014a82:	601d      	str	r5, [r3, #0]
 8014a84:	6875      	ldr	r5, [r6, #4]
 8014a86:	605d      	str	r5, [r3, #4]
 8014a88:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014a8c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014a90:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014a94:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014a98:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014a9c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014aa0:	42ae      	cmp	r6, r5
 8014aa2:	db06      	blt.n	8014ab2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014aa4:	d116      	bne.n	8014ad4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014aa6:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014aaa:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014aae:	45ac      	cmp	ip, r5
 8014ab0:	da10      	bge.n	8014ad4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014ab2:	681d      	ldr	r5, [r3, #0]
 8014ab4:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014ab8:	6005      	str	r5, [r0, #0]
 8014aba:	685d      	ldr	r5, [r3, #4]
 8014abc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014ac0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014ac4:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014ac8:	6045      	str	r5, [r0, #4]
 8014aca:	8146      	strh	r6, [r0, #10]
 8014acc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014ad0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014ad4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014ad8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014adc:	4565      	cmp	r5, ip
 8014ade:	db06      	blt.n	8014aee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014ae0:	d119      	bne.n	8014b16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014ae2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014ae6:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014aea:	42ae      	cmp	r6, r5
 8014aec:	da13      	bge.n	8014b16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014aee:	460e      	mov	r6, r1
 8014af0:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014af4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014af8:	6005      	str	r5, [r0, #0]
 8014afa:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014afe:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014b02:	6875      	ldr	r5, [r6, #4]
 8014b04:	6045      	str	r5, [r0, #4]
 8014b06:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014b0a:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014b0e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014b12:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014b16:	3308      	adds	r3, #8
 8014b18:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014b1c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014b20:	45e6      	cmp	lr, ip
 8014b22:	dbf8      	blt.n	8014b16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b24:	d105      	bne.n	8014b32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b26:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014b2a:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014b2e:	42ae      	cmp	r6, r5
 8014b30:	dbf1      	blt.n	8014b16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b32:	4615      	mov	r5, r2
 8014b34:	3a08      	subs	r2, #8
 8014b36:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014b3a:	45b4      	cmp	ip, r6
 8014b3c:	dbf9      	blt.n	8014b32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b3e:	d105      	bne.n	8014b4c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014b40:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014b44:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014b48:	45b0      	cmp	r8, r6
 8014b4a:	dbf2      	blt.n	8014b32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014b4c:	4293      	cmp	r3, r2
 8014b4e:	f1a5 0608 	sub.w	r6, r5, #8
 8014b52:	d816      	bhi.n	8014b82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014b54:	f8d6 c000 	ldr.w	ip, [r6]
 8014b58:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014b5c:	f8c3 c000 	str.w	ip, [r3]
 8014b60:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014b64:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014b68:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014b6c:	f8c3 c004 	str.w	ip, [r3, #4]
 8014b70:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014b74:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014b78:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014b7c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014b80:	e7c9      	b.n	8014b16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014b82:	f8d6 e000 	ldr.w	lr, [r6]
 8014b86:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014b8a:	f8c0 e000 	str.w	lr, [r0]
 8014b8e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014b92:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014b96:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014b9a:	f8c0 e004 	str.w	lr, [r0, #4]
 8014b9e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014ba2:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014ba6:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014baa:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014bae:	1acd      	subs	r5, r1, r3
 8014bb0:	1a16      	subs	r6, r2, r0
 8014bb2:	10ed      	asrs	r5, r5, #3
 8014bb4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014bb8:	bfb5      	itete	lt
 8014bba:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014bbe:	e9c4 3100 	strdge	r3, r1, [r4]
 8014bc2:	460a      	movlt	r2, r1
 8014bc4:	4603      	movge	r3, r0
 8014bc6:	3408      	adds	r4, #8
 8014bc8:	4618      	mov	r0, r3
 8014bca:	4611      	mov	r1, r2
 8014bcc:	e724      	b.n	8014a18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014bce:	4299      	cmp	r1, r3
 8014bd0:	d928      	bls.n	8014c24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014bd2:	f1a3 0210 	sub.w	r2, r3, #16
 8014bd6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014bda:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014bde:	45ac      	cmp	ip, r5
 8014be0:	db06      	blt.n	8014bf0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014be2:	d11d      	bne.n	8014c20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014be4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014be8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014bec:	42ae      	cmp	r6, r5
 8014bee:	da17      	bge.n	8014c20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014bf0:	4615      	mov	r5, r2
 8014bf2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014bf6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014bfa:	6116      	str	r6, [r2, #16]
 8014bfc:	686e      	ldr	r6, [r5, #4]
 8014bfe:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014c02:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014c06:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014c0a:	42a8      	cmp	r0, r5
 8014c0c:	6156      	str	r6, [r2, #20]
 8014c0e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014c12:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014c16:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014c1a:	f1a2 0208 	sub.w	r2, r2, #8
 8014c1e:	d1da      	bne.n	8014bd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014c20:	3308      	adds	r3, #8
 8014c22:	e7d4      	b.n	8014bce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014c24:	42bc      	cmp	r4, r7
 8014c26:	d903      	bls.n	8014c30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014c28:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014c2c:	3c08      	subs	r4, #8
 8014c2e:	e6f3      	b.n	8014a18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014c30:	b050      	add	sp, #320	; 0x140
 8014c32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014c36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014c36:	b510      	push	{r4, lr}
 8014c38:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014c3a:	07da      	lsls	r2, r3, #31
 8014c3c:	4604      	mov	r4, r0
 8014c3e:	d507      	bpl.n	8014c50 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014c40:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014c44:	f7ff fe8a 	bl	801495c <_ZN8touchgfx7Outline6lineToEii>
 8014c48:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014c4a:	f023 0301 	bic.w	r3, r3, #1
 8014c4e:	6243      	str	r3, [r0, #36]	; 0x24
 8014c50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014c52:	079b      	lsls	r3, r3, #30
 8014c54:	d521      	bpl.n	8014c9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014c56:	6923      	ldr	r3, [r4, #16]
 8014c58:	88d9      	ldrh	r1, [r3, #6]
 8014c5a:	889a      	ldrh	r2, [r3, #4]
 8014c5c:	430a      	orrs	r2, r1
 8014c5e:	d010      	beq.n	8014c82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014c60:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014c64:	2a00      	cmp	r2, #0
 8014c66:	db0c      	blt.n	8014c82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014c68:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014c6a:	428a      	cmp	r2, r1
 8014c6c:	da09      	bge.n	8014c82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014c6e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014c72:	4291      	cmp	r1, r2
 8014c74:	bf88      	it	hi
 8014c76:	3308      	addhi	r3, #8
 8014c78:	f102 0201 	add.w	r2, r2, #1
 8014c7c:	bf88      	it	hi
 8014c7e:	6123      	strhi	r3, [r4, #16]
 8014c80:	60a2      	str	r2, [r4, #8]
 8014c82:	68a1      	ldr	r1, [r4, #8]
 8014c84:	b129      	cbz	r1, 8014c92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014c86:	6863      	ldr	r3, [r4, #4]
 8014c88:	4299      	cmp	r1, r3
 8014c8a:	d802      	bhi.n	8014c92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014c8c:	68e0      	ldr	r0, [r4, #12]
 8014c8e:	f7ff febc 	bl	8014a0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014c92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014c94:	f023 0302 	bic.w	r3, r3, #2
 8014c98:	6263      	str	r3, [r4, #36]	; 0x24
 8014c9a:	68e0      	ldr	r0, [r4, #12]
 8014c9c:	bd10      	pop	{r4, pc}
	...

08014ca0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014ca0:	4b02      	ldr	r3, [pc, #8]	; (8014cac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014ca2:	6018      	str	r0, [r3, #0]
 8014ca4:	4b02      	ldr	r3, [pc, #8]	; (8014cb0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014ca6:	6019      	str	r1, [r3, #0]
 8014ca8:	4770      	bx	lr
 8014caa:	bf00      	nop
 8014cac:	2000dc7c 	.word	0x2000dc7c
 8014cb0:	2000dc80 	.word	0x2000dc80

08014cb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014cb4:	4b01      	ldr	r3, [pc, #4]	; (8014cbc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014cb6:	6818      	ldr	r0, [r3, #0]
 8014cb8:	4770      	bx	lr
 8014cba:	bf00      	nop
 8014cbc:	2000dc7c 	.word	0x2000dc7c

08014cc0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014cc0:	4b01      	ldr	r3, [pc, #4]	; (8014cc8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014cc2:	6818      	ldr	r0, [r3, #0]
 8014cc4:	4770      	bx	lr
 8014cc6:	bf00      	nop
 8014cc8:	2000dc80 	.word	0x2000dc80

08014ccc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014ccc:	b510      	push	{r4, lr}
 8014cce:	6803      	ldr	r3, [r0, #0]
 8014cd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cd2:	460c      	mov	r4, r1
 8014cd4:	4798      	blx	r3
 8014cd6:	1b03      	subs	r3, r0, r4
 8014cd8:	4258      	negs	r0, r3
 8014cda:	4158      	adcs	r0, r3
 8014cdc:	bd10      	pop	{r4, pc}
	...

08014ce0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014ce0:	4b01      	ldr	r3, [pc, #4]	; (8014ce8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014ce2:	6019      	str	r1, [r3, #0]
 8014ce4:	4770      	bx	lr
 8014ce6:	bf00      	nop
 8014ce8:	2000dc84 	.word	0x2000dc84

08014cec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cf0:	4696      	mov	lr, r2
 8014cf2:	4605      	mov	r5, r0
 8014cf4:	4614      	mov	r4, r2
 8014cf6:	460e      	mov	r6, r1
 8014cf8:	461f      	mov	r7, r3
 8014cfa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014cfe:	b097      	sub	sp, #92	; 0x5c
 8014d00:	f10d 0c1c 	add.w	ip, sp, #28
 8014d04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d08:	f8de 3000 	ldr.w	r3, [lr]
 8014d0c:	f8cc 3000 	str.w	r3, [ip]
 8014d10:	f104 0e14 	add.w	lr, r4, #20
 8014d14:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d18:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014d1c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d20:	f8de 3000 	ldr.w	r3, [lr]
 8014d24:	f8cc 3000 	str.w	r3, [ip]
 8014d28:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014d2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d30:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014d34:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d38:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014d3c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014d40:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014d44:	f8de 3000 	ldr.w	r3, [lr]
 8014d48:	f8cc 3000 	str.w	r3, [ip]
 8014d4c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014d4e:	682b      	ldr	r3, [r5, #0]
 8014d50:	9201      	str	r2, [sp, #4]
 8014d52:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014d56:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014d58:	9200      	str	r2, [sp, #0]
 8014d5a:	f8cd 8008 	str.w	r8, [sp, #8]
 8014d5e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014d62:	aa07      	add	r2, sp, #28
 8014d64:	463b      	mov	r3, r7
 8014d66:	4631      	mov	r1, r6
 8014d68:	4628      	mov	r0, r5
 8014d6a:	47d8      	blx	fp
 8014d6c:	46a6      	mov	lr, r4
 8014d6e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d72:	f10d 0c1c 	add.w	ip, sp, #28
 8014d76:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d7a:	f8de 3000 	ldr.w	r3, [lr]
 8014d7e:	f8cc 3000 	str.w	r3, [ip]
 8014d82:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014d86:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014d8a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014d8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d92:	343c      	adds	r4, #60	; 0x3c
 8014d94:	f8de 3000 	ldr.w	r3, [lr]
 8014d98:	f8cc 3000 	str.w	r3, [ip]
 8014d9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014d9e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014da2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014da6:	6823      	ldr	r3, [r4, #0]
 8014da8:	f8cc 3000 	str.w	r3, [ip]
 8014dac:	682b      	ldr	r3, [r5, #0]
 8014dae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014db2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014db4:	9201      	str	r2, [sp, #4]
 8014db6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014db8:	9200      	str	r2, [sp, #0]
 8014dba:	f8cd 8008 	str.w	r8, [sp, #8]
 8014dbe:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014dc0:	aa07      	add	r2, sp, #28
 8014dc2:	463b      	mov	r3, r7
 8014dc4:	4631      	mov	r1, r6
 8014dc6:	4628      	mov	r0, r5
 8014dc8:	47a0      	blx	r4
 8014dca:	b017      	add	sp, #92	; 0x5c
 8014dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dd0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dd4:	b08d      	sub	sp, #52	; 0x34
 8014dd6:	4688      	mov	r8, r1
 8014dd8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014dda:	f8d3 c000 	ldr.w	ip, [r3]
 8014dde:	680f      	ldr	r7, [r1, #0]
 8014de0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014de4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014de8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014dec:	edd3 6a07 	vldr	s13, [r3, #28]
 8014df0:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014df2:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014df6:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014dfa:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014dfe:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014e02:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014e06:	eba7 070c 	sub.w	r7, r7, ip
 8014e0a:	42bc      	cmp	r4, r7
 8014e0c:	bfa8      	it	ge
 8014e0e:	463c      	movge	r4, r7
 8014e10:	ee07 4a90 	vmov	s15, r4
 8014e14:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014e18:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014e1c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014e20:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014e24:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014e28:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014e2c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014e30:	eb09 0e0c 	add.w	lr, r9, ip
 8014e34:	4571      	cmp	r1, lr
 8014e36:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014e3a:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014e3e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014e42:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014e46:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014e4a:	f340 808d 	ble.w	8014f68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014e4e:	eba1 060e 	sub.w	r6, r1, lr
 8014e52:	fb96 f5f4 	sdiv	r5, r6, r4
 8014e56:	ee07 5a10 	vmov	s14, r5
 8014e5a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014e5e:	2d00      	cmp	r5, #0
 8014e60:	fb04 6615 	mls	r6, r4, r5, r6
 8014e64:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014e68:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014e6c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014e70:	dd13      	ble.n	8014e9a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014e72:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014e76:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014e7a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014e82:	bf18      	it	ne
 8014e84:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014e88:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014e8c:	bf08      	it	eq
 8014e8e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014e92:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014e96:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014e9a:	fb05 f204 	mul.w	r2, r5, r4
 8014e9e:	1abf      	subs	r7, r7, r2
 8014ea0:	4494      	add	ip, r2
 8014ea2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014ea6:	4411      	add	r1, r2
 8014ea8:	eb09 020c 	add.w	r2, r9, ip
 8014eac:	443a      	add	r2, r7
 8014eae:	b209      	sxth	r1, r1
 8014eb0:	428a      	cmp	r2, r1
 8014eb2:	bfc4      	itt	gt
 8014eb4:	eba1 0209 	subgt.w	r2, r1, r9
 8014eb8:	eba2 070c 	subgt.w	r7, r2, ip
 8014ebc:	2f00      	cmp	r7, #0
 8014ebe:	dd50      	ble.n	8014f62 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014ec0:	fb97 f1f4 	sdiv	r1, r7, r4
 8014ec4:	fb04 7211 	mls	r2, r4, r1, r7
 8014ec8:	b90a      	cbnz	r2, 8014ece <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014eca:	3901      	subs	r1, #1
 8014ecc:	4622      	mov	r2, r4
 8014ece:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014ed2:	6840      	ldr	r0, [r0, #4]
 8014ed4:	900b      	str	r0, [sp, #44]	; 0x2c
 8014ed6:	f8d0 a000 	ldr.w	sl, [r0]
 8014eda:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014edc:	9008      	str	r0, [sp, #32]
 8014ede:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014ee2:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014ee4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014ee8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014eec:	695b      	ldr	r3, [r3, #20]
 8014eee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014ef0:	445b      	add	r3, fp
 8014ef2:	eef0 6a42 	vmov.f32	s13, s4
 8014ef6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014efa:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014efe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014f02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f06:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014f0a:	9307      	str	r3, [sp, #28]
 8014f0c:	ee17 7a90 	vmov	r7, s15
 8014f10:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014f14:	eeb0 7a61 	vmov.f32	s14, s3
 8014f18:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014f1c:	ee16 3a90 	vmov	r3, s13
 8014f20:	fb97 f7f4 	sdiv	r7, r7, r4
 8014f24:	ee17 ca90 	vmov	ip, s15
 8014f28:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014f2c:	fb9c fcf4 	sdiv	ip, ip, r4
 8014f30:	fb0c 3306 	mla	r3, ip, r6, r3
 8014f34:	9302      	str	r3, [sp, #8]
 8014f36:	ee17 3a10 	vmov	r3, s14
 8014f3a:	44b6      	add	lr, r6
 8014f3c:	fb04 e505 	mla	r5, r4, r5, lr
 8014f40:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014f44:	fb07 3706 	mla	r7, r7, r6, r3
 8014f48:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014f4c:	e9cd 4700 	strd	r4, r7, [sp]
 8014f50:	2900      	cmp	r1, #0
 8014f52:	bfcc      	ite	gt
 8014f54:	46a1      	movgt	r9, r4
 8014f56:	4691      	movle	r9, r2
 8014f58:	eba9 0306 	sub.w	r3, r9, r6
 8014f5c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014f60:	47a0      	blx	r4
 8014f62:	b00d      	add	sp, #52	; 0x34
 8014f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f68:	2500      	movs	r5, #0
 8014f6a:	462e      	mov	r6, r5
 8014f6c:	e799      	b.n	8014ea2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014f70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f74:	b0db      	sub	sp, #364	; 0x16c
 8014f76:	461d      	mov	r5, r3
 8014f78:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014f7c:	930a      	str	r3, [sp, #40]	; 0x28
 8014f7e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014f82:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f84:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014f88:	9310      	str	r3, [sp, #64]	; 0x40
 8014f8a:	6803      	ldr	r3, [r0, #0]
 8014f8c:	910f      	str	r1, [sp, #60]	; 0x3c
 8014f8e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014f90:	9009      	str	r0, [sp, #36]	; 0x24
 8014f92:	4614      	mov	r4, r2
 8014f94:	4629      	mov	r1, r5
 8014f96:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014f9a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014f9e:	47b8      	blx	r7
 8014fa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014fa2:	6058      	str	r0, [r3, #4]
 8014fa4:	2800      	cmp	r0, #0
 8014fa6:	f000 83a1 	beq.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014faa:	682b      	ldr	r3, [r5, #0]
 8014fac:	9314      	str	r3, [sp, #80]	; 0x50
 8014fae:	686b      	ldr	r3, [r5, #4]
 8014fb0:	9315      	str	r3, [sp, #84]	; 0x54
 8014fb2:	4bc4      	ldr	r3, [pc, #784]	; (80152c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014fb4:	ed94 7a02 	vldr	s14, [r4, #8]
 8014fb8:	7819      	ldrb	r1, [r3, #0]
 8014fba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014fbe:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014fc2:	2900      	cmp	r1, #0
 8014fc4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014fc8:	bf16      	itet	ne
 8014fca:	4619      	movne	r1, r3
 8014fcc:	4611      	moveq	r1, r2
 8014fce:	4613      	movne	r3, r2
 8014fd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014fd4:	9116      	str	r1, [sp, #88]	; 0x58
 8014fd6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014fda:	f240 8387 	bls.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014fde:	ed94 7a07 	vldr	s14, [r4, #28]
 8014fe2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014fea:	f240 837f 	bls.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014fee:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8014ff2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ffa:	f240 8377 	bls.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014ffe:	6822      	ldr	r2, [r4, #0]
 8015000:	4bb1      	ldr	r3, [pc, #708]	; (80152c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8015002:	429a      	cmp	r2, r3
 8015004:	f2c0 8372 	blt.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015008:	49b0      	ldr	r1, [pc, #704]	; (80152cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801500a:	6963      	ldr	r3, [r4, #20]
 801500c:	428a      	cmp	r2, r1
 801500e:	f300 836d 	bgt.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015012:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015016:	48ae      	ldr	r0, [pc, #696]	; (80152d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015018:	33ff      	adds	r3, #255	; 0xff
 801501a:	4283      	cmp	r3, r0
 801501c:	f200 8366 	bhi.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015020:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8015022:	4dac      	ldr	r5, [pc, #688]	; (80152d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015024:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015028:	33ff      	adds	r3, #255	; 0xff
 801502a:	42ab      	cmp	r3, r5
 801502c:	f200 835e 	bhi.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015030:	6862      	ldr	r2, [r4, #4]
 8015032:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015036:	33ff      	adds	r3, #255	; 0xff
 8015038:	4283      	cmp	r3, r0
 801503a:	f200 8357 	bhi.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801503e:	69a1      	ldr	r1, [r4, #24]
 8015040:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015044:	33ff      	adds	r3, #255	; 0xff
 8015046:	4283      	cmp	r3, r0
 8015048:	f200 8350 	bhi.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801504c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801504e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8015052:	30ff      	adds	r0, #255	; 0xff
 8015054:	42a8      	cmp	r0, r5
 8015056:	f200 8349 	bhi.w	80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801505a:	428a      	cmp	r2, r1
 801505c:	f280 8110 	bge.w	8015280 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015060:	429a      	cmp	r2, r3
 8015062:	f300 8119 	bgt.w	8015298 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015066:	4299      	cmp	r1, r3
 8015068:	f280 811d 	bge.w	80152a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801506c:	2502      	movs	r5, #2
 801506e:	2701      	movs	r7, #1
 8015070:	46a9      	mov	r9, r5
 8015072:	46b8      	mov	r8, r7
 8015074:	f04f 0a00 	mov.w	sl, #0
 8015078:	4621      	mov	r1, r4
 801507a:	a849      	add	r0, sp, #292	; 0x124
 801507c:	f003 fd0a 	bl	8018a94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015080:	4622      	mov	r2, r4
 8015082:	4653      	mov	r3, sl
 8015084:	a949      	add	r1, sp, #292	; 0x124
 8015086:	f8cd 9000 	str.w	r9, [sp]
 801508a:	a819      	add	r0, sp, #100	; 0x64
 801508c:	f003 fe32 	bl	8018cf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015090:	4622      	mov	r2, r4
 8015092:	4653      	mov	r3, sl
 8015094:	a949      	add	r1, sp, #292	; 0x124
 8015096:	f8cd 8000 	str.w	r8, [sp]
 801509a:	a829      	add	r0, sp, #164	; 0xa4
 801509c:	f003 fe2a 	bl	8018cf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80150a0:	4643      	mov	r3, r8
 80150a2:	4622      	mov	r2, r4
 80150a4:	a949      	add	r1, sp, #292	; 0x124
 80150a6:	f8cd 9000 	str.w	r9, [sp]
 80150aa:	a839      	add	r0, sp, #228	; 0xe4
 80150ac:	f003 fe22 	bl	8018cf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80150b0:	42af      	cmp	r7, r5
 80150b2:	bfb5      	itete	lt
 80150b4:	2300      	movlt	r3, #0
 80150b6:	2301      	movge	r3, #1
 80150b8:	930e      	strlt	r3, [sp, #56]	; 0x38
 80150ba:	930e      	strge	r3, [sp, #56]	; 0x38
 80150bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80150be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80150c2:	af12      	add	r7, sp, #72	; 0x48
 80150c4:	bfb9      	ittee	lt
 80150c6:	ad29      	addlt	r5, sp, #164	; 0xa4
 80150c8:	ac19      	addlt	r4, sp, #100	; 0x64
 80150ca:	ad19      	addge	r5, sp, #100	; 0x64
 80150cc:	ac29      	addge	r4, sp, #164	; 0xa4
 80150ce:	e887 0003 	stmia.w	r7, {r0, r1}
 80150d2:	b928      	cbnz	r0, 80150e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80150d4:	4b80      	ldr	r3, [pc, #512]	; (80152d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80150d6:	6818      	ldr	r0, [r3, #0]
 80150d8:	6803      	ldr	r3, [r0, #0]
 80150da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80150dc:	4798      	blx	r3
 80150de:	6038      	str	r0, [r7, #0]
 80150e0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80150e2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80150e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80150ea:	930c      	str	r3, [sp, #48]	; 0x30
 80150ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 80150ee:	6963      	ldr	r3, [r4, #20]
 80150f0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80150f2:	440b      	add	r3, r1
 80150f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80150f8:	4408      	add	r0, r1
 80150fa:	b200      	sxth	r0, r0
 80150fc:	4283      	cmp	r3, r0
 80150fe:	900d      	str	r0, [sp, #52]	; 0x34
 8015100:	f280 80dd 	bge.w	80152be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015104:	428b      	cmp	r3, r1
 8015106:	da08      	bge.n	801511a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015108:	2a00      	cmp	r2, #0
 801510a:	dd06      	ble.n	801511a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801510c:	1acb      	subs	r3, r1, r3
 801510e:	429a      	cmp	r2, r3
 8015110:	f2c0 80e4 	blt.w	80152dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015114:	2b00      	cmp	r3, #0
 8015116:	f300 80e2 	bgt.w	80152de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801511a:	6967      	ldr	r7, [r4, #20]
 801511c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801511e:	443b      	add	r3, r7
 8015120:	461f      	mov	r7, r3
 8015122:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015124:	1bdf      	subs	r7, r3, r7
 8015126:	4297      	cmp	r7, r2
 8015128:	bfa8      	it	ge
 801512a:	4617      	movge	r7, r2
 801512c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015130:	2f00      	cmp	r7, #0
 8015132:	f340 8166 	ble.w	8015402 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015136:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015138:	6829      	ldr	r1, [r5, #0]
 801513a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801513e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015142:	6820      	ldr	r0, [r4, #0]
 8015144:	4411      	add	r1, r2
 8015146:	4299      	cmp	r1, r3
 8015148:	dd1a      	ble.n	8015180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801514a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801514e:	440b      	add	r3, r1
 8015150:	4402      	add	r2, r0
 8015152:	b21b      	sxth	r3, r3
 8015154:	429a      	cmp	r2, r3
 8015156:	dc13      	bgt.n	8015180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801515a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801515c:	681b      	ldr	r3, [r3, #0]
 801515e:	9206      	str	r2, [sp, #24]
 8015160:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015162:	9205      	str	r2, [sp, #20]
 8015164:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015166:	9500      	str	r5, [sp, #0]
 8015168:	e9cd b203 	strd	fp, r2, [sp, #12]
 801516c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801516e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015170:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015174:	a912      	add	r1, sp, #72	; 0x48
 8015176:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801517a:	aa49      	add	r2, sp, #292	; 0x124
 801517c:	4623      	mov	r3, r4
 801517e:	47c8      	blx	r9
 8015180:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015184:	441a      	add	r2, r3
 8015186:	6963      	ldr	r3, [r4, #20]
 8015188:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801518c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015190:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015194:	68a1      	ldr	r1, [r4, #8]
 8015196:	ed94 6a08 	vldr	s12, [r4, #32]
 801519a:	6022      	str	r2, [r4, #0]
 801519c:	3301      	adds	r3, #1
 801519e:	6163      	str	r3, [r4, #20]
 80151a0:	69a3      	ldr	r3, [r4, #24]
 80151a2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80151a6:	3b01      	subs	r3, #1
 80151a8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80151ac:	61a3      	str	r3, [r4, #24]
 80151ae:	6923      	ldr	r3, [r4, #16]
 80151b0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80151b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80151b8:	edd4 6a07 	vldr	s13, [r4, #28]
 80151bc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80151c0:	440b      	add	r3, r1
 80151c2:	68e1      	ldr	r1, [r4, #12]
 80151c4:	6123      	str	r3, [r4, #16]
 80151c6:	ee76 6a86 	vadd.f32	s13, s13, s12
 80151ca:	428b      	cmp	r3, r1
 80151cc:	edc4 6a07 	vstr	s13, [r4, #28]
 80151d0:	db15      	blt.n	80151fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80151d2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80151d6:	ee76 6a26 	vadd.f32	s13, s12, s13
 80151da:	3201      	adds	r2, #1
 80151dc:	edc4 6a07 	vstr	s13, [r4, #28]
 80151e0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80151e4:	6022      	str	r2, [r4, #0]
 80151e6:	ee36 7a87 	vadd.f32	s14, s13, s14
 80151ea:	1a5b      	subs	r3, r3, r1
 80151ec:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80151f0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80151f4:	6123      	str	r3, [r4, #16]
 80151f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80151fa:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80151fe:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015202:	441a      	add	r2, r3
 8015204:	696b      	ldr	r3, [r5, #20]
 8015206:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801520a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801520e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015212:	68a9      	ldr	r1, [r5, #8]
 8015214:	ed95 6a08 	vldr	s12, [r5, #32]
 8015218:	602a      	str	r2, [r5, #0]
 801521a:	3301      	adds	r3, #1
 801521c:	616b      	str	r3, [r5, #20]
 801521e:	69ab      	ldr	r3, [r5, #24]
 8015220:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015224:	3b01      	subs	r3, #1
 8015226:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801522a:	61ab      	str	r3, [r5, #24]
 801522c:	692b      	ldr	r3, [r5, #16]
 801522e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015232:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015236:	edd5 6a07 	vldr	s13, [r5, #28]
 801523a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801523e:	440b      	add	r3, r1
 8015240:	68e9      	ldr	r1, [r5, #12]
 8015242:	612b      	str	r3, [r5, #16]
 8015244:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015248:	428b      	cmp	r3, r1
 801524a:	edc5 6a07 	vstr	s13, [r5, #28]
 801524e:	db15      	blt.n	801527c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015250:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015254:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015258:	3201      	adds	r2, #1
 801525a:	edc5 6a07 	vstr	s13, [r5, #28]
 801525e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015262:	602a      	str	r2, [r5, #0]
 8015264:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015268:	1a5b      	subs	r3, r3, r1
 801526a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801526e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015272:	612b      	str	r3, [r5, #16]
 8015274:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015278:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801527c:	3f01      	subs	r7, #1
 801527e:	e757      	b.n	8015130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015280:	4299      	cmp	r1, r3
 8015282:	dc13      	bgt.n	80152ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015284:	429a      	cmp	r2, r3
 8015286:	da14      	bge.n	80152b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015288:	2502      	movs	r5, #2
 801528a:	2703      	movs	r7, #3
 801528c:	46a9      	mov	r9, r5
 801528e:	f04f 0800 	mov.w	r8, #0
 8015292:	f04f 0a01 	mov.w	sl, #1
 8015296:	e6ef      	b.n	8015078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015298:	2501      	movs	r5, #1
 801529a:	2700      	movs	r7, #0
 801529c:	46a9      	mov	r9, r5
 801529e:	46b8      	mov	r8, r7
 80152a0:	f04f 0a02 	mov.w	sl, #2
 80152a4:	e6e8      	b.n	8015078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80152a6:	2501      	movs	r5, #1
 80152a8:	2702      	movs	r7, #2
 80152aa:	e6e1      	b.n	8015070 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80152ac:	2500      	movs	r5, #0
 80152ae:	2701      	movs	r7, #1
 80152b0:	e7f4      	b.n	801529c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80152b2:	2702      	movs	r7, #2
 80152b4:	2503      	movs	r5, #3
 80152b6:	f04f 0900 	mov.w	r9, #0
 80152ba:	46b8      	mov	r8, r7
 80152bc:	e7e9      	b.n	8015292 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80152be:	4613      	mov	r3, r2
 80152c0:	e728      	b.n	8015114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80152c2:	bf00      	nop
 80152c4:	2000dc6c 	.word	0x2000dc6c
 80152c8:	fffd8f01 	.word	0xfffd8f01
 80152cc:	00027100 	.word	0x00027100
 80152d0:	0004e1ff 	.word	0x0004e1ff
 80152d4:	0004e1fe 	.word	0x0004e1fe
 80152d8:	2000dc74 	.word	0x2000dc74
 80152dc:	4613      	mov	r3, r2
 80152de:	992b      	ldr	r1, [sp, #172]	; 0xac
 80152e0:	9111      	str	r1, [sp, #68]	; 0x44
 80152e2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80152e6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80152ea:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80152ec:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80152f0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80152f4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80152f8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80152fc:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8015300:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015304:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015308:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801530c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8015310:	469e      	mov	lr, r3
 8015312:	469c      	mov	ip, r3
 8015314:	f04f 0900 	mov.w	r9, #0
 8015318:	f1bc 0f00 	cmp.w	ip, #0
 801531c:	d147      	bne.n	80153ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801531e:	eb03 0c07 	add.w	ip, r3, r7
 8015322:	1ad7      	subs	r7, r2, r3
 8015324:	f1b9 0f00 	cmp.w	r9, #0
 8015328:	d009      	beq.n	801533e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801532a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801532e:	9029      	str	r0, [sp, #164]	; 0xa4
 8015330:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015334:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015338:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801533c:	912d      	str	r1, [sp, #180]	; 0xb4
 801533e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015340:	9111      	str	r1, [sp, #68]	; 0x44
 8015342:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015346:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801534a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801534e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015352:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015356:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801535a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801535e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015362:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015366:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801536a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801536e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015372:	f04f 0800 	mov.w	r8, #0
 8015376:	f1be 0f00 	cmp.w	lr, #0
 801537a:	d031      	beq.n	80153e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801537c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801537e:	4431      	add	r1, r6
 8015380:	4549      	cmp	r1, r9
 8015382:	4450      	add	r0, sl
 8015384:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015388:	ee37 7a04 	vadd.f32	s14, s14, s8
 801538c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015390:	db08      	blt.n	80153a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015392:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015396:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801539a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801539e:	3001      	adds	r0, #1
 80153a0:	eba1 0109 	sub.w	r1, r1, r9
 80153a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80153a8:	f04f 0801 	mov.w	r8, #1
 80153ac:	e7e3      	b.n	8015376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80153ae:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80153b0:	4431      	add	r1, r6
 80153b2:	4541      	cmp	r1, r8
 80153b4:	4450      	add	r0, sl
 80153b6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80153ba:	ee77 7a84 	vadd.f32	s15, s15, s8
 80153be:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80153c2:	db08      	blt.n	80153d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80153c4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80153c8:	ee37 7a25 	vadd.f32	s14, s14, s11
 80153cc:	ee77 7a86 	vadd.f32	s15, s15, s12
 80153d0:	3001      	adds	r0, #1
 80153d2:	eba1 0108 	sub.w	r1, r1, r8
 80153d6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80153da:	f04f 0901 	mov.w	r9, #1
 80153de:	e79b      	b.n	8015318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80153e0:	449c      	add	ip, r3
 80153e2:	1aff      	subs	r7, r7, r3
 80153e4:	f1b8 0f00 	cmp.w	r8, #0
 80153e8:	d009      	beq.n	80153fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80153ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80153ee:	9019      	str	r0, [sp, #100]	; 0x64
 80153f0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80153f4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80153f8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80153fc:	911d      	str	r1, [sp, #116]	; 0x74
 80153fe:	1ad2      	subs	r2, r2, r3
 8015400:	e68b      	b.n	801511a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015404:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015406:	2b00      	cmp	r3, #0
 8015408:	f000 80d1 	beq.w	80155ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801540c:	ad19      	add	r5, sp, #100	; 0x64
 801540e:	ac39      	add	r4, sp, #228	; 0xe4
 8015410:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015412:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015416:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801541a:	930c      	str	r3, [sp, #48]	; 0x30
 801541c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801541e:	6963      	ldr	r3, [r4, #20]
 8015420:	440b      	add	r3, r1
 8015422:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015426:	4408      	add	r0, r1
 8015428:	b200      	sxth	r0, r0
 801542a:	4283      	cmp	r3, r0
 801542c:	900d      	str	r0, [sp, #52]	; 0x34
 801542e:	f280 80c1 	bge.w	80155b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015432:	428b      	cmp	r3, r1
 8015434:	da08      	bge.n	8015448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015436:	2a00      	cmp	r2, #0
 8015438:	dd06      	ble.n	8015448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801543a:	1acb      	subs	r3, r1, r3
 801543c:	429a      	cmp	r2, r3
 801543e:	f2c0 80bb 	blt.w	80155b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015442:	2b00      	cmp	r3, #0
 8015444:	f300 80b9 	bgt.w	80155ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015448:	6967      	ldr	r7, [r4, #20]
 801544a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801544c:	443b      	add	r3, r7
 801544e:	461f      	mov	r7, r3
 8015450:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015452:	1bdf      	subs	r7, r3, r7
 8015454:	4297      	cmp	r7, r2
 8015456:	bfa8      	it	ge
 8015458:	4617      	movge	r7, r2
 801545a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801545e:	2f00      	cmp	r7, #0
 8015460:	f340 813c 	ble.w	80156dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015464:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015466:	6829      	ldr	r1, [r5, #0]
 8015468:	f9b3 2000 	ldrsh.w	r2, [r3]
 801546c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015470:	6820      	ldr	r0, [r4, #0]
 8015472:	4411      	add	r1, r2
 8015474:	4299      	cmp	r1, r3
 8015476:	dd1a      	ble.n	80154ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015478:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801547c:	440b      	add	r3, r1
 801547e:	4402      	add	r2, r0
 8015480:	b21b      	sxth	r3, r3
 8015482:	429a      	cmp	r2, r3
 8015484:	dc13      	bgt.n	80154ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015488:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801548a:	681b      	ldr	r3, [r3, #0]
 801548c:	9206      	str	r2, [sp, #24]
 801548e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015490:	9205      	str	r2, [sp, #20]
 8015492:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015494:	9500      	str	r5, [sp, #0]
 8015496:	e9cd b203 	strd	fp, r2, [sp, #12]
 801549a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801549c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801549e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80154a2:	a912      	add	r1, sp, #72	; 0x48
 80154a4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80154a8:	aa49      	add	r2, sp, #292	; 0x124
 80154aa:	4623      	mov	r3, r4
 80154ac:	47c8      	blx	r9
 80154ae:	e9d4 2300 	ldrd	r2, r3, [r4]
 80154b2:	441a      	add	r2, r3
 80154b4:	6963      	ldr	r3, [r4, #20]
 80154b6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80154ba:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80154be:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80154c2:	68a1      	ldr	r1, [r4, #8]
 80154c4:	ed94 6a08 	vldr	s12, [r4, #32]
 80154c8:	6022      	str	r2, [r4, #0]
 80154ca:	3301      	adds	r3, #1
 80154cc:	6163      	str	r3, [r4, #20]
 80154ce:	69a3      	ldr	r3, [r4, #24]
 80154d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80154d4:	3b01      	subs	r3, #1
 80154d6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80154da:	61a3      	str	r3, [r4, #24]
 80154dc:	6923      	ldr	r3, [r4, #16]
 80154de:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80154e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80154e6:	edd4 6a07 	vldr	s13, [r4, #28]
 80154ea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80154ee:	440b      	add	r3, r1
 80154f0:	68e1      	ldr	r1, [r4, #12]
 80154f2:	6123      	str	r3, [r4, #16]
 80154f4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80154f8:	428b      	cmp	r3, r1
 80154fa:	edc4 6a07 	vstr	s13, [r4, #28]
 80154fe:	db15      	blt.n	801552c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015500:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015504:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015508:	3201      	adds	r2, #1
 801550a:	edc4 6a07 	vstr	s13, [r4, #28]
 801550e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015512:	6022      	str	r2, [r4, #0]
 8015514:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015518:	1a5b      	subs	r3, r3, r1
 801551a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801551e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015522:	6123      	str	r3, [r4, #16]
 8015524:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015528:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801552c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015530:	441a      	add	r2, r3
 8015532:	696b      	ldr	r3, [r5, #20]
 8015534:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015538:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801553c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015540:	68a9      	ldr	r1, [r5, #8]
 8015542:	ed95 6a08 	vldr	s12, [r5, #32]
 8015546:	602a      	str	r2, [r5, #0]
 8015548:	3301      	adds	r3, #1
 801554a:	616b      	str	r3, [r5, #20]
 801554c:	69ab      	ldr	r3, [r5, #24]
 801554e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015552:	3b01      	subs	r3, #1
 8015554:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015558:	61ab      	str	r3, [r5, #24]
 801555a:	692b      	ldr	r3, [r5, #16]
 801555c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015560:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015564:	edd5 6a07 	vldr	s13, [r5, #28]
 8015568:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801556c:	440b      	add	r3, r1
 801556e:	68e9      	ldr	r1, [r5, #12]
 8015570:	612b      	str	r3, [r5, #16]
 8015572:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015576:	428b      	cmp	r3, r1
 8015578:	edc5 6a07 	vstr	s13, [r5, #28]
 801557c:	db15      	blt.n	80155aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801557e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015582:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015586:	3201      	adds	r2, #1
 8015588:	edc5 6a07 	vstr	s13, [r5, #28]
 801558c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015590:	602a      	str	r2, [r5, #0]
 8015592:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015596:	1a5b      	subs	r3, r3, r1
 8015598:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801559c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80155a0:	612b      	str	r3, [r5, #16]
 80155a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80155a6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80155aa:	3f01      	subs	r7, #1
 80155ac:	e757      	b.n	801545e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80155ae:	ad39      	add	r5, sp, #228	; 0xe4
 80155b0:	ac19      	add	r4, sp, #100	; 0x64
 80155b2:	e72d      	b.n	8015410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80155b4:	4613      	mov	r3, r2
 80155b6:	e744      	b.n	8015442 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80155b8:	4613      	mov	r3, r2
 80155ba:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80155be:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80155c0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80155c4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80155c8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80155cc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80155d0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80155d4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80155d8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80155dc:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80155de:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80155e2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80155e6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80155ea:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80155ee:	960e      	str	r6, [sp, #56]	; 0x38
 80155f0:	469e      	mov	lr, r3
 80155f2:	461f      	mov	r7, r3
 80155f4:	f04f 0900 	mov.w	r9, #0
 80155f8:	2f00      	cmp	r7, #0
 80155fa:	d146      	bne.n	801568a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80155fc:	449c      	add	ip, r3
 80155fe:	1ad7      	subs	r7, r2, r3
 8015600:	f1b9 0f00 	cmp.w	r9, #0
 8015604:	d009      	beq.n	801561a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015606:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801560a:	9039      	str	r0, [sp, #228]	; 0xe4
 801560c:	913d      	str	r1, [sp, #244]	; 0xf4
 801560e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015612:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015616:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801561a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801561c:	910e      	str	r1, [sp, #56]	; 0x38
 801561e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015622:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015626:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801562a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801562e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015632:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015636:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801563a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801563e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015642:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015646:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801564a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801564e:	f04f 0800 	mov.w	r8, #0
 8015652:	f1be 0f00 	cmp.w	lr, #0
 8015656:	d030      	beq.n	80156ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015658:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801565a:	4431      	add	r1, r6
 801565c:	4549      	cmp	r1, r9
 801565e:	4450      	add	r0, sl
 8015660:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015664:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015668:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801566c:	db08      	blt.n	8015680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801566e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015672:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015676:	ee37 7a06 	vadd.f32	s14, s14, s12
 801567a:	3001      	adds	r0, #1
 801567c:	eba1 0109 	sub.w	r1, r1, r9
 8015680:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015684:	f04f 0801 	mov.w	r8, #1
 8015688:	e7e3      	b.n	8015652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801568a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801568c:	4431      	add	r1, r6
 801568e:	4541      	cmp	r1, r8
 8015690:	4450      	add	r0, sl
 8015692:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015696:	ee77 7a84 	vadd.f32	s15, s15, s8
 801569a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801569e:	db08      	blt.n	80156b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80156a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80156a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80156a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80156ac:	3001      	adds	r0, #1
 80156ae:	eba1 0108 	sub.w	r1, r1, r8
 80156b2:	3f01      	subs	r7, #1
 80156b4:	f04f 0901 	mov.w	r9, #1
 80156b8:	e79e      	b.n	80155f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80156ba:	449c      	add	ip, r3
 80156bc:	1aff      	subs	r7, r7, r3
 80156be:	f1b8 0f00 	cmp.w	r8, #0
 80156c2:	d009      	beq.n	80156d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80156c4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80156c8:	9019      	str	r0, [sp, #100]	; 0x64
 80156ca:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80156ce:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80156d2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80156d6:	911d      	str	r1, [sp, #116]	; 0x74
 80156d8:	1ad2      	subs	r2, r2, r3
 80156da:	e6b5      	b.n	8015448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80156dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80156de:	681b      	ldr	r3, [r3, #0]
 80156e0:	b923      	cbnz	r3, 80156ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80156e2:	4b04      	ldr	r3, [pc, #16]	; (80156f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80156e4:	6818      	ldr	r0, [r3, #0]
 80156e6:	6803      	ldr	r3, [r0, #0]
 80156e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80156ea:	4798      	blx	r3
 80156ec:	b05b      	add	sp, #364	; 0x16c
 80156ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156f2:	bf00      	nop
 80156f4:	2000dc74 	.word	0x2000dc74

080156f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 80156f8:	b570      	push	{r4, r5, r6, lr}
 80156fa:	4604      	mov	r4, r0
 80156fc:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015700:	9804      	ldr	r0, [sp, #16]
 8015702:	6061      	str	r1, [r4, #4]
 8015704:	2500      	movs	r5, #0
 8015706:	8025      	strh	r5, [r4, #0]
 8015708:	7223      	strb	r3, [r4, #8]
 801570a:	7266      	strb	r6, [r4, #9]
 801570c:	60e0      	str	r0, [r4, #12]
 801570e:	8222      	strh	r2, [r4, #16]
 8015710:	8265      	strh	r5, [r4, #18]
 8015712:	82a5      	strh	r5, [r4, #20]
 8015714:	82e5      	strh	r5, [r4, #22]
 8015716:	8325      	strh	r5, [r4, #24]
 8015718:	8365      	strh	r5, [r4, #26]
 801571a:	83a5      	strh	r5, [r4, #28]
 801571c:	77a5      	strb	r5, [r4, #30]
 801571e:	b32e      	cbz	r6, 801576c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8015720:	6803      	ldr	r3, [r0, #0]
 8015722:	695b      	ldr	r3, [r3, #20]
 8015724:	4798      	blx	r3
 8015726:	4606      	mov	r6, r0
 8015728:	b300      	cbz	r0, 801576c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801572a:	68e0      	ldr	r0, [r4, #12]
 801572c:	6803      	ldr	r3, [r0, #0]
 801572e:	4631      	mov	r1, r6
 8015730:	68db      	ldr	r3, [r3, #12]
 8015732:	4798      	blx	r3
 8015734:	4605      	mov	r5, r0
 8015736:	b1c8      	cbz	r0, 801576c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8015738:	7b43      	ldrb	r3, [r0, #13]
 801573a:	7a82      	ldrb	r2, [r0, #10]
 801573c:	005b      	lsls	r3, r3, #1
 801573e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015742:	4313      	orrs	r3, r2
 8015744:	83a3      	strh	r3, [r4, #28]
 8015746:	7a63      	ldrb	r3, [r4, #9]
 8015748:	2b04      	cmp	r3, #4
 801574a:	d10f      	bne.n	801576c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801574c:	68e0      	ldr	r0, [r4, #12]
 801574e:	6803      	ldr	r3, [r0, #0]
 8015750:	462a      	mov	r2, r5
 8015752:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015754:	4631      	mov	r1, r6
 8015756:	4798      	blx	r3
 8015758:	7b6b      	ldrb	r3, [r5, #13]
 801575a:	005b      	lsls	r3, r3, #1
 801575c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015760:	7aab      	ldrb	r3, [r5, #10]
 8015762:	4313      	orrs	r3, r2
 8015764:	4418      	add	r0, r3
 8015766:	8ba3      	ldrh	r3, [r4, #28]
 8015768:	4418      	add	r0, r3
 801576a:	83a0      	strh	r0, [r4, #28]
 801576c:	4620      	mov	r0, r4
 801576e:	bd70      	pop	{r4, r5, r6, pc}

08015770 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015774:	2400      	movs	r4, #0
 8015776:	b085      	sub	sp, #20
 8015778:	4681      	mov	r9, r0
 801577a:	4688      	mov	r8, r1
 801577c:	4692      	mov	sl, r2
 801577e:	469b      	mov	fp, r3
 8015780:	4627      	mov	r7, r4
 8015782:	4625      	mov	r5, r4
 8015784:	4626      	mov	r6, r4
 8015786:	4554      	cmp	r4, sl
 8015788:	da2a      	bge.n	80157e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801578a:	2300      	movs	r3, #0
 801578c:	9303      	str	r3, [sp, #12]
 801578e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015792:	429d      	cmp	r5, r3
 8015794:	d004      	beq.n	80157a0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015796:	f242 030b 	movw	r3, #8203	; 0x200b
 801579a:	429d      	cmp	r5, r3
 801579c:	bf18      	it	ne
 801579e:	462f      	movne	r7, r5
 80157a0:	ab03      	add	r3, sp, #12
 80157a2:	4642      	mov	r2, r8
 80157a4:	4659      	mov	r1, fp
 80157a6:	4648      	mov	r0, r9
 80157a8:	f002 ff8a 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80157ac:	4605      	mov	r5, r0
 80157ae:	b1b8      	cbz	r0, 80157e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80157b0:	280a      	cmp	r0, #10
 80157b2:	d015      	beq.n	80157e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80157b4:	9a03      	ldr	r2, [sp, #12]
 80157b6:	b18a      	cbz	r2, 80157dc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80157b8:	7b50      	ldrb	r0, [r2, #13]
 80157ba:	7a93      	ldrb	r3, [r2, #10]
 80157bc:	8895      	ldrh	r5, [r2, #4]
 80157be:	0040      	lsls	r0, r0, #1
 80157c0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80157c4:	4303      	orrs	r3, r0
 80157c6:	9301      	str	r3, [sp, #4]
 80157c8:	f8d8 3000 	ldr.w	r3, [r8]
 80157cc:	4639      	mov	r1, r7
 80157ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80157d0:	4640      	mov	r0, r8
 80157d2:	4798      	blx	r3
 80157d4:	9b01      	ldr	r3, [sp, #4]
 80157d6:	4418      	add	r0, r3
 80157d8:	4406      	add	r6, r0
 80157da:	b2b6      	uxth	r6, r6
 80157dc:	3401      	adds	r4, #1
 80157de:	e7d2      	b.n	8015786 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80157e0:	4630      	mov	r0, r6
 80157e2:	b005      	add	sp, #20
 80157e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080157e8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80157e8:	2a02      	cmp	r2, #2
 80157ea:	b530      	push	{r4, r5, lr}
 80157ec:	d011      	beq.n	8015812 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80157ee:	2a03      	cmp	r2, #3
 80157f0:	d01c      	beq.n	801582c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80157f2:	2a01      	cmp	r2, #1
 80157f4:	d10c      	bne.n	8015810 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80157f6:	888b      	ldrh	r3, [r1, #4]
 80157f8:	8801      	ldrh	r1, [r0, #0]
 80157fa:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80157fe:	8844      	ldrh	r4, [r0, #2]
 8015800:	8004      	strh	r4, [r0, #0]
 8015802:	1a5b      	subs	r3, r3, r1
 8015804:	1a9b      	subs	r3, r3, r2
 8015806:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801580a:	8043      	strh	r3, [r0, #2]
 801580c:	8081      	strh	r1, [r0, #4]
 801580e:	80c2      	strh	r2, [r0, #6]
 8015810:	bd30      	pop	{r4, r5, pc}
 8015812:	88cb      	ldrh	r3, [r1, #6]
 8015814:	8842      	ldrh	r2, [r0, #2]
 8015816:	1a9b      	subs	r3, r3, r2
 8015818:	88c2      	ldrh	r2, [r0, #6]
 801581a:	1a9b      	subs	r3, r3, r2
 801581c:	888a      	ldrh	r2, [r1, #4]
 801581e:	8801      	ldrh	r1, [r0, #0]
 8015820:	8043      	strh	r3, [r0, #2]
 8015822:	1a52      	subs	r2, r2, r1
 8015824:	8881      	ldrh	r1, [r0, #4]
 8015826:	1a52      	subs	r2, r2, r1
 8015828:	8002      	strh	r2, [r0, #0]
 801582a:	e7f1      	b.n	8015810 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801582c:	88cb      	ldrh	r3, [r1, #6]
 801582e:	8841      	ldrh	r1, [r0, #2]
 8015830:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015834:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015838:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801583c:	8045      	strh	r5, [r0, #2]
 801583e:	1a5b      	subs	r3, r3, r1
 8015840:	1a9b      	subs	r3, r3, r2
 8015842:	8003      	strh	r3, [r0, #0]
 8015844:	8082      	strh	r2, [r0, #4]
 8015846:	80c4      	strh	r4, [r0, #6]
 8015848:	e7e2      	b.n	8015810 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801584a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801584a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801584e:	b09f      	sub	sp, #124	; 0x7c
 8015850:	9116      	str	r1, [sp, #88]	; 0x58
 8015852:	9317      	str	r3, [sp, #92]	; 0x5c
 8015854:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015856:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015858:	8809      	ldrh	r1, [r1, #0]
 801585a:	889b      	ldrh	r3, [r3, #4]
 801585c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015860:	9212      	str	r2, [sp, #72]	; 0x48
 8015862:	440b      	add	r3, r1
 8015864:	b21b      	sxth	r3, r3
 8015866:	9310      	str	r3, [sp, #64]	; 0x40
 8015868:	f8d8 3000 	ldr.w	r3, [r8]
 801586c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015870:	7a59      	ldrb	r1, [r3, #9]
 8015872:	7a1b      	ldrb	r3, [r3, #8]
 8015874:	9011      	str	r0, [sp, #68]	; 0x44
 8015876:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801587a:	9114      	str	r1, [sp, #80]	; 0x50
 801587c:	9315      	str	r3, [sp, #84]	; 0x54
 801587e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8015882:	2a00      	cmp	r2, #0
 8015884:	d06a      	beq.n	801595c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015886:	f898 3010 	ldrb.w	r3, [r8, #16]
 801588a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801588c:	2b04      	cmp	r3, #4
 801588e:	bf14      	ite	ne
 8015890:	2301      	movne	r3, #1
 8015892:	2302      	moveq	r3, #2
 8015894:	4413      	add	r3, r2
 8015896:	f04f 0900 	mov.w	r9, #0
 801589a:	930f      	str	r3, [sp, #60]	; 0x3c
 801589c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80158a0:	464c      	mov	r4, r9
 80158a2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80158a6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80158aa:	4293      	cmp	r3, r2
 80158ac:	f280 808f 	bge.w	80159ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80158b0:	2300      	movs	r3, #0
 80158b2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80158b6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80158ba:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80158be:	429c      	cmp	r4, r3
 80158c0:	d006      	beq.n	80158d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80158c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158c4:	f242 020b 	movw	r2, #8203	; 0x200b
 80158c8:	4294      	cmp	r4, r2
 80158ca:	bf18      	it	ne
 80158cc:	4623      	movne	r3, r4
 80158ce:	930d      	str	r3, [sp, #52]	; 0x34
 80158d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158d2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80158d4:	f8d8 2000 	ldr.w	r2, [r8]
 80158d8:	428b      	cmp	r3, r1
 80158da:	db41      	blt.n	8015960 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80158dc:	6813      	ldr	r3, [r2, #0]
 80158de:	4610      	mov	r0, r2
 80158e0:	695b      	ldr	r3, [r3, #20]
 80158e2:	4798      	blx	r3
 80158e4:	4604      	mov	r4, r0
 80158e6:	f8d8 0000 	ldr.w	r0, [r8]
 80158ea:	6803      	ldr	r3, [r0, #0]
 80158ec:	aa1d      	add	r2, sp, #116	; 0x74
 80158ee:	689e      	ldr	r6, [r3, #8]
 80158f0:	4621      	mov	r1, r4
 80158f2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80158f6:	47b0      	blx	r6
 80158f8:	901c      	str	r0, [sp, #112]	; 0x70
 80158fa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80158fe:	429c      	cmp	r4, r3
 8015900:	f000 80e9 	beq.w	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8015904:	f242 030b 	movw	r3, #8203	; 0x200b
 8015908:	429c      	cmp	r4, r3
 801590a:	f000 80e4 	beq.w	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801590e:	2c00      	cmp	r4, #0
 8015910:	f000 80f6 	beq.w	8015b00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8015914:	2c0a      	cmp	r4, #10
 8015916:	d060      	beq.n	80159da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015918:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801591a:	b36a      	cbz	r2, 8015978 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801591c:	8894      	ldrh	r4, [r2, #4]
 801591e:	f1bb 0f00 	cmp.w	fp, #0
 8015922:	d03b      	beq.n	801599c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015924:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015928:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801592c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015930:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015934:	f1bb 0f01 	cmp.w	fp, #1
 8015938:	ea49 0903 	orr.w	r9, r9, r3
 801593c:	d134      	bne.n	80159a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801593e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015940:	eba5 0509 	sub.w	r5, r5, r9
 8015944:	2b00      	cmp	r3, #0
 8015946:	d14f      	bne.n	80159e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015948:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801594a:	eb09 0305 	add.w	r3, r9, r5
 801594e:	4413      	add	r3, r2
 8015950:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015952:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015956:	4293      	cmp	r3, r2
 8015958:	da51      	bge.n	80159fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801595a:	e038      	b.n	80159ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801595c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801595e:	e79a      	b.n	8015896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015960:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015964:	9301      	str	r3, [sp, #4]
 8015966:	ab1d      	add	r3, sp, #116	; 0x74
 8015968:	9300      	str	r3, [sp, #0]
 801596a:	4659      	mov	r1, fp
 801596c:	ab1c      	add	r3, sp, #112	; 0x70
 801596e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015970:	f002 feef 	bl	8018752 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015974:	4604      	mov	r4, r0
 8015976:	e7c0      	b.n	80158fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015978:	f8d8 0000 	ldr.w	r0, [r8]
 801597c:	6803      	ldr	r3, [r0, #0]
 801597e:	691b      	ldr	r3, [r3, #16]
 8015980:	4798      	blx	r3
 8015982:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015986:	4298      	cmp	r0, r3
 8015988:	f000 80a5 	beq.w	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801598c:	f242 030b 	movw	r3, #8203	; 0x200b
 8015990:	4298      	cmp	r0, r3
 8015992:	f000 80a0 	beq.w	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8015996:	f1bb 0f00 	cmp.w	fp, #0
 801599a:	d100      	bne.n	801599e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801599c:	444d      	add	r5, r9
 801599e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80159a0:	2a00      	cmp	r2, #0
 80159a2:	d1bf      	bne.n	8015924 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80159a4:	4691      	mov	r9, r2
 80159a6:	e096      	b.n	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80159a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159aa:	2b00      	cmp	r3, #0
 80159ac:	f000 80aa 	beq.w	8015b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80159b0:	f1bb 0f00 	cmp.w	fp, #0
 80159b4:	d118      	bne.n	80159e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80159b6:	f8d8 0000 	ldr.w	r0, [r8]
 80159ba:	990d      	ldr	r1, [sp, #52]	; 0x34
 80159bc:	6803      	ldr	r3, [r0, #0]
 80159be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80159c0:	4798      	blx	r3
 80159c2:	4405      	add	r5, r0
 80159c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80159c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80159c8:	1aeb      	subs	r3, r5, r3
 80159ca:	4293      	cmp	r3, r2
 80159cc:	dd17      	ble.n	80159fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80159ce:	2c00      	cmp	r4, #0
 80159d0:	f000 8096 	beq.w	8015b00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80159d4:	2c0a      	cmp	r4, #10
 80159d6:	f040 8084 	bne.w	8015ae2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80159da:	240a      	movs	r4, #10
 80159dc:	fab4 f084 	clz	r0, r4
 80159e0:	0940      	lsrs	r0, r0, #5
 80159e2:	b01f      	add	sp, #124	; 0x7c
 80159e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159e8:	f8d8 0000 	ldr.w	r0, [r8]
 80159ec:	990d      	ldr	r1, [sp, #52]	; 0x34
 80159ee:	6803      	ldr	r3, [r0, #0]
 80159f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80159f2:	4798      	blx	r3
 80159f4:	f1bb 0f01 	cmp.w	fp, #1
 80159f8:	eba5 0500 	sub.w	r5, r5, r0
 80159fc:	d0a4      	beq.n	8015948 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80159fe:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015a00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a02:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015a06:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015a0a:	7b43      	ldrb	r3, [r0, #13]
 8015a0c:	015b      	lsls	r3, r3, #5
 8015a0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015a12:	7983      	ldrb	r3, [r0, #6]
 8015a14:	4429      	add	r1, r5
 8015a16:	4313      	orrs	r3, r2
 8015a18:	440b      	add	r3, r1
 8015a1a:	42b3      	cmp	r3, r6
 8015a1c:	db5b      	blt.n	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8015a1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a20:	4299      	cmp	r1, r3
 8015a22:	da58      	bge.n	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8015a24:	f8d8 0000 	ldr.w	r0, [r8]
 8015a28:	6803      	ldr	r3, [r0, #0]
 8015a2a:	42ae      	cmp	r6, r5
 8015a2c:	bfc8      	it	gt
 8015a2e:	1b76      	subgt	r6, r6, r5
 8015a30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015a32:	bfcc      	ite	gt
 8015a34:	b2b6      	uxthgt	r6, r6
 8015a36:	2600      	movle	r6, #0
 8015a38:	4798      	blx	r3
 8015a3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015a3c:	7b5a      	ldrb	r2, [r3, #13]
 8015a3e:	00d1      	lsls	r1, r2, #3
 8015a40:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8015a44:	7a19      	ldrb	r1, [r3, #8]
 8015a46:	4339      	orrs	r1, r7
 8015a48:	0657      	lsls	r7, r2, #25
 8015a4a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8015a4c:	bf44      	itt	mi
 8015a4e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015a52:	b209      	sxthmi	r1, r1
 8015a54:	19c7      	adds	r7, r0, r7
 8015a56:	1a7f      	subs	r7, r7, r1
 8015a58:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015a5a:	b2bf      	uxth	r7, r7
 8015a5c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015a60:	fa0f fa87 	sxth.w	sl, r7
 8015a64:	4551      	cmp	r1, sl
 8015a66:	dd3a      	ble.n	8015ade <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8015a68:	0112      	lsls	r2, r2, #4
 8015a6a:	79d8      	ldrb	r0, [r3, #7]
 8015a6c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015a70:	4302      	orrs	r2, r0
 8015a72:	4492      	add	sl, r2
 8015a74:	4551      	cmp	r1, sl
 8015a76:	dc2e      	bgt.n	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8015a78:	1bcf      	subs	r7, r1, r7
 8015a7a:	b2bf      	uxth	r7, r7
 8015a7c:	468a      	mov	sl, r1
 8015a7e:	9319      	str	r3, [sp, #100]	; 0x64
 8015a80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a82:	f8d8 0000 	ldr.w	r0, [r8]
 8015a86:	681a      	ldr	r2, [r3, #0]
 8015a88:	6801      	ldr	r1, [r0, #0]
 8015a8a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015a8c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015a8e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a90:	9218      	str	r2, [sp, #96]	; 0x60
 8015a92:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8015a94:	4788      	blx	r1
 8015a96:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015a9a:	910b      	str	r1, [sp, #44]	; 0x2c
 8015a9c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015aa0:	910a      	str	r1, [sp, #40]	; 0x28
 8015aa2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015aa6:	9109      	str	r1, [sp, #36]	; 0x24
 8015aa8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015aaa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015aae:	9305      	str	r3, [sp, #20]
 8015ab0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015ab2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015ab4:	9206      	str	r2, [sp, #24]
 8015ab6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015aba:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8015abe:	e9cd a601 	strd	sl, r6, [sp, #4]
 8015ac2:	442e      	add	r6, r5
 8015ac4:	b236      	sxth	r6, r6
 8015ac6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ac8:	9600      	str	r6, [sp, #0]
 8015aca:	681a      	ldr	r2, [r3, #0]
 8015acc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015ace:	685b      	ldr	r3, [r3, #4]
 8015ad0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ad2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015ad4:	47b0      	blx	r6
 8015ad6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ad8:	3301      	adds	r3, #1
 8015ada:	930e      	str	r3, [sp, #56]	; 0x38
 8015adc:	e6e3      	b.n	80158a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015ade:	2700      	movs	r7, #0
 8015ae0:	e7cd      	b.n	8015a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015ae2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015ae4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015ae6:	3501      	adds	r5, #1
 8015ae8:	429d      	cmp	r5, r3
 8015aea:	f6bf af77 	bge.w	80159dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015aee:	4659      	mov	r1, fp
 8015af0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015af2:	f7f3 f90d 	bl	8008d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015af6:	4604      	mov	r4, r0
 8015af8:	b110      	cbz	r0, 8015b00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8015afa:	280a      	cmp	r0, #10
 8015afc:	d1f2      	bne.n	8015ae4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8015afe:	e76c      	b.n	80159da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015b00:	2400      	movs	r4, #0
 8015b02:	e76b      	b.n	80159dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015b04:	f1bb 0f00 	cmp.w	fp, #0
 8015b08:	f43f af5c 	beq.w	80159c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015b0c:	e777      	b.n	80159fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015b0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015b0e:	b530      	push	{r4, r5, lr}
 8015b10:	8a44      	ldrh	r4, [r0, #18]
 8015b12:	8ac5      	ldrh	r5, [r0, #22]
 8015b14:	82c3      	strh	r3, [r0, #22]
 8015b16:	442c      	add	r4, r5
 8015b18:	1ae4      	subs	r4, r4, r3
 8015b1a:	8244      	strh	r4, [r0, #18]
 8015b1c:	8b03      	ldrh	r3, [r0, #24]
 8015b1e:	8a84      	ldrh	r4, [r0, #20]
 8015b20:	4422      	add	r2, r4
 8015b22:	440c      	add	r4, r1
 8015b24:	1a59      	subs	r1, r3, r1
 8015b26:	8342      	strh	r2, [r0, #26]
 8015b28:	8284      	strh	r4, [r0, #20]
 8015b2a:	8301      	strh	r1, [r0, #24]
 8015b2c:	bd30      	pop	{r4, r5, pc}

08015b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8015b2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b32:	7a43      	ldrb	r3, [r0, #9]
 8015b34:	1eda      	subs	r2, r3, #3
 8015b36:	b087      	sub	sp, #28
 8015b38:	4604      	mov	r4, r0
 8015b3a:	b2d2      	uxtb	r2, r2
 8015b3c:	460f      	mov	r7, r1
 8015b3e:	2900      	cmp	r1, #0
 8015b40:	d036      	beq.n	8015bb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8015b42:	2a01      	cmp	r2, #1
 8015b44:	d932      	bls.n	8015bac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8015b46:	1e58      	subs	r0, r3, #1
 8015b48:	f1d0 0b00 	rsbs	fp, r0, #0
 8015b4c:	eb4b 0b00 	adc.w	fp, fp, r0
 8015b50:	1e99      	subs	r1, r3, #2
 8015b52:	424b      	negs	r3, r1
 8015b54:	414b      	adcs	r3, r1
 8015b56:	9303      	str	r3, [sp, #12]
 8015b58:	2300      	movs	r3, #0
 8015b5a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8015b5e:	2500      	movs	r5, #0
 8015b60:	8265      	strh	r5, [r4, #18]
 8015b62:	82a5      	strh	r5, [r4, #20]
 8015b64:	46a9      	mov	r9, r5
 8015b66:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8015b6a:	2300      	movs	r3, #0
 8015b6c:	9305      	str	r3, [sp, #20]
 8015b6e:	8823      	ldrh	r3, [r4, #0]
 8015b70:	2b20      	cmp	r3, #32
 8015b72:	d02b      	beq.n	8015bcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8015b74:	eba3 020a 	sub.w	r2, r3, sl
 8015b78:	4256      	negs	r6, r2
 8015b7a:	4156      	adcs	r6, r2
 8015b7c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015b80:	4293      	cmp	r3, r2
 8015b82:	d004      	beq.n	8015b8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8015b84:	4553      	cmp	r3, sl
 8015b86:	bf16      	itet	ne
 8015b88:	4699      	movne	r9, r3
 8015b8a:	2601      	moveq	r6, #1
 8015b8c:	2600      	movne	r6, #0
 8015b8e:	ab05      	add	r3, sp, #20
 8015b90:	68e2      	ldr	r2, [r4, #12]
 8015b92:	7a21      	ldrb	r1, [r4, #8]
 8015b94:	6860      	ldr	r0, [r4, #4]
 8015b96:	f002 fd93 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b9a:	8020      	strh	r0, [r4, #0]
 8015b9c:	b9c8      	cbnz	r0, 8015bd2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8015b9e:	8b22      	ldrh	r2, [r4, #24]
 8015ba0:	2300      	movs	r3, #0
 8015ba2:	4611      	mov	r1, r2
 8015ba4:	4620      	mov	r0, r4
 8015ba6:	f7ff ffb2 	bl	8015b0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015baa:	e066      	b.n	8015c7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8015bac:	468b      	mov	fp, r1
 8015bae:	e7cf      	b.n	8015b50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8015bb0:	3b01      	subs	r3, #1
 8015bb2:	2a01      	cmp	r2, #1
 8015bb4:	bf8c      	ite	hi
 8015bb6:	2200      	movhi	r2, #0
 8015bb8:	2201      	movls	r2, #1
 8015bba:	2b01      	cmp	r3, #1
 8015bbc:	bf8c      	ite	hi
 8015bbe:	2300      	movhi	r3, #0
 8015bc0:	2301      	movls	r3, #1
 8015bc2:	9202      	str	r2, [sp, #8]
 8015bc4:	9301      	str	r3, [sp, #4]
 8015bc6:	9103      	str	r1, [sp, #12]
 8015bc8:	468b      	mov	fp, r1
 8015bca:	e7c8      	b.n	8015b5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8015bcc:	4699      	mov	r9, r3
 8015bce:	2601      	movs	r6, #1
 8015bd0:	e7dd      	b.n	8015b8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8015bd2:	8ae3      	ldrh	r3, [r4, #22]
 8015bd4:	280a      	cmp	r0, #10
 8015bd6:	f103 0301 	add.w	r3, r3, #1
 8015bda:	82e3      	strh	r3, [r4, #22]
 8015bdc:	d0df      	beq.n	8015b9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8015bde:	9a05      	ldr	r2, [sp, #20]
 8015be0:	bb42      	cbnz	r2, 8015c34 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8015be2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015be6:	4298      	cmp	r0, r3
 8015be8:	d001      	beq.n	8015bee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015bea:	4550      	cmp	r0, sl
 8015bec:	d1bd      	bne.n	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015bee:	8823      	ldrh	r3, [r4, #0]
 8015bf0:	8b21      	ldrh	r1, [r4, #24]
 8015bf2:	2b20      	cmp	r3, #32
 8015bf4:	d001      	beq.n	8015bfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8015bf6:	4553      	cmp	r3, sl
 8015bf8:	d131      	bne.n	8015c5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8015bfa:	2e00      	cmp	r6, #0
 8015bfc:	bf0a      	itet	eq
 8015bfe:	460d      	moveq	r5, r1
 8015c00:	4630      	movne	r0, r6
 8015c02:	2001      	moveq	r0, #1
 8015c04:	440a      	add	r2, r1
 8015c06:	8aa3      	ldrh	r3, [r4, #20]
 8015c08:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015c0c:	b292      	uxth	r2, r2
 8015c0e:	8322      	strh	r2, [r4, #24]
 8015c10:	4413      	add	r3, r2
 8015c12:	2f00      	cmp	r7, #0
 8015c14:	d03a      	beq.n	8015c8c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8015c16:	f1bb 0f00 	cmp.w	fp, #0
 8015c1a:	d102      	bne.n	8015c22 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8015c1c:	9903      	ldr	r1, [sp, #12]
 8015c1e:	b301      	cbz	r1, 8015c62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8015c20:	b1f8      	cbz	r0, 8015c62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8015c22:	8ba1      	ldrh	r1, [r4, #28]
 8015c24:	4419      	add	r1, r3
 8015c26:	458c      	cmp	ip, r1
 8015c28:	da2a      	bge.n	8015c80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015c2a:	8a61      	ldrh	r1, [r4, #18]
 8015c2c:	b341      	cbz	r1, 8015c80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015c2e:	4563      	cmp	r3, ip
 8015c30:	dd9b      	ble.n	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015c32:	e01c      	b.n	8015c6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8015c34:	8893      	ldrh	r3, [r2, #4]
 8015c36:	8023      	strh	r3, [r4, #0]
 8015c38:	f892 800d 	ldrb.w	r8, [r2, #13]
 8015c3c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015c40:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8015c44:	f892 800a 	ldrb.w	r8, [r2, #10]
 8015c48:	ea48 0800 	orr.w	r8, r8, r0
 8015c4c:	68e0      	ldr	r0, [r4, #12]
 8015c4e:	6803      	ldr	r3, [r0, #0]
 8015c50:	4649      	mov	r1, r9
 8015c52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015c54:	4798      	blx	r3
 8015c56:	eb08 0200 	add.w	r2, r8, r0
 8015c5a:	b292      	uxth	r2, r2
 8015c5c:	e7c7      	b.n	8015bee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015c5e:	2000      	movs	r0, #0
 8015c60:	e7d0      	b.n	8015c04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8015c62:	4563      	cmp	r3, ip
 8015c64:	dd81      	ble.n	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015c66:	8a63      	ldrh	r3, [r4, #18]
 8015c68:	2b00      	cmp	r3, #0
 8015c6a:	f43f af7e 	beq.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015c6e:	2301      	movs	r3, #1
 8015c70:	77a3      	strb	r3, [r4, #30]
 8015c72:	8ba2      	ldrh	r2, [r4, #28]
 8015c74:	8b63      	ldrh	r3, [r4, #26]
 8015c76:	4413      	add	r3, r2
 8015c78:	8363      	strh	r3, [r4, #26]
 8015c7a:	b007      	add	sp, #28
 8015c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c80:	2300      	movs	r3, #0
 8015c82:	4611      	mov	r1, r2
 8015c84:	4620      	mov	r0, r4
 8015c86:	f7ff ff42 	bl	8015b0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015c8a:	e76e      	b.n	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015c8c:	4563      	cmp	r3, ip
 8015c8e:	dd14      	ble.n	8015cba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8015c90:	9b02      	ldr	r3, [sp, #8]
 8015c92:	b113      	cbz	r3, 8015c9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8015c94:	2301      	movs	r3, #1
 8015c96:	460a      	mov	r2, r1
 8015c98:	e783      	b.n	8015ba2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8015c9a:	9b01      	ldr	r3, [sp, #4]
 8015c9c:	2b00      	cmp	r3, #0
 8015c9e:	f43f af64 	beq.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015ca2:	2800      	cmp	r0, #0
 8015ca4:	f47f af61 	bne.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015ca8:	b116      	cbz	r6, 8015cb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8015caa:	2301      	movs	r3, #1
 8015cac:	462a      	mov	r2, r5
 8015cae:	e779      	b.n	8015ba4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8015cb0:	8a63      	ldrh	r3, [r4, #18]
 8015cb2:	2b00      	cmp	r3, #0
 8015cb4:	f43f af59 	beq.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015cb8:	e7df      	b.n	8015c7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8015cba:	2800      	cmp	r0, #0
 8015cbc:	f47f af55 	bne.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015cc0:	2e00      	cmp	r6, #0
 8015cc2:	f43f af52 	beq.w	8015b6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015cc6:	2301      	movs	r3, #1
 8015cc8:	462a      	mov	r2, r5
 8015cca:	e7db      	b.n	8015c84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08015ccc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015ccc:	b530      	push	{r4, r5, lr}
 8015cce:	4605      	mov	r5, r0
 8015cd0:	b08b      	sub	sp, #44	; 0x2c
 8015cd2:	b191      	cbz	r1, 8015cfa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8015cd4:	e9cd 3100 	strd	r3, r1, [sp]
 8015cd8:	4613      	mov	r3, r2
 8015cda:	4601      	mov	r1, r0
 8015cdc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015ce0:	a802      	add	r0, sp, #8
 8015ce2:	f7ff fd09 	bl	80156f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015ce6:	2401      	movs	r4, #1
 8015ce8:	2100      	movs	r1, #0
 8015cea:	a802      	add	r0, sp, #8
 8015cec:	f7ff ff1f 	bl	8015b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015cf0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015cf4:	b163      	cbz	r3, 8015d10 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015cf6:	3401      	adds	r4, #1
 8015cf8:	e7f6      	b.n	8015ce8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8015cfa:	f002 fdaf 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cfe:	2401      	movs	r4, #1
 8015d00:	280a      	cmp	r0, #10
 8015d02:	4628      	mov	r0, r5
 8015d04:	bf08      	it	eq
 8015d06:	3401      	addeq	r4, #1
 8015d08:	f002 fda8 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d0c:	2800      	cmp	r0, #0
 8015d0e:	d1f7      	bne.n	8015d00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015d10:	b2a0      	uxth	r0, r4
 8015d12:	b00b      	add	sp, #44	; 0x2c
 8015d14:	bd30      	pop	{r4, r5, pc}

08015d16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015d16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d1a:	b0e5      	sub	sp, #404	; 0x194
 8015d1c:	4689      	mov	r9, r1
 8015d1e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8015d22:	900a      	str	r0, [sp, #40]	; 0x28
 8015d24:	461c      	mov	r4, r3
 8015d26:	f1ba 0f00 	cmp.w	sl, #0
 8015d2a:	f000 80b4 	beq.w	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015d2e:	681b      	ldr	r3, [r3, #0]
 8015d30:	2b00      	cmp	r3, #0
 8015d32:	f000 80b0 	beq.w	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015d36:	7ba3      	ldrb	r3, [r4, #14]
 8015d38:	2b00      	cmp	r3, #0
 8015d3a:	f000 80ac 	beq.w	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015d3e:	6810      	ldr	r0, [r2, #0]
 8015d40:	6851      	ldr	r1, [r2, #4]
 8015d42:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8015d46:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015d4a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8015d4e:	4643      	mov	r3, r8
 8015d50:	c303      	stmia	r3!, {r0, r1}
 8015d52:	2500      	movs	r5, #0
 8015d54:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8015d58:	79a2      	ldrb	r2, [r4, #6]
 8015d5a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015d5e:	a90f      	add	r1, sp, #60	; 0x3c
 8015d60:	4640      	mov	r0, r8
 8015d62:	950f      	str	r5, [sp, #60]	; 0x3c
 8015d64:	f7ff fd40 	bl	80157e8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d68:	a90f      	add	r1, sp, #60	; 0x3c
 8015d6a:	4608      	mov	r0, r1
 8015d6c:	79a2      	ldrb	r2, [r4, #6]
 8015d6e:	af19      	add	r7, sp, #100	; 0x64
 8015d70:	f7ff fd3a 	bl	80157e8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d74:	4638      	mov	r0, r7
 8015d76:	f002 f945 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8015d7a:	6820      	ldr	r0, [r4, #0]
 8015d7c:	6803      	ldr	r3, [r0, #0]
 8015d7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d80:	4798      	blx	r3
 8015d82:	4606      	mov	r6, r0
 8015d84:	6820      	ldr	r0, [r4, #0]
 8015d86:	6803      	ldr	r3, [r0, #0]
 8015d88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d8a:	4798      	blx	r3
 8015d8c:	4633      	mov	r3, r6
 8015d8e:	9000      	str	r0, [sp, #0]
 8015d90:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8015d92:	4651      	mov	r1, sl
 8015d94:	4638      	mov	r0, r7
 8015d96:	f002 f990 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d9a:	6820      	ldr	r0, [r4, #0]
 8015d9c:	7923      	ldrb	r3, [r4, #4]
 8015d9e:	9308      	str	r3, [sp, #32]
 8015da0:	6803      	ldr	r3, [r0, #0]
 8015da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015da4:	4798      	blx	r3
 8015da6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8015daa:	181e      	adds	r6, r3, r0
 8015dac:	42ae      	cmp	r6, r5
 8015dae:	dd06      	ble.n	8015dbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8015db0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8015db4:	4282      	cmp	r2, r0
 8015db6:	bfa4      	itt	ge
 8015db8:	189d      	addge	r5, r3, r2
 8015dba:	fb95 f5f6 	sdivge	r5, r5, r6
 8015dbe:	a832      	add	r0, sp, #200	; 0xc8
 8015dc0:	f002 f920 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8015dc4:	7c23      	ldrb	r3, [r4, #16]
 8015dc6:	b17b      	cbz	r3, 8015de8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8015dc8:	6820      	ldr	r0, [r4, #0]
 8015dca:	6803      	ldr	r3, [r0, #0]
 8015dcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015dce:	4798      	blx	r3
 8015dd0:	4683      	mov	fp, r0
 8015dd2:	6820      	ldr	r0, [r4, #0]
 8015dd4:	6803      	ldr	r3, [r0, #0]
 8015dd6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015dd8:	4798      	blx	r3
 8015dda:	465b      	mov	r3, fp
 8015ddc:	9000      	str	r0, [sp, #0]
 8015dde:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8015de0:	4651      	mov	r1, sl
 8015de2:	a832      	add	r0, sp, #200	; 0xc8
 8015de4:	f002 f969 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015de8:	7be1      	ldrb	r1, [r4, #15]
 8015dea:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015dee:	7963      	ldrb	r3, [r4, #5]
 8015df0:	1a52      	subs	r2, r2, r1
 8015df2:	7c21      	ldrb	r1, [r4, #16]
 8015df4:	9101      	str	r1, [sp, #4]
 8015df6:	6821      	ldr	r1, [r4, #0]
 8015df8:	9100      	str	r1, [sp, #0]
 8015dfa:	b292      	uxth	r2, r2
 8015dfc:	a932      	add	r1, sp, #200	; 0xc8
 8015dfe:	a811      	add	r0, sp, #68	; 0x44
 8015e00:	f7ff fc7a 	bl	80156f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015e04:	7c23      	ldrb	r3, [r4, #16]
 8015e06:	b9bb      	cbnz	r3, 8015e38 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8015e08:	fa1f fa86 	uxth.w	sl, r6
 8015e0c:	2d00      	cmp	r5, #0
 8015e0e:	dd45      	ble.n	8015e9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8015e10:	4638      	mov	r0, r7
 8015e12:	f002 fd23 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015e16:	2800      	cmp	r0, #0
 8015e18:	d03d      	beq.n	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015e1a:	280a      	cmp	r0, #10
 8015e1c:	d1f6      	bne.n	8015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8015e1e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015e22:	4453      	add	r3, sl
 8015e24:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015e28:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8015e2c:	eba3 030a 	sub.w	r3, r3, sl
 8015e30:	3d01      	subs	r5, #1
 8015e32:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015e36:	e7e9      	b.n	8015e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8015e38:	0073      	lsls	r3, r6, #1
 8015e3a:	9309      	str	r3, [sp, #36]	; 0x24
 8015e3c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8015e40:	fa1f fa86 	uxth.w	sl, r6
 8015e44:	2d00      	cmp	r5, #0
 8015e46:	dd29      	ble.n	8015e9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8015e48:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8015e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e4e:	428b      	cmp	r3, r1
 8015e50:	bfd4      	ite	le
 8015e52:	2100      	movle	r1, #0
 8015e54:	2101      	movgt	r1, #1
 8015e56:	a811      	add	r0, sp, #68	; 0x44
 8015e58:	f7ff fe69 	bl	8015b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015e5c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8015e60:	3b01      	subs	r3, #1
 8015e62:	b29b      	uxth	r3, r3
 8015e64:	455b      	cmp	r3, fp
 8015e66:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e68:	d005      	beq.n	8015e76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8015e6a:	7961      	ldrb	r1, [r4, #5]
 8015e6c:	4638      	mov	r0, r7
 8015e6e:	f7f2 ff4f 	bl	8008d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e74:	e7f4      	b.n	8015e60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8015e76:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015e7a:	4453      	add	r3, sl
 8015e7c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015e80:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8015e84:	eba3 030a 	sub.w	r3, r3, sl
 8015e88:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015e8c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8015e90:	3d01      	subs	r5, #1
 8015e92:	2b00      	cmp	r3, #0
 8015e94:	d1d6      	bne.n	8015e44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8015e96:	b065      	add	sp, #404	; 0x194
 8015e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e9c:	0075      	lsls	r5, r6, #1
 8015e9e:	f04f 0a00 	mov.w	sl, #0
 8015ea2:	7c23      	ldrb	r3, [r4, #16]
 8015ea4:	2b00      	cmp	r3, #0
 8015ea6:	d066      	beq.n	8015f76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8015ea8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8015eac:	428d      	cmp	r5, r1
 8015eae:	bfd4      	ite	le
 8015eb0:	2100      	movle	r1, #0
 8015eb2:	2101      	movgt	r1, #1
 8015eb4:	a811      	add	r0, sp, #68	; 0x44
 8015eb6:	f7ff fe3a 	bl	8015b2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015eba:	9b08      	ldr	r3, [sp, #32]
 8015ebc:	2b00      	cmp	r3, #0
 8015ebe:	d055      	beq.n	8015f6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015ec0:	f894 b010 	ldrb.w	fp, [r4, #16]
 8015ec4:	2264      	movs	r2, #100	; 0x64
 8015ec6:	4639      	mov	r1, r7
 8015ec8:	a84b      	add	r0, sp, #300	; 0x12c
 8015eca:	f00f fde5 	bl	8025a98 <memcpy>
 8015ece:	f1bb 0f00 	cmp.w	fp, #0
 8015ed2:	d058      	beq.n	8015f86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8015ed4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015ed8:	7922      	ldrb	r2, [r4, #4]
 8015eda:	2a01      	cmp	r2, #1
 8015edc:	d13c      	bne.n	8015f58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8015ede:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8015ee2:	1ac0      	subs	r0, r0, r3
 8015ee4:	2302      	movs	r3, #2
 8015ee6:	fb90 f0f3 	sdiv	r0, r0, r3
 8015eea:	b200      	sxth	r0, r0
 8015eec:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8015ef0:	4418      	add	r0, r3
 8015ef2:	7c23      	ldrb	r3, [r4, #16]
 8015ef4:	b200      	sxth	r0, r0
 8015ef6:	2b00      	cmp	r3, #0
 8015ef8:	d03a      	beq.n	8015f70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8015efa:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8015efe:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8015f02:	9000      	str	r0, [sp, #0]
 8015f04:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015f08:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8015f0c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015f0e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8015f12:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8015f16:	464a      	mov	r2, r9
 8015f18:	2100      	movs	r1, #0
 8015f1a:	f7ff fc96 	bl	801584a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015f1e:	2800      	cmp	r0, #0
 8015f20:	d1b9      	bne.n	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015f22:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015f26:	b2b2      	uxth	r2, r6
 8015f28:	4611      	mov	r1, r2
 8015f2a:	4413      	add	r3, r2
 8015f2c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8015f30:	1a52      	subs	r2, r2, r1
 8015f32:	7c21      	ldrb	r1, [r4, #16]
 8015f34:	b21b      	sxth	r3, r3
 8015f36:	b212      	sxth	r2, r2
 8015f38:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015f3c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015f40:	b109      	cbz	r1, 8015f46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8015f42:	42b2      	cmp	r2, r6
 8015f44:	dba7      	blt.n	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015f46:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8015f4a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8015f4e:	440a      	add	r2, r1
 8015f50:	b212      	sxth	r2, r2
 8015f52:	4293      	cmp	r3, r2
 8015f54:	dda5      	ble.n	8015ea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8015f56:	e79e      	b.n	8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015f58:	2a02      	cmp	r2, #2
 8015f5a:	d105      	bne.n	8015f68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015f5c:	7be2      	ldrb	r2, [r4, #15]
 8015f5e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8015f62:	1a80      	subs	r0, r0, r2
 8015f64:	1ac0      	subs	r0, r0, r3
 8015f66:	e7c0      	b.n	8015eea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8015f68:	2000      	movs	r0, #0
 8015f6a:	e7bf      	b.n	8015eec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8015f6c:	7be0      	ldrb	r0, [r4, #15]
 8015f6e:	e7bd      	b.n	8015eec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8015f70:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f74:	e7c3      	b.n	8015efe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8015f76:	9b08      	ldr	r3, [sp, #32]
 8015f78:	2b00      	cmp	r3, #0
 8015f7a:	d0f7      	beq.n	8015f6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015f7c:	2264      	movs	r2, #100	; 0x64
 8015f7e:	4639      	mov	r1, r7
 8015f80:	a84b      	add	r0, sp, #300	; 0x12c
 8015f82:	f00f fd89 	bl	8025a98 <memcpy>
 8015f86:	2300      	movs	r3, #0
 8015f88:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f8c:	6821      	ldr	r1, [r4, #0]
 8015f8e:	a84b      	add	r0, sp, #300	; 0x12c
 8015f90:	f7ff fbee 	bl	8015770 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015f94:	b203      	sxth	r3, r0
 8015f96:	e79f      	b.n	8015ed8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08015f98 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015f98:	2b03      	cmp	r3, #3
 8015f9a:	d818      	bhi.n	8015fce <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015f9c:	e8df f003 	tbb	[pc, r3]
 8015fa0:	130d0602 	.word	0x130d0602
 8015fa4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015fa8:	1850      	adds	r0, r2, r1
 8015faa:	4770      	bx	lr
 8015fac:	8803      	ldrh	r3, [r0, #0]
 8015fae:	8880      	ldrh	r0, [r0, #4]
 8015fb0:	4418      	add	r0, r3
 8015fb2:	b200      	sxth	r0, r0
 8015fb4:	1a80      	subs	r0, r0, r2
 8015fb6:	3801      	subs	r0, #1
 8015fb8:	4770      	bx	lr
 8015fba:	8803      	ldrh	r3, [r0, #0]
 8015fbc:	8880      	ldrh	r0, [r0, #4]
 8015fbe:	4418      	add	r0, r3
 8015fc0:	b200      	sxth	r0, r0
 8015fc2:	1a40      	subs	r0, r0, r1
 8015fc4:	e7f7      	b.n	8015fb6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015fc6:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015fca:	4410      	add	r0, r2
 8015fcc:	4770      	bx	lr
 8015fce:	2000      	movs	r0, #0
 8015fd0:	4770      	bx	lr

08015fd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015fd2:	2b03      	cmp	r3, #3
 8015fd4:	d817      	bhi.n	8016006 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015fd6:	e8df f003 	tbb	[pc, r3]
 8015fda:	0602      	.short	0x0602
 8015fdc:	1009      	.short	0x1009
 8015fde:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015fe2:	1850      	adds	r0, r2, r1
 8015fe4:	4770      	bx	lr
 8015fe6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015fea:	e7fa      	b.n	8015fe2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015fec:	8843      	ldrh	r3, [r0, #2]
 8015fee:	88c0      	ldrh	r0, [r0, #6]
 8015ff0:	4418      	add	r0, r3
 8015ff2:	b200      	sxth	r0, r0
 8015ff4:	1a80      	subs	r0, r0, r2
 8015ff6:	3801      	subs	r0, #1
 8015ff8:	4770      	bx	lr
 8015ffa:	8843      	ldrh	r3, [r0, #2]
 8015ffc:	88c0      	ldrh	r0, [r0, #6]
 8015ffe:	4418      	add	r0, r3
 8016000:	b200      	sxth	r0, r0
 8016002:	1a40      	subs	r0, r0, r1
 8016004:	e7f7      	b.n	8015ff6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016006:	2000      	movs	r0, #0
 8016008:	4770      	bx	lr
	...

0801600c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801600c:	4b01      	ldr	r3, [pc, #4]	; (8016014 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801600e:	2200      	movs	r2, #0
 8016010:	601a      	str	r2, [r3, #0]
 8016012:	4770      	bx	lr
 8016014:	2000dc84 	.word	0x2000dc84

08016018 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016018:	4603      	mov	r3, r0
 801601a:	b1c8      	cbz	r0, 8016050 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801601c:	0c02      	lsrs	r2, r0, #16
 801601e:	0412      	lsls	r2, r2, #16
 8016020:	b9a2      	cbnz	r2, 801604c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8016022:	0403      	lsls	r3, r0, #16
 8016024:	2010      	movs	r0, #16
 8016026:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801602a:	bf04      	itt	eq
 801602c:	021b      	lsleq	r3, r3, #8
 801602e:	3008      	addeq	r0, #8
 8016030:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016034:	bf04      	itt	eq
 8016036:	011b      	lsleq	r3, r3, #4
 8016038:	3004      	addeq	r0, #4
 801603a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801603e:	bf04      	itt	eq
 8016040:	009b      	lsleq	r3, r3, #2
 8016042:	3002      	addeq	r0, #2
 8016044:	2b00      	cmp	r3, #0
 8016046:	db04      	blt.n	8016052 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016048:	3001      	adds	r0, #1
 801604a:	4770      	bx	lr
 801604c:	2000      	movs	r0, #0
 801604e:	e7ea      	b.n	8016026 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016050:	2020      	movs	r0, #32
 8016052:	4770      	bx	lr

08016054 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8016054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016058:	b087      	sub	sp, #28
 801605a:	4681      	mov	r9, r0
 801605c:	4698      	mov	r8, r3
 801605e:	4610      	mov	r0, r2
 8016060:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8016064:	460d      	mov	r5, r1
 8016066:	b981      	cbnz	r1, 801608a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8016068:	b14b      	cbz	r3, 801607e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 801606a:	460b      	mov	r3, r1
 801606c:	e9cd 4700 	strd	r4, r7, [sp]
 8016070:	464a      	mov	r2, r9
 8016072:	4641      	mov	r1, r8
 8016074:	f7ff ffee 	bl	8016054 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016078:	b007      	add	sp, #28
 801607a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801607e:	f04f 33ff 	mov.w	r3, #4294967295
 8016082:	603b      	str	r3, [r7, #0]
 8016084:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016088:	e7f6      	b.n	8016078 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801608a:	fa32 fa01 	lsrs.w	sl, r2, r1
 801608e:	d107      	bne.n	80160a0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8016090:	fb09 f602 	mul.w	r6, r9, r2
 8016094:	fbb6 f0f4 	udiv	r0, r6, r4
 8016098:	fb04 6610 	mls	r6, r4, r0, r6
 801609c:	603e      	str	r6, [r7, #0]
 801609e:	e7eb      	b.n	8016078 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80160a0:	2601      	movs	r6, #1
 80160a2:	408e      	lsls	r6, r1
 80160a4:	3e01      	subs	r6, #1
 80160a6:	4016      	ands	r6, r2
 80160a8:	fa09 fb01 	lsl.w	fp, r9, r1
 80160ac:	4630      	mov	r0, r6
 80160ae:	fbbb f3f4 	udiv	r3, fp, r4
 80160b2:	9302      	str	r3, [sp, #8]
 80160b4:	fb0a f303 	mul.w	r3, sl, r3
 80160b8:	9303      	str	r3, [sp, #12]
 80160ba:	f7ff ffad 	bl	8016018 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80160be:	464a      	mov	r2, r9
 80160c0:	460b      	mov	r3, r1
 80160c2:	e9cd 4700 	strd	r4, r7, [sp]
 80160c6:	4601      	mov	r1, r0
 80160c8:	4630      	mov	r0, r6
 80160ca:	f7ff ffc3 	bl	8016054 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80160ce:	9b02      	ldr	r3, [sp, #8]
 80160d0:	fb04 bb13 	mls	fp, r4, r3, fp
 80160d4:	4606      	mov	r6, r0
 80160d6:	4658      	mov	r0, fp
 80160d8:	eb05 0108 	add.w	r1, r5, r8
 80160dc:	f7ff ff9c 	bl	8016018 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80160e0:	ab05      	add	r3, sp, #20
 80160e2:	e9cd 4300 	strd	r4, r3, [sp]
 80160e6:	465a      	mov	r2, fp
 80160e8:	4603      	mov	r3, r0
 80160ea:	4650      	mov	r0, sl
 80160ec:	f7ff ffb2 	bl	8016054 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80160f0:	6839      	ldr	r1, [r7, #0]
 80160f2:	9a05      	ldr	r2, [sp, #20]
 80160f4:	9b03      	ldr	r3, [sp, #12]
 80160f6:	4411      	add	r1, r2
 80160f8:	fbb1 f2f4 	udiv	r2, r1, r4
 80160fc:	18d3      	adds	r3, r2, r3
 80160fe:	441e      	add	r6, r3
 8016100:	fb04 1412 	mls	r4, r4, r2, r1
 8016104:	4430      	add	r0, r6
 8016106:	603c      	str	r4, [r7, #0]
 8016108:	e7b6      	b.n	8016078 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801610a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801610a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801610e:	b085      	sub	sp, #20
 8016110:	f1b0 0900 	subs.w	r9, r0, #0
 8016114:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016116:	461d      	mov	r5, r3
 8016118:	bfbf      	itttt	lt
 801611a:	6823      	ldrlt	r3, [r4, #0]
 801611c:	425b      	neglt	r3, r3
 801611e:	f1c9 0900 	rsblt	r9, r9, #0
 8016122:	6023      	strlt	r3, [r4, #0]
 8016124:	bfb4      	ite	lt
 8016126:	f04f 36ff 	movlt.w	r6, #4294967295
 801612a:	2601      	movge	r6, #1
 801612c:	2a00      	cmp	r2, #0
 801612e:	4617      	mov	r7, r2
 8016130:	da04      	bge.n	801613c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016132:	6823      	ldr	r3, [r4, #0]
 8016134:	425b      	negs	r3, r3
 8016136:	4257      	negs	r7, r2
 8016138:	4276      	negs	r6, r6
 801613a:	6023      	str	r3, [r4, #0]
 801613c:	2d00      	cmp	r5, #0
 801613e:	4638      	mov	r0, r7
 8016140:	bfba      	itte	lt
 8016142:	426d      	neglt	r5, r5
 8016144:	f04f 38ff 	movlt.w	r8, #4294967295
 8016148:	f04f 0801 	movge.w	r8, #1
 801614c:	f7ff ff64 	bl	8016018 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016150:	ab03      	add	r3, sp, #12
 8016152:	e9cd 5300 	strd	r5, r3, [sp]
 8016156:	463a      	mov	r2, r7
 8016158:	4603      	mov	r3, r0
 801615a:	4648      	mov	r0, r9
 801615c:	f7ff ff7a 	bl	8016054 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016160:	6823      	ldr	r3, [r4, #0]
 8016162:	9a03      	ldr	r2, [sp, #12]
 8016164:	4546      	cmp	r6, r8
 8016166:	441a      	add	r2, r3
 8016168:	fb92 f3f5 	sdiv	r3, r2, r5
 801616c:	4418      	add	r0, r3
 801616e:	bf18      	it	ne
 8016170:	4240      	negne	r0, r0
 8016172:	fb05 2313 	mls	r3, r5, r3, r2
 8016176:	1c72      	adds	r2, r6, #1
 8016178:	6023      	str	r3, [r4, #0]
 801617a:	d105      	bne.n	8016188 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801617c:	2b00      	cmp	r3, #0
 801617e:	f1c3 0200 	rsb	r2, r3, #0
 8016182:	db0b      	blt.n	801619c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8016184:	6022      	str	r2, [r4, #0]
 8016186:	e006      	b.n	8016196 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016188:	2e01      	cmp	r6, #1
 801618a:	d104      	bne.n	8016196 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801618c:	2b00      	cmp	r3, #0
 801618e:	da02      	bge.n	8016196 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016190:	442b      	add	r3, r5
 8016192:	3801      	subs	r0, #1
 8016194:	6023      	str	r3, [r4, #0]
 8016196:	b005      	add	sp, #20
 8016198:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801619c:	3801      	subs	r0, #1
 801619e:	1b52      	subs	r2, r2, r5
 80161a0:	e7f0      	b.n	8016184 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080161a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80161a4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80161a8:	4c1c      	ldr	r4, [pc, #112]	; (801621c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80161aa:	6807      	ldr	r7, [r0, #0]
 80161ac:	69a3      	ldr	r3, [r4, #24]
 80161ae:	4605      	mov	r5, r0
 80161b0:	b92b      	cbnz	r3, 80161be <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80161b2:	6840      	ldr	r0, [r0, #4]
 80161b4:	e9c5 7000 	strd	r7, r0, [r5]
 80161b8:	b004      	add	sp, #16
 80161ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161be:	68a2      	ldr	r2, [r4, #8]
 80161c0:	6820      	ldr	r0, [r4, #0]
 80161c2:	ae04      	add	r6, sp, #16
 80161c4:	f04f 0802 	mov.w	r8, #2
 80161c8:	fb93 f1f8 	sdiv	r1, r3, r8
 80161cc:	440a      	add	r2, r1
 80161ce:	f846 2d04 	str.w	r2, [r6, #-4]!
 80161d2:	69e1      	ldr	r1, [r4, #28]
 80161d4:	9600      	str	r6, [sp, #0]
 80161d6:	463a      	mov	r2, r7
 80161d8:	f7ff ff97 	bl	801610a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161dc:	69a3      	ldr	r3, [r4, #24]
 80161de:	686a      	ldr	r2, [r5, #4]
 80161e0:	6a21      	ldr	r1, [r4, #32]
 80161e2:	9600      	str	r6, [sp, #0]
 80161e4:	4607      	mov	r7, r0
 80161e6:	6860      	ldr	r0, [r4, #4]
 80161e8:	f7ff ff8f 	bl	801610a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161ec:	6962      	ldr	r2, [r4, #20]
 80161ee:	69a3      	ldr	r3, [r4, #24]
 80161f0:	fb93 f8f8 	sdiv	r8, r3, r8
 80161f4:	4442      	add	r2, r8
 80161f6:	9203      	str	r2, [sp, #12]
 80161f8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80161fa:	682a      	ldr	r2, [r5, #0]
 80161fc:	9600      	str	r6, [sp, #0]
 80161fe:	4407      	add	r7, r0
 8016200:	68e0      	ldr	r0, [r4, #12]
 8016202:	f7ff ff82 	bl	801610a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016206:	9600      	str	r6, [sp, #0]
 8016208:	4680      	mov	r8, r0
 801620a:	69a3      	ldr	r3, [r4, #24]
 801620c:	686a      	ldr	r2, [r5, #4]
 801620e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8016210:	6920      	ldr	r0, [r4, #16]
 8016212:	f7ff ff7a 	bl	801610a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016216:	4440      	add	r0, r8
 8016218:	e7cc      	b.n	80161b4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801621a:	bf00      	nop
 801621c:	2000dc88 	.word	0x2000dc88

08016220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8016220:	4b07      	ldr	r3, [pc, #28]	; (8016240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8016222:	781b      	ldrb	r3, [r3, #0]
 8016224:	2b01      	cmp	r3, #1
 8016226:	d109      	bne.n	801623c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8016228:	f9b1 3000 	ldrsh.w	r3, [r1]
 801622c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016230:	8003      	strh	r3, [r0, #0]
 8016232:	4b04      	ldr	r3, [pc, #16]	; (8016244 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016234:	881b      	ldrh	r3, [r3, #0]
 8016236:	3b01      	subs	r3, #1
 8016238:	1a9b      	subs	r3, r3, r2
 801623a:	800b      	strh	r3, [r1, #0]
 801623c:	4770      	bx	lr
 801623e:	bf00      	nop
 8016240:	2000dc6c 	.word	0x2000dc6c
 8016244:	2000dc68 	.word	0x2000dc68

08016248 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8016248:	b510      	push	{r4, lr}
 801624a:	4b07      	ldr	r3, [pc, #28]	; (8016268 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801624c:	781b      	ldrb	r3, [r3, #0]
 801624e:	2b01      	cmp	r3, #1
 8016250:	d108      	bne.n	8016264 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016252:	4b06      	ldr	r3, [pc, #24]	; (801626c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016254:	880c      	ldrh	r4, [r1, #0]
 8016256:	881b      	ldrh	r3, [r3, #0]
 8016258:	f9b0 2000 	ldrsh.w	r2, [r0]
 801625c:	3b01      	subs	r3, #1
 801625e:	1b1b      	subs	r3, r3, r4
 8016260:	8003      	strh	r3, [r0, #0]
 8016262:	800a      	strh	r2, [r1, #0]
 8016264:	bd10      	pop	{r4, pc}
 8016266:	bf00      	nop
 8016268:	2000dc6c 	.word	0x2000dc6c
 801626c:	2000dc68 	.word	0x2000dc68

08016270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016270:	b510      	push	{r4, lr}
 8016272:	4b0a      	ldr	r3, [pc, #40]	; (801629c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016274:	781b      	ldrb	r3, [r3, #0]
 8016276:	2b01      	cmp	r3, #1
 8016278:	d10e      	bne.n	8016298 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801627a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801627e:	8843      	ldrh	r3, [r0, #2]
 8016280:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016284:	8044      	strh	r4, [r0, #2]
 8016286:	18ca      	adds	r2, r1, r3
 8016288:	4b05      	ldr	r3, [pc, #20]	; (80162a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801628a:	881b      	ldrh	r3, [r3, #0]
 801628c:	1a9b      	subs	r3, r3, r2
 801628e:	8003      	strh	r3, [r0, #0]
 8016290:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016294:	80c3      	strh	r3, [r0, #6]
 8016296:	8081      	strh	r1, [r0, #4]
 8016298:	bd10      	pop	{r4, pc}
 801629a:	bf00      	nop
 801629c:	2000dc6c 	.word	0x2000dc6c
 80162a0:	2000dc68 	.word	0x2000dc68

080162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80162a4:	4b08      	ldr	r3, [pc, #32]	; (80162c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80162a6:	781b      	ldrb	r3, [r3, #0]
 80162a8:	2b01      	cmp	r3, #1
 80162aa:	d10c      	bne.n	80162c6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80162ac:	8803      	ldrh	r3, [r0, #0]
 80162ae:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80162b2:	8842      	ldrh	r2, [r0, #2]
 80162b4:	8002      	strh	r2, [r0, #0]
 80162b6:	185a      	adds	r2, r3, r1
 80162b8:	4b04      	ldr	r3, [pc, #16]	; (80162cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80162ba:	881b      	ldrh	r3, [r3, #0]
 80162bc:	1a9b      	subs	r3, r3, r2
 80162be:	8043      	strh	r3, [r0, #2]
 80162c0:	88c3      	ldrh	r3, [r0, #6]
 80162c2:	8083      	strh	r3, [r0, #4]
 80162c4:	80c1      	strh	r1, [r0, #6]
 80162c6:	4770      	bx	lr
 80162c8:	2000dc6c 	.word	0x2000dc6c
 80162cc:	2000dc68 	.word	0x2000dc68

080162d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80162d0:	b510      	push	{r4, lr}
 80162d2:	4b07      	ldr	r3, [pc, #28]	; (80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80162d4:	781b      	ldrb	r3, [r3, #0]
 80162d6:	2b01      	cmp	r3, #1
 80162d8:	d108      	bne.n	80162ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80162da:	f9b1 3000 	ldrsh.w	r3, [r1]
 80162de:	f9b0 4000 	ldrsh.w	r4, [r0]
 80162e2:	8003      	strh	r3, [r0, #0]
 80162e4:	8893      	ldrh	r3, [r2, #4]
 80162e6:	3b01      	subs	r3, #1
 80162e8:	1b1b      	subs	r3, r3, r4
 80162ea:	800b      	strh	r3, [r1, #0]
 80162ec:	bd10      	pop	{r4, pc}
 80162ee:	bf00      	nop
 80162f0:	2000dc6c 	.word	0x2000dc6c

080162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80162f4:	4b0b      	ldr	r3, [pc, #44]	; (8016324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80162f6:	781b      	ldrb	r3, [r3, #0]
 80162f8:	2b01      	cmp	r3, #1
 80162fa:	d111      	bne.n	8016320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80162fc:	680b      	ldr	r3, [r1, #0]
 80162fe:	ed90 7a00 	vldr	s14, [r0]
 8016302:	6003      	str	r3, [r0, #0]
 8016304:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8016308:	eddf 6a07 	vldr	s13, [pc, #28]	; 8016328 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801630c:	ee07 3a90 	vmov	s15, r3
 8016310:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016314:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8016318:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801631c:	edc1 7a00 	vstr	s15, [r1]
 8016320:	4770      	bx	lr
 8016322:	bf00      	nop
 8016324:	2000dc6c 	.word	0x2000dc6c
 8016328:	38d1b717 	.word	0x38d1b717

0801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801632c:	b510      	push	{r4, lr}
 801632e:	4b0a      	ldr	r3, [pc, #40]	; (8016358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8016330:	781b      	ldrb	r3, [r3, #0]
 8016332:	2b01      	cmp	r3, #1
 8016334:	460a      	mov	r2, r1
 8016336:	d10d      	bne.n	8016354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8016338:	8881      	ldrh	r1, [r0, #4]
 801633a:	8803      	ldrh	r3, [r0, #0]
 801633c:	440b      	add	r3, r1
 801633e:	4601      	mov	r1, r0
 8016340:	3b01      	subs	r3, #1
 8016342:	f821 3b02 	strh.w	r3, [r1], #2
 8016346:	f7ff ffc3 	bl	80162d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801634a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801634e:	88c2      	ldrh	r2, [r0, #6]
 8016350:	8082      	strh	r2, [r0, #4]
 8016352:	80c3      	strh	r3, [r0, #6]
 8016354:	bd10      	pop	{r4, pc}
 8016356:	bf00      	nop
 8016358:	2000dc6c 	.word	0x2000dc6c

0801635c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801635c:	b570      	push	{r4, r5, r6, lr}
 801635e:	4c0b      	ldr	r4, [pc, #44]	; (801638c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016360:	2300      	movs	r3, #0
 8016362:	4605      	mov	r5, r0
 8016364:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8016368:	6820      	ldr	r0, [r4, #0]
 801636a:	460e      	mov	r6, r1
 801636c:	b110      	cbz	r0, 8016374 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 801636e:	6803      	ldr	r3, [r0, #0]
 8016370:	695b      	ldr	r3, [r3, #20]
 8016372:	4798      	blx	r3
 8016374:	6026      	str	r6, [r4, #0]
 8016376:	6833      	ldr	r3, [r6, #0]
 8016378:	4630      	mov	r0, r6
 801637a:	68db      	ldr	r3, [r3, #12]
 801637c:	4798      	blx	r3
 801637e:	682b      	ldr	r3, [r5, #0]
 8016380:	4628      	mov	r0, r5
 8016382:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016384:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016388:	4718      	bx	r3
 801638a:	bf00      	nop
 801638c:	2000dcb8 	.word	0x2000dcb8

08016390 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016390:	4b06      	ldr	r3, [pc, #24]	; (80163ac <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016392:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016396:	4b06      	ldr	r3, [pc, #24]	; (80163b0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016398:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 801639c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80163a0:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80163a4:	2100      	movs	r1, #0
 80163a6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80163aa:	4770      	bx	lr
 80163ac:	2000dc68 	.word	0x2000dc68
 80163b0:	2000dc6a 	.word	0x2000dc6a

080163b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80163b4:	4b03      	ldr	r3, [pc, #12]	; (80163c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80163b6:	6818      	ldr	r0, [r3, #0]
 80163b8:	b110      	cbz	r0, 80163c0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80163ba:	6803      	ldr	r3, [r0, #0]
 80163bc:	699b      	ldr	r3, [r3, #24]
 80163be:	4718      	bx	r3
 80163c0:	4770      	bx	lr
 80163c2:	bf00      	nop
 80163c4:	2000dcb8 	.word	0x2000dcb8

080163c8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80163c8:	4770      	bx	lr
	...

080163cc <_ZN8touchgfx11Application4drawEv>:
 80163cc:	b507      	push	{r0, r1, r2, lr}
 80163ce:	4b09      	ldr	r3, [pc, #36]	; (80163f4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80163d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80163d4:	4b08      	ldr	r3, [pc, #32]	; (80163f8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80163d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80163da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80163de:	f8ad 3006 	strh.w	r3, [sp, #6]
 80163e2:	6803      	ldr	r3, [r0, #0]
 80163e4:	2100      	movs	r1, #0
 80163e6:	9100      	str	r1, [sp, #0]
 80163e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80163ea:	4669      	mov	r1, sp
 80163ec:	4798      	blx	r3
 80163ee:	b003      	add	sp, #12
 80163f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80163f4:	2000dc68 	.word	0x2000dc68
 80163f8:	2000dc6a 	.word	0x2000dc6a

080163fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80163fc:	4b03      	ldr	r3, [pc, #12]	; (801640c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80163fe:	6818      	ldr	r0, [r3, #0]
 8016400:	b110      	cbz	r0, 8016408 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016402:	6803      	ldr	r3, [r0, #0]
 8016404:	69db      	ldr	r3, [r3, #28]
 8016406:	4718      	bx	r3
 8016408:	4770      	bx	lr
 801640a:	bf00      	nop
 801640c:	2000dcb8 	.word	0x2000dcb8

08016410 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016410:	4b03      	ldr	r3, [pc, #12]	; (8016420 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016412:	6818      	ldr	r0, [r3, #0]
 8016414:	b110      	cbz	r0, 801641c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016416:	6803      	ldr	r3, [r0, #0]
 8016418:	6a1b      	ldr	r3, [r3, #32]
 801641a:	4718      	bx	r3
 801641c:	4770      	bx	lr
 801641e:	bf00      	nop
 8016420:	2000dcb8 	.word	0x2000dcb8

08016424 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016424:	2300      	movs	r3, #0
 8016426:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801642a:	4770      	bx	lr

0801642c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801642c:	4b03      	ldr	r3, [pc, #12]	; (801643c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801642e:	6818      	ldr	r0, [r3, #0]
 8016430:	b110      	cbz	r0, 8016438 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016432:	6803      	ldr	r3, [r0, #0]
 8016434:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016436:	4718      	bx	r3
 8016438:	4770      	bx	lr
 801643a:	bf00      	nop
 801643c:	2000dcb8 	.word	0x2000dcb8

08016440 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016440:	b570      	push	{r4, r5, r6, lr}
 8016442:	4d32      	ldr	r5, [pc, #200]	; (801650c <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8016444:	4604      	mov	r4, r0
 8016446:	6828      	ldr	r0, [r5, #0]
 8016448:	b140      	cbz	r0, 801645c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801644a:	7a03      	ldrb	r3, [r0, #8]
 801644c:	b933      	cbnz	r3, 801645c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801644e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8016452:	6803      	ldr	r3, [r0, #0]
 8016454:	689b      	ldr	r3, [r3, #8]
 8016456:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801645a:	4718      	bx	r3
 801645c:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8016460:	b97b      	cbnz	r3, 8016482 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016462:	b170      	cbz	r0, 8016482 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016464:	7a03      	ldrb	r3, [r0, #8]
 8016466:	b163      	cbz	r3, 8016482 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016468:	4b29      	ldr	r3, [pc, #164]	; (8016510 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 801646a:	6818      	ldr	r0, [r3, #0]
 801646c:	b110      	cbz	r0, 8016474 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801646e:	6803      	ldr	r3, [r0, #0]
 8016470:	691b      	ldr	r3, [r3, #16]
 8016472:	4798      	blx	r3
 8016474:	6828      	ldr	r0, [r5, #0]
 8016476:	6803      	ldr	r3, [r0, #0]
 8016478:	68db      	ldr	r3, [r3, #12]
 801647a:	4798      	blx	r3
 801647c:	2301      	movs	r3, #1
 801647e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8016482:	2500      	movs	r5, #0
 8016484:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8016488:	42a8      	cmp	r0, r5
 801648a:	dd0c      	ble.n	80164a6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 801648c:	1963      	adds	r3, r4, r5
 801648e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8016492:	b132      	cbz	r2, 80164a2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8016494:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8016498:	4413      	add	r3, r2
 801649a:	6858      	ldr	r0, [r3, #4]
 801649c:	6803      	ldr	r3, [r0, #0]
 801649e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80164a0:	4798      	blx	r3
 80164a2:	3501      	adds	r5, #1
 80164a4:	e7ee      	b.n	8016484 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80164a6:	2300      	movs	r3, #0
 80164a8:	461a      	mov	r2, r3
 80164aa:	4298      	cmp	r0, r3
 80164ac:	d015      	beq.n	80164da <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 80164ae:	18e1      	adds	r1, r4, r3
 80164b0:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80164b4:	b16d      	cbz	r5, 80164d2 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 80164b6:	429a      	cmp	r2, r3
 80164b8:	d00a      	beq.n	80164d0 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 80164ba:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80164be:	4431      	add	r1, r6
 80164c0:	684e      	ldr	r6, [r1, #4]
 80164c2:	b291      	uxth	r1, r2
 80164c4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80164c8:	604e      	str	r6, [r1, #4]
 80164ca:	18a1      	adds	r1, r4, r2
 80164cc:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80164d0:	3201      	adds	r2, #1
 80164d2:	3301      	adds	r3, #1
 80164d4:	e7e9      	b.n	80164aa <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80164d6:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 80164da:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 80164de:	4295      	cmp	r5, r2
 80164e0:	dd0d      	ble.n	80164fe <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 80164e2:	1e6b      	subs	r3, r5, #1
 80164e4:	b29b      	uxth	r3, r3
 80164e6:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 80164ea:	4618      	mov	r0, r3
 80164ec:	3104      	adds	r1, #4
 80164ee:	4285      	cmp	r5, r0
 80164f0:	ddf1      	ble.n	80164d6 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 80164f2:	f851 6f04 	ldr.w	r6, [r1, #4]!
 80164f6:	f841 6c04 	str.w	r6, [r1, #-4]
 80164fa:	3001      	adds	r0, #1
 80164fc:	e7f7      	b.n	80164ee <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 80164fe:	4b04      	ldr	r3, [pc, #16]	; (8016510 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8016500:	6818      	ldr	r0, [r3, #0]
 8016502:	b110      	cbz	r0, 801650a <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8016504:	6803      	ldr	r3, [r0, #0]
 8016506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016508:	e7a5      	b.n	8016456 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801650a:	bd70      	pop	{r4, r5, r6, pc}
 801650c:	2000dcbc 	.word	0x2000dcbc
 8016510:	2000dcb8 	.word	0x2000dcb8

08016514 <_ZN8touchgfx11ApplicationD1Ev>:
 8016514:	4770      	bx	lr

08016516 <_ZN8touchgfx11ApplicationD0Ev>:
 8016516:	b510      	push	{r4, lr}
 8016518:	f44f 719c 	mov.w	r1, #312	; 0x138
 801651c:	4604      	mov	r4, r0
 801651e:	f00f fa0e 	bl	802593e <_ZdlPvj>
 8016522:	4620      	mov	r0, r4
 8016524:	bd10      	pop	{r4, pc}

08016526 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016526:	b510      	push	{r4, lr}
 8016528:	f9b1 4000 	ldrsh.w	r4, [r1]
 801652c:	888a      	ldrh	r2, [r1, #4]
 801652e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016532:	4422      	add	r2, r4
 8016534:	b212      	sxth	r2, r2
 8016536:	4293      	cmp	r3, r2
 8016538:	da15      	bge.n	8016566 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801653a:	8882      	ldrh	r2, [r0, #4]
 801653c:	4413      	add	r3, r2
 801653e:	b21b      	sxth	r3, r3
 8016540:	429c      	cmp	r4, r3
 8016542:	da10      	bge.n	8016566 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016544:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016548:	88c9      	ldrh	r1, [r1, #6]
 801654a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801654e:	4419      	add	r1, r3
 8016550:	b209      	sxth	r1, r1
 8016552:	428a      	cmp	r2, r1
 8016554:	da07      	bge.n	8016566 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016556:	88c0      	ldrh	r0, [r0, #6]
 8016558:	4410      	add	r0, r2
 801655a:	b200      	sxth	r0, r0
 801655c:	4283      	cmp	r3, r0
 801655e:	bfac      	ite	ge
 8016560:	2000      	movge	r0, #0
 8016562:	2001      	movlt	r0, #1
 8016564:	bd10      	pop	{r4, pc}
 8016566:	2000      	movs	r0, #0
 8016568:	e7fc      	b.n	8016564 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801656a <_ZN8touchgfx4Rect10restrictToEss>:
 801656a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801656e:	2b00      	cmp	r3, #0
 8016570:	b510      	push	{r4, lr}
 8016572:	da04      	bge.n	801657e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016574:	8884      	ldrh	r4, [r0, #4]
 8016576:	4423      	add	r3, r4
 8016578:	8083      	strh	r3, [r0, #4]
 801657a:	2300      	movs	r3, #0
 801657c:	8003      	strh	r3, [r0, #0]
 801657e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016582:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016586:	1b09      	subs	r1, r1, r4
 8016588:	428b      	cmp	r3, r1
 801658a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801658e:	bfc8      	it	gt
 8016590:	8081      	strhgt	r1, [r0, #4]
 8016592:	2b00      	cmp	r3, #0
 8016594:	da04      	bge.n	80165a0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016596:	88c1      	ldrh	r1, [r0, #6]
 8016598:	440b      	add	r3, r1
 801659a:	80c3      	strh	r3, [r0, #6]
 801659c:	2300      	movs	r3, #0
 801659e:	8043      	strh	r3, [r0, #2]
 80165a0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80165a4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80165a8:	1a52      	subs	r2, r2, r1
 80165aa:	4293      	cmp	r3, r2
 80165ac:	bfc8      	it	gt
 80165ae:	80c2      	strhgt	r2, [r0, #6]
 80165b0:	bd10      	pop	{r4, pc}
	...

080165b4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80165b4:	b510      	push	{r4, lr}
 80165b6:	4b10      	ldr	r3, [pc, #64]	; (80165f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80165b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80165bc:	4b0f      	ldr	r3, [pc, #60]	; (80165fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80165be:	460c      	mov	r4, r1
 80165c0:	4620      	mov	r0, r4
 80165c2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80165c6:	f7ff ffd0 	bl	801656a <_ZN8touchgfx4Rect10restrictToEss>
 80165ca:	4b0d      	ldr	r3, [pc, #52]	; (8016600 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80165cc:	6818      	ldr	r0, [r3, #0]
 80165ce:	b190      	cbz	r0, 80165f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80165d0:	6803      	ldr	r3, [r0, #0]
 80165d2:	4621      	mov	r1, r4
 80165d4:	689b      	ldr	r3, [r3, #8]
 80165d6:	4798      	blx	r3
 80165d8:	4b0a      	ldr	r3, [pc, #40]	; (8016604 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80165da:	6818      	ldr	r0, [r3, #0]
 80165dc:	b118      	cbz	r0, 80165e6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80165de:	6803      	ldr	r3, [r0, #0]
 80165e0:	4621      	mov	r1, r4
 80165e2:	689b      	ldr	r3, [r3, #8]
 80165e4:	4798      	blx	r3
 80165e6:	4b08      	ldr	r3, [pc, #32]	; (8016608 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80165e8:	6818      	ldr	r0, [r3, #0]
 80165ea:	6803      	ldr	r3, [r0, #0]
 80165ec:	4621      	mov	r1, r4
 80165ee:	69db      	ldr	r3, [r3, #28]
 80165f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80165f4:	4718      	bx	r3
 80165f6:	bd10      	pop	{r4, pc}
 80165f8:	2000dc6a 	.word	0x2000dc6a
 80165fc:	2000dc68 	.word	0x2000dc68
 8016600:	2000dcb8 	.word	0x2000dcb8
 8016604:	2000dcb4 	.word	0x2000dcb4
 8016608:	2000dc74 	.word	0x2000dc74

0801660c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801660c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801660e:	4606      	mov	r6, r0
 8016610:	4608      	mov	r0, r1
 8016612:	460f      	mov	r7, r1
 8016614:	f7f9 ff7f 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016618:	b9e8      	cbnz	r0, 8016656 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801661a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801661e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016622:	42a5      	cmp	r5, r4
 8016624:	db17      	blt.n	8016656 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016626:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801662a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801662e:	429a      	cmp	r2, r3
 8016630:	db11      	blt.n	8016656 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016632:	88b9      	ldrh	r1, [r7, #4]
 8016634:	440d      	add	r5, r1
 8016636:	88b1      	ldrh	r1, [r6, #4]
 8016638:	440c      	add	r4, r1
 801663a:	b22d      	sxth	r5, r5
 801663c:	b224      	sxth	r4, r4
 801663e:	42a5      	cmp	r5, r4
 8016640:	dc09      	bgt.n	8016656 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016642:	88f8      	ldrh	r0, [r7, #6]
 8016644:	4410      	add	r0, r2
 8016646:	88f2      	ldrh	r2, [r6, #6]
 8016648:	4413      	add	r3, r2
 801664a:	b200      	sxth	r0, r0
 801664c:	b21b      	sxth	r3, r3
 801664e:	4298      	cmp	r0, r3
 8016650:	bfcc      	ite	gt
 8016652:	2000      	movgt	r0, #0
 8016654:	2001      	movle	r0, #1
 8016656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016658 <_ZN8touchgfx11Application11getInstanceEv>:
 8016658:	4b01      	ldr	r3, [pc, #4]	; (8016660 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801665a:	6818      	ldr	r0, [r3, #0]
 801665c:	4770      	bx	lr
 801665e:	bf00      	nop
 8016660:	2000dcc8 	.word	0x2000dcc8

08016664 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8016664:	2300      	movs	r3, #0
 8016666:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801666a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801666e:	30a8      	adds	r0, #168	; 0xa8
 8016670:	f802 3b01 	strb.w	r3, [r2], #1
 8016674:	4282      	cmp	r2, r0
 8016676:	d1fb      	bne.n	8016670 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8016678:	4770      	bx	lr

0801667a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801667a:	4603      	mov	r3, r0
 801667c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016680:	2200      	movs	r2, #0
 8016682:	801a      	strh	r2, [r3, #0]
 8016684:	805a      	strh	r2, [r3, #2]
 8016686:	809a      	strh	r2, [r3, #4]
 8016688:	80da      	strh	r2, [r3, #6]
 801668a:	3308      	adds	r3, #8
 801668c:	428b      	cmp	r3, r1
 801668e:	d1f8      	bne.n	8016682 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016690:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016694:	4770      	bx	lr
	...

08016698 <_ZN8touchgfx11ApplicationC1Ev>:
 8016698:	b570      	push	{r4, r5, r6, lr}
 801669a:	4b19      	ldr	r3, [pc, #100]	; (8016700 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 801669c:	6003      	str	r3, [r0, #0]
 801669e:	2500      	movs	r5, #0
 80166a0:	4604      	mov	r4, r0
 80166a2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80166a6:	30a8      	adds	r0, #168	; 0xa8
 80166a8:	f7ff ffe7 	bl	801667a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80166ac:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80166b0:	f7ff ffe3 	bl	801667a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80166b4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80166b8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80166bc:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80166c0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80166c4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80166c8:	490e      	ldr	r1, [pc, #56]	; (8016704 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80166ca:	480f      	ldr	r0, [pc, #60]	; (8016708 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80166cc:	4e0f      	ldr	r6, [pc, #60]	; (801670c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80166ce:	f00e fcfb 	bl	80250c8 <CRC_Lock>
 80166d2:	4b0f      	ldr	r3, [pc, #60]	; (8016710 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80166d4:	b158      	cbz	r0, 80166ee <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80166d6:	801d      	strh	r5, [r3, #0]
 80166d8:	4a0e      	ldr	r2, [pc, #56]	; (8016714 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80166da:	2300      	movs	r3, #0
 80166dc:	6013      	str	r3, [r2, #0]
 80166de:	4a0e      	ldr	r2, [pc, #56]	; (8016718 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80166e0:	6033      	str	r3, [r6, #0]
 80166e2:	4620      	mov	r0, r4
 80166e4:	6013      	str	r3, [r2, #0]
 80166e6:	f7ff ffbd 	bl	8016664 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80166ea:	4620      	mov	r0, r4
 80166ec:	bd70      	pop	{r4, r5, r6, pc}
 80166ee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80166f2:	2002      	movs	r0, #2
 80166f4:	801a      	strh	r2, [r3, #0]
 80166f6:	6030      	str	r0, [r6, #0]
 80166f8:	f001 fb0a 	bl	8017d10 <_ZN8touchgfx6Screen4drawEv>
 80166fc:	e7ec      	b.n	80166d8 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 80166fe:	bf00      	nop
 8016700:	08028d34 	.word	0x08028d34
 8016704:	b5e8b5cd 	.word	0xb5e8b5cd
 8016708:	f407a5c2 	.word	0xf407a5c2
 801670c:	2000dcb8 	.word	0x2000dcb8
 8016710:	20000060 	.word	0x20000060
 8016714:	2000dcc8 	.word	0x2000dcc8
 8016718:	2000dcbc 	.word	0x2000dcbc

0801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801671c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016720:	3b01      	subs	r3, #1
 8016722:	b29b      	uxth	r3, r3
 8016724:	428b      	cmp	r3, r1
 8016726:	b510      	push	{r4, lr}
 8016728:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801672c:	d908      	bls.n	8016740 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801672e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016732:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016736:	681a      	ldr	r2, [r3, #0]
 8016738:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801673c:	685a      	ldr	r2, [r3, #4]
 801673e:	6062      	str	r2, [r4, #4]
 8016740:	bd10      	pop	{r4, pc}
	...

08016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016748:	4b94      	ldr	r3, [pc, #592]	; (801699c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801674a:	b08f      	sub	sp, #60	; 0x3c
 801674c:	ac0a      	add	r4, sp, #40	; 0x28
 801674e:	e884 0006 	stmia.w	r4, {r1, r2}
 8016752:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016756:	4b92      	ldr	r3, [pc, #584]	; (80169a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8016758:	4683      	mov	fp, r0
 801675a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801675e:	4620      	mov	r0, r4
 8016760:	f7ff ff03 	bl	801656a <_ZN8touchgfx4Rect10restrictToEss>
 8016764:	4620      	mov	r0, r4
 8016766:	f7f9 fed6 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801676a:	2800      	cmp	r0, #0
 801676c:	d16a      	bne.n	8016844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801676e:	9403      	str	r4, [sp, #12]
 8016770:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8016774:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8016778:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 801677c:	2400      	movs	r4, #0
 801677e:	9301      	str	r3, [sp, #4]
 8016780:	36a0      	adds	r6, #160	; 0xa0
 8016782:	42a5      	cmp	r5, r4
 8016784:	d00d      	beq.n	80167a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8016786:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 801678a:	9803      	ldr	r0, [sp, #12]
 801678c:	f7ff ff3e 	bl	801660c <_ZNK8touchgfx4Rect8includesERKS0_>
 8016790:	b128      	cbz	r0, 801679e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8016792:	1e69      	subs	r1, r5, #1
 8016794:	1b09      	subs	r1, r1, r4
 8016796:	b289      	uxth	r1, r1
 8016798:	9801      	ldr	r0, [sp, #4]
 801679a:	f7ff ffbf 	bl	801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801679e:	3401      	adds	r4, #1
 80167a0:	e7ef      	b.n	8016782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80167a2:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80167a6:	9704      	str	r7, [sp, #16]
 80167a8:	1e7b      	subs	r3, r7, #1
 80167aa:	9302      	str	r3, [sp, #8]
 80167ac:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80167b0:	2400      	movs	r4, #0
 80167b2:	4655      	mov	r5, sl
 80167b4:	9705      	str	r7, [sp, #20]
 80167b6:	4626      	mov	r6, r4
 80167b8:	9b05      	ldr	r3, [sp, #20]
 80167ba:	2b00      	cmp	r3, #0
 80167bc:	d078      	beq.n	80168b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80167be:	9903      	ldr	r1, [sp, #12]
 80167c0:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80167c4:	f7ff feaf 	bl	8016526 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80167c8:	b360      	cbz	r0, 8016824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80167ca:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80167ce:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80167d2:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 80167d6:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80167da:	45e6      	cmp	lr, ip
 80167dc:	db35      	blt.n	801684a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80167de:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80167e2:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80167e6:	4472      	add	r2, lr
 80167e8:	4463      	add	r3, ip
 80167ea:	b212      	sxth	r2, r2
 80167ec:	b21b      	sxth	r3, r3
 80167ee:	429a      	cmp	r2, r3
 80167f0:	dc2b      	bgt.n	801684a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80167f2:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80167f6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80167fa:	fa1f f288 	uxth.w	r2, r8
 80167fe:	4413      	add	r3, r2
 8016800:	b29b      	uxth	r3, r3
 8016802:	45c1      	cmp	r9, r8
 8016804:	fa0f fe83 	sxth.w	lr, r3
 8016808:	fa1f fc89 	uxth.w	ip, r9
 801680c:	db0f      	blt.n	801682e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801680e:	eba3 030c 	sub.w	r3, r3, ip
 8016812:	1ac9      	subs	r1, r1, r3
 8016814:	b209      	sxth	r1, r1
 8016816:	2900      	cmp	r1, #0
 8016818:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801681c:	dd12      	ble.n	8016844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801681e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016822:	4604      	mov	r4, r0
 8016824:	9b05      	ldr	r3, [sp, #20]
 8016826:	3b01      	subs	r3, #1
 8016828:	9305      	str	r3, [sp, #20]
 801682a:	3d08      	subs	r5, #8
 801682c:	e7c4      	b.n	80167b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801682e:	4461      	add	r1, ip
 8016830:	b209      	sxth	r1, r1
 8016832:	4571      	cmp	r1, lr
 8016834:	dc3a      	bgt.n	80168ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016836:	eba2 020c 	sub.w	r2, r2, ip
 801683a:	b212      	sxth	r2, r2
 801683c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016840:	2a00      	cmp	r2, #0
 8016842:	dcee      	bgt.n	8016822 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016844:	b00f      	add	sp, #60	; 0x3c
 8016846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801684a:	45c1      	cmp	r9, r8
 801684c:	db2e      	blt.n	80168ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801684e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016852:	4499      	add	r9, r3
 8016854:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8016858:	4498      	add	r8, r3
 801685a:	fa0f f989 	sxth.w	r9, r9
 801685e:	fa0f f888 	sxth.w	r8, r8
 8016862:	45c1      	cmp	r9, r8
 8016864:	dc22      	bgt.n	80168ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016866:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801686a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801686e:	fa1f f28c 	uxth.w	r2, ip
 8016872:	4413      	add	r3, r2
 8016874:	b29b      	uxth	r3, r3
 8016876:	45e6      	cmp	lr, ip
 8016878:	fa1f f88e 	uxth.w	r8, lr
 801687c:	fa0f f983 	sxth.w	r9, r3
 8016880:	db0a      	blt.n	8016898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 8016882:	eba3 0308 	sub.w	r3, r3, r8
 8016886:	1ac9      	subs	r1, r1, r3
 8016888:	b209      	sxth	r1, r1
 801688a:	2900      	cmp	r1, #0
 801688c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016890:	ddd8      	ble.n	8016844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016892:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016896:	e7c4      	b.n	8016822 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016898:	4441      	add	r1, r8
 801689a:	b209      	sxth	r1, r1
 801689c:	4549      	cmp	r1, r9
 801689e:	dc05      	bgt.n	80168ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80168a0:	eba2 0208 	sub.w	r2, r2, r8
 80168a4:	b212      	sxth	r2, r2
 80168a6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80168aa:	e7c9      	b.n	8016840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80168ac:	4606      	mov	r6, r0
 80168ae:	e7b9      	b.n	8016824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80168b0:	2c00      	cmp	r4, #0
 80168b2:	f47f af7d 	bne.w	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80168b6:	2e00      	cmp	r6, #0
 80168b8:	f000 81e1 	beq.w	8016c7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80168bc:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80168c0:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80168c4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80168c8:	b2b9      	uxth	r1, r7
 80168ca:	9105      	str	r1, [sp, #20]
 80168cc:	9805      	ldr	r0, [sp, #20]
 80168ce:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80168d2:	4401      	add	r1, r0
 80168d4:	b2b3      	uxth	r3, r6
 80168d6:	b289      	uxth	r1, r1
 80168d8:	441a      	add	r2, r3
 80168da:	9106      	str	r1, [sp, #24]
 80168dc:	b292      	uxth	r2, r2
 80168de:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80168e2:	fa0f f882 	sxth.w	r8, r2
 80168e6:	4655      	mov	r5, sl
 80168e8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80168ec:	9b04      	ldr	r3, [sp, #16]
 80168ee:	2b00      	cmp	r3, #0
 80168f0:	d058      	beq.n	80169a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80168f2:	9903      	ldr	r1, [sp, #12]
 80168f4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80168f8:	f7ff fe15 	bl	8016526 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80168fc:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016900:	b1d8      	cbz	r0, 801693a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8016902:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8016906:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801690a:	4576      	cmp	r6, lr
 801690c:	dc26      	bgt.n	801695c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801690e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8016912:	44f4      	add	ip, lr
 8016914:	fa0f fc8c 	sxth.w	ip, ip
 8016918:	45e0      	cmp	r8, ip
 801691a:	db1f      	blt.n	801695c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801691c:	428f      	cmp	r7, r1
 801691e:	fa1f fc81 	uxth.w	ip, r1
 8016922:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8016926:	dc0f      	bgt.n	8016948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8016928:	9806      	ldr	r0, [sp, #24]
 801692a:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801692e:	eba0 0c0c 	sub.w	ip, r0, ip
 8016932:	eba1 010c 	sub.w	r1, r1, ip
 8016936:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801693a:	4620      	mov	r0, r4
 801693c:	9904      	ldr	r1, [sp, #16]
 801693e:	3901      	subs	r1, #1
 8016940:	9104      	str	r1, [sp, #16]
 8016942:	3d08      	subs	r5, #8
 8016944:	4604      	mov	r4, r0
 8016946:	e7cf      	b.n	80168e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8016948:	4461      	add	r1, ip
 801694a:	b209      	sxth	r1, r1
 801694c:	4549      	cmp	r1, r9
 801694e:	dcf5      	bgt.n	801693c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016950:	9905      	ldr	r1, [sp, #20]
 8016952:	eba1 0c0c 	sub.w	ip, r1, ip
 8016956:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801695a:	e7ee      	b.n	801693a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801695c:	428f      	cmp	r7, r1
 801695e:	dced      	bgt.n	801693c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016960:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8016964:	4461      	add	r1, ip
 8016966:	b209      	sxth	r1, r1
 8016968:	4589      	cmp	r9, r1
 801696a:	dbe7      	blt.n	801693c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801696c:	4576      	cmp	r6, lr
 801696e:	fa1f fc8e 	uxth.w	ip, lr
 8016972:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8016976:	dc08      	bgt.n	801698a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8016978:	eba2 0c0c 	sub.w	ip, r2, ip
 801697c:	eba1 010c 	sub.w	r1, r1, ip
 8016980:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8016984:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8016988:	e7d7      	b.n	801693a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801698a:	4461      	add	r1, ip
 801698c:	b209      	sxth	r1, r1
 801698e:	4588      	cmp	r8, r1
 8016990:	dbd4      	blt.n	801693c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016992:	eba3 0c0c 	sub.w	ip, r3, ip
 8016996:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801699a:	e7ce      	b.n	801693a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801699c:	2000dc6a 	.word	0x2000dc6a
 80169a0:	2000dc68 	.word	0x2000dc68
 80169a4:	2c00      	cmp	r4, #0
 80169a6:	f000 816a 	beq.w	8016c7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80169aa:	9b02      	ldr	r3, [sp, #8]
 80169ac:	3301      	adds	r3, #1
 80169ae:	f000 8166 	beq.w	8016c7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80169b2:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80169b6:	4621      	mov	r1, r4
 80169b8:	9803      	ldr	r0, [sp, #12]
 80169ba:	f7ff fe27 	bl	801660c <_ZNK8touchgfx4Rect8includesERKS0_>
 80169be:	b120      	cbz	r0, 80169ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80169c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80169c4:	9801      	ldr	r0, [sp, #4]
 80169c6:	f7ff fea9 	bl	801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80169ca:	9903      	ldr	r1, [sp, #12]
 80169cc:	4620      	mov	r0, r4
 80169ce:	f7ff fdaa 	bl	8016526 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80169d2:	2800      	cmp	r0, #0
 80169d4:	f000 809b 	beq.w	8016b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80169d8:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80169dc:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80169e0:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80169e4:	9309      	str	r3, [sp, #36]	; 0x24
 80169e6:	b281      	uxth	r1, r0
 80169e8:	eb01 0c03 	add.w	ip, r1, r3
 80169ec:	fa1f f98c 	uxth.w	r9, ip
 80169f0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80169f4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80169f8:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80169fc:	b2ab      	uxth	r3, r5
 80169fe:	eb03 040c 	add.w	r4, r3, ip
 8016a02:	b2a4      	uxth	r4, r4
 8016a04:	9405      	str	r4, [sp, #20]
 8016a06:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8016a0a:	9404      	str	r4, [sp, #16]
 8016a0c:	4285      	cmp	r5, r0
 8016a0e:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 8016a12:	f340 809a 	ble.w	8016b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 8016a16:	1a5b      	subs	r3, r3, r1
 8016a18:	b29b      	uxth	r3, r3
 8016a1a:	4596      	cmp	lr, r2
 8016a1c:	fa0f f589 	sxth.w	r5, r9
 8016a20:	b21e      	sxth	r6, r3
 8016a22:	dd2e      	ble.n	8016a82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8016a24:	9f02      	ldr	r7, [sp, #8]
 8016a26:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8016a2a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016a2e:	9f04      	ldr	r7, [sp, #16]
 8016a30:	1b7f      	subs	r7, r7, r5
 8016a32:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 8016a36:	fa1f fe8e 	uxth.w	lr, lr
 8016a3a:	b292      	uxth	r2, r2
 8016a3c:	ebae 0102 	sub.w	r1, lr, r2
 8016a40:	4486      	add	lr, r0
 8016a42:	442a      	add	r2, r5
 8016a44:	b289      	uxth	r1, r1
 8016a46:	fa0f fe8e 	sxth.w	lr, lr
 8016a4a:	b212      	sxth	r2, r2
 8016a4c:	b20c      	sxth	r4, r1
 8016a4e:	ebae 0202 	sub.w	r2, lr, r2
 8016a52:	4367      	muls	r7, r4
 8016a54:	4372      	muls	r2, r6
 8016a56:	4297      	cmp	r7, r2
 8016a58:	db09      	blt.n	8016a6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8016a5a:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8016a5e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8016a62:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016a66:	449c      	add	ip, r3
 8016a68:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016a6c:	e680      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016a6e:	4401      	add	r1, r0
 8016a70:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8016a74:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8016a78:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016a7c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016a80:	e676      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016a82:	9f04      	ldr	r7, [sp, #16]
 8016a84:	42bd      	cmp	r5, r7
 8016a86:	da27      	bge.n	8016ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8016a88:	9902      	ldr	r1, [sp, #8]
 8016a8a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016a8e:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 8016a92:	eb04 010e 	add.w	r1, r4, lr
 8016a96:	fa1f f881 	uxth.w	r8, r1
 8016a9a:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8016a9e:	4411      	add	r1, r2
 8016aa0:	eba1 0108 	sub.w	r1, r1, r8
 8016aa4:	b289      	uxth	r1, r1
 8016aa6:	fa0f f988 	sxth.w	r9, r8
 8016aaa:	eba2 020e 	sub.w	r2, r2, lr
 8016aae:	fa0f f881 	sxth.w	r8, r1
 8016ab2:	1b7f      	subs	r7, r7, r5
 8016ab4:	4372      	muls	r2, r6
 8016ab6:	fb08 f707 	mul.w	r7, r8, r7
 8016aba:	42ba      	cmp	r2, r7
 8016abc:	dc06      	bgt.n	8016acc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016abe:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 8016ac2:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 8016ac6:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8016aca:	e7ca      	b.n	8016a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016acc:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8016ad0:	4421      	add	r1, r4
 8016ad2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016ad6:	e64b      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ad8:	9d05      	ldr	r5, [sp, #20]
 8016ada:	eba9 0505 	sub.w	r5, r9, r5
 8016ade:	b2ad      	uxth	r5, r5
 8016ae0:	2c06      	cmp	r4, #6
 8016ae2:	fa0f fe85 	sxth.w	lr, r5
 8016ae6:	d818      	bhi.n	8016b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8016ae8:	9b04      	ldr	r3, [sp, #16]
 8016aea:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8016aee:	1c63      	adds	r3, r4, #1
 8016af0:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8016af4:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8016af8:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8016afc:	9b01      	ldr	r3, [sp, #4]
 8016afe:	9d01      	ldr	r5, [sp, #4]
 8016b00:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8016b04:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8016b08:	805a      	strh	r2, [r3, #2]
 8016b0a:	809e      	strh	r6, [r3, #4]
 8016b0c:	80d9      	strh	r1, [r3, #6]
 8016b0e:	9b02      	ldr	r3, [sp, #8]
 8016b10:	3b01      	subs	r3, #1
 8016b12:	9302      	str	r3, [sp, #8]
 8016b14:	f1aa 0a08 	sub.w	sl, sl, #8
 8016b18:	e747      	b.n	80169aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8016b1a:	9a02      	ldr	r2, [sp, #8]
 8016b1c:	45b6      	cmp	lr, r6
 8016b1e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016b22:	db0d      	blt.n	8016b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8016b24:	449c      	add	ip, r3
 8016b26:	fa1f fc8c 	uxth.w	ip, ip
 8016b2a:	445a      	add	r2, fp
 8016b2c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016b30:	448c      	add	ip, r1
 8016b32:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8016b36:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8016b3a:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8016b3e:	e617      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016b40:	445a      	add	r2, fp
 8016b42:	44ac      	add	ip, r5
 8016b44:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8016b48:	e78e      	b.n	8016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8016b4a:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016b4e:	fa1f f18e 	uxth.w	r1, lr
 8016b52:	eb01 0806 	add.w	r8, r1, r6
 8016b56:	b293      	uxth	r3, r2
 8016b58:	fa1f f888 	uxth.w	r8, r8
 8016b5c:	9306      	str	r3, [sp, #24]
 8016b5e:	fa0f f388 	sxth.w	r3, r8
 8016b62:	9307      	str	r3, [sp, #28]
 8016b64:	9f06      	ldr	r7, [sp, #24]
 8016b66:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8016b6a:	443b      	add	r3, r7
 8016b6c:	b29b      	uxth	r3, r3
 8016b6e:	4596      	cmp	lr, r2
 8016b70:	9308      	str	r3, [sp, #32]
 8016b72:	da25      	bge.n	8016bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8016b74:	9905      	ldr	r1, [sp, #20]
 8016b76:	eba3 0308 	sub.w	r3, r3, r8
 8016b7a:	eba9 0401 	sub.w	r4, r9, r1
 8016b7e:	b2a4      	uxth	r4, r4
 8016b80:	b29b      	uxth	r3, r3
 8016b82:	fa0f f984 	sxth.w	r9, r4
 8016b86:	b219      	sxth	r1, r3
 8016b88:	eba2 020e 	sub.w	r2, r2, lr
 8016b8c:	1b40      	subs	r0, r0, r5
 8016b8e:	fb09 f202 	mul.w	r2, r9, r2
 8016b92:	4348      	muls	r0, r1
 8016b94:	4282      	cmp	r2, r0
 8016b96:	9a02      	ldr	r2, [sp, #8]
 8016b98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016b9c:	445a      	add	r2, fp
 8016b9e:	dc06      	bgt.n	8016bae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8016ba0:	9b07      	ldr	r3, [sp, #28]
 8016ba2:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8016ba6:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8016baa:	44a4      	add	ip, r4
 8016bac:	e75c      	b.n	8016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8016bae:	9904      	ldr	r1, [sp, #16]
 8016bb0:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8016bb4:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8016bb8:	4433      	add	r3, r6
 8016bba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016bbe:	e5d7      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016bc0:	9f06      	ldr	r7, [sp, #24]
 8016bc2:	9b04      	ldr	r3, [sp, #16]
 8016bc4:	1bc9      	subs	r1, r1, r7
 8016bc6:	fa0f f789 	sxth.w	r7, r9
 8016bca:	b289      	uxth	r1, r1
 8016bcc:	429f      	cmp	r7, r3
 8016bce:	fa0f fe81 	sxth.w	lr, r1
 8016bd2:	dd22      	ble.n	8016c1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8016bd4:	9a05      	ldr	r2, [sp, #20]
 8016bd6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016bda:	1b40      	subs	r0, r0, r5
 8016bdc:	eba9 0202 	sub.w	r2, r9, r2
 8016be0:	9d07      	ldr	r5, [sp, #28]
 8016be2:	b292      	uxth	r2, r2
 8016be4:	eba5 0a03 	sub.w	sl, r5, r3
 8016be8:	b214      	sxth	r4, r2
 8016bea:	9b02      	ldr	r3, [sp, #8]
 8016bec:	fb0e f000 	mul.w	r0, lr, r0
 8016bf0:	fb04 fa0a 	mul.w	sl, r4, sl
 8016bf4:	00db      	lsls	r3, r3, #3
 8016bf6:	4550      	cmp	r0, sl
 8016bf8:	445b      	add	r3, fp
 8016bfa:	db03      	blt.n	8016c04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8016bfc:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8016c00:	4494      	add	ip, r2
 8016c02:	e731      	b.n	8016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8016c04:	9a04      	ldr	r2, [sp, #16]
 8016c06:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8016c0a:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8016c0e:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8016c12:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016c16:	4431      	add	r1, r6
 8016c18:	e75b      	b.n	8016ad2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8016c1a:	9b08      	ldr	r3, [sp, #32]
 8016c1c:	eba3 0308 	sub.w	r3, r3, r8
 8016c20:	b29b      	uxth	r3, r3
 8016c22:	2c06      	cmp	r4, #6
 8016c24:	b21d      	sxth	r5, r3
 8016c26:	d813      	bhi.n	8016c50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8016c28:	9b07      	ldr	r3, [sp, #28]
 8016c2a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8016c2e:	1c63      	adds	r3, r4, #1
 8016c30:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8016c34:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8016c38:	9b01      	ldr	r3, [sp, #4]
 8016c3a:	9901      	ldr	r1, [sp, #4]
 8016c3c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8016c40:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8016c44:	805a      	strh	r2, [r3, #2]
 8016c46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016c48:	809a      	strh	r2, [r3, #4]
 8016c4a:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016c4e:	e75e      	b.n	8016b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8016c50:	9802      	ldr	r0, [sp, #8]
 8016c52:	4575      	cmp	r5, lr
 8016c54:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8016c58:	db0d      	blt.n	8016c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8016c5a:	4431      	add	r1, r6
 8016c5c:	9b06      	ldr	r3, [sp, #24]
 8016c5e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016c62:	b289      	uxth	r1, r1
 8016c64:	4458      	add	r0, fp
 8016c66:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016c6a:	4419      	add	r1, r3
 8016c6c:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8016c70:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8016c74:	e57c      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c76:	4458      	add	r0, fp
 8016c78:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8016c7c:	e79c      	b.n	8016bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8016c7e:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8016c82:	2e07      	cmp	r6, #7
 8016c84:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016c88:	d812      	bhi.n	8016cb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8016c8a:	1c75      	adds	r5, r6, #1
 8016c8c:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8016c90:	9d01      	ldr	r5, [sp, #4]
 8016c92:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016c96:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016c9a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016c9e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016ca2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016ca6:	442c      	add	r4, r5
 8016ca8:	8061      	strh	r1, [r4, #2]
 8016caa:	80a2      	strh	r2, [r4, #4]
 8016cac:	80e3      	strh	r3, [r4, #6]
 8016cae:	e5c9      	b.n	8016844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016cb0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8016cb4:	3e01      	subs	r6, #1
 8016cb6:	445c      	add	r4, fp
 8016cb8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016cbc:	f04f 37ff 	mov.w	r7, #4294967295
 8016cc0:	2500      	movs	r5, #0
 8016cc2:	9305      	str	r3, [sp, #20]
 8016cc4:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8016cc8:	9302      	str	r3, [sp, #8]
 8016cca:	1e72      	subs	r2, r6, #1
 8016ccc:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8016cd0:	9304      	str	r3, [sp, #16]
 8016cd2:	4691      	mov	r9, r2
 8016cd4:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8016cd8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016cdc:	bf14      	ite	ne
 8016cde:	9905      	ldrne	r1, [sp, #20]
 8016ce0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016ce4:	6818      	ldr	r0, [r3, #0]
 8016ce6:	9207      	str	r2, [sp, #28]
 8016ce8:	bf18      	it	ne
 8016cea:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016cee:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016cf2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016cf6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016cfa:	9306      	str	r3, [sp, #24]
 8016cfc:	fb18 f801 	smulbb	r8, r8, r1
 8016d00:	6859      	ldr	r1, [r3, #4]
 8016d02:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016d06:	4671      	mov	r1, lr
 8016d08:	a80c      	add	r0, sp, #48	; 0x30
 8016d0a:	f7fb f927 	bl	8011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016d0e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016d12:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016d16:	9b04      	ldr	r3, [sp, #16]
 8016d18:	9a02      	ldr	r2, [sp, #8]
 8016d1a:	fb10 f001 	smulbb	r0, r0, r1
 8016d1e:	fb02 8803 	mla	r8, r2, r3, r8
 8016d22:	eba0 0108 	sub.w	r1, r0, r8
 8016d26:	f04f 0c08 	mov.w	ip, #8
 8016d2a:	fb90 f0fc 	sdiv	r0, r0, ip
 8016d2e:	4288      	cmp	r0, r1
 8016d30:	dc20      	bgt.n	8016d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8016d32:	4551      	cmp	r1, sl
 8016d34:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016d38:	da03      	bge.n	8016d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8016d3a:	b1d9      	cbz	r1, 8016d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8016d3c:	468a      	mov	sl, r1
 8016d3e:	464f      	mov	r7, r9
 8016d40:	4635      	mov	r5, r6
 8016d42:	f109 39ff 	add.w	r9, r9, #4294967295
 8016d46:	f119 0f02 	cmn.w	r9, #2
 8016d4a:	d1c5      	bne.n	8016cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016d4c:	4616      	mov	r6, r2
 8016d4e:	3201      	adds	r2, #1
 8016d50:	f1a4 0408 	sub.w	r4, r4, #8
 8016d54:	d1b6      	bne.n	8016cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 8016d56:	9b01      	ldr	r3, [sp, #4]
 8016d58:	b2ac      	uxth	r4, r5
 8016d5a:	00ed      	lsls	r5, r5, #3
 8016d5c:	1958      	adds	r0, r3, r5
 8016d5e:	1c7b      	adds	r3, r7, #1
 8016d60:	d10b      	bne.n	8016d7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8016d62:	4601      	mov	r1, r0
 8016d64:	9803      	ldr	r0, [sp, #12]
 8016d66:	f7fb f8f9 	bl	8011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016d6a:	4621      	mov	r1, r4
 8016d6c:	9801      	ldr	r0, [sp, #4]
 8016d6e:	f7ff fcd5 	bl	801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d72:	e4fd      	b.n	8016770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d74:	464f      	mov	r7, r9
 8016d76:	4635      	mov	r5, r6
 8016d78:	e7ed      	b.n	8016d56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8016d7a:	9b01      	ldr	r3, [sp, #4]
 8016d7c:	00ff      	lsls	r7, r7, #3
 8016d7e:	19d9      	adds	r1, r3, r7
 8016d80:	f7fb f8ec 	bl	8011f5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016d84:	9b03      	ldr	r3, [sp, #12]
 8016d86:	cb03      	ldmia	r3!, {r0, r1}
 8016d88:	445f      	add	r7, fp
 8016d8a:	445d      	add	r5, fp
 8016d8c:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8016d90:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8016d94:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8016d98:	9b03      	ldr	r3, [sp, #12]
 8016d9a:	6869      	ldr	r1, [r5, #4]
 8016d9c:	c303      	stmia	r3!, {r0, r1}
 8016d9e:	e7e4      	b.n	8016d6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08016da0 <_ZN8touchgfx11Application10invalidateEv>:
 8016da0:	4b09      	ldr	r3, [pc, #36]	; (8016dc8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016da2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016da6:	4b09      	ldr	r3, [pc, #36]	; (8016dcc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016da8:	b082      	sub	sp, #8
 8016daa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016dae:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016db2:	2100      	movs	r1, #0
 8016db4:	9100      	str	r1, [sp, #0]
 8016db6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016dba:	ab02      	add	r3, sp, #8
 8016dbc:	e913 0006 	ldmdb	r3, {r1, r2}
 8016dc0:	b002      	add	sp, #8
 8016dc2:	f7ff bcbf 	b.w	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016dc6:	bf00      	nop
 8016dc8:	2000dc68 	.word	0x2000dc68
 8016dcc:	2000dc6a 	.word	0x2000dc6a

08016dd0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016dd4:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8016dd8:	b09b      	sub	sp, #108	; 0x6c
 8016dda:	4604      	mov	r4, r0
 8016ddc:	4630      	mov	r0, r6
 8016dde:	f7f9 fb9a 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016de2:	4605      	mov	r5, r0
 8016de4:	b940      	cbnz	r0, 8016df8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8016de6:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016dea:	4620      	mov	r0, r4
 8016dec:	f7ff fcaa 	bl	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016df0:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8016df4:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016df8:	4bc9      	ldr	r3, [pc, #804]	; (8017120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016dfa:	681b      	ldr	r3, [r3, #0]
 8016dfc:	2b00      	cmp	r3, #0
 8016dfe:	d03e      	beq.n	8016e7e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8016e00:	4dc8      	ldr	r5, [pc, #800]	; (8017124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016e02:	4628      	mov	r0, r5
 8016e04:	f7f9 fb87 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016e08:	4606      	mov	r6, r0
 8016e0a:	2800      	cmp	r0, #0
 8016e0c:	d137      	bne.n	8016e7e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8016e0e:	4628      	mov	r0, r5
 8016e10:	f7ff fa2e 	bl	8016270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016e14:	6829      	ldr	r1, [r5, #0]
 8016e16:	686a      	ldr	r2, [r5, #4]
 8016e18:	4620      	mov	r0, r4
 8016e1a:	f7ff fc93 	bl	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016e1e:	802e      	strh	r6, [r5, #0]
 8016e20:	806e      	strh	r6, [r5, #2]
 8016e22:	80ae      	strh	r6, [r5, #4]
 8016e24:	80ee      	strh	r6, [r5, #6]
 8016e26:	ae09      	add	r6, sp, #36	; 0x24
 8016e28:	4630      	mov	r0, r6
 8016e2a:	f7ff fc26 	bl	801667a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016e2e:	4abe      	ldr	r2, [pc, #760]	; (8017128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016e30:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8016e34:	8815      	ldrh	r5, [r2, #0]
 8016e36:	9202      	str	r2, [sp, #8]
 8016e38:	462b      	mov	r3, r5
 8016e3a:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8016e3e:	429f      	cmp	r7, r3
 8016e40:	d924      	bls.n	8016e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8016e42:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8016e46:	2907      	cmp	r1, #7
 8016e48:	d816      	bhi.n	8016e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8016e4a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016e4e:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8016e52:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8016e56:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016e5a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016e5e:	1c4a      	adds	r2, r1, #1
 8016e60:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016e64:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8016e68:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8016e6c:	f8a2 9002 	strh.w	r9, [r2, #2]
 8016e70:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016e74:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016e78:	3301      	adds	r3, #1
 8016e7a:	b29b      	uxth	r3, r3
 8016e7c:	e7df      	b.n	8016e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8016e7e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8016e82:	2b00      	cmp	r3, #0
 8016e84:	d1cf      	bne.n	8016e26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8016e86:	b01b      	add	sp, #108	; 0x6c
 8016e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e8c:	462f      	mov	r7, r5
 8016e8e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8016e92:	42bb      	cmp	r3, r7
 8016e94:	d90b      	bls.n	8016eae <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8016e96:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8016e9a:	4620      	mov	r0, r4
 8016e9c:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8016ea0:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8016ea4:	3701      	adds	r7, #1
 8016ea6:	f7ff fc4d 	bl	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016eaa:	b2bf      	uxth	r7, r7
 8016eac:	e7ef      	b.n	8016e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8016eae:	4a9f      	ldr	r2, [pc, #636]	; (801712c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016eb0:	6813      	ldr	r3, [r2, #0]
 8016eb2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016eb6:	2b01      	cmp	r3, #1
 8016eb8:	4690      	mov	r8, r2
 8016eba:	f040 80e6 	bne.w	801708a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8016ebe:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8016ec2:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8016ec6:	4629      	mov	r1, r5
 8016ec8:	33aa      	adds	r3, #170	; 0xaa
 8016eca:	2500      	movs	r5, #0
 8016ecc:	428f      	cmp	r7, r1
 8016ece:	f103 0308 	add.w	r3, r3, #8
 8016ed2:	dd0a      	ble.n	8016eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8016ed4:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8016ed8:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8016edc:	4402      	add	r2, r0
 8016ede:	b212      	sxth	r2, r2
 8016ee0:	4295      	cmp	r5, r2
 8016ee2:	bfb8      	it	lt
 8016ee4:	4615      	movlt	r5, r2
 8016ee6:	3101      	adds	r1, #1
 8016ee8:	e7f0      	b.n	8016ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8016eea:	4b91      	ldr	r3, [pc, #580]	; (8017130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8016eec:	f8df b23c 	ldr.w	fp, [pc, #572]	; 801712c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8016ef0:	881b      	ldrh	r3, [r3, #0]
 8016ef2:	2b0f      	cmp	r3, #15
 8016ef4:	bf88      	it	hi
 8016ef6:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8016efa:	f04f 0300 	mov.w	r3, #0
 8016efe:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016f02:	bf98      	it	ls
 8016f04:	f04f 0a01 	movls.w	sl, #1
 8016f08:	46d8      	mov	r8, fp
 8016f0a:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8016f0e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8016f12:	4438      	add	r0, r7
 8016f14:	b207      	sxth	r7, r0
 8016f16:	f8db 0000 	ldr.w	r0, [fp]
 8016f1a:	42bd      	cmp	r5, r7
 8016f1c:	6803      	ldr	r3, [r0, #0]
 8016f1e:	f340 8084 	ble.w	801702a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016f22:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016f26:	4798      	blx	r3
 8016f28:	eb07 030a 	add.w	r3, r7, sl
 8016f2c:	4298      	cmp	r0, r3
 8016f2e:	da07      	bge.n	8016f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8016f30:	4285      	cmp	r5, r0
 8016f32:	dd05      	ble.n	8016f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8016f34:	4287      	cmp	r7, r0
 8016f36:	dd6d      	ble.n	8017014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016f38:	2f00      	cmp	r7, #0
 8016f3a:	dd6b      	ble.n	8017014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016f3c:	4628      	mov	r0, r5
 8016f3e:	e004      	b.n	8016f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8016f40:	4287      	cmp	r7, r0
 8016f42:	dcfb      	bgt.n	8016f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8016f44:	42a8      	cmp	r0, r5
 8016f46:	bfa8      	it	ge
 8016f48:	4628      	movge	r0, r5
 8016f4a:	4b7a      	ldr	r3, [pc, #488]	; (8017134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8016f4c:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016f50:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016f54:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016f58:	9b02      	ldr	r3, [sp, #8]
 8016f5a:	1bc0      	subs	r0, r0, r7
 8016f5c:	2200      	movs	r2, #0
 8016f5e:	881f      	ldrh	r7, [r3, #0]
 8016f60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016f64:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016f68:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8016f6c:	42bb      	cmp	r3, r7
 8016f6e:	d9cc      	bls.n	8016f0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8016f70:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016f74:	ab07      	add	r3, sp, #28
 8016f76:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8016f7a:	6851      	ldr	r1, [r2, #4]
 8016f7c:	c303      	stmia	r3!, {r0, r1}
 8016f7e:	a905      	add	r1, sp, #20
 8016f80:	a807      	add	r0, sp, #28
 8016f82:	f7ff fad0 	bl	8016526 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016f86:	2800      	cmp	r0, #0
 8016f88:	d04c      	beq.n	8017024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8016f8a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8016f8e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016f92:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8016f96:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8016f9a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016f9e:	9303      	str	r3, [sp, #12]
 8016fa0:	4686      	mov	lr, r0
 8016fa2:	4290      	cmp	r0, r2
 8016fa4:	4448      	add	r0, r9
 8016fa6:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8016faa:	bfb8      	it	lt
 8016fac:	4696      	movlt	lr, r2
 8016fae:	444a      	add	r2, r9
 8016fb0:	4299      	cmp	r1, r3
 8016fb2:	b280      	uxth	r0, r0
 8016fb4:	b292      	uxth	r2, r2
 8016fb6:	468c      	mov	ip, r1
 8016fb8:	fa0f f982 	sxth.w	r9, r2
 8016fbc:	bfb8      	it	lt
 8016fbe:	469c      	movlt	ip, r3
 8016fc0:	b203      	sxth	r3, r0
 8016fc2:	454b      	cmp	r3, r9
 8016fc4:	bfb8      	it	lt
 8016fc6:	4602      	movlt	r2, r0
 8016fc8:	eba2 020e 	sub.w	r2, r2, lr
 8016fcc:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016fd0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016fd4:	9b03      	ldr	r3, [sp, #12]
 8016fd6:	f8ad e01c 	strh.w	lr, [sp, #28]
 8016fda:	4411      	add	r1, r2
 8016fdc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016fe0:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016fe4:	4413      	add	r3, r2
 8016fe6:	b289      	uxth	r1, r1
 8016fe8:	b29b      	uxth	r3, r3
 8016fea:	b208      	sxth	r0, r1
 8016fec:	b21a      	sxth	r2, r3
 8016fee:	4290      	cmp	r0, r2
 8016ff0:	bfb8      	it	lt
 8016ff2:	460b      	movlt	r3, r1
 8016ff4:	eba3 030c 	sub.w	r3, r3, ip
 8016ff8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016ffc:	a807      	add	r0, sp, #28
 8016ffe:	f7f9 fa8a 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017002:	b920      	cbnz	r0, 801700e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017004:	6823      	ldr	r3, [r4, #0]
 8017006:	a907      	add	r1, sp, #28
 8017008:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801700a:	4620      	mov	r0, r4
 801700c:	4798      	blx	r3
 801700e:	3701      	adds	r7, #1
 8017010:	b2bf      	uxth	r7, r7
 8017012:	e7a9      	b.n	8016f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017014:	f8d8 0000 	ldr.w	r0, [r8]
 8017018:	6803      	ldr	r3, [r0, #0]
 801701a:	2101      	movs	r1, #1
 801701c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017020:	4798      	blx	r3
 8017022:	e772      	b.n	8016f0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8017024:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017028:	e7e8      	b.n	8016ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801702a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801702c:	4798      	blx	r3
 801702e:	4b42      	ldr	r3, [pc, #264]	; (8017138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8017030:	781b      	ldrb	r3, [r3, #0]
 8017032:	2b00      	cmp	r3, #0
 8017034:	f43f af27 	beq.w	8016e86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8017038:	2300      	movs	r3, #0
 801703a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 801703e:	9b02      	ldr	r3, [sp, #8]
 8017040:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017044:	881b      	ldrh	r3, [r3, #0]
 8017046:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801704a:	429d      	cmp	r5, r3
 801704c:	f67f af1b 	bls.w	8016e86 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8017050:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8017054:	2907      	cmp	r1, #7
 8017056:	d815      	bhi.n	8017084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8017058:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 801705c:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8017060:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8017064:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8017068:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801706c:	1c4a      	adds	r2, r1, #1
 801706e:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8017072:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017076:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 801707a:	f8a2 e002 	strh.w	lr, [r2, #2]
 801707e:	f8a2 c004 	strh.w	ip, [r2, #4]
 8017082:	80d7      	strh	r7, [r2, #6]
 8017084:	3301      	adds	r3, #1
 8017086:	b29b      	uxth	r3, r3
 8017088:	e7df      	b.n	801704a <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 801708a:	2b02      	cmp	r3, #2
 801708c:	f040 8136 	bne.w	80172fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8017090:	4b2a      	ldr	r3, [pc, #168]	; (801713c <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8017092:	781b      	ldrb	r3, [r3, #0]
 8017094:	2b01      	cmp	r3, #1
 8017096:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 801709a:	f000 809c 	beq.w	80171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801709e:	9b02      	ldr	r3, [sp, #8]
 80170a0:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 80170a4:	f8b3 b000 	ldrh.w	fp, [r3]
 80170a8:	f10b 0b01 	add.w	fp, fp, #1
 80170ac:	fa1f fb8b 	uxth.w	fp, fp
 80170b0:	2a00      	cmp	r2, #0
 80170b2:	d0bc      	beq.n	801702e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80170b4:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 80170b8:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80170bc:	441d      	add	r5, r3
 80170be:	b22d      	sxth	r5, r5
 80170c0:	4659      	mov	r1, fp
 80170c2:	f04f 0800 	mov.w	r8, #0
 80170c6:	b28b      	uxth	r3, r1
 80170c8:	429a      	cmp	r2, r3
 80170ca:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80170ce:	f240 80c1 	bls.w	8017254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80170d2:	4427      	add	r7, r4
 80170d4:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80170d8:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 80170dc:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 80170e0:	4563      	cmp	r3, ip
 80170e2:	4608      	mov	r0, r1
 80170e4:	f340 80a3 	ble.w	801722e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80170e8:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 80170ec:	4465      	add	r5, ip
 80170ee:	b22d      	sxth	r5, r5
 80170f0:	429d      	cmp	r5, r3
 80170f2:	bfa8      	it	ge
 80170f4:	461d      	movge	r5, r3
 80170f6:	3101      	adds	r1, #1
 80170f8:	4680      	mov	r8, r0
 80170fa:	e7e4      	b.n	80170c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80170fc:	d10b      	bne.n	8017116 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80170fe:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8017102:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8017106:	458c      	cmp	ip, r1
 8017108:	bfb4      	ite	lt
 801710a:	469c      	movlt	ip, r3
 801710c:	46bc      	movge	ip, r7
 801710e:	4572      	cmp	r2, lr
 8017110:	bfb8      	it	lt
 8017112:	4672      	movlt	r2, lr
 8017114:	e088      	b.n	8017228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8017116:	428a      	cmp	r2, r1
 8017118:	bfb8      	it	lt
 801711a:	460a      	movlt	r2, r1
 801711c:	46bc      	mov	ip, r7
 801711e:	e083      	b.n	8017228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8017120:	2000dcb4 	.word	0x2000dcb4
 8017124:	2000dcc0 	.word	0x2000dcc0
 8017128:	20000060 	.word	0x20000060
 801712c:	2000dc74 	.word	0x2000dc74
 8017130:	2000dc6a 	.word	0x2000dc6a
 8017134:	2000dc68 	.word	0x2000dc68
 8017138:	2000dc72 	.word	0x2000dc72
 801713c:	2000dc6c 	.word	0x2000dc6c
 8017140:	1961      	adds	r1, r4, r5
 8017142:	ab07      	add	r3, sp, #28
 8017144:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8017148:	6849      	ldr	r1, [r1, #4]
 801714a:	c303      	stmia	r3!, {r0, r1}
 801714c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017150:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017154:	2b13      	cmp	r3, #19
 8017156:	bfd8      	it	le
 8017158:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801715c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017160:	440b      	add	r3, r1
 8017162:	1a9b      	subs	r3, r3, r2
 8017164:	a807      	add	r0, sp, #28
 8017166:	f8ad 3020 	strh.w	r3, [sp, #32]
 801716a:	f7ff f89b 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801716e:	a807      	add	r0, sp, #28
 8017170:	f7f9 f9d1 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017174:	bb78      	cbnz	r0, 80171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8017176:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801717a:	f8d8 0000 	ldr.w	r0, [r8]
 801717e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017182:	f8d0 e000 	ldr.w	lr, [r0]
 8017186:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801718a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801718e:	f1bc 0f14 	cmp.w	ip, #20
 8017192:	bfa8      	it	ge
 8017194:	f04f 0c14 	movge.w	ip, #20
 8017198:	fa1f fc8c 	uxth.w	ip, ip
 801719c:	f8cd c000 	str.w	ip, [sp]
 80171a0:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80171a4:	47d0      	blx	sl
 80171a6:	4682      	mov	sl, r0
 80171a8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80171ac:	a807      	add	r0, sp, #28
 80171ae:	f7ff f85f 	bl	8016270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80171b2:	6823      	ldr	r3, [r4, #0]
 80171b4:	4425      	add	r5, r4
 80171b6:	4620      	mov	r0, r4
 80171b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80171ba:	a907      	add	r1, sp, #28
 80171bc:	4798      	blx	r3
 80171be:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80171c2:	eba0 000a 	sub.w	r0, r0, sl
 80171c6:	b200      	sxth	r0, r0
 80171c8:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80171cc:	b918      	cbnz	r0, 80171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80171ce:	b2b9      	uxth	r1, r7
 80171d0:	4648      	mov	r0, r9
 80171d2:	f7ff faa3 	bl	801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80171d6:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80171da:	f1bb 0f00 	cmp.w	fp, #0
 80171de:	f43f af26 	beq.w	801702e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80171e2:	9b02      	ldr	r3, [sp, #8]
 80171e4:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80171e8:	881b      	ldrh	r3, [r3, #0]
 80171ea:	3301      	adds	r3, #1
 80171ec:	b29b      	uxth	r3, r3
 80171ee:	2700      	movs	r7, #0
 80171f0:	b299      	uxth	r1, r3
 80171f2:	458b      	cmp	fp, r1
 80171f4:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80171f8:	d9a2      	bls.n	8017140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80171fa:	4425      	add	r5, r4
 80171fc:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8017200:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8017204:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8017208:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801720c:	4408      	add	r0, r1
 801720e:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8017212:	4471      	add	r1, lr
 8017214:	b200      	sxth	r0, r0
 8017216:	b209      	sxth	r1, r1
 8017218:	4288      	cmp	r0, r1
 801721a:	469c      	mov	ip, r3
 801721c:	f6bf af6e 	bge.w	80170fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8017220:	4586      	cmp	lr, r0
 8017222:	4672      	mov	r2, lr
 8017224:	bfb8      	it	lt
 8017226:	4602      	movlt	r2, r0
 8017228:	3301      	adds	r3, #1
 801722a:	4667      	mov	r7, ip
 801722c:	e7e0      	b.n	80171f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 801722e:	d10c      	bne.n	801724a <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8017230:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8017234:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8017238:	4287      	cmp	r7, r0
 801723a:	bfb4      	ite	lt
 801723c:	4608      	movlt	r0, r1
 801723e:	4640      	movge	r0, r8
 8017240:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8017244:	443b      	add	r3, r7
 8017246:	b21b      	sxth	r3, r3
 8017248:	e752      	b.n	80170f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801724a:	4565      	cmp	r5, ip
 801724c:	bfa8      	it	ge
 801724e:	4665      	movge	r5, ip
 8017250:	4640      	mov	r0, r8
 8017252:	e750      	b.n	80170f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8017254:	eb09 0007 	add.w	r0, r9, r7
 8017258:	4427      	add	r7, r4
 801725a:	9203      	str	r2, [sp, #12]
 801725c:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8017260:	f1ba 0f13 	cmp.w	sl, #19
 8017264:	bfde      	ittt	le
 8017266:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 801726a:	4455      	addle	r5, sl
 801726c:	b22d      	sxthle	r5, r5
 801726e:	f7f9 f952 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017272:	9a03      	ldr	r2, [sp, #12]
 8017274:	2800      	cmp	r0, #0
 8017276:	f47f af1b 	bne.w	80170b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 801727a:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 801727e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017282:	482a      	ldr	r0, [pc, #168]	; (801732c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8017284:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8017288:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 801728c:	6800      	ldr	r0, [r0, #0]
 801728e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017292:	1aad      	subs	r5, r5, r2
 8017294:	2d14      	cmp	r5, #20
 8017296:	f8ad 201e 	strh.w	r2, [sp, #30]
 801729a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801729e:	bfa8      	it	ge
 80172a0:	2514      	movge	r5, #20
 80172a2:	f8d0 c000 	ldr.w	ip, [r0]
 80172a6:	b2ad      	uxth	r5, r5
 80172a8:	fa1f fa8a 	uxth.w	sl, sl
 80172ac:	4555      	cmp	r5, sl
 80172ae:	bf94      	ite	ls
 80172b0:	9500      	strls	r5, [sp, #0]
 80172b2:	f8cd a000 	strhi.w	sl, [sp]
 80172b6:	b292      	uxth	r2, r2
 80172b8:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 80172bc:	b29b      	uxth	r3, r3
 80172be:	b289      	uxth	r1, r1
 80172c0:	47a8      	blx	r5
 80172c2:	6823      	ldr	r3, [r4, #0]
 80172c4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80172c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80172ca:	a907      	add	r1, sp, #28
 80172cc:	4620      	mov	r0, r4
 80172ce:	4798      	blx	r3
 80172d0:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80172d4:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 80172d8:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 80172dc:	1a5b      	subs	r3, r3, r1
 80172de:	440a      	add	r2, r1
 80172e0:	b21b      	sxth	r3, r3
 80172e2:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 80172e6:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 80172ea:	2b00      	cmp	r3, #0
 80172ec:	f47f aed7 	bne.w	801709e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80172f0:	fa1f f188 	uxth.w	r1, r8
 80172f4:	4648      	mov	r0, r9
 80172f6:	f7ff fa11 	bl	801671c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80172fa:	e6d0      	b.n	801709e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80172fc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8017300:	42ab      	cmp	r3, r5
 8017302:	f67f ae94 	bls.w	801702e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017306:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801730a:	ab07      	add	r3, sp, #28
 801730c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8017310:	6851      	ldr	r1, [r2, #4]
 8017312:	c303      	stmia	r3!, {r0, r1}
 8017314:	a807      	add	r0, sp, #28
 8017316:	f7f9 f8fe 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801731a:	b920      	cbnz	r0, 8017326 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 801731c:	6823      	ldr	r3, [r4, #0]
 801731e:	a907      	add	r1, sp, #28
 8017320:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017322:	4620      	mov	r0, r4
 8017324:	4798      	blx	r3
 8017326:	3501      	adds	r5, #1
 8017328:	b2ad      	uxth	r5, r5
 801732a:	e7e7      	b.n	80172fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801732c:	2000dc74 	.word	0x2000dc74

08017330 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017330:	4b03      	ldr	r3, [pc, #12]	; (8017340 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017332:	2200      	movs	r2, #0
 8017334:	801a      	strh	r2, [r3, #0]
 8017336:	805a      	strh	r2, [r3, #2]
 8017338:	809a      	strh	r2, [r3, #4]
 801733a:	80da      	strh	r2, [r3, #6]
 801733c:	4770      	bx	lr
 801733e:	bf00      	nop
 8017340:	2000dcc0 	.word	0x2000dcc0

08017344 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017348:	4606      	mov	r6, r0
 801734a:	b09d      	sub	sp, #116	; 0x74
 801734c:	a803      	add	r0, sp, #12
 801734e:	4614      	mov	r4, r2
 8017350:	468a      	mov	sl, r1
 8017352:	461d      	mov	r5, r3
 8017354:	f000 fe56 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8017358:	6833      	ldr	r3, [r6, #0]
 801735a:	4630      	mov	r0, r6
 801735c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801735e:	4798      	blx	r3
 8017360:	6833      	ldr	r3, [r6, #0]
 8017362:	4607      	mov	r7, r0
 8017364:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017366:	4630      	mov	r0, r6
 8017368:	4798      	blx	r3
 801736a:	462a      	mov	r2, r5
 801736c:	9000      	str	r0, [sp, #0]
 801736e:	4621      	mov	r1, r4
 8017370:	463b      	mov	r3, r7
 8017372:	a803      	add	r0, sp, #12
 8017374:	f000 fea1 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017378:	2500      	movs	r5, #0
 801737a:	462c      	mov	r4, r5
 801737c:	46a9      	mov	r9, r5
 801737e:	46a8      	mov	r8, r5
 8017380:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017384:	2300      	movs	r3, #0
 8017386:	9302      	str	r3, [sp, #8]
 8017388:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801738c:	429c      	cmp	r4, r3
 801738e:	d002      	beq.n	8017396 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017390:	455c      	cmp	r4, fp
 8017392:	bf18      	it	ne
 8017394:	4625      	movne	r5, r4
 8017396:	ab02      	add	r3, sp, #8
 8017398:	4632      	mov	r2, r6
 801739a:	4651      	mov	r1, sl
 801739c:	a803      	add	r0, sp, #12
 801739e:	f001 f98f 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80173a2:	4604      	mov	r4, r0
 80173a4:	b108      	cbz	r0, 80173aa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80173a6:	280a      	cmp	r0, #10
 80173a8:	d10a      	bne.n	80173c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80173aa:	45c1      	cmp	r9, r8
 80173ac:	bf38      	it	cc
 80173ae:	46c1      	movcc	r9, r8
 80173b0:	f04f 0800 	mov.w	r8, #0
 80173b4:	2c00      	cmp	r4, #0
 80173b6:	d1e5      	bne.n	8017384 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80173b8:	4648      	mov	r0, r9
 80173ba:	b01d      	add	sp, #116	; 0x74
 80173bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c0:	9a02      	ldr	r2, [sp, #8]
 80173c2:	2a00      	cmp	r2, #0
 80173c4:	d0de      	beq.n	8017384 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80173c6:	7b57      	ldrb	r7, [r2, #13]
 80173c8:	6833      	ldr	r3, [r6, #0]
 80173ca:	8894      	ldrh	r4, [r2, #4]
 80173cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80173ce:	007f      	lsls	r7, r7, #1
 80173d0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80173d4:	7a97      	ldrb	r7, [r2, #10]
 80173d6:	4629      	mov	r1, r5
 80173d8:	4307      	orrs	r7, r0
 80173da:	4630      	mov	r0, r6
 80173dc:	4798      	blx	r3
 80173de:	4438      	add	r0, r7
 80173e0:	4480      	add	r8, r0
 80173e2:	fa1f f888 	uxth.w	r8, r8
 80173e6:	e7e5      	b.n	80173b4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080173e8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80173e8:	b508      	push	{r3, lr}
 80173ea:	6803      	ldr	r3, [r0, #0]
 80173ec:	68db      	ldr	r3, [r3, #12]
 80173ee:	4798      	blx	r3
 80173f0:	b128      	cbz	r0, 80173fe <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80173f2:	7b43      	ldrb	r3, [r0, #13]
 80173f4:	7a80      	ldrb	r0, [r0, #10]
 80173f6:	005b      	lsls	r3, r3, #1
 80173f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80173fc:	4318      	orrs	r0, r3
 80173fe:	bd08      	pop	{r3, pc}

08017400 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017400:	b40e      	push	{r1, r2, r3}
 8017402:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017404:	b09e      	sub	sp, #120	; 0x78
 8017406:	ab23      	add	r3, sp, #140	; 0x8c
 8017408:	4605      	mov	r5, r0
 801740a:	f853 4b04 	ldr.w	r4, [r3], #4
 801740e:	9303      	str	r3, [sp, #12]
 8017410:	a805      	add	r0, sp, #20
 8017412:	f000 fdf7 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 8017416:	682b      	ldr	r3, [r5, #0]
 8017418:	4628      	mov	r0, r5
 801741a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801741c:	4798      	blx	r3
 801741e:	682b      	ldr	r3, [r5, #0]
 8017420:	4606      	mov	r6, r0
 8017422:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017424:	4628      	mov	r0, r5
 8017426:	4798      	blx	r3
 8017428:	4633      	mov	r3, r6
 801742a:	ae1e      	add	r6, sp, #120	; 0x78
 801742c:	4621      	mov	r1, r4
 801742e:	9000      	str	r0, [sp, #0]
 8017430:	9a03      	ldr	r2, [sp, #12]
 8017432:	2400      	movs	r4, #0
 8017434:	a805      	add	r0, sp, #20
 8017436:	f000 fe40 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801743a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801743e:	462a      	mov	r2, r5
 8017440:	4633      	mov	r3, r6
 8017442:	4621      	mov	r1, r4
 8017444:	a805      	add	r0, sp, #20
 8017446:	f001 f93b 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801744a:	b1f0      	cbz	r0, 801748a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801744c:	280a      	cmp	r0, #10
 801744e:	d018      	beq.n	8017482 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017450:	9f04      	ldr	r7, [sp, #16]
 8017452:	b1b7      	cbz	r7, 8017482 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017454:	7b78      	ldrb	r0, [r7, #13]
 8017456:	7a3b      	ldrb	r3, [r7, #8]
 8017458:	88aa      	ldrh	r2, [r5, #4]
 801745a:	00c1      	lsls	r1, r0, #3
 801745c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017460:	4319      	orrs	r1, r3
 8017462:	0643      	lsls	r3, r0, #25
 8017464:	bf44      	itt	mi
 8017466:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801746a:	b219      	sxthmi	r1, r3
 801746c:	0100      	lsls	r0, r0, #4
 801746e:	79fb      	ldrb	r3, [r7, #7]
 8017470:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017474:	4303      	orrs	r3, r0
 8017476:	4413      	add	r3, r2
 8017478:	1a5b      	subs	r3, r3, r1
 801747a:	b29b      	uxth	r3, r3
 801747c:	42a3      	cmp	r3, r4
 801747e:	bfc8      	it	gt
 8017480:	b21c      	sxthgt	r4, r3
 8017482:	4633      	mov	r3, r6
 8017484:	462a      	mov	r2, r5
 8017486:	2100      	movs	r1, #0
 8017488:	e7dc      	b.n	8017444 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801748a:	b2a0      	uxth	r0, r4
 801748c:	b01e      	add	sp, #120	; 0x78
 801748e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017492:	b003      	add	sp, #12
 8017494:	4770      	bx	lr

08017496 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017496:	b40e      	push	{r1, r2, r3}
 8017498:	b570      	push	{r4, r5, r6, lr}
 801749a:	b09d      	sub	sp, #116	; 0x74
 801749c:	ab21      	add	r3, sp, #132	; 0x84
 801749e:	4604      	mov	r4, r0
 80174a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80174a4:	9302      	str	r3, [sp, #8]
 80174a6:	a803      	add	r0, sp, #12
 80174a8:	f000 fdac 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 80174ac:	6823      	ldr	r3, [r4, #0]
 80174ae:	4620      	mov	r0, r4
 80174b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80174b2:	4798      	blx	r3
 80174b4:	6823      	ldr	r3, [r4, #0]
 80174b6:	4606      	mov	r6, r0
 80174b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174ba:	4620      	mov	r0, r4
 80174bc:	4798      	blx	r3
 80174be:	4633      	mov	r3, r6
 80174c0:	9000      	str	r0, [sp, #0]
 80174c2:	9a02      	ldr	r2, [sp, #8]
 80174c4:	4629      	mov	r1, r5
 80174c6:	a803      	add	r0, sp, #12
 80174c8:	f000 fdf7 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80174cc:	a803      	add	r0, sp, #12
 80174ce:	f001 f9c5 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80174d2:	2401      	movs	r4, #1
 80174d4:	b2a3      	uxth	r3, r4
 80174d6:	b140      	cbz	r0, 80174ea <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80174d8:	280a      	cmp	r0, #10
 80174da:	bf08      	it	eq
 80174dc:	3301      	addeq	r3, #1
 80174de:	a803      	add	r0, sp, #12
 80174e0:	bf08      	it	eq
 80174e2:	b21c      	sxtheq	r4, r3
 80174e4:	f001 f9ba 	bl	801885c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80174e8:	e7f4      	b.n	80174d4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80174ea:	4618      	mov	r0, r3
 80174ec:	b01d      	add	sp, #116	; 0x74
 80174ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80174f2:	b003      	add	sp, #12
 80174f4:	4770      	bx	lr

080174f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80174f6:	b40e      	push	{r1, r2, r3}
 80174f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80174fa:	b09e      	sub	sp, #120	; 0x78
 80174fc:	ab23      	add	r3, sp, #140	; 0x8c
 80174fe:	4604      	mov	r4, r0
 8017500:	f853 5b04 	ldr.w	r5, [r3], #4
 8017504:	9303      	str	r3, [sp, #12]
 8017506:	a805      	add	r0, sp, #20
 8017508:	f000 fd7c 	bl	8018004 <_ZN8touchgfx12TextProviderC1Ev>
 801750c:	6823      	ldr	r3, [r4, #0]
 801750e:	4620      	mov	r0, r4
 8017510:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017512:	4798      	blx	r3
 8017514:	6823      	ldr	r3, [r4, #0]
 8017516:	4606      	mov	r6, r0
 8017518:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801751a:	4620      	mov	r0, r4
 801751c:	4798      	blx	r3
 801751e:	4633      	mov	r3, r6
 8017520:	4629      	mov	r1, r5
 8017522:	9000      	str	r0, [sp, #0]
 8017524:	9a03      	ldr	r2, [sp, #12]
 8017526:	a805      	add	r0, sp, #20
 8017528:	ad1e      	add	r5, sp, #120	; 0x78
 801752a:	f000 fdc6 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801752e:	2100      	movs	r1, #0
 8017530:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017534:	4622      	mov	r2, r4
 8017536:	462b      	mov	r3, r5
 8017538:	a805      	add	r0, sp, #20
 801753a:	f001 f8c1 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801753e:	26ff      	movs	r6, #255	; 0xff
 8017540:	b1d8      	cbz	r0, 801757a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8017542:	280a      	cmp	r0, #10
 8017544:	d012      	beq.n	801756c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8017546:	9804      	ldr	r0, [sp, #16]
 8017548:	b180      	cbz	r0, 801756c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801754a:	7b47      	ldrb	r7, [r0, #13]
 801754c:	7922      	ldrb	r2, [r4, #4]
 801754e:	00fb      	lsls	r3, r7, #3
 8017550:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017554:	7a03      	ldrb	r3, [r0, #8]
 8017556:	430b      	orrs	r3, r1
 8017558:	0679      	lsls	r1, r7, #25
 801755a:	bf44      	itt	mi
 801755c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017560:	b21b      	sxthmi	r3, r3
 8017562:	1ad3      	subs	r3, r2, r3
 8017564:	b2db      	uxtb	r3, r3
 8017566:	429e      	cmp	r6, r3
 8017568:	bf28      	it	cs
 801756a:	461e      	movcs	r6, r3
 801756c:	462b      	mov	r3, r5
 801756e:	4622      	mov	r2, r4
 8017570:	2100      	movs	r1, #0
 8017572:	a805      	add	r0, sp, #20
 8017574:	f001 f8a4 	bl	80186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017578:	e7e2      	b.n	8017540 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 801757a:	4630      	mov	r0, r6
 801757c:	b01e      	add	sp, #120	; 0x78
 801757e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017582:	b003      	add	sp, #12
 8017584:	4770      	bx	lr

08017586 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017586:	b513      	push	{r0, r1, r4, lr}
 8017588:	6803      	ldr	r3, [r0, #0]
 801758a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801758e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017592:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017596:	2400      	movs	r4, #0
 8017598:	9400      	str	r4, [sp, #0]
 801759a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801759e:	691b      	ldr	r3, [r3, #16]
 80175a0:	4669      	mov	r1, sp
 80175a2:	4798      	blx	r3
 80175a4:	b002      	add	sp, #8
 80175a6:	bd10      	pop	{r4, pc}

080175a8 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80175a8:	b538      	push	{r3, r4, r5, lr}
 80175aa:	680b      	ldr	r3, [r1, #0]
 80175ac:	460c      	mov	r4, r1
 80175ae:	68db      	ldr	r3, [r3, #12]
 80175b0:	4605      	mov	r5, r0
 80175b2:	4798      	blx	r3
 80175b4:	6823      	ldr	r3, [r4, #0]
 80175b6:	4620      	mov	r0, r4
 80175b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80175ba:	4629      	mov	r1, r5
 80175bc:	4798      	blx	r3
 80175be:	4628      	mov	r0, r5
 80175c0:	bd38      	pop	{r3, r4, r5, pc}

080175c2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80175c2:	b410      	push	{r4}
 80175c4:	880a      	ldrh	r2, [r1, #0]
 80175c6:	8884      	ldrh	r4, [r0, #4]
 80175c8:	4422      	add	r2, r4
 80175ca:	800a      	strh	r2, [r1, #0]
 80175cc:	88c4      	ldrh	r4, [r0, #6]
 80175ce:	884a      	ldrh	r2, [r1, #2]
 80175d0:	4422      	add	r2, r4
 80175d2:	804a      	strh	r2, [r1, #2]
 80175d4:	6940      	ldr	r0, [r0, #20]
 80175d6:	b120      	cbz	r0, 80175e2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80175d8:	6803      	ldr	r3, [r0, #0]
 80175da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80175de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80175e0:	4718      	bx	r3
 80175e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80175e6:	4770      	bx	lr

080175e8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80175e8:	b570      	push	{r4, r5, r6, lr}
 80175ea:	8882      	ldrh	r2, [r0, #4]
 80175ec:	880b      	ldrh	r3, [r1, #0]
 80175ee:	4413      	add	r3, r2
 80175f0:	800b      	strh	r3, [r1, #0]
 80175f2:	88c2      	ldrh	r2, [r0, #6]
 80175f4:	884b      	ldrh	r3, [r1, #2]
 80175f6:	460c      	mov	r4, r1
 80175f8:	4413      	add	r3, r2
 80175fa:	804b      	strh	r3, [r1, #2]
 80175fc:	4605      	mov	r5, r0
 80175fe:	1d01      	adds	r1, r0, #4
 8017600:	4620      	mov	r0, r4
 8017602:	f7f8 ff45 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017606:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801760a:	2b00      	cmp	r3, #0
 801760c:	dd0b      	ble.n	8017626 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801760e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017612:	2b00      	cmp	r3, #0
 8017614:	dd07      	ble.n	8017626 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017616:	6968      	ldr	r0, [r5, #20]
 8017618:	b128      	cbz	r0, 8017626 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801761a:	6803      	ldr	r3, [r0, #0]
 801761c:	4621      	mov	r1, r4
 801761e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017620:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017624:	4718      	bx	r3
 8017626:	bd70      	pop	{r4, r5, r6, pc}

08017628 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017628:	b570      	push	{r4, r5, r6, lr}
 801762a:	8882      	ldrh	r2, [r0, #4]
 801762c:	880b      	ldrh	r3, [r1, #0]
 801762e:	4413      	add	r3, r2
 8017630:	800b      	strh	r3, [r1, #0]
 8017632:	88c2      	ldrh	r2, [r0, #6]
 8017634:	884b      	ldrh	r3, [r1, #2]
 8017636:	460c      	mov	r4, r1
 8017638:	4413      	add	r3, r2
 801763a:	804b      	strh	r3, [r1, #2]
 801763c:	4605      	mov	r5, r0
 801763e:	1d01      	adds	r1, r0, #4
 8017640:	4620      	mov	r0, r4
 8017642:	f7f8 ff25 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017646:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801764a:	2b00      	cmp	r3, #0
 801764c:	dd18      	ble.n	8017680 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801764e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017652:	2b00      	cmp	r3, #0
 8017654:	dd14      	ble.n	8017680 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8017656:	6968      	ldr	r0, [r5, #20]
 8017658:	b128      	cbz	r0, 8017666 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801765a:	6803      	ldr	r3, [r0, #0]
 801765c:	4621      	mov	r1, r4
 801765e:	691b      	ldr	r3, [r3, #16]
 8017660:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017664:	4718      	bx	r3
 8017666:	4b07      	ldr	r3, [pc, #28]	; (8017684 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017668:	681b      	ldr	r3, [r3, #0]
 801766a:	3304      	adds	r3, #4
 801766c:	429d      	cmp	r5, r3
 801766e:	d107      	bne.n	8017680 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8017670:	f7fe fff2 	bl	8016658 <_ZN8touchgfx11Application11getInstanceEv>
 8017674:	6821      	ldr	r1, [r4, #0]
 8017676:	6862      	ldr	r2, [r4, #4]
 8017678:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801767c:	f7ff b862 	b.w	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8017680:	bd70      	pop	{r4, r5, r6, pc}
 8017682:	bf00      	nop
 8017684:	2000dcb8 	.word	0x2000dcb8

08017688 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017688:	b570      	push	{r4, r5, r6, lr}
 801768a:	4604      	mov	r4, r0
 801768c:	4616      	mov	r6, r2
 801768e:	460d      	mov	r5, r1
 8017690:	b901      	cbnz	r1, 8017694 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017692:	b192      	cbz	r2, 80176ba <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017694:	6823      	ldr	r3, [r4, #0]
 8017696:	4620      	mov	r0, r4
 8017698:	699b      	ldr	r3, [r3, #24]
 801769a:	4798      	blx	r3
 801769c:	88e2      	ldrh	r2, [r4, #6]
 801769e:	88a1      	ldrh	r1, [r4, #4]
 80176a0:	4432      	add	r2, r6
 80176a2:	4429      	add	r1, r5
 80176a4:	4620      	mov	r0, r4
 80176a6:	b212      	sxth	r2, r2
 80176a8:	b209      	sxth	r1, r1
 80176aa:	f7ec f896 	bl	80037da <_ZN8touchgfx8Drawable5setXYEss>
 80176ae:	6823      	ldr	r3, [r4, #0]
 80176b0:	4620      	mov	r0, r4
 80176b2:	699b      	ldr	r3, [r3, #24]
 80176b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80176b8:	4718      	bx	r3
 80176ba:	bd70      	pop	{r4, r5, r6, pc}

080176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80176bc:	b510      	push	{r4, lr}
 80176be:	4604      	mov	r4, r0
 80176c0:	4608      	mov	r0, r1
 80176c2:	2300      	movs	r3, #0
 80176c4:	8023      	strh	r3, [r4, #0]
 80176c6:	8063      	strh	r3, [r4, #2]
 80176c8:	6803      	ldr	r3, [r0, #0]
 80176ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80176ce:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80176d2:	80a1      	strh	r1, [r4, #4]
 80176d4:	80e2      	strh	r2, [r4, #6]
 80176d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176d8:	4621      	mov	r1, r4
 80176da:	4798      	blx	r3
 80176dc:	4620      	mov	r0, r4
 80176de:	bd10      	pop	{r4, pc}

080176e0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80176e0:	b530      	push	{r4, r5, lr}
 80176e2:	8083      	strh	r3, [r0, #4]
 80176e4:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80176e8:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80176ec:	7183      	strb	r3, [r0, #6]
 80176ee:	79c3      	ldrb	r3, [r0, #7]
 80176f0:	6101      	str	r1, [r0, #16]
 80176f2:	f365 0306 	bfi	r3, r5, #0, #7
 80176f6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80176fa:	8282      	strh	r2, [r0, #20]
 80176fc:	f365 13c7 	bfi	r3, r5, #7, #1
 8017700:	71c3      	strb	r3, [r0, #7]
 8017702:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8017706:	7203      	strb	r3, [r0, #8]
 8017708:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801770c:	7243      	strb	r3, [r0, #9]
 801770e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017712:	8143      	strh	r3, [r0, #10]
 8017714:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8017718:	8183      	strh	r3, [r0, #12]
 801771a:	4b01      	ldr	r3, [pc, #4]	; (8017720 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801771c:	6003      	str	r3, [r0, #0]
 801771e:	bd30      	pop	{r4, r5, pc}
 8017720:	08028d80 	.word	0x08028d80

08017724 <_ZNK8touchgfx9ConstFont4findEt>:
 8017724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017726:	6904      	ldr	r4, [r0, #16]
 8017728:	b3bc      	cbz	r4, 801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801772a:	88a3      	ldrh	r3, [r4, #4]
 801772c:	8a82      	ldrh	r2, [r0, #20]
 801772e:	1acb      	subs	r3, r1, r3
 8017730:	f102 32ff 	add.w	r2, r2, #4294967295
 8017734:	d431      	bmi.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017736:	4293      	cmp	r3, r2
 8017738:	dd0c      	ble.n	8017754 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801773a:	230e      	movs	r3, #14
 801773c:	fb03 4302 	mla	r3, r3, r2, r4
 8017740:	889b      	ldrh	r3, [r3, #4]
 8017742:	1a5b      	subs	r3, r3, r1
 8017744:	1ad3      	subs	r3, r2, r3
 8017746:	429a      	cmp	r2, r3
 8017748:	db27      	blt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801774a:	2b00      	cmp	r3, #0
 801774c:	bfbc      	itt	lt
 801774e:	2302      	movlt	r3, #2
 8017750:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017754:	2500      	movs	r5, #0
 8017756:	260e      	movs	r6, #14
 8017758:	4295      	cmp	r5, r2
 801775a:	dc1e      	bgt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801775c:	fb06 4003 	mla	r0, r6, r3, r4
 8017760:	8887      	ldrh	r7, [r0, #4]
 8017762:	42b9      	cmp	r1, r7
 8017764:	d01a      	beq.n	801779c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017766:	d20d      	bcs.n	8017784 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017768:	1e5a      	subs	r2, r3, #1
 801776a:	4295      	cmp	r5, r2
 801776c:	dc15      	bgt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801776e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017772:	1a5b      	subs	r3, r3, r1
 8017774:	1ad3      	subs	r3, r2, r3
 8017776:	429a      	cmp	r2, r3
 8017778:	db0f      	blt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801777a:	429d      	cmp	r5, r3
 801777c:	ddec      	ble.n	8017758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801777e:	1953      	adds	r3, r2, r5
 8017780:	105b      	asrs	r3, r3, #1
 8017782:	e7e9      	b.n	8017758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017784:	1c5d      	adds	r5, r3, #1
 8017786:	42aa      	cmp	r2, r5
 8017788:	db07      	blt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801778a:	8a43      	ldrh	r3, [r0, #18]
 801778c:	1acb      	subs	r3, r1, r3
 801778e:	442b      	add	r3, r5
 8017790:	429d      	cmp	r5, r3
 8017792:	dc02      	bgt.n	801779a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017794:	429a      	cmp	r2, r3
 8017796:	dadf      	bge.n	8017758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017798:	e7f1      	b.n	801777e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801779a:	2000      	movs	r0, #0
 801779c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801779e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801779e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80177a0:	4604      	mov	r4, r0
 80177a2:	4617      	mov	r7, r2
 80177a4:	461e      	mov	r6, r3
 80177a6:	b911      	cbnz	r1, 80177ae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80177a8:	2500      	movs	r5, #0
 80177aa:	4628      	mov	r0, r5
 80177ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80177ae:	290a      	cmp	r1, #10
 80177b0:	d0fa      	beq.n	80177a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80177b2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80177b6:	4291      	cmp	r1, r2
 80177b8:	d0f6      	beq.n	80177a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80177ba:	f242 020b 	movw	r2, #8203	; 0x200b
 80177be:	4291      	cmp	r1, r2
 80177c0:	d0f2      	beq.n	80177a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80177c2:	f7ff ffaf 	bl	8017724 <_ZNK8touchgfx9ConstFont4findEt>
 80177c6:	4605      	mov	r5, r0
 80177c8:	b950      	cbnz	r0, 80177e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80177ca:	6823      	ldr	r3, [r4, #0]
 80177cc:	4620      	mov	r0, r4
 80177ce:	691b      	ldr	r3, [r3, #16]
 80177d0:	4798      	blx	r3
 80177d2:	4601      	mov	r1, r0
 80177d4:	4620      	mov	r0, r4
 80177d6:	f7ff ffa5 	bl	8017724 <_ZNK8touchgfx9ConstFont4findEt>
 80177da:	4605      	mov	r5, r0
 80177dc:	2800      	cmp	r0, #0
 80177de:	d0e3      	beq.n	80177a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80177e0:	6823      	ldr	r3, [r4, #0]
 80177e2:	4629      	mov	r1, r5
 80177e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80177e6:	4620      	mov	r0, r4
 80177e8:	4798      	blx	r3
 80177ea:	6038      	str	r0, [r7, #0]
 80177ec:	6823      	ldr	r3, [r4, #0]
 80177ee:	4620      	mov	r0, r4
 80177f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80177f2:	4798      	blx	r3
 80177f4:	7030      	strb	r0, [r6, #0]
 80177f6:	e7d8      	b.n	80177aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080177f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80177f8:	b538      	push	{r3, r4, r5, lr}
 80177fa:	4605      	mov	r5, r0
 80177fc:	f002 f904 	bl	8019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017800:	4604      	mov	r4, r0
 8017802:	4628      	mov	r0, r5
 8017804:	f002 f844 	bl	8019890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017808:	2800      	cmp	r0, #0
 801780a:	bf14      	ite	ne
 801780c:	2002      	movne	r0, #2
 801780e:	2000      	moveq	r0, #0
 8017810:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017814:	b280      	uxth	r0, r0
 8017816:	bd38      	pop	{r3, r4, r5, pc}

08017818 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017818:	b538      	push	{r3, r4, r5, lr}
 801781a:	4605      	mov	r5, r0
 801781c:	f002 f8f4 	bl	8019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017820:	4604      	mov	r4, r0
 8017822:	4628      	mov	r0, r5
 8017824:	f002 f834 	bl	8019890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017828:	2800      	cmp	r0, #0
 801782a:	bf14      	ite	ne
 801782c:	2002      	movne	r0, #2
 801782e:	2000      	moveq	r0, #0
 8017830:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017834:	f040 0001 	orr.w	r0, r0, #1
 8017838:	b280      	uxth	r0, r0
 801783a:	bd38      	pop	{r3, r4, r5, pc}

0801783c <_ZN8touchgfx4clzuEm>:
 801783c:	4603      	mov	r3, r0
 801783e:	b1c8      	cbz	r0, 8017874 <_ZN8touchgfx4clzuEm+0x38>
 8017840:	0c02      	lsrs	r2, r0, #16
 8017842:	0412      	lsls	r2, r2, #16
 8017844:	b9a2      	cbnz	r2, 8017870 <_ZN8touchgfx4clzuEm+0x34>
 8017846:	0403      	lsls	r3, r0, #16
 8017848:	2010      	movs	r0, #16
 801784a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801784e:	bf04      	itt	eq
 8017850:	021b      	lsleq	r3, r3, #8
 8017852:	3008      	addeq	r0, #8
 8017854:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017858:	bf04      	itt	eq
 801785a:	011b      	lsleq	r3, r3, #4
 801785c:	3004      	addeq	r0, #4
 801785e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017862:	bf04      	itt	eq
 8017864:	009b      	lsleq	r3, r3, #2
 8017866:	3002      	addeq	r0, #2
 8017868:	2b00      	cmp	r3, #0
 801786a:	db04      	blt.n	8017876 <_ZN8touchgfx4clzuEm+0x3a>
 801786c:	3001      	adds	r0, #1
 801786e:	4770      	bx	lr
 8017870:	2000      	movs	r0, #0
 8017872:	e7ea      	b.n	801784a <_ZN8touchgfx4clzuEm+0xe>
 8017874:	2020      	movs	r0, #32
 8017876:	4770      	bx	lr

08017878 <_ZN8touchgfx7muldivuEmmmRm>:
 8017878:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801787c:	4680      	mov	r8, r0
 801787e:	460f      	mov	r7, r1
 8017880:	4615      	mov	r5, r2
 8017882:	461e      	mov	r6, r3
 8017884:	f7ff ffda 	bl	801783c <_ZN8touchgfx4clzuEm>
 8017888:	b998      	cbnz	r0, 80178b2 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801788a:	4608      	mov	r0, r1
 801788c:	f7ff ffd6 	bl	801783c <_ZN8touchgfx4clzuEm>
 8017890:	2800      	cmp	r0, #0
 8017892:	dd08      	ble.n	80178a6 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8017894:	4633      	mov	r3, r6
 8017896:	462a      	mov	r2, r5
 8017898:	4641      	mov	r1, r8
 801789a:	4638      	mov	r0, r7
 801789c:	f7ff ffec 	bl	8017878 <_ZN8touchgfx7muldivuEmmmRm>
 80178a0:	b003      	add	sp, #12
 80178a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178a6:	f04f 33ff 	mov.w	r3, #4294967295
 80178aa:	6033      	str	r3, [r6, #0]
 80178ac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80178b0:	e7f6      	b.n	80178a0 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80178b2:	fa31 f900 	lsrs.w	r9, r1, r0
 80178b6:	fb01 f308 	mul.w	r3, r1, r8
 80178ba:	d105      	bne.n	80178c8 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80178bc:	fbb3 f0f5 	udiv	r0, r3, r5
 80178c0:	fb05 3510 	mls	r5, r5, r0, r3
 80178c4:	6035      	str	r5, [r6, #0]
 80178c6:	e7eb      	b.n	80178a0 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80178c8:	2301      	movs	r3, #1
 80178ca:	fa08 fb00 	lsl.w	fp, r8, r0
 80178ce:	fa03 f000 	lsl.w	r0, r3, r0
 80178d2:	3801      	subs	r0, #1
 80178d4:	462a      	mov	r2, r5
 80178d6:	4633      	mov	r3, r6
 80178d8:	4641      	mov	r1, r8
 80178da:	4038      	ands	r0, r7
 80178dc:	f7ff ffcc 	bl	8017878 <_ZN8touchgfx7muldivuEmmmRm>
 80178e0:	fbbb faf5 	udiv	sl, fp, r5
 80178e4:	462a      	mov	r2, r5
 80178e6:	4607      	mov	r7, r0
 80178e8:	ab01      	add	r3, sp, #4
 80178ea:	fb05 b11a 	mls	r1, r5, sl, fp
 80178ee:	4648      	mov	r0, r9
 80178f0:	f7ff ffc2 	bl	8017878 <_ZN8touchgfx7muldivuEmmmRm>
 80178f4:	9b01      	ldr	r3, [sp, #4]
 80178f6:	6832      	ldr	r2, [r6, #0]
 80178f8:	fb09 f40a 	mul.w	r4, r9, sl
 80178fc:	441a      	add	r2, r3
 80178fe:	fbb2 f3f5 	udiv	r3, r2, r5
 8017902:	441c      	add	r4, r3
 8017904:	443c      	add	r4, r7
 8017906:	4420      	add	r0, r4
 8017908:	fb05 2513 	mls	r5, r5, r3, r2
 801790c:	e7da      	b.n	80178c4 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801790e <_ZN8touchgfx6muldivElllRl>:
 801790e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017910:	2800      	cmp	r0, #0
 8017912:	bfba      	itte	lt
 8017914:	4240      	neglt	r0, r0
 8017916:	f04f 34ff 	movlt.w	r4, #4294967295
 801791a:	2401      	movge	r4, #1
 801791c:	2900      	cmp	r1, #0
 801791e:	bfbc      	itt	lt
 8017920:	4249      	neglt	r1, r1
 8017922:	4264      	neglt	r4, r4
 8017924:	2a00      	cmp	r2, #0
 8017926:	bfb6      	itet	lt
 8017928:	4265      	neglt	r5, r4
 801792a:	4625      	movge	r5, r4
 801792c:	4252      	neglt	r2, r2
 801792e:	4288      	cmp	r0, r1
 8017930:	461e      	mov	r6, r3
 8017932:	bfc2      	ittt	gt
 8017934:	4603      	movgt	r3, r0
 8017936:	4608      	movgt	r0, r1
 8017938:	4619      	movgt	r1, r3
 801793a:	ab01      	add	r3, sp, #4
 801793c:	f7ff ff9c 	bl	8017878 <_ZN8touchgfx7muldivuEmmmRm>
 8017940:	9b01      	ldr	r3, [sp, #4]
 8017942:	4368      	muls	r0, r5
 8017944:	435c      	muls	r4, r3
 8017946:	6034      	str	r4, [r6, #0]
 8017948:	b002      	add	sp, #8
 801794a:	bd70      	pop	{r4, r5, r6, pc}

0801794c <_ZN8touchgfx6muldivElll>:
 801794c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801794e:	4606      	mov	r6, r0
 8017950:	ab01      	add	r3, sp, #4
 8017952:	460d      	mov	r5, r1
 8017954:	4614      	mov	r4, r2
 8017956:	f7ff ffda 	bl	801790e <_ZN8touchgfx6muldivElllRl>
 801795a:	2e00      	cmp	r6, #0
 801795c:	db20      	blt.n	80179a0 <_ZN8touchgfx6muldivElll+0x54>
 801795e:	bf14      	ite	ne
 8017960:	2301      	movne	r3, #1
 8017962:	2300      	moveq	r3, #0
 8017964:	2d00      	cmp	r5, #0
 8017966:	db1e      	blt.n	80179a6 <_ZN8touchgfx6muldivElll+0x5a>
 8017968:	bf14      	ite	ne
 801796a:	2201      	movne	r2, #1
 801796c:	2200      	moveq	r2, #0
 801796e:	2c00      	cmp	r4, #0
 8017970:	fb03 f202 	mul.w	r2, r3, r2
 8017974:	db1a      	blt.n	80179ac <_ZN8touchgfx6muldivElll+0x60>
 8017976:	bf14      	ite	ne
 8017978:	2301      	movne	r3, #1
 801797a:	2300      	moveq	r3, #0
 801797c:	4353      	muls	r3, r2
 801797e:	2b01      	cmp	r3, #1
 8017980:	d117      	bne.n	80179b2 <_ZN8touchgfx6muldivElll+0x66>
 8017982:	9b01      	ldr	r3, [sp, #4]
 8017984:	2c00      	cmp	r4, #0
 8017986:	bfb8      	it	lt
 8017988:	4264      	neglt	r4, r4
 801798a:	2b00      	cmp	r3, #0
 801798c:	f104 0401 	add.w	r4, r4, #1
 8017990:	bfb8      	it	lt
 8017992:	425b      	neglt	r3, r3
 8017994:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017998:	db00      	blt.n	801799c <_ZN8touchgfx6muldivElll+0x50>
 801799a:	3001      	adds	r0, #1
 801799c:	b002      	add	sp, #8
 801799e:	bd70      	pop	{r4, r5, r6, pc}
 80179a0:	f04f 33ff 	mov.w	r3, #4294967295
 80179a4:	e7de      	b.n	8017964 <_ZN8touchgfx6muldivElll+0x18>
 80179a6:	f04f 32ff 	mov.w	r2, #4294967295
 80179aa:	e7e0      	b.n	801796e <_ZN8touchgfx6muldivElll+0x22>
 80179ac:	f04f 33ff 	mov.w	r3, #4294967295
 80179b0:	e7e4      	b.n	801797c <_ZN8touchgfx6muldivElll+0x30>
 80179b2:	3301      	adds	r3, #1
 80179b4:	d1f2      	bne.n	801799c <_ZN8touchgfx6muldivElll+0x50>
 80179b6:	9b01      	ldr	r3, [sp, #4]
 80179b8:	2c00      	cmp	r4, #0
 80179ba:	bfb8      	it	lt
 80179bc:	4264      	neglt	r4, r4
 80179be:	2b00      	cmp	r3, #0
 80179c0:	bfb8      	it	lt
 80179c2:	425b      	neglt	r3, r3
 80179c4:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80179c8:	bfc8      	it	gt
 80179ca:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80179ce:	e7e5      	b.n	801799c <_ZN8touchgfx6muldivElll+0x50>

080179d0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80179d0:	2000      	movs	r0, #0
 80179d2:	4770      	bx	lr

080179d4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80179d4:	2001      	movs	r0, #1
 80179d6:	4770      	bx	lr

080179d8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80179d8:	2002      	movs	r0, #2
 80179da:	4770      	bx	lr

080179dc <_ZN8touchgfx6ScreenD1Ev>:
 80179dc:	4770      	bx	lr

080179de <_ZN8touchgfx12GestureEventD1Ev>:
 80179de:	4770      	bx	lr

080179e0 <_ZN8touchgfx9DragEventD1Ev>:
 80179e0:	4770      	bx	lr

080179e2 <_ZN8touchgfx10ClickEventD1Ev>:
 80179e2:	4770      	bx	lr

080179e4 <_ZN8touchgfx10ClickEventD0Ev>:
 80179e4:	b510      	push	{r4, lr}
 80179e6:	210c      	movs	r1, #12
 80179e8:	4604      	mov	r4, r0
 80179ea:	f00d ffa8 	bl	802593e <_ZdlPvj>
 80179ee:	4620      	mov	r0, r4
 80179f0:	bd10      	pop	{r4, pc}

080179f2 <_ZN8touchgfx9DragEventD0Ev>:
 80179f2:	b510      	push	{r4, lr}
 80179f4:	2110      	movs	r1, #16
 80179f6:	4604      	mov	r4, r0
 80179f8:	f00d ffa1 	bl	802593e <_ZdlPvj>
 80179fc:	4620      	mov	r0, r4
 80179fe:	bd10      	pop	{r4, pc}

08017a00 <_ZN8touchgfx12GestureEventD0Ev>:
 8017a00:	b510      	push	{r4, lr}
 8017a02:	210c      	movs	r1, #12
 8017a04:	4604      	mov	r4, r0
 8017a06:	f00d ff9a 	bl	802593e <_ZdlPvj>
 8017a0a:	4620      	mov	r0, r4
 8017a0c:	bd10      	pop	{r4, pc}

08017a0e <_ZN8touchgfx6ScreenD0Ev>:
 8017a0e:	b510      	push	{r4, lr}
 8017a10:	213c      	movs	r1, #60	; 0x3c
 8017a12:	4604      	mov	r4, r0
 8017a14:	f00d ff93 	bl	802593e <_ZdlPvj>
 8017a18:	4620      	mov	r0, r4
 8017a1a:	bd10      	pop	{r4, pc}

08017a1c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017a1c:	b530      	push	{r4, r5, lr}
 8017a1e:	460d      	mov	r5, r1
 8017a20:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017a22:	b087      	sub	sp, #28
 8017a24:	4604      	mov	r4, r0
 8017a26:	b301      	cbz	r1, 8017a6a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017a28:	a801      	add	r0, sp, #4
 8017a2a:	f7ff fe47 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a2e:	892a      	ldrh	r2, [r5, #8]
 8017a30:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017a34:	7928      	ldrb	r0, [r5, #4]
 8017a36:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017a3a:	f88d 0010 	strb.w	r0, [sp, #16]
 8017a3e:	1ad2      	subs	r2, r2, r3
 8017a40:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017a42:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017a44:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017a48:	441a      	add	r2, r3
 8017a4a:	896b      	ldrh	r3, [r5, #10]
 8017a4c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017a50:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017a54:	1b5b      	subs	r3, r3, r5
 8017a56:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017a58:	442b      	add	r3, r5
 8017a5a:	4d05      	ldr	r5, [pc, #20]	; (8017a70 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017a5c:	9503      	str	r5, [sp, #12]
 8017a5e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017a62:	6803      	ldr	r3, [r0, #0]
 8017a64:	a903      	add	r1, sp, #12
 8017a66:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017a68:	4798      	blx	r3
 8017a6a:	b007      	add	sp, #28
 8017a6c:	bd30      	pop	{r4, r5, pc}
 8017a6e:	bf00      	nop
 8017a70:	08028e00 	.word	0x08028e00

08017a74 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a78:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017a7a:	b08a      	sub	sp, #40	; 0x28
 8017a7c:	4604      	mov	r4, r0
 8017a7e:	460d      	mov	r5, r1
 8017a80:	b113      	cbz	r3, 8017a88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017a82:	790b      	ldrb	r3, [r1, #4]
 8017a84:	2b00      	cmp	r3, #0
 8017a86:	d044      	beq.n	8017b12 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017a88:	f104 0804 	add.w	r8, r4, #4
 8017a8c:	4641      	mov	r1, r8
 8017a8e:	a803      	add	r0, sp, #12
 8017a90:	f7ff fe14 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a94:	792b      	ldrb	r3, [r5, #4]
 8017a96:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017a9a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017a9e:	b983      	cbnz	r3, 8017ac2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017aa0:	892a      	ldrh	r2, [r5, #8]
 8017aa2:	88e9      	ldrh	r1, [r5, #6]
 8017aa4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017aa8:	1b92      	subs	r2, r2, r6
 8017aaa:	1bc9      	subs	r1, r1, r7
 8017aac:	9301      	str	r3, [sp, #4]
 8017aae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017ab2:	9300      	str	r3, [sp, #0]
 8017ab4:	b212      	sxth	r2, r2
 8017ab6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017aba:	b209      	sxth	r1, r1
 8017abc:	4640      	mov	r0, r8
 8017abe:	f7f8 fc03 	bl	80102c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017ac2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017ac4:	b329      	cbz	r1, 8017b12 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017ac6:	a805      	add	r0, sp, #20
 8017ac8:	f7ff fdf8 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017acc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017ad0:	792b      	ldrb	r3, [r5, #4]
 8017ad2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017ad4:	f88d 3020 	strb.w	r3, [sp, #32]
 8017ad8:	1abf      	subs	r7, r7, r2
 8017ada:	88ea      	ldrh	r2, [r5, #6]
 8017adc:	4417      	add	r7, r2
 8017ade:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017ae0:	4417      	add	r7, r2
 8017ae2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017ae6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017aea:	1ab6      	subs	r6, r6, r2
 8017aec:	892a      	ldrh	r2, [r5, #8]
 8017aee:	4416      	add	r6, r2
 8017af0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017af2:	4416      	add	r6, r2
 8017af4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017af8:	4a07      	ldr	r2, [pc, #28]	; (8017b18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017afa:	9207      	str	r2, [sp, #28]
 8017afc:	2600      	movs	r6, #0
 8017afe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017b02:	6803      	ldr	r3, [r0, #0]
 8017b04:	a907      	add	r1, sp, #28
 8017b06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b08:	4798      	blx	r3
 8017b0a:	792b      	ldrb	r3, [r5, #4]
 8017b0c:	b10b      	cbz	r3, 8017b12 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017b0e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017b12:	b00a      	add	sp, #40	; 0x28
 8017b14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017b18:	08028dd8 	.word	0x08028dd8

08017b1c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017b20:	460c      	mov	r4, r1
 8017b22:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017b24:	b088      	sub	sp, #32
 8017b26:	4605      	mov	r5, r0
 8017b28:	2900      	cmp	r1, #0
 8017b2a:	d06d      	beq.n	8017c08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017b2c:	4668      	mov	r0, sp
 8017b2e:	f7ff fdc5 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b32:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017b34:	88e3      	ldrh	r3, [r4, #6]
 8017b36:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017b3a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017b3e:	440b      	add	r3, r1
 8017b40:	b21b      	sxth	r3, r3
 8017b42:	4543      	cmp	r3, r8
 8017b44:	db31      	blt.n	8017baa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b46:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017b4a:	44c4      	add	ip, r8
 8017b4c:	fa0f fc8c 	sxth.w	ip, ip
 8017b50:	4563      	cmp	r3, ip
 8017b52:	da2a      	bge.n	8017baa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b54:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017b56:	8926      	ldrh	r6, [r4, #8]
 8017b58:	4416      	add	r6, r2
 8017b5a:	b236      	sxth	r6, r6
 8017b5c:	42be      	cmp	r6, r7
 8017b5e:	db24      	blt.n	8017baa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b60:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017b64:	4438      	add	r0, r7
 8017b66:	b200      	sxth	r0, r0
 8017b68:	4286      	cmp	r6, r0
 8017b6a:	da1e      	bge.n	8017baa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b6c:	8963      	ldrh	r3, [r4, #10]
 8017b6e:	4419      	add	r1, r3
 8017b70:	b209      	sxth	r1, r1
 8017b72:	4541      	cmp	r1, r8
 8017b74:	db08      	blt.n	8017b88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b76:	4561      	cmp	r1, ip
 8017b78:	da06      	bge.n	8017b88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b7a:	89a3      	ldrh	r3, [r4, #12]
 8017b7c:	441a      	add	r2, r3
 8017b7e:	b212      	sxth	r2, r2
 8017b80:	42ba      	cmp	r2, r7
 8017b82:	db01      	blt.n	8017b88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b84:	4282      	cmp	r2, r0
 8017b86:	db10      	blt.n	8017baa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b88:	4b21      	ldr	r3, [pc, #132]	; (8017c10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017b8a:	9304      	str	r3, [sp, #16]
 8017b8c:	2302      	movs	r3, #2
 8017b8e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017b92:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017b94:	2300      	movs	r3, #0
 8017b96:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017b9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017b9e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017ba2:	6803      	ldr	r3, [r0, #0]
 8017ba4:	a904      	add	r1, sp, #16
 8017ba6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017ba8:	4798      	blx	r3
 8017baa:	1d29      	adds	r1, r5, #4
 8017bac:	a802      	add	r0, sp, #8
 8017bae:	f7ff fd85 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017bb2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017bb6:	88e0      	ldrh	r0, [r4, #6]
 8017bb8:	7921      	ldrb	r1, [r4, #4]
 8017bba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017bbe:	8922      	ldrh	r2, [r4, #8]
 8017bc0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017bc2:	f88d 1014 	strb.w	r1, [sp, #20]
 8017bc6:	eba3 0808 	sub.w	r8, r3, r8
 8017bca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017bce:	1bdf      	subs	r7, r3, r7
 8017bd0:	b2bb      	uxth	r3, r7
 8017bd2:	fa1f f888 	uxth.w	r8, r8
 8017bd6:	8967      	ldrh	r7, [r4, #10]
 8017bd8:	89a4      	ldrh	r4, [r4, #12]
 8017bda:	4440      	add	r0, r8
 8017bdc:	4460      	add	r0, ip
 8017bde:	441a      	add	r2, r3
 8017be0:	44b8      	add	r8, r7
 8017be2:	4423      	add	r3, r4
 8017be4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017be8:	4433      	add	r3, r6
 8017bea:	4432      	add	r2, r6
 8017bec:	44e0      	add	r8, ip
 8017bee:	4c09      	ldr	r4, [pc, #36]	; (8017c14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017bf0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017bf2:	9404      	str	r4, [sp, #16]
 8017bf4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017bf8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017bfc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017c00:	6803      	ldr	r3, [r0, #0]
 8017c02:	a904      	add	r1, sp, #16
 8017c04:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017c06:	4798      	blx	r3
 8017c08:	b008      	add	sp, #32
 8017c0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017c0e:	bf00      	nop
 8017c10:	08028dd8 	.word	0x08028dd8
 8017c14:	08028dec 	.word	0x08028dec

08017c18 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017c18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017c1a:	4604      	mov	r4, r0
 8017c1c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017c20:	3201      	adds	r2, #1
 8017c22:	d112      	bne.n	8017c4a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017c24:	6803      	ldr	r3, [r0, #0]
 8017c26:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017c2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017c2e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017c32:	2500      	movs	r5, #0
 8017c34:	9500      	str	r5, [sp, #0]
 8017c36:	466d      	mov	r5, sp
 8017c38:	4629      	mov	r1, r5
 8017c3a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017c3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c40:	4798      	blx	r3
 8017c42:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017c46:	e884 0003 	stmia.w	r4, {r0, r1}
 8017c4a:	4620      	mov	r0, r4
 8017c4c:	b003      	add	sp, #12
 8017c4e:	bd30      	pop	{r4, r5, pc}

08017c50 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017c50:	b513      	push	{r0, r1, r4, lr}
 8017c52:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017c56:	3301      	adds	r3, #1
 8017c58:	4604      	mov	r4, r0
 8017c5a:	d109      	bne.n	8017c70 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017c5c:	4601      	mov	r1, r0
 8017c5e:	4668      	mov	r0, sp
 8017c60:	f7ff fd2c 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c64:	f8bd 3000 	ldrh.w	r3, [sp]
 8017c68:	8423      	strh	r3, [r4, #32]
 8017c6a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017c6e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017c70:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017c74:	b002      	add	sp, #8
 8017c76:	bd10      	pop	{r4, pc}

08017c78 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017c78:	b513      	push	{r0, r1, r4, lr}
 8017c7a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017c7e:	3301      	adds	r3, #1
 8017c80:	4604      	mov	r4, r0
 8017c82:	d109      	bne.n	8017c98 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017c84:	4601      	mov	r1, r0
 8017c86:	4668      	mov	r0, sp
 8017c88:	f7ff fd18 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c8c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017c90:	8423      	strh	r3, [r4, #32]
 8017c92:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017c96:	8463      	strh	r3, [r4, #34]	; 0x22
 8017c98:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017c9c:	b002      	add	sp, #8
 8017c9e:	bd10      	pop	{r4, pc}

08017ca0 <_ZN8touchgfx6ScreenC1Ev>:
 8017ca0:	b570      	push	{r4, r5, r6, lr}
 8017ca2:	4605      	mov	r5, r0
 8017ca4:	4b16      	ldr	r3, [pc, #88]	; (8017d00 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017ca6:	f845 3b04 	str.w	r3, [r5], #4
 8017caa:	2300      	movs	r3, #0
 8017cac:	8103      	strh	r3, [r0, #8]
 8017cae:	8143      	strh	r3, [r0, #10]
 8017cb0:	8183      	strh	r3, [r0, #12]
 8017cb2:	81c3      	strh	r3, [r0, #14]
 8017cb4:	8203      	strh	r3, [r0, #16]
 8017cb6:	8243      	strh	r3, [r0, #18]
 8017cb8:	8283      	strh	r3, [r0, #20]
 8017cba:	82c3      	strh	r3, [r0, #22]
 8017cbc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017cc0:	6203      	str	r3, [r0, #32]
 8017cc2:	8483      	strh	r3, [r0, #36]	; 0x24
 8017cc4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017cc6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017cca:	4a0e      	ldr	r2, [pc, #56]	; (8017d04 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017ccc:	6343      	str	r3, [r0, #52]	; 0x34
 8017cce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017cd2:	4b0d      	ldr	r3, [pc, #52]	; (8017d08 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017cd4:	6042      	str	r2, [r0, #4]
 8017cd6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017cda:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017cdc:	4a0b      	ldr	r2, [pc, #44]	; (8017d0c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017cde:	4604      	mov	r4, r0
 8017ce0:	2101      	movs	r1, #1
 8017ce2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017ce6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017cea:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017cee:	4628      	mov	r0, r5
 8017cf0:	4798      	blx	r3
 8017cf2:	6863      	ldr	r3, [r4, #4]
 8017cf4:	4628      	mov	r0, r5
 8017cf6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017cf8:	4631      	mov	r1, r6
 8017cfa:	4798      	blx	r3
 8017cfc:	4620      	mov	r0, r4
 8017cfe:	bd70      	pop	{r4, r5, r6, pc}
 8017d00:	08028e14 	.word	0x08028e14
 8017d04:	080284fc 	.word	0x080284fc
 8017d08:	2000dc6a 	.word	0x2000dc6a
 8017d0c:	2000dc68 	.word	0x2000dc68

08017d10 <_ZN8touchgfx6Screen4drawEv>:
 8017d10:	b507      	push	{r0, r1, r2, lr}
 8017d12:	4b09      	ldr	r3, [pc, #36]	; (8017d38 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017d14:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017d18:	4b08      	ldr	r3, [pc, #32]	; (8017d3c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017d1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017d1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017d22:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017d26:	6803      	ldr	r3, [r0, #0]
 8017d28:	2100      	movs	r1, #0
 8017d2a:	9100      	str	r1, [sp, #0]
 8017d2c:	689b      	ldr	r3, [r3, #8]
 8017d2e:	4669      	mov	r1, sp
 8017d30:	4798      	blx	r3
 8017d32:	b003      	add	sp, #12
 8017d34:	f85d fb04 	ldr.w	pc, [sp], #4
 8017d38:	2000dc68 	.word	0x2000dc68
 8017d3c:	2000dc6a 	.word	0x2000dc6a

08017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d44:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017d48:	2b00      	cmp	r3, #0
 8017d4a:	b089      	sub	sp, #36	; 0x24
 8017d4c:	4680      	mov	r8, r0
 8017d4e:	460c      	mov	r4, r1
 8017d50:	4615      	mov	r5, r2
 8017d52:	dd0e      	ble.n	8017d72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017d54:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017d58:	2b00      	cmp	r3, #0
 8017d5a:	dd0a      	ble.n	8017d72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017d5c:	4628      	mov	r0, r5
 8017d5e:	f7ff ff5b 	bl	8017c18 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017d62:	4621      	mov	r1, r4
 8017d64:	f7fe fbdf 	bl	8016526 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017d68:	69eb      	ldr	r3, [r5, #28]
 8017d6a:	b928      	cbnz	r0, 8017d78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017d6c:	461d      	mov	r5, r3
 8017d6e:	2b00      	cmp	r3, #0
 8017d70:	d1f4      	bne.n	8017d5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017d72:	b009      	add	sp, #36	; 0x24
 8017d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d78:	ae04      	add	r6, sp, #16
 8017d7a:	2b00      	cmp	r3, #0
 8017d7c:	f000 80b5 	beq.w	8017eea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017d80:	682b      	ldr	r3, [r5, #0]
 8017d82:	4629      	mov	r1, r5
 8017d84:	68db      	ldr	r3, [r3, #12]
 8017d86:	a802      	add	r0, sp, #8
 8017d88:	4798      	blx	r3
 8017d8a:	4628      	mov	r0, r5
 8017d8c:	f7ff ff60 	bl	8017c50 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017d90:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017d94:	4407      	add	r7, r0
 8017d96:	4628      	mov	r0, r5
 8017d98:	f7ff ff6e 	bl	8017c78 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017d9c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017da0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017da4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017da8:	4418      	add	r0, r3
 8017daa:	4621      	mov	r1, r4
 8017dac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017db0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017db4:	b23f      	sxth	r7, r7
 8017db6:	4630      	mov	r0, r6
 8017db8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017dbc:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017dc0:	f7f8 fb66 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017dc4:	4628      	mov	r0, r5
 8017dc6:	f7ff ff27 	bl	8017c18 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017dca:	4602      	mov	r2, r0
 8017dcc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017dd0:	ab06      	add	r3, sp, #24
 8017dd2:	e883 0003 	stmia.w	r3, {r0, r1}
 8017dd6:	4611      	mov	r1, r2
 8017dd8:	4618      	mov	r0, r3
 8017dda:	f7f8 fb59 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017dde:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017de2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017de6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017dea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017dee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017df2:	4299      	cmp	r1, r3
 8017df4:	d10b      	bne.n	8017e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017df6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017dfa:	4552      	cmp	r2, sl
 8017dfc:	d107      	bne.n	8017e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017dfe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017e02:	455a      	cmp	r2, fp
 8017e04:	d103      	bne.n	8017e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017e06:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017e0a:	454a      	cmp	r2, r9
 8017e0c:	d06d      	beq.n	8017eea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017e0e:	f1bb 0f00 	cmp.w	fp, #0
 8017e12:	dd65      	ble.n	8017ee0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017e14:	f1b9 0f00 	cmp.w	r9, #0
 8017e18:	dd62      	ble.n	8017ee0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017e1a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017e1e:	fa1f f08a 	uxth.w	r0, sl
 8017e22:	4552      	cmp	r2, sl
 8017e24:	9000      	str	r0, [sp, #0]
 8017e26:	da12      	bge.n	8017e4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017e28:	9301      	str	r3, [sp, #4]
 8017e2a:	9b00      	ldr	r3, [sp, #0]
 8017e2c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017e30:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017e34:	1a9a      	subs	r2, r3, r2
 8017e36:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017e3a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017e3e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017e42:	69ea      	ldr	r2, [r5, #28]
 8017e44:	4631      	mov	r1, r6
 8017e46:	4640      	mov	r0, r8
 8017e48:	f7ff ff7a 	bl	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e4c:	9b01      	ldr	r3, [sp, #4]
 8017e4e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017e52:	429a      	cmp	r2, r3
 8017e54:	b29f      	uxth	r7, r3
 8017e56:	da0d      	bge.n	8017e74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017e58:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e5c:	1aba      	subs	r2, r7, r2
 8017e5e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017e62:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e66:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017e6a:	69ea      	ldr	r2, [r5, #28]
 8017e6c:	4631      	mov	r1, r6
 8017e6e:	4640      	mov	r0, r8
 8017e70:	f7ff ff66 	bl	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e74:	8822      	ldrh	r2, [r4, #0]
 8017e76:	88a3      	ldrh	r3, [r4, #4]
 8017e78:	445f      	add	r7, fp
 8017e7a:	4413      	add	r3, r2
 8017e7c:	b29b      	uxth	r3, r3
 8017e7e:	b2bf      	uxth	r7, r7
 8017e80:	b23a      	sxth	r2, r7
 8017e82:	b219      	sxth	r1, r3
 8017e84:	4291      	cmp	r1, r2
 8017e86:	dd0d      	ble.n	8017ea4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017e88:	1bdb      	subs	r3, r3, r7
 8017e8a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e8e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017e92:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017e96:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017e9a:	69ea      	ldr	r2, [r5, #28]
 8017e9c:	4631      	mov	r1, r6
 8017e9e:	4640      	mov	r0, r8
 8017ea0:	f7ff ff4e 	bl	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017ea4:	88e2      	ldrh	r2, [r4, #6]
 8017ea6:	8863      	ldrh	r3, [r4, #2]
 8017ea8:	4413      	add	r3, r2
 8017eaa:	9a00      	ldr	r2, [sp, #0]
 8017eac:	444a      	add	r2, r9
 8017eae:	b29b      	uxth	r3, r3
 8017eb0:	fa1f f982 	uxth.w	r9, r2
 8017eb4:	fa0f f289 	sxth.w	r2, r9
 8017eb8:	b219      	sxth	r1, r3
 8017eba:	428a      	cmp	r2, r1
 8017ebc:	da15      	bge.n	8017eea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017ebe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017ec2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017ec6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017eca:	eba3 0309 	sub.w	r3, r3, r9
 8017ece:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017ed2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017ed6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017eda:	69ea      	ldr	r2, [r5, #28]
 8017edc:	4631      	mov	r1, r6
 8017ede:	e001      	b.n	8017ee4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017ee0:	69ea      	ldr	r2, [r5, #28]
 8017ee2:	4621      	mov	r1, r4
 8017ee4:	4640      	mov	r0, r8
 8017ee6:	f7ff ff2b 	bl	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017eea:	4628      	mov	r0, r5
 8017eec:	f7ff fe94 	bl	8017c18 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017ef0:	6861      	ldr	r1, [r4, #4]
 8017ef2:	4602      	mov	r2, r0
 8017ef4:	6820      	ldr	r0, [r4, #0]
 8017ef6:	4633      	mov	r3, r6
 8017ef8:	c303      	stmia	r3!, {r0, r1}
 8017efa:	4611      	mov	r1, r2
 8017efc:	4630      	mov	r0, r6
 8017efe:	f7f8 fac7 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017f02:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017f06:	2b00      	cmp	r3, #0
 8017f08:	f77f af33 	ble.w	8017d72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017f0c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017f10:	2b00      	cmp	r3, #0
 8017f12:	f77f af2e 	ble.w	8017d72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017f16:	4628      	mov	r0, r5
 8017f18:	f7ff fe9a 	bl	8017c50 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017f1c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017f20:	1a18      	subs	r0, r3, r0
 8017f22:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017f26:	4628      	mov	r0, r5
 8017f28:	f7ff fea6 	bl	8017c78 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017f2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017f30:	1a18      	subs	r0, r3, r0
 8017f32:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017f36:	682b      	ldr	r3, [r5, #0]
 8017f38:	4631      	mov	r1, r6
 8017f3a:	689b      	ldr	r3, [r3, #8]
 8017f3c:	4628      	mov	r0, r5
 8017f3e:	4798      	blx	r3
 8017f40:	e717      	b.n	8017d72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017f42 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017f42:	b570      	push	{r4, r5, r6, lr}
 8017f44:	460c      	mov	r4, r1
 8017f46:	b086      	sub	sp, #24
 8017f48:	1d06      	adds	r6, r0, #4
 8017f4a:	2300      	movs	r3, #0
 8017f4c:	4631      	mov	r1, r6
 8017f4e:	4605      	mov	r5, r0
 8017f50:	a802      	add	r0, sp, #8
 8017f52:	9301      	str	r3, [sp, #4]
 8017f54:	f7ff fbb2 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f58:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017f5c:	8822      	ldrh	r2, [r4, #0]
 8017f5e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017f62:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017f66:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017f6a:	1ad2      	subs	r2, r2, r3
 8017f6c:	8863      	ldrh	r3, [r4, #2]
 8017f6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f72:	1a5b      	subs	r3, r3, r1
 8017f74:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017f78:	f8ad 1016 	strh.w	r1, [sp, #22]
 8017f7c:	aa01      	add	r2, sp, #4
 8017f7e:	a904      	add	r1, sp, #16
 8017f80:	4630      	mov	r0, r6
 8017f82:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017f86:	f7f8 fb5b 	bl	8010640 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017f8a:	9a01      	ldr	r2, [sp, #4]
 8017f8c:	b11a      	cbz	r2, 8017f96 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017f8e:	4621      	mov	r1, r4
 8017f90:	4628      	mov	r0, r5
 8017f92:	f7ff fed5 	bl	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f96:	b006      	add	sp, #24
 8017f98:	bd70      	pop	{r4, r5, r6, pc}

08017f9a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017f9a:	b530      	push	{r4, r5, lr}
 8017f9c:	4602      	mov	r2, r0
 8017f9e:	4604      	mov	r4, r0
 8017fa0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017fa4:	b085      	sub	sp, #20
 8017fa6:	460d      	mov	r5, r1
 8017fa8:	6851      	ldr	r1, [r2, #4]
 8017faa:	466b      	mov	r3, sp
 8017fac:	c303      	stmia	r3!, {r0, r1}
 8017fae:	4629      	mov	r1, r5
 8017fb0:	4668      	mov	r0, sp
 8017fb2:	f7f8 fa6d 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 8017fb6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8017fba:	b12b      	cbz	r3, 8017fc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017fbc:	4669      	mov	r1, sp
 8017fbe:	4620      	mov	r0, r4
 8017fc0:	f7ff ffbf 	bl	8017f42 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017fc4:	b005      	add	sp, #20
 8017fc6:	bd30      	pop	{r4, r5, pc}
 8017fc8:	3404      	adds	r4, #4
 8017fca:	4621      	mov	r1, r4
 8017fcc:	a802      	add	r0, sp, #8
 8017fce:	f7ff fb75 	bl	80176bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fd2:	f8bd 3000 	ldrh.w	r3, [sp]
 8017fd6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017fda:	1a9b      	subs	r3, r3, r2
 8017fdc:	f8ad 3000 	strh.w	r3, [sp]
 8017fe0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017fe4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017fe8:	4669      	mov	r1, sp
 8017fea:	1a9b      	subs	r3, r3, r2
 8017fec:	4620      	mov	r0, r4
 8017fee:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017ff2:	f7f8 faec 	bl	80105ce <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017ff6:	e7e5      	b.n	8017fc4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017ff8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017ff8:	680a      	ldr	r2, [r1, #0]
 8017ffa:	460b      	mov	r3, r1
 8017ffc:	6992      	ldr	r2, [r2, #24]
 8017ffe:	1d01      	adds	r1, r0, #4
 8018000:	4618      	mov	r0, r3
 8018002:	4710      	bx	r2

08018004 <_ZN8touchgfx12TextProviderC1Ev>:
 8018004:	b538      	push	{r3, r4, r5, lr}
 8018006:	2500      	movs	r5, #0
 8018008:	2302      	movs	r3, #2
 801800a:	4604      	mov	r4, r0
 801800c:	e9c0 5500 	strd	r5, r5, [r0]
 8018010:	7403      	strb	r3, [r0, #16]
 8018012:	6145      	str	r5, [r0, #20]
 8018014:	7605      	strb	r5, [r0, #24]
 8018016:	83c5      	strh	r5, [r0, #30]
 8018018:	8405      	strh	r5, [r0, #32]
 801801a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801801c:	8705      	strh	r5, [r0, #56]	; 0x38
 801801e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8018020:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018024:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018028:	220e      	movs	r2, #14
 801802a:	4629      	mov	r1, r5
 801802c:	304c      	adds	r0, #76	; 0x4c
 801802e:	f00d fd41 	bl	8025ab4 <memset>
 8018032:	2301      	movs	r3, #1
 8018034:	4620      	mov	r0, r4
 8018036:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801803a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801803e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8018042:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018046:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801804a:	f7f0 fea3 	bl	8008d94 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801804e:	4620      	mov	r0, r4
 8018050:	bd38      	pop	{r3, r4, r5, pc}

08018052 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018052:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018054:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018058:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801805a:	fab0 f080 	clz	r0, r0
 801805e:	0940      	lsrs	r0, r0, #5
 8018060:	4770      	bx	lr

08018062 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018062:	b530      	push	{r4, r5, lr}
 8018064:	2500      	movs	r5, #0
 8018066:	2401      	movs	r4, #1
 8018068:	6843      	ldr	r3, [r0, #4]
 801806a:	b913      	cbnz	r3, 8018072 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801806c:	6803      	ldr	r3, [r0, #0]
 801806e:	b313      	cbz	r3, 80180b6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018070:	6043      	str	r3, [r0, #4]
 8018072:	7e03      	ldrb	r3, [r0, #24]
 8018074:	b143      	cbz	r3, 8018088 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018076:	6943      	ldr	r3, [r0, #20]
 8018078:	b12b      	cbz	r3, 8018086 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801807a:	881a      	ldrh	r2, [r3, #0]
 801807c:	b11a      	cbz	r2, 8018086 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801807e:	1c9a      	adds	r2, r3, #2
 8018080:	6142      	str	r2, [r0, #20]
 8018082:	8818      	ldrh	r0, [r3, #0]
 8018084:	bd30      	pop	{r4, r5, pc}
 8018086:	7605      	strb	r5, [r0, #24]
 8018088:	6843      	ldr	r3, [r0, #4]
 801808a:	8819      	ldrh	r1, [r3, #0]
 801808c:	b199      	cbz	r1, 80180b6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801808e:	1c9a      	adds	r2, r3, #2
 8018090:	2902      	cmp	r1, #2
 8018092:	6042      	str	r2, [r0, #4]
 8018094:	d1f5      	bne.n	8018082 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018096:	7c03      	ldrb	r3, [r0, #16]
 8018098:	2b01      	cmp	r3, #1
 801809a:	d8e5      	bhi.n	8018068 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801809c:	1c5a      	adds	r2, r3, #1
 801809e:	3302      	adds	r3, #2
 80180a0:	7402      	strb	r2, [r0, #16]
 80180a2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80180a6:	6143      	str	r3, [r0, #20]
 80180a8:	2b00      	cmp	r3, #0
 80180aa:	d0dd      	beq.n	8018068 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80180ac:	881b      	ldrh	r3, [r3, #0]
 80180ae:	2b00      	cmp	r3, #0
 80180b0:	d0da      	beq.n	8018068 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80180b2:	7604      	strb	r4, [r0, #24]
 80180b4:	e7d8      	b.n	8018068 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80180b6:	2000      	movs	r0, #0
 80180b8:	e7e4      	b.n	8018084 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80180ba:	b430      	push	{r4, r5}
 80180bc:	6001      	str	r1, [r0, #0]
 80180be:	2100      	movs	r1, #0
 80180c0:	6041      	str	r1, [r0, #4]
 80180c2:	6815      	ldr	r5, [r2, #0]
 80180c4:	6085      	str	r5, [r0, #8]
 80180c6:	6852      	ldr	r2, [r2, #4]
 80180c8:	6443      	str	r3, [r0, #68]	; 0x44
 80180ca:	9b02      	ldr	r3, [sp, #8]
 80180cc:	60c2      	str	r2, [r0, #12]
 80180ce:	7401      	strb	r1, [r0, #16]
 80180d0:	6141      	str	r1, [r0, #20]
 80180d2:	7601      	strb	r1, [r0, #24]
 80180d4:	8701      	strh	r1, [r0, #56]	; 0x38
 80180d6:	8401      	strh	r1, [r0, #32]
 80180d8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80180dc:	6483      	str	r3, [r0, #72]	; 0x48
 80180de:	bc30      	pop	{r4, r5}
 80180e0:	f7f0 be58 	b.w	8008d94 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080180e4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80180e4:	b408      	push	{r3}
 80180e6:	b510      	push	{r4, lr}
 80180e8:	b085      	sub	sp, #20
 80180ea:	ac07      	add	r4, sp, #28
 80180ec:	f854 3b04 	ldr.w	r3, [r4], #4
 80180f0:	9300      	str	r3, [sp, #0]
 80180f2:	4613      	mov	r3, r2
 80180f4:	4622      	mov	r2, r4
 80180f6:	9403      	str	r4, [sp, #12]
 80180f8:	f7ff ffdf 	bl	80180ba <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80180fc:	b005      	add	sp, #20
 80180fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018102:	b001      	add	sp, #4
 8018104:	4770      	bx	lr

08018106 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018106:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018108:	4605      	mov	r5, r0
 801810a:	4608      	mov	r0, r1
 801810c:	b1e9      	cbz	r1, 801814a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801810e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8018112:	460b      	mov	r3, r1
 8018114:	f101 0708 	add.w	r7, r1, #8
 8018118:	4622      	mov	r2, r4
 801811a:	6818      	ldr	r0, [r3, #0]
 801811c:	6859      	ldr	r1, [r3, #4]
 801811e:	4626      	mov	r6, r4
 8018120:	c603      	stmia	r6!, {r0, r1}
 8018122:	3308      	adds	r3, #8
 8018124:	42bb      	cmp	r3, r7
 8018126:	4634      	mov	r4, r6
 8018128:	d1f7      	bne.n	801811a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801812a:	6818      	ldr	r0, [r3, #0]
 801812c:	6030      	str	r0, [r6, #0]
 801812e:	889b      	ldrh	r3, [r3, #4]
 8018130:	80b3      	strh	r3, [r6, #4]
 8018132:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018136:	015b      	lsls	r3, r3, #5
 8018138:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801813c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8018140:	430b      	orrs	r3, r1
 8018142:	425b      	negs	r3, r3
 8018144:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018148:	4610      	mov	r0, r2
 801814a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801814c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801814c:	b538      	push	{r3, r4, r5, lr}
 801814e:	460c      	mov	r4, r1
 8018150:	6811      	ldr	r1, [r2, #0]
 8018152:	4610      	mov	r0, r2
 8018154:	68cd      	ldr	r5, [r1, #12]
 8018156:	4619      	mov	r1, r3
 8018158:	47a8      	blx	r5
 801815a:	2800      	cmp	r0, #0
 801815c:	bf08      	it	eq
 801815e:	4620      	moveq	r0, r4
 8018160:	bd38      	pop	{r3, r4, r5, pc}
	...

08018164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018166:	4604      	mov	r4, r0
 8018168:	4615      	mov	r5, r2
 801816a:	4608      	mov	r0, r1
 801816c:	b93a      	cbnz	r2, 801817e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801816e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018172:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018176:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801817a:	4628      	mov	r0, r5
 801817c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801817e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018182:	8893      	ldrh	r3, [r2, #4]
 8018184:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018188:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801818c:	79ee      	ldrb	r6, [r5, #7]
 801818e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018192:	4316      	orrs	r6, r2
 8018194:	19da      	adds	r2, r3, r7
 8018196:	b291      	uxth	r1, r2
 8018198:	291d      	cmp	r1, #29
 801819a:	b2b7      	uxth	r7, r6
 801819c:	d87a      	bhi.n	8018294 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801819e:	2201      	movs	r2, #1
 80181a0:	408a      	lsls	r2, r1
 80181a2:	4975      	ldr	r1, [pc, #468]	; (8018378 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80181a4:	420a      	tst	r2, r1
 80181a6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80181aa:	d12d      	bne.n	8018208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80181ac:	f412 7f60 	tst.w	r2, #896	; 0x380
 80181b0:	d070      	beq.n	8018294 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80181b2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80181b6:	462b      	mov	r3, r5
 80181b8:	f105 0e08 	add.w	lr, r5, #8
 80181bc:	4615      	mov	r5, r2
 80181be:	6818      	ldr	r0, [r3, #0]
 80181c0:	6859      	ldr	r1, [r3, #4]
 80181c2:	4694      	mov	ip, r2
 80181c4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80181c8:	3308      	adds	r3, #8
 80181ca:	4573      	cmp	r3, lr
 80181cc:	4662      	mov	r2, ip
 80181ce:	d1f6      	bne.n	80181be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80181d0:	6818      	ldr	r0, [r3, #0]
 80181d2:	f8cc 0000 	str.w	r0, [ip]
 80181d6:	889b      	ldrh	r3, [r3, #4]
 80181d8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80181dc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80181e0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80181e4:	b2b3      	uxth	r3, r6
 80181e6:	1aca      	subs	r2, r1, r3
 80181e8:	b292      	uxth	r2, r2
 80181ea:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80181ee:	10d2      	asrs	r2, r2, #3
 80181f0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80181f4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80181f8:	4302      	orrs	r2, r0
 80181fa:	1bcf      	subs	r7, r1, r7
 80181fc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8018200:	1afb      	subs	r3, r7, r3
 8018202:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018206:	e7b8      	b.n	801817a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018208:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801820a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801820e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8018210:	f640 6333 	movw	r3, #3635	; 0xe33
 8018214:	4299      	cmp	r1, r3
 8018216:	d110      	bne.n	801823a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018218:	6803      	ldr	r3, [r0, #0]
 801821a:	68db      	ldr	r3, [r3, #12]
 801821c:	4798      	blx	r3
 801821e:	7b41      	ldrb	r1, [r0, #13]
 8018220:	00cb      	lsls	r3, r1, #3
 8018222:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018226:	7a03      	ldrb	r3, [r0, #8]
 8018228:	0648      	lsls	r0, r1, #25
 801822a:	ea43 0302 	orr.w	r3, r3, r2
 801822e:	bf44      	itt	mi
 8018230:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018234:	b21b      	sxthmi	r3, r3
 8018236:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801823a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801823e:	443b      	add	r3, r7
 8018240:	4433      	add	r3, r6
 8018242:	b29b      	uxth	r3, r3
 8018244:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018248:	462a      	mov	r2, r5
 801824a:	f105 0c08 	add.w	ip, r5, #8
 801824e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018252:	4635      	mov	r5, r6
 8018254:	6810      	ldr	r0, [r2, #0]
 8018256:	6851      	ldr	r1, [r2, #4]
 8018258:	4637      	mov	r7, r6
 801825a:	c703      	stmia	r7!, {r0, r1}
 801825c:	3208      	adds	r2, #8
 801825e:	4562      	cmp	r2, ip
 8018260:	463e      	mov	r6, r7
 8018262:	d1f7      	bne.n	8018254 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018264:	6810      	ldr	r0, [r2, #0]
 8018266:	6038      	str	r0, [r7, #0]
 8018268:	8892      	ldrh	r2, [r2, #4]
 801826a:	80ba      	strh	r2, [r7, #4]
 801826c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018270:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018274:	10db      	asrs	r3, r3, #3
 8018276:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801827a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801827e:	4313      	orrs	r3, r2
 8018280:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018284:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018288:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801828c:	1a9b      	subs	r3, r3, r2
 801828e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018292:	e772      	b.n	801817a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018294:	f023 0204 	bic.w	r2, r3, #4
 8018298:	f640 611b 	movw	r1, #3611	; 0xe1b
 801829c:	428a      	cmp	r2, r1
 801829e:	d003      	beq.n	80182a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80182a0:	f640 621d 	movw	r2, #3613	; 0xe1d
 80182a4:	4293      	cmp	r3, r2
 80182a6:	d120      	bne.n	80182ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80182a8:	3b01      	subs	r3, #1
 80182aa:	4602      	mov	r2, r0
 80182ac:	b29b      	uxth	r3, r3
 80182ae:	4629      	mov	r1, r5
 80182b0:	4620      	mov	r0, r4
 80182b2:	f7ff ff4b 	bl	801814c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80182b6:	7b41      	ldrb	r1, [r0, #13]
 80182b8:	00cb      	lsls	r3, r1, #3
 80182ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80182be:	7a03      	ldrb	r3, [r0, #8]
 80182c0:	0649      	lsls	r1, r1, #25
 80182c2:	ea43 0302 	orr.w	r3, r3, r2
 80182c6:	bf44      	itt	mi
 80182c8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80182cc:	b21b      	sxthmi	r3, r3
 80182ce:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80182d2:	7b6b      	ldrb	r3, [r5, #13]
 80182d4:	7aaa      	ldrb	r2, [r5, #10]
 80182d6:	005b      	lsls	r3, r3, #1
 80182d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80182dc:	4313      	orrs	r3, r2
 80182de:	115a      	asrs	r2, r3, #5
 80182e0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80182e4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80182e8:	e036      	b.n	8018358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80182ea:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80182ee:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80182f2:	7a2a      	ldrb	r2, [r5, #8]
 80182f4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80182f8:	ea42 0201 	orr.w	r2, r2, r1
 80182fc:	bf1c      	itt	ne
 80182fe:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018302:	b212      	sxthne	r2, r2
 8018304:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018308:	f640 6109 	movw	r1, #3593	; 0xe09
 801830c:	f023 0210 	bic.w	r2, r3, #16
 8018310:	428a      	cmp	r2, r1
 8018312:	d003      	beq.n	801831c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018314:	f640 6213 	movw	r2, #3603	; 0xe13
 8018318:	4293      	cmp	r3, r2
 801831a:	d12a      	bne.n	8018372 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801831c:	7b6e      	ldrb	r6, [r5, #13]
 801831e:	0076      	lsls	r6, r6, #1
 8018320:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018324:	7aae      	ldrb	r6, [r5, #10]
 8018326:	4316      	orrs	r6, r2
 8018328:	f640 6213 	movw	r2, #3603	; 0xe13
 801832c:	4293      	cmp	r3, r2
 801832e:	bf18      	it	ne
 8018330:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018334:	4602      	mov	r2, r0
 8018336:	bf14      	ite	ne
 8018338:	b29b      	uxthne	r3, r3
 801833a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801833e:	4629      	mov	r1, r5
 8018340:	4620      	mov	r0, r4
 8018342:	f7ff ff03 	bl	801814c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018346:	7b43      	ldrb	r3, [r0, #13]
 8018348:	7a82      	ldrb	r2, [r0, #10]
 801834a:	005b      	lsls	r3, r3, #1
 801834c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018350:	4313      	orrs	r3, r2
 8018352:	1af6      	subs	r6, r6, r3
 8018354:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018358:	7b69      	ldrb	r1, [r5, #13]
 801835a:	00cb      	lsls	r3, r1, #3
 801835c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018360:	7a2b      	ldrb	r3, [r5, #8]
 8018362:	4313      	orrs	r3, r2
 8018364:	064a      	lsls	r2, r1, #25
 8018366:	bf44      	itt	mi
 8018368:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801836c:	b21b      	sxthmi	r3, r3
 801836e:	1bdb      	subs	r3, r3, r7
 8018370:	e747      	b.n	8018202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018372:	2300      	movs	r3, #0
 8018374:	e7b6      	b.n	80182e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018376:	bf00      	nop
 8018378:	3fc00079 	.word	0x3fc00079

0801837c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801837c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018380:	4604      	mov	r4, r0
 8018382:	b942      	cbnz	r2, 8018396 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018384:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018388:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801838c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018390:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018394:	e047      	b.n	8018426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018396:	7b51      	ldrb	r1, [r2, #13]
 8018398:	8893      	ldrh	r3, [r2, #4]
 801839a:	010d      	lsls	r5, r1, #4
 801839c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80183a0:	79d5      	ldrb	r5, [r2, #7]
 80183a2:	4305      	orrs	r5, r0
 80183a4:	2d04      	cmp	r5, #4
 80183a6:	bfcc      	ite	gt
 80183a8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80183ac:	f04f 0e01 	movle.w	lr, #1
 80183b0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80183b4:	f200 80ab 	bhi.w	801850e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80183b8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80183bc:	4283      	cmp	r3, r0
 80183be:	d216      	bcs.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183c0:	f240 605b 	movw	r0, #1627	; 0x65b
 80183c4:	4283      	cmp	r3, r0
 80183c6:	d859      	bhi.n	801847c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80183c8:	f240 6057 	movw	r0, #1623	; 0x657
 80183cc:	4283      	cmp	r3, r0
 80183ce:	d20e      	bcs.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183d0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80183d4:	d24a      	bcs.n	801846c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80183d6:	f240 604e 	movw	r0, #1614	; 0x64e
 80183da:	4283      	cmp	r3, r0
 80183dc:	d207      	bcs.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183de:	f240 601a 	movw	r0, #1562	; 0x61a
 80183e2:	4283      	cmp	r3, r0
 80183e4:	d02a      	beq.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80183e6:	d821      	bhi.n	801842c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80183e8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80183ec:	d35b      	bcc.n	80184a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80183ee:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80183f2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80183f6:	f040 80d0 	bne.w	801859a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80183fa:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80183fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018402:	f040 80ca 	bne.w	801859a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018406:	00cb      	lsls	r3, r1, #3
 8018408:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801840c:	7a13      	ldrb	r3, [r2, #8]
 801840e:	0649      	lsls	r1, r1, #25
 8018410:	ea43 0300 	orr.w	r3, r3, r0
 8018414:	bf44      	itt	mi
 8018416:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801841a:	b21b      	sxthmi	r3, r3
 801841c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018420:	1b5d      	subs	r5, r3, r5
 8018422:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018426:	4610      	mov	r0, r2
 8018428:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801842c:	f240 604b 	movw	r0, #1611	; 0x64b
 8018430:	4283      	cmp	r3, r0
 8018432:	d338      	bcc.n	80184a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018434:	f240 604c 	movw	r0, #1612	; 0x64c
 8018438:	4283      	cmp	r3, r0
 801843a:	d9d8      	bls.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801843c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018440:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018444:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018448:	f040 80f2 	bne.w	8018630 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801844c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018450:	f040 80ee 	bne.w	8018630 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018454:	00cb      	lsls	r3, r1, #3
 8018456:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801845a:	7a13      	ldrb	r3, [r2, #8]
 801845c:	064e      	lsls	r6, r1, #25
 801845e:	ea43 0300 	orr.w	r3, r3, r0
 8018462:	bf44      	itt	mi
 8018464:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018468:	b21b      	sxthmi	r3, r3
 801846a:	e7d9      	b.n	8018420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801846c:	f240 6054 	movw	r0, #1620	; 0x654
 8018470:	4283      	cmp	r3, r0
 8018472:	d8e3      	bhi.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018474:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018478:	d9e0      	bls.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801847a:	e7b8      	b.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801847c:	f240 6074 	movw	r0, #1652	; 0x674
 8018480:	4283      	cmp	r3, r0
 8018482:	d0b4      	beq.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018484:	d82d      	bhi.n	80184e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018486:	f240 605e 	movw	r0, #1630	; 0x65e
 801848a:	4283      	cmp	r3, r0
 801848c:	d804      	bhi.n	8018498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801848e:	f240 605d 	movw	r0, #1629	; 0x65d
 8018492:	4283      	cmp	r3, r0
 8018494:	d3d2      	bcc.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018496:	e7aa      	b.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018498:	f240 605f 	movw	r0, #1631	; 0x65f
 801849c:	4283      	cmp	r3, r0
 801849e:	d0cd      	beq.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80184a0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80184a4:	d0a3      	beq.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80184a6:	00cb      	lsls	r3, r1, #3
 80184a8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80184ac:	7a13      	ldrb	r3, [r2, #8]
 80184ae:	0649      	lsls	r1, r1, #25
 80184b0:	ea43 0300 	orr.w	r3, r3, r0
 80184b4:	bf44      	itt	mi
 80184b6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80184ba:	b21b      	sxthmi	r3, r3
 80184bc:	1b5d      	subs	r5, r3, r5
 80184be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80184c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80184c6:	7b53      	ldrb	r3, [r2, #13]
 80184c8:	015b      	lsls	r3, r3, #5
 80184ca:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80184ce:	7993      	ldrb	r3, [r2, #6]
 80184d0:	430b      	orrs	r3, r1
 80184d2:	005b      	lsls	r3, r3, #1
 80184d4:	2105      	movs	r1, #5
 80184d6:	fb93 f3f1 	sdiv	r3, r3, r1
 80184da:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80184de:	440b      	add	r3, r1
 80184e0:	e756      	b.n	8018390 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80184e2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80184e6:	4283      	cmp	r3, r0
 80184e8:	d809      	bhi.n	80184fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80184ea:	f240 60df 	movw	r0, #1759	; 0x6df
 80184ee:	4283      	cmp	r3, r0
 80184f0:	f4bf af7d 	bcs.w	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80184f4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80184f8:	2b05      	cmp	r3, #5
 80184fa:	d8d4      	bhi.n	80184a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80184fc:	e777      	b.n	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80184fe:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018502:	4283      	cmp	r3, r0
 8018504:	d09a      	beq.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018506:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801850a:	4283      	cmp	r3, r0
 801850c:	e7ca      	b.n	80184a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801850e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018512:	d22b      	bcs.n	801856c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018514:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018518:	4283      	cmp	r3, r0
 801851a:	d28f      	bcs.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801851c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018520:	4283      	cmp	r3, r0
 8018522:	d816      	bhi.n	8018552 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018524:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018528:	4283      	cmp	r3, r0
 801852a:	f4bf af60 	bcs.w	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801852e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018532:	4283      	cmp	r3, r0
 8018534:	d80a      	bhi.n	801854c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018536:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801853a:	4283      	cmp	r3, r0
 801853c:	f4bf af57 	bcs.w	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018540:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018544:	4283      	cmp	r3, r0
 8018546:	f43f af79 	beq.w	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801854a:	e7ac      	b.n	80184a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801854c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018550:	e7f8      	b.n	8018544 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018552:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018556:	4283      	cmp	r3, r0
 8018558:	d802      	bhi.n	8018560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801855a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801855e:	e798      	b.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018560:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018564:	4283      	cmp	r3, r0
 8018566:	f47f af42 	bne.w	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801856a:	e767      	b.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801856c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018570:	4283      	cmp	r3, r0
 8018572:	f43f af63 	beq.w	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018576:	d802      	bhi.n	801857e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018578:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801857c:	e7f2      	b.n	8018564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801857e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018582:	4283      	cmp	r3, r0
 8018584:	d805      	bhi.n	8018592 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018586:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801858a:	4283      	cmp	r3, r0
 801858c:	f4ff af2f 	bcc.w	80183ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018590:	e754      	b.n	801843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018592:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018596:	4283      	cmp	r3, r0
 8018598:	e7af      	b.n	80184fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801859a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801859e:	4617      	mov	r7, r2
 80185a0:	f102 0808 	add.w	r8, r2, #8
 80185a4:	4666      	mov	r6, ip
 80185a6:	6838      	ldr	r0, [r7, #0]
 80185a8:	6879      	ldr	r1, [r7, #4]
 80185aa:	46e6      	mov	lr, ip
 80185ac:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80185b0:	3708      	adds	r7, #8
 80185b2:	4547      	cmp	r7, r8
 80185b4:	46f4      	mov	ip, lr
 80185b6:	d1f6      	bne.n	80185a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80185b8:	6838      	ldr	r0, [r7, #0]
 80185ba:	f8ce 0000 	str.w	r0, [lr]
 80185be:	88b9      	ldrh	r1, [r7, #4]
 80185c0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80185c4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80185c8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80185cc:	d009      	beq.n	80185e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80185ce:	7b51      	ldrb	r1, [r2, #13]
 80185d0:	7992      	ldrb	r2, [r2, #6]
 80185d2:	0149      	lsls	r1, r1, #5
 80185d4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80185d8:	4311      	orrs	r1, r2
 80185da:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80185de:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80185e2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80185e6:	b2ad      	uxth	r5, r5
 80185e8:	d00d      	beq.n	8018606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80185ea:	442b      	add	r3, r5
 80185ec:	b29b      	uxth	r3, r3
 80185ee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80185f2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80185f6:	10db      	asrs	r3, r3, #3
 80185f8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80185fc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018600:	4313      	orrs	r3, r2
 8018602:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018606:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801860a:	00cb      	lsls	r3, r1, #3
 801860c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018610:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018614:	064f      	lsls	r7, r1, #25
 8018616:	ea43 0302 	orr.w	r3, r3, r2
 801861a:	bf44      	itt	mi
 801861c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018620:	b21b      	sxthmi	r3, r3
 8018622:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018626:	1b5b      	subs	r3, r3, r5
 8018628:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801862c:	4632      	mov	r2, r6
 801862e:	e6fa      	b.n	8018426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018630:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018634:	4617      	mov	r7, r2
 8018636:	f102 0908 	add.w	r9, r2, #8
 801863a:	4666      	mov	r6, ip
 801863c:	6838      	ldr	r0, [r7, #0]
 801863e:	6879      	ldr	r1, [r7, #4]
 8018640:	46e0      	mov	r8, ip
 8018642:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018646:	3708      	adds	r7, #8
 8018648:	454f      	cmp	r7, r9
 801864a:	46c4      	mov	ip, r8
 801864c:	d1f6      	bne.n	801863c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801864e:	6838      	ldr	r0, [r7, #0]
 8018650:	f8c8 0000 	str.w	r0, [r8]
 8018654:	88b9      	ldrh	r1, [r7, #4]
 8018656:	f8a8 1004 	strh.w	r1, [r8, #4]
 801865a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801865e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018662:	d009      	beq.n	8018678 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018664:	7b51      	ldrb	r1, [r2, #13]
 8018666:	7992      	ldrb	r2, [r2, #6]
 8018668:	0149      	lsls	r1, r1, #5
 801866a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801866e:	4311      	orrs	r1, r2
 8018670:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018674:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018678:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801867c:	d00e      	beq.n	801869c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801867e:	eba3 030e 	sub.w	r3, r3, lr
 8018682:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018686:	b29b      	uxth	r3, r3
 8018688:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801868c:	10db      	asrs	r3, r3, #3
 801868e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018692:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018696:	4313      	orrs	r3, r2
 8018698:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801869c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80186a0:	00cb      	lsls	r3, r1, #3
 80186a2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80186a6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80186aa:	0648      	lsls	r0, r1, #25
 80186ac:	ea43 0302 	orr.w	r3, r3, r2
 80186b0:	bf44      	itt	mi
 80186b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186b6:	b21b      	sxthmi	r3, r3
 80186b8:	1b5d      	subs	r5, r3, r5
 80186ba:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80186be:	e7b5      	b.n	801862c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080186c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80186c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80186c4:	461e      	mov	r6, r3
 80186c6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80186c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80186cc:	4604      	mov	r4, r0
 80186ce:	4617      	mov	r7, r2
 80186d0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80186d4:	f7f0 fb1c 	bl	8008d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80186d8:	4605      	mov	r5, r0
 80186da:	b918      	cbnz	r0, 80186e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80186dc:	6030      	str	r0, [r6, #0]
 80186de:	4628      	mov	r0, r5
 80186e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80186e4:	683b      	ldr	r3, [r7, #0]
 80186e6:	4601      	mov	r1, r0
 80186e8:	68db      	ldr	r3, [r3, #12]
 80186ea:	4638      	mov	r0, r7
 80186ec:	4798      	blx	r3
 80186ee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80186f2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80186f6:	4602      	mov	r2, r0
 80186f8:	6030      	str	r0, [r6, #0]
 80186fa:	d213      	bcs.n	8018724 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80186fc:	4643      	mov	r3, r8
 80186fe:	4639      	mov	r1, r7
 8018700:	4620      	mov	r0, r4
 8018702:	f7ff fe3b 	bl	801837c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018706:	6030      	str	r0, [r6, #0]
 8018708:	6833      	ldr	r3, [r6, #0]
 801870a:	b143      	cbz	r3, 801871e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801870c:	7b5a      	ldrb	r2, [r3, #13]
 801870e:	7a9b      	ldrb	r3, [r3, #10]
 8018710:	0052      	lsls	r2, r2, #1
 8018712:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018716:	4313      	orrs	r3, r2
 8018718:	bf0c      	ite	eq
 801871a:	2301      	moveq	r3, #1
 801871c:	2300      	movne	r3, #0
 801871e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018722:	e7dc      	b.n	80186de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018724:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018728:	b29b      	uxth	r3, r3
 801872a:	2b7f      	cmp	r3, #127	; 0x7f
 801872c:	d804      	bhi.n	8018738 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801872e:	4639      	mov	r1, r7
 8018730:	4620      	mov	r0, r4
 8018732:	f7ff fd17 	bl	8018164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018736:	e7e6      	b.n	8018706 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018738:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801873c:	2b00      	cmp	r3, #0
 801873e:	d0e3      	beq.n	8018708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018740:	f640 1302 	movw	r3, #2306	; 0x902
 8018744:	429d      	cmp	r5, r3
 8018746:	d1df      	bne.n	8018708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018748:	4601      	mov	r1, r0
 801874a:	4620      	mov	r0, r4
 801874c:	f7ff fcdb 	bl	8018106 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018750:	e7d9      	b.n	8018706 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018752 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018752:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018756:	461e      	mov	r6, r3
 8018758:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801875a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801875e:	4604      	mov	r4, r0
 8018760:	4617      	mov	r7, r2
 8018762:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018766:	f7f0 fad3 	bl	8008d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801876a:	4605      	mov	r5, r0
 801876c:	b918      	cbnz	r0, 8018776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801876e:	6030      	str	r0, [r6, #0]
 8018770:	4628      	mov	r0, r5
 8018772:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018776:	683b      	ldr	r3, [r7, #0]
 8018778:	4601      	mov	r1, r0
 801877a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801877e:	4638      	mov	r0, r7
 8018780:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018784:	47c8      	blx	r9
 8018786:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801878a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801878e:	4602      	mov	r2, r0
 8018790:	6030      	str	r0, [r6, #0]
 8018792:	d213      	bcs.n	80187bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018794:	4643      	mov	r3, r8
 8018796:	4639      	mov	r1, r7
 8018798:	4620      	mov	r0, r4
 801879a:	f7ff fdef 	bl	801837c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801879e:	6030      	str	r0, [r6, #0]
 80187a0:	6833      	ldr	r3, [r6, #0]
 80187a2:	b143      	cbz	r3, 80187b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80187a4:	7b5a      	ldrb	r2, [r3, #13]
 80187a6:	7a9b      	ldrb	r3, [r3, #10]
 80187a8:	0052      	lsls	r2, r2, #1
 80187aa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80187ae:	4313      	orrs	r3, r2
 80187b0:	bf0c      	ite	eq
 80187b2:	2301      	moveq	r3, #1
 80187b4:	2300      	movne	r3, #0
 80187b6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80187ba:	e7d9      	b.n	8018770 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80187bc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80187c0:	b29b      	uxth	r3, r3
 80187c2:	2b7f      	cmp	r3, #127	; 0x7f
 80187c4:	d804      	bhi.n	80187d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80187c6:	4639      	mov	r1, r7
 80187c8:	4620      	mov	r0, r4
 80187ca:	f7ff fccb 	bl	8018164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80187ce:	e7e6      	b.n	801879e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80187d0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	d0e3      	beq.n	80187a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80187d8:	f640 1302 	movw	r3, #2306	; 0x902
 80187dc:	429d      	cmp	r5, r3
 80187de:	d1df      	bne.n	80187a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80187e0:	4601      	mov	r1, r0
 80187e2:	4620      	mov	r0, r4
 80187e4:	f7ff fc8f 	bl	8018106 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80187e8:	e7d9      	b.n	801879e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080187ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80187ea:	b510      	push	{r4, lr}
 80187ec:	4604      	mov	r4, r0
 80187ee:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80187f2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80187f4:	b1f1      	cbz	r1, 8018834 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80187f6:	2b0a      	cmp	r3, #10
 80187f8:	d02f      	beq.n	801885a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80187fa:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80187fc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018800:	3901      	subs	r1, #1
 8018802:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018804:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018808:	1c51      	adds	r1, r2, #1
 801880a:	b289      	uxth	r1, r1
 801880c:	2901      	cmp	r1, #1
 801880e:	bf84      	itt	hi
 8018810:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018814:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018816:	f103 0201 	add.w	r2, r3, #1
 801881a:	8722      	strh	r2, [r4, #56]	; 0x38
 801881c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801881e:	bf98      	it	ls
 8018820:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018822:	4413      	add	r3, r2
 8018824:	b29b      	uxth	r3, r3
 8018826:	2b09      	cmp	r3, #9
 8018828:	bf88      	it	hi
 801882a:	3b0a      	subhi	r3, #10
 801882c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018830:	8458      	strh	r0, [r3, #34]	; 0x22
 8018832:	e7dc      	b.n	80187ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018834:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018836:	2b0a      	cmp	r3, #10
 8018838:	d00f      	beq.n	801885a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801883a:	4620      	mov	r0, r4
 801883c:	f7ff fc11 	bl	8018062 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018840:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018842:	1c5a      	adds	r2, r3, #1
 8018844:	8722      	strh	r2, [r4, #56]	; 0x38
 8018846:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018848:	4413      	add	r3, r2
 801884a:	b29b      	uxth	r3, r3
 801884c:	2b09      	cmp	r3, #9
 801884e:	bf88      	it	hi
 8018850:	3b0a      	subhi	r3, #10
 8018852:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018856:	8458      	strh	r0, [r3, #34]	; 0x22
 8018858:	e7ec      	b.n	8018834 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801885a:	bd10      	pop	{r4, pc}

0801885c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801885c:	b538      	push	{r3, r4, r5, lr}
 801885e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018860:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018864:	4604      	mov	r4, r0
 8018866:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018868:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801886a:	3a01      	subs	r2, #1
 801886c:	8702      	strh	r2, [r0, #56]	; 0x38
 801886e:	1c5a      	adds	r2, r3, #1
 8018870:	b292      	uxth	r2, r2
 8018872:	2a09      	cmp	r2, #9
 8018874:	bf86      	itte	hi
 8018876:	3b09      	subhi	r3, #9
 8018878:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801887a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801887c:	f7ff ffb5 	bl	80187ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018880:	8c23      	ldrh	r3, [r4, #32]
 8018882:	2b01      	cmp	r3, #1
 8018884:	bf9c      	itt	ls
 8018886:	3301      	addls	r3, #1
 8018888:	8423      	strhls	r3, [r4, #32]
 801888a:	8be3      	ldrh	r3, [r4, #30]
 801888c:	b90b      	cbnz	r3, 8018892 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801888e:	2302      	movs	r3, #2
 8018890:	83e3      	strh	r3, [r4, #30]
 8018892:	8be3      	ldrh	r3, [r4, #30]
 8018894:	3b01      	subs	r3, #1
 8018896:	b29b      	uxth	r3, r3
 8018898:	83e3      	strh	r3, [r4, #30]
 801889a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801889e:	4628      	mov	r0, r5
 80188a0:	8365      	strh	r5, [r4, #26]
 80188a2:	bd38      	pop	{r3, r4, r5, pc}

080188a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80188a4:	428a      	cmp	r2, r1
 80188a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80188aa:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80188ac:	d931      	bls.n	8018912 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80188ae:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80188b0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80188b4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80188b8:	19ee      	adds	r6, r5, r7
 80188ba:	1a54      	subs	r4, r2, r1
 80188bc:	3e01      	subs	r6, #1
 80188be:	fa1f fe84 	uxth.w	lr, r4
 80188c2:	b2b4      	uxth	r4, r6
 80188c4:	eba4 090e 	sub.w	r9, r4, lr
 80188c8:	fa1f f989 	uxth.w	r9, r9
 80188cc:	2c09      	cmp	r4, #9
 80188ce:	4626      	mov	r6, r4
 80188d0:	bf88      	it	hi
 80188d2:	f1a4 060a 	subhi.w	r6, r4, #10
 80188d6:	f1bc 0f00 	cmp.w	ip, #0
 80188da:	bf08      	it	eq
 80188dc:	f04f 0c02 	moveq.w	ip, #2
 80188e0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80188e4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80188e8:	fa1f fc8c 	uxth.w	ip, ip
 80188ec:	3c01      	subs	r4, #1
 80188ee:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80188f2:	b2a4      	uxth	r4, r4
 80188f4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80188f8:	454c      	cmp	r4, r9
 80188fa:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80188fe:	d1e5      	bne.n	80188cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018900:	eba5 050e 	sub.w	r5, r5, lr
 8018904:	eb0e 0408 	add.w	r4, lr, r8
 8018908:	8705      	strh	r5, [r0, #56]	; 0x38
 801890a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801890e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018912:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018914:	1a64      	subs	r4, r4, r1
 8018916:	4439      	add	r1, r7
 8018918:	b289      	uxth	r1, r1
 801891a:	2909      	cmp	r1, #9
 801891c:	bf88      	it	hi
 801891e:	390a      	subhi	r1, #10
 8018920:	8704      	strh	r4, [r0, #56]	; 0x38
 8018922:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018924:	250a      	movs	r5, #10
 8018926:	b18a      	cbz	r2, 801894c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018928:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801892a:	3a01      	subs	r2, #1
 801892c:	b292      	uxth	r2, r2
 801892e:	3101      	adds	r1, #1
 8018930:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018934:	8701      	strh	r1, [r0, #56]	; 0x38
 8018936:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018938:	b901      	cbnz	r1, 801893c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801893a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801893c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801893e:	3901      	subs	r1, #1
 8018940:	b289      	uxth	r1, r1
 8018942:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018944:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018948:	844c      	strh	r4, [r1, #34]	; 0x22
 801894a:	e7ec      	b.n	8018926 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801894c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018950:	f7ff bf4b 	b.w	80187ea <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018954 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018954:	b570      	push	{r4, r5, r6, lr}
 8018956:	2500      	movs	r5, #0
 8018958:	4295      	cmp	r5, r2
 801895a:	d011      	beq.n	8018980 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801895c:	8bc4      	ldrh	r4, [r0, #30]
 801895e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018962:	4414      	add	r4, r2
 8018964:	3c01      	subs	r4, #1
 8018966:	1b64      	subs	r4, r4, r5
 8018968:	b2a4      	uxth	r4, r4
 801896a:	2c01      	cmp	r4, #1
 801896c:	bf88      	it	hi
 801896e:	3c02      	subhi	r4, #2
 8018970:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018974:	8b64      	ldrh	r4, [r4, #26]
 8018976:	42b4      	cmp	r4, r6
 8018978:	d117      	bne.n	80189aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801897a:	3501      	adds	r5, #1
 801897c:	b2ad      	uxth	r5, r5
 801897e:	e7eb      	b.n	8018958 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018980:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018984:	2400      	movs	r4, #0
 8018986:	4413      	add	r3, r2
 8018988:	b2a2      	uxth	r2, r4
 801898a:	429a      	cmp	r2, r3
 801898c:	da0f      	bge.n	80189ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801898e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018990:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018994:	4432      	add	r2, r6
 8018996:	b292      	uxth	r2, r2
 8018998:	2a09      	cmp	r2, #9
 801899a:	bf88      	it	hi
 801899c:	3a0a      	subhi	r2, #10
 801899e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80189a2:	3401      	adds	r4, #1
 80189a4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80189a6:	42aa      	cmp	r2, r5
 80189a8:	d0ee      	beq.n	8018988 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80189aa:	2000      	movs	r0, #0
 80189ac:	bd70      	pop	{r4, r5, r6, pc}
 80189ae:	2001      	movs	r0, #1
 80189b0:	e7fc      	b.n	80189ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080189b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80189b2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189b6:	4605      	mov	r5, r0
 80189b8:	4616      	mov	r6, r2
 80189ba:	1c8c      	adds	r4, r1, #2
 80189bc:	8809      	ldrh	r1, [r1, #0]
 80189be:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80189c2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80189c6:	42b3      	cmp	r3, r6
 80189c8:	d124      	bne.n	8018a14 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80189ca:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80189ce:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80189d2:	f001 070f 	and.w	r7, r1, #15
 80189d6:	f8cd 8000 	str.w	r8, [sp]
 80189da:	464b      	mov	r3, r9
 80189dc:	4652      	mov	r2, sl
 80189de:	4621      	mov	r1, r4
 80189e0:	4628      	mov	r0, r5
 80189e2:	f7ff ffb7 	bl	8018954 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80189e6:	4683      	mov	fp, r0
 80189e8:	b168      	cbz	r0, 8018a06 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80189ea:	eb0a 0109 	add.w	r1, sl, r9
 80189ee:	4441      	add	r1, r8
 80189f0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80189f4:	463a      	mov	r2, r7
 80189f6:	4649      	mov	r1, r9
 80189f8:	4628      	mov	r0, r5
 80189fa:	f7ff ff53 	bl	80188a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80189fe:	4658      	mov	r0, fp
 8018a00:	b003      	add	sp, #12
 8018a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a06:	eb07 010a 	add.w	r1, r7, sl
 8018a0a:	4449      	add	r1, r9
 8018a0c:	4441      	add	r1, r8
 8018a0e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018a12:	e7d2      	b.n	80189ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018a14:	f04f 0b00 	mov.w	fp, #0
 8018a18:	e7f1      	b.n	80189fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018a1a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018a1a:	b570      	push	{r4, r5, r6, lr}
 8018a1c:	8810      	ldrh	r0, [r2, #0]
 8018a1e:	4298      	cmp	r0, r3
 8018a20:	d817      	bhi.n	8018a52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018a22:	1e48      	subs	r0, r1, #1
 8018a24:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018a28:	4298      	cmp	r0, r3
 8018a2a:	d312      	bcc.n	8018a52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018a2c:	2400      	movs	r4, #0
 8018a2e:	428c      	cmp	r4, r1
 8018a30:	d20f      	bcs.n	8018a52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018a32:	1860      	adds	r0, r4, r1
 8018a34:	1040      	asrs	r0, r0, #1
 8018a36:	0085      	lsls	r5, r0, #2
 8018a38:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018a3c:	42b3      	cmp	r3, r6
 8018a3e:	d902      	bls.n	8018a46 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018a40:	3001      	adds	r0, #1
 8018a42:	b284      	uxth	r4, r0
 8018a44:	e7f3      	b.n	8018a2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018a46:	d201      	bcs.n	8018a4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018a48:	b281      	uxth	r1, r0
 8018a4a:	e7f0      	b.n	8018a2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018a4c:	442a      	add	r2, r5
 8018a4e:	8850      	ldrh	r0, [r2, #2]
 8018a50:	bd70      	pop	{r4, r5, r6, pc}
 8018a52:	2000      	movs	r0, #0
 8018a54:	e7fc      	b.n	8018a50 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018a56 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018a56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a5a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018a5c:	886f      	ldrh	r7, [r5, #2]
 8018a5e:	4604      	mov	r4, r0
 8018a60:	087f      	lsrs	r7, r7, #1
 8018a62:	260b      	movs	r6, #11
 8018a64:	3e01      	subs	r6, #1
 8018a66:	d013      	beq.n	8018a90 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018a68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018a6a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018a6e:	462a      	mov	r2, r5
 8018a70:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018a74:	4639      	mov	r1, r7
 8018a76:	4643      	mov	r3, r8
 8018a78:	4620      	mov	r0, r4
 8018a7a:	f7ff ffce 	bl	8018a1a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018a7e:	b138      	cbz	r0, 8018a90 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018a80:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018a84:	4642      	mov	r2, r8
 8018a86:	4620      	mov	r0, r4
 8018a88:	f7ff ff93 	bl	80189b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018a8c:	2800      	cmp	r0, #0
 8018a8e:	d1e9      	bne.n	8018a64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018a90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018a94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018a94:	b570      	push	{r4, r5, r6, lr}
 8018a96:	694a      	ldr	r2, [r1, #20]
 8018a98:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018a9a:	684b      	ldr	r3, [r1, #4]
 8018a9c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018a9e:	1b54      	subs	r4, r2, r5
 8018aa0:	f000 8106 	beq.w	8018cb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018aa4:	1b9b      	subs	r3, r3, r6
 8018aa6:	d003      	beq.n	8018ab0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018aa8:	4363      	muls	r3, r4
 8018aaa:	2210      	movs	r2, #16
 8018aac:	fb93 f3f2 	sdiv	r3, r3, r2
 8018ab0:	680c      	ldr	r4, [r1, #0]
 8018ab2:	698a      	ldr	r2, [r1, #24]
 8018ab4:	1b65      	subs	r5, r4, r5
 8018ab6:	f000 80fd 	beq.w	8018cb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018aba:	1b92      	subs	r2, r2, r6
 8018abc:	d003      	beq.n	8018ac6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018abe:	436a      	muls	r2, r5
 8018ac0:	2410      	movs	r4, #16
 8018ac2:	fb92 f2f4 	sdiv	r2, r2, r4
 8018ac6:	1a9b      	subs	r3, r3, r2
 8018ac8:	ee07 3a90 	vmov	s15, r3
 8018acc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018cf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018ad0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018ad4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018ad8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018adc:	460a      	mov	r2, r1
 8018ade:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018ae2:	4603      	mov	r3, r0
 8018ae4:	f100 040c 	add.w	r4, r0, #12
 8018ae8:	eeb1 6a43 	vneg.f32	s12, s6
 8018aec:	edd2 7a02 	vldr	s15, [r2, #8]
 8018af0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018af4:	3214      	adds	r2, #20
 8018af6:	ece3 6a01 	vstmia	r3!, {s13}
 8018afa:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018afe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018b02:	429c      	cmp	r4, r3
 8018b04:	edc3 7a02 	vstr	s15, [r3, #8]
 8018b08:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018b0c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018b10:	edc3 7a05 	vstr	s15, [r3, #20]
 8018b14:	d1ea      	bne.n	8018aec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018b16:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018b18:	698b      	ldr	r3, [r1, #24]
 8018b1a:	edd0 4a02 	vldr	s9, [r0, #8]
 8018b1e:	edd0 3a00 	vldr	s7, [r0]
 8018b22:	edd0 6a01 	vldr	s13, [r0, #4]
 8018b26:	ed90 5a05 	vldr	s10, [r0, #20]
 8018b2a:	ed90 2a03 	vldr	s4, [r0, #12]
 8018b2e:	edd0 5a04 	vldr	s11, [r0, #16]
 8018b32:	ed90 1a07 	vldr	s2, [r0, #28]
 8018b36:	edd0 2a06 	vldr	s5, [r0, #24]
 8018b3a:	1a9b      	subs	r3, r3, r2
 8018b3c:	ee07 3a90 	vmov	s15, r3
 8018b40:	684b      	ldr	r3, [r1, #4]
 8018b42:	1a9b      	subs	r3, r3, r2
 8018b44:	ee07 3a10 	vmov	s14, r3
 8018b48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018b4c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018b50:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018b54:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018b58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b5c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018b60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b64:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018b68:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018b6c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018b70:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018b74:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018b78:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018b7a:	694a      	ldr	r2, [r1, #20]
 8018b7c:	1b13      	subs	r3, r2, r4
 8018b7e:	ee07 3a10 	vmov	s14, r3
 8018b82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b86:	680b      	ldr	r3, [r1, #0]
 8018b88:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b8c:	1b1b      	subs	r3, r3, r4
 8018b8e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018b92:	ee07 3a10 	vmov	s14, r3
 8018b96:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018b9a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018b9e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018ba2:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018ba6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018baa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018bac:	698b      	ldr	r3, [r1, #24]
 8018bae:	1a9b      	subs	r3, r3, r2
 8018bb0:	ee06 3a90 	vmov	s13, r3
 8018bb4:	684b      	ldr	r3, [r1, #4]
 8018bb6:	1a9b      	subs	r3, r3, r2
 8018bb8:	ee07 3a10 	vmov	s14, r3
 8018bbc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018bc0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018bc4:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018bc8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018bcc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018bd0:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018bd4:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018bd8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018bdc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018bde:	694a      	ldr	r2, [r1, #20]
 8018be0:	1b13      	subs	r3, r2, r4
 8018be2:	ee07 3a10 	vmov	s14, r3
 8018be6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018bea:	680b      	ldr	r3, [r1, #0]
 8018bec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018bf0:	1b1b      	subs	r3, r3, r4
 8018bf2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018bf6:	ee07 3a10 	vmov	s14, r3
 8018bfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018bfe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c02:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018c06:	edd0 5a08 	vldr	s11, [r0, #32]
 8018c0a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018c0e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018c12:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018c16:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018c18:	698b      	ldr	r3, [r1, #24]
 8018c1a:	1a9b      	subs	r3, r3, r2
 8018c1c:	ee07 3a10 	vmov	s14, r3
 8018c20:	684b      	ldr	r3, [r1, #4]
 8018c22:	1a9b      	subs	r3, r3, r2
 8018c24:	ee01 3a90 	vmov	s3, r3
 8018c28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c2c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018c30:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c34:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018c38:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018c3c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018c40:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018c44:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018c48:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018c4c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018c4e:	694a      	ldr	r2, [r1, #20]
 8018c50:	1b13      	subs	r3, r2, r4
 8018c52:	ee03 3a10 	vmov	s6, r3
 8018c56:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018c5a:	680b      	ldr	r3, [r1, #0]
 8018c5c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018c60:	1b1b      	subs	r3, r3, r4
 8018c62:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018c66:	ee03 3a10 	vmov	s6, r3
 8018c6a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018c6e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018c72:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018c76:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018c7a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018c7e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018c82:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018c86:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c8e:	dd13      	ble.n	8018cb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018c90:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018c94:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018c98:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018c9a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018c9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018ca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ca6:	dd15      	ble.n	8018cd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018ca8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018cac:	6403      	str	r3, [r0, #64]	; 0x40
 8018cae:	bd70      	pop	{r4, r5, r6, pc}
 8018cb0:	4623      	mov	r3, r4
 8018cb2:	e6fd      	b.n	8018ab0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018cb4:	462a      	mov	r2, r5
 8018cb6:	e706      	b.n	8018ac6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018cb8:	d502      	bpl.n	8018cc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018cba:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018cbe:	e7e9      	b.n	8018c94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018cc0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018cc4:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018cc8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018ccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cd0:	dade      	bge.n	8018c90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018cd2:	e7f2      	b.n	8018cba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018cd4:	d502      	bpl.n	8018cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018cd6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018cda:	e7e7      	b.n	8018cac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018cdc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018ce0:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018ce4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018ce8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cec:	dadc      	bge.n	8018ca8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018cee:	e7f2      	b.n	8018cd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018cf0:	3d800000 	.word	0x3d800000

08018cf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018cf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018cf8:	2714      	movs	r7, #20
 8018cfa:	435f      	muls	r7, r3
 8018cfc:	eb02 0c07 	add.w	ip, r2, r7
 8018d00:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018d04:	f115 0e0f 	adds.w	lr, r5, #15
 8018d08:	f100 80a2 	bmi.w	8018e50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018d0c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018d10:	9c08      	ldr	r4, [sp, #32]
 8018d12:	f8c0 e014 	str.w	lr, [r0, #20]
 8018d16:	2614      	movs	r6, #20
 8018d18:	4366      	muls	r6, r4
 8018d1a:	eb02 0806 	add.w	r8, r2, r6
 8018d1e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018d22:	f115 040f 	adds.w	r4, r5, #15
 8018d26:	f100 809f 	bmi.w	8018e68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018d2a:	1124      	asrs	r4, r4, #4
 8018d2c:	eba4 040e 	sub.w	r4, r4, lr
 8018d30:	6184      	str	r4, [r0, #24]
 8018d32:	2c00      	cmp	r4, #0
 8018d34:	f000 808a 	beq.w	8018e4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018d38:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018d3c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018d40:	5995      	ldr	r5, [r2, r6]
 8018d42:	eba4 0809 	sub.w	r8, r4, r9
 8018d46:	59d4      	ldr	r4, [r2, r7]
 8018d48:	eba5 0a04 	sub.w	sl, r5, r4
 8018d4c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018d50:	fb0e fe05 	mul.w	lr, lr, r5
 8018d54:	fb0a ee19 	mls	lr, sl, r9, lr
 8018d58:	fb08 e404 	mla	r4, r8, r4, lr
 8018d5c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018d60:	3c01      	subs	r4, #1
 8018d62:	19a4      	adds	r4, r4, r6
 8018d64:	f100 808c 	bmi.w	8018e80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018d68:	fb94 fef6 	sdiv	lr, r4, r6
 8018d6c:	f8c0 e000 	str.w	lr, [r0]
 8018d70:	fb06 441e 	mls	r4, r6, lr, r4
 8018d74:	6104      	str	r4, [r0, #16]
 8018d76:	2d00      	cmp	r5, #0
 8018d78:	f2c0 8095 	blt.w	8018ea6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018d7c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018d80:	6044      	str	r4, [r0, #4]
 8018d82:	fb06 5514 	mls	r5, r6, r4, r5
 8018d86:	6085      	str	r5, [r0, #8]
 8018d88:	60c6      	str	r6, [r0, #12]
 8018d8a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018d8e:	6945      	ldr	r5, [r0, #20]
 8018d90:	59d2      	ldr	r2, [r2, r7]
 8018d92:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018ec8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018d96:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018d9a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018d9e:	ee07 4a10 	vmov	s14, r4
 8018da2:	6804      	ldr	r4, [r0, #0]
 8018da4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018da8:	ee07 2a90 	vmov	s15, r2
 8018dac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018db0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018db4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018db8:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018dbc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018dc0:	edd3 6a00 	vldr	s13, [r3]
 8018dc4:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018dc8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018dcc:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018dd0:	edc0 6a07 	vstr	s13, [r0, #28]
 8018dd4:	edd0 6a01 	vldr	s13, [r0, #4]
 8018dd8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018ddc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018de0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018de4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018de8:	ed80 6a08 	vstr	s12, [r0, #32]
 8018dec:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8018dee:	6242      	str	r2, [r0, #36]	; 0x24
 8018df0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018df4:	ed93 6a03 	vldr	s12, [r3, #12]
 8018df8:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018dfc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018e00:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018e04:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018e08:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018e0c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018e10:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018e14:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018e18:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018e1a:	6302      	str	r2, [r0, #48]	; 0x30
 8018e1c:	ed93 6a06 	vldr	s12, [r3, #24]
 8018e20:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018e24:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018e28:	eeb0 7a46 	vmov.f32	s14, s12
 8018e2c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018e30:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018e34:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018e38:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8018e3c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018e40:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018e44:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018e48:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8018e4a:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018e4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e50:	f1c5 0501 	rsb	r5, r5, #1
 8018e54:	f015 050f 	ands.w	r5, r5, #15
 8018e58:	bf18      	it	ne
 8018e5a:	2501      	movne	r5, #1
 8018e5c:	2410      	movs	r4, #16
 8018e5e:	fb9e fef4 	sdiv	lr, lr, r4
 8018e62:	ebae 0e05 	sub.w	lr, lr, r5
 8018e66:	e753      	b.n	8018d10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018e68:	f1c5 0501 	rsb	r5, r5, #1
 8018e6c:	f015 050f 	ands.w	r5, r5, #15
 8018e70:	bf18      	it	ne
 8018e72:	2501      	movne	r5, #1
 8018e74:	f04f 0910 	mov.w	r9, #16
 8018e78:	fb94 f4f9 	sdiv	r4, r4, r9
 8018e7c:	1b64      	subs	r4, r4, r5
 8018e7e:	e755      	b.n	8018d2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018e80:	4264      	negs	r4, r4
 8018e82:	fb94 fef6 	sdiv	lr, r4, r6
 8018e86:	f1ce 0800 	rsb	r8, lr, #0
 8018e8a:	fb06 441e 	mls	r4, r6, lr, r4
 8018e8e:	f8c0 8000 	str.w	r8, [r0]
 8018e92:	6104      	str	r4, [r0, #16]
 8018e94:	2c00      	cmp	r4, #0
 8018e96:	f43f af6e 	beq.w	8018d76 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018e9a:	ea6f 0e0e 	mvn.w	lr, lr
 8018e9e:	f8c0 e000 	str.w	lr, [r0]
 8018ea2:	1b34      	subs	r4, r6, r4
 8018ea4:	e766      	b.n	8018d74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018ea6:	426d      	negs	r5, r5
 8018ea8:	fb95 f4f6 	sdiv	r4, r5, r6
 8018eac:	f1c4 0e00 	rsb	lr, r4, #0
 8018eb0:	fb06 5514 	mls	r5, r6, r4, r5
 8018eb4:	f8c0 e004 	str.w	lr, [r0, #4]
 8018eb8:	6085      	str	r5, [r0, #8]
 8018eba:	2d00      	cmp	r5, #0
 8018ebc:	f43f af64 	beq.w	8018d88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018ec0:	43e4      	mvns	r4, r4
 8018ec2:	6044      	str	r4, [r0, #4]
 8018ec4:	1b75      	subs	r5, r6, r5
 8018ec6:	e75e      	b.n	8018d86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018ec8:	3d800000 	.word	0x3d800000

08018ecc <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018ecc:	4602      	mov	r2, r0
 8018ece:	b148      	cbz	r0, 8018ee4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018ed0:	2300      	movs	r3, #0
 8018ed2:	b298      	uxth	r0, r3
 8018ed4:	3301      	adds	r3, #1
 8018ed6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018eda:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8018ede:	2900      	cmp	r1, #0
 8018ee0:	d1f7      	bne.n	8018ed2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018ee2:	4770      	bx	lr
 8018ee4:	4770      	bx	lr

08018ee6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018ee6:	b530      	push	{r4, r5, lr}
 8018ee8:	4604      	mov	r4, r0
 8018eea:	b159      	cbz	r1, 8018f04 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018eec:	b148      	cbz	r0, 8018f02 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018eee:	2300      	movs	r3, #0
 8018ef0:	b298      	uxth	r0, r3
 8018ef2:	4282      	cmp	r2, r0
 8018ef4:	d905      	bls.n	8018f02 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018ef6:	5ccd      	ldrb	r5, [r1, r3]
 8018ef8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018efc:	3301      	adds	r3, #1
 8018efe:	2d00      	cmp	r5, #0
 8018f00:	d1f6      	bne.n	8018ef0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018f02:	bd30      	pop	{r4, r5, pc}
 8018f04:	4608      	mov	r0, r1
 8018f06:	e7fc      	b.n	8018f02 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018f08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8018f08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f0a:	b08b      	sub	sp, #44	; 0x2c
 8018f0c:	468c      	mov	ip, r1
 8018f0e:	2100      	movs	r1, #0
 8018f10:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018f14:	ae01      	add	r6, sp, #4
 8018f16:	211f      	movs	r1, #31
 8018f18:	fbb0 f7f3 	udiv	r7, r0, r3
 8018f1c:	fb03 0517 	mls	r5, r3, r7, r0
 8018f20:	b2ec      	uxtb	r4, r5
 8018f22:	2d09      	cmp	r5, #9
 8018f24:	bfd4      	ite	le
 8018f26:	3430      	addle	r4, #48	; 0x30
 8018f28:	3457      	addgt	r4, #87	; 0x57
 8018f2a:	b2e4      	uxtb	r4, r4
 8018f2c:	558c      	strb	r4, [r1, r6]
 8018f2e:	4638      	mov	r0, r7
 8018f30:	1e4c      	subs	r4, r1, #1
 8018f32:	b92f      	cbnz	r7, 8018f40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8018f34:	4431      	add	r1, r6
 8018f36:	4660      	mov	r0, ip
 8018f38:	f7ff ffd5 	bl	8018ee6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018f3c:	b00b      	add	sp, #44	; 0x2c
 8018f3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018f40:	4621      	mov	r1, r4
 8018f42:	e7e9      	b.n	8018f18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08018f44 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f46:	4607      	mov	r7, r0
 8018f48:	b08b      	sub	sp, #44	; 0x2c
 8018f4a:	4608      	mov	r0, r1
 8018f4c:	b341      	cbz	r1, 8018fa0 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8018f4e:	1e99      	subs	r1, r3, #2
 8018f50:	2922      	cmp	r1, #34	; 0x22
 8018f52:	d825      	bhi.n	8018fa0 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8018f54:	2100      	movs	r1, #0
 8018f56:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018f5a:	463c      	mov	r4, r7
 8018f5c:	261f      	movs	r6, #31
 8018f5e:	f10d 0c04 	add.w	ip, sp, #4
 8018f62:	fb94 fef3 	sdiv	lr, r4, r3
 8018f66:	fb03 441e 	mls	r4, r3, lr, r4
 8018f6a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018f6e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018f72:	b2ec      	uxtb	r4, r5
 8018f74:	2d09      	cmp	r5, #9
 8018f76:	bfd4      	ite	le
 8018f78:	3430      	addle	r4, #48	; 0x30
 8018f7a:	3457      	addgt	r4, #87	; 0x57
 8018f7c:	b2e4      	uxtb	r4, r4
 8018f7e:	f80c 4006 	strb.w	r4, [ip, r6]
 8018f82:	4674      	mov	r4, lr
 8018f84:	1e71      	subs	r1, r6, #1
 8018f86:	b96c      	cbnz	r4, 8018fa4 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8018f88:	2f00      	cmp	r7, #0
 8018f8a:	da05      	bge.n	8018f98 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8018f8c:	ab0a      	add	r3, sp, #40	; 0x28
 8018f8e:	4419      	add	r1, r3
 8018f90:	232d      	movs	r3, #45	; 0x2d
 8018f92:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018f96:	1eb1      	subs	r1, r6, #2
 8018f98:	3101      	adds	r1, #1
 8018f9a:	4461      	add	r1, ip
 8018f9c:	f7ff ffa3 	bl	8018ee6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018fa0:	b00b      	add	sp, #44	; 0x2c
 8018fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018fa4:	460e      	mov	r6, r1
 8018fa6:	e7dc      	b.n	8018f62 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08018fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fac:	4691      	mov	r9, r2
 8018fae:	b085      	sub	sp, #20
 8018fb0:	6802      	ldr	r2, [r0, #0]
 8018fb2:	9201      	str	r2, [sp, #4]
 8018fb4:	4688      	mov	r8, r1
 8018fb6:	4683      	mov	fp, r0
 8018fb8:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018fbc:	9103      	str	r1, [sp, #12]
 8018fbe:	4610      	mov	r0, r2
 8018fc0:	461c      	mov	r4, r3
 8018fc2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018fc6:	9302      	str	r3, [sp, #8]
 8018fc8:	f7ff ff80 	bl	8018ecc <_ZN8touchgfx7Unicode6strlenEPKt>
 8018fcc:	f1b8 0f00 	cmp.w	r8, #0
 8018fd0:	bf0c      	ite	eq
 8018fd2:	4684      	moveq	ip, r0
 8018fd4:	f100 0c01 	addne.w	ip, r0, #1
 8018fd8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018fdc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018fe0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018fe2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018fe4:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018fe8:	9903      	ldr	r1, [sp, #12]
 8018fea:	fa1f fc8c 	uxth.w	ip, ip
 8018fee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018ff2:	d041      	beq.n	8019078 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018ff4:	d834      	bhi.n	8019060 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018ff6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018ffa:	d059      	beq.n	80190b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018ffc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019000:	d03a      	beq.n	8019078 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019002:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019006:	d034      	beq.n	8019072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019008:	2400      	movs	r4, #0
 801900a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801900e:	3a01      	subs	r2, #1
 8019010:	b169      	cbz	r1, 801902e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019012:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019014:	458c      	cmp	ip, r1
 8019016:	da09      	bge.n	801902c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019018:	eba1 010c 	sub.w	r1, r1, ip
 801901c:	b289      	uxth	r1, r1
 801901e:	b933      	cbnz	r3, 801902e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019020:	2e00      	cmp	r6, #0
 8019022:	d051      	beq.n	80190c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019024:	2800      	cmp	r0, #0
 8019026:	d04f      	beq.n	80190c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019028:	440c      	add	r4, r1
 801902a:	b2a4      	uxth	r4, r4
 801902c:	2100      	movs	r1, #0
 801902e:	682b      	ldr	r3, [r5, #0]
 8019030:	4293      	cmp	r3, r2
 8019032:	da07      	bge.n	8019044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019034:	f1b8 0f00 	cmp.w	r8, #0
 8019038:	d004      	beq.n	8019044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801903a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801903e:	682b      	ldr	r3, [r5, #0]
 8019040:	3301      	adds	r3, #1
 8019042:	602b      	str	r3, [r5, #0]
 8019044:	2730      	movs	r7, #48	; 0x30
 8019046:	2c00      	cmp	r4, #0
 8019048:	d04e      	beq.n	80190e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801904a:	682e      	ldr	r6, [r5, #0]
 801904c:	3c01      	subs	r4, #1
 801904e:	42b2      	cmp	r2, r6
 8019050:	b2a4      	uxth	r4, r4
 8019052:	dd49      	ble.n	80190e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019054:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019058:	682b      	ldr	r3, [r5, #0]
 801905a:	3301      	adds	r3, #1
 801905c:	602b      	str	r3, [r5, #0]
 801905e:	e7f2      	b.n	8019046 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019060:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019064:	d01d      	beq.n	80190a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019066:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801906a:	d002      	beq.n	8019072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801906c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019070:	e7c9      	b.n	8019006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019072:	4684      	mov	ip, r0
 8019074:	f04f 0800 	mov.w	r8, #0
 8019078:	2c00      	cmp	r4, #0
 801907a:	d0c6      	beq.n	801900a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801907c:	b947      	cbnz	r7, 8019090 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801907e:	2801      	cmp	r0, #1
 8019080:	d106      	bne.n	8019090 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019082:	8814      	ldrh	r4, [r2, #0]
 8019084:	2c30      	cmp	r4, #48	; 0x30
 8019086:	bf02      	ittt	eq
 8019088:	3202      	addeq	r2, #2
 801908a:	f8cb 2000 	streq.w	r2, [fp]
 801908e:	4638      	moveq	r0, r7
 8019090:	45bc      	cmp	ip, r7
 8019092:	da14      	bge.n	80190be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019094:	b2bf      	uxth	r7, r7
 8019096:	eba7 040c 	sub.w	r4, r7, ip
 801909a:	b2a4      	uxth	r4, r4
 801909c:	46bc      	mov	ip, r7
 801909e:	2600      	movs	r6, #0
 80190a0:	e7b3      	b.n	801900a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80190a2:	4684      	mov	ip, r0
 80190a4:	b16c      	cbz	r4, 80190c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80190a6:	42b8      	cmp	r0, r7
 80190a8:	dd00      	ble.n	80190ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80190aa:	b2b8      	uxth	r0, r7
 80190ac:	2400      	movs	r4, #0
 80190ae:	e003      	b.n	80190b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80190b0:	f04f 0c01 	mov.w	ip, #1
 80190b4:	2400      	movs	r4, #0
 80190b6:	4660      	mov	r0, ip
 80190b8:	4626      	mov	r6, r4
 80190ba:	46a0      	mov	r8, r4
 80190bc:	e7a5      	b.n	801900a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80190be:	2400      	movs	r4, #0
 80190c0:	e7ed      	b.n	801909e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80190c2:	4626      	mov	r6, r4
 80190c4:	46a0      	mov	r8, r4
 80190c6:	e7a0      	b.n	801900a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80190c8:	2900      	cmp	r1, #0
 80190ca:	d0b0      	beq.n	801902e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80190cc:	2720      	movs	r7, #32
 80190ce:	682e      	ldr	r6, [r5, #0]
 80190d0:	2900      	cmp	r1, #0
 80190d2:	d0ac      	beq.n	801902e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80190d4:	3901      	subs	r1, #1
 80190d6:	4296      	cmp	r6, r2
 80190d8:	b289      	uxth	r1, r1
 80190da:	daa7      	bge.n	801902c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80190dc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80190e0:	682b      	ldr	r3, [r5, #0]
 80190e2:	3301      	adds	r3, #1
 80190e4:	602b      	str	r3, [r5, #0]
 80190e6:	e7f2      	b.n	80190ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80190e8:	b188      	cbz	r0, 801910e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80190ea:	682b      	ldr	r3, [r5, #0]
 80190ec:	3801      	subs	r0, #1
 80190ee:	429a      	cmp	r2, r3
 80190f0:	b280      	uxth	r0, r0
 80190f2:	dd0c      	ble.n	801910e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80190f4:	f8db 3000 	ldr.w	r3, [fp]
 80190f8:	1c9c      	adds	r4, r3, #2
 80190fa:	f8cb 4000 	str.w	r4, [fp]
 80190fe:	881c      	ldrh	r4, [r3, #0]
 8019100:	682b      	ldr	r3, [r5, #0]
 8019102:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019106:	682b      	ldr	r3, [r5, #0]
 8019108:	3301      	adds	r3, #1
 801910a:	602b      	str	r3, [r5, #0]
 801910c:	e7ec      	b.n	80190e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801910e:	2620      	movs	r6, #32
 8019110:	b151      	cbz	r1, 8019128 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019112:	6828      	ldr	r0, [r5, #0]
 8019114:	3901      	subs	r1, #1
 8019116:	4282      	cmp	r2, r0
 8019118:	b289      	uxth	r1, r1
 801911a:	dd05      	ble.n	8019128 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801911c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019120:	682b      	ldr	r3, [r5, #0]
 8019122:	3301      	adds	r3, #1
 8019124:	602b      	str	r3, [r5, #0]
 8019126:	e7f3      	b.n	8019110 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019128:	b005      	add	sp, #20
 801912a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801912e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801912e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019132:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019136:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801913a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801913e:	2400      	movs	r4, #0
 8019140:	8014      	strh	r4, [r2, #0]
 8019142:	701c      	strb	r4, [r3, #0]
 8019144:	f888 4000 	strb.w	r4, [r8]
 8019148:	f88c 4000 	strb.w	r4, [ip]
 801914c:	f88e 4000 	strb.w	r4, [lr]
 8019150:	703c      	strb	r4, [r7, #0]
 8019152:	6804      	ldr	r4, [r0, #0]
 8019154:	b1a4      	cbz	r4, 8019180 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019156:	8824      	ldrh	r4, [r4, #0]
 8019158:	f04f 0901 	mov.w	r9, #1
 801915c:	b314      	cbz	r4, 80191a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801915e:	2c2b      	cmp	r4, #43	; 0x2b
 8019160:	d001      	beq.n	8019166 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019162:	2c20      	cmp	r4, #32
 8019164:	d110      	bne.n	8019188 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019166:	8014      	strh	r4, [r2, #0]
 8019168:	6804      	ldr	r4, [r0, #0]
 801916a:	b10c      	cbz	r4, 8019170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801916c:	3402      	adds	r4, #2
 801916e:	6004      	str	r4, [r0, #0]
 8019170:	680c      	ldr	r4, [r1, #0]
 8019172:	b10c      	cbz	r4, 8019178 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019174:	3401      	adds	r4, #1
 8019176:	600c      	str	r4, [r1, #0]
 8019178:	6804      	ldr	r4, [r0, #0]
 801917a:	b17c      	cbz	r4, 801919c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801917c:	8824      	ldrh	r4, [r4, #0]
 801917e:	e7ed      	b.n	801915c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019180:	680c      	ldr	r4, [r1, #0]
 8019182:	b17c      	cbz	r4, 80191a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019184:	7824      	ldrb	r4, [r4, #0]
 8019186:	e7e7      	b.n	8019158 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019188:	2c2d      	cmp	r4, #45	; 0x2d
 801918a:	d102      	bne.n	8019192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801918c:	f883 9000 	strb.w	r9, [r3]
 8019190:	e7ea      	b.n	8019168 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019192:	2c23      	cmp	r4, #35	; 0x23
 8019194:	d107      	bne.n	80191a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019196:	f888 9000 	strb.w	r9, [r8]
 801919a:	e7e5      	b.n	8019168 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801919c:	680c      	ldr	r4, [r1, #0]
 801919e:	b10c      	cbz	r4, 80191a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80191a0:	7824      	ldrb	r4, [r4, #0]
 80191a2:	e7db      	b.n	801915c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80191a4:	2400      	movs	r4, #0
 80191a6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80191aa:	2b09      	cmp	r3, #9
 80191ac:	d901      	bls.n	80191b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80191ae:	2c2a      	cmp	r4, #42	; 0x2a
 80191b0:	d122      	bne.n	80191f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80191b2:	2301      	movs	r3, #1
 80191b4:	2c30      	cmp	r4, #48	; 0x30
 80191b6:	f88e 3000 	strb.w	r3, [lr]
 80191ba:	d10d      	bne.n	80191d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80191bc:	f88c 3000 	strb.w	r3, [ip]
 80191c0:	6803      	ldr	r3, [r0, #0]
 80191c2:	b10b      	cbz	r3, 80191c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80191c4:	3302      	adds	r3, #2
 80191c6:	6003      	str	r3, [r0, #0]
 80191c8:	680b      	ldr	r3, [r1, #0]
 80191ca:	b10b      	cbz	r3, 80191d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80191cc:	3301      	adds	r3, #1
 80191ce:	600b      	str	r3, [r1, #0]
 80191d0:	6803      	ldr	r3, [r0, #0]
 80191d2:	2b00      	cmp	r3, #0
 80191d4:	d02f      	beq.n	8019236 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80191d6:	881c      	ldrh	r4, [r3, #0]
 80191d8:	2c2a      	cmp	r4, #42	; 0x2a
 80191da:	d135      	bne.n	8019248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80191dc:	f04f 33ff 	mov.w	r3, #4294967295
 80191e0:	6033      	str	r3, [r6, #0]
 80191e2:	6803      	ldr	r3, [r0, #0]
 80191e4:	b10b      	cbz	r3, 80191ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80191e6:	3302      	adds	r3, #2
 80191e8:	6003      	str	r3, [r0, #0]
 80191ea:	680b      	ldr	r3, [r1, #0]
 80191ec:	b10b      	cbz	r3, 80191f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80191ee:	3301      	adds	r3, #1
 80191f0:	600b      	str	r3, [r1, #0]
 80191f2:	6803      	ldr	r3, [r0, #0]
 80191f4:	b31b      	cbz	r3, 801923e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80191f6:	881c      	ldrh	r4, [r3, #0]
 80191f8:	2c2e      	cmp	r4, #46	; 0x2e
 80191fa:	d11a      	bne.n	8019232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80191fc:	2301      	movs	r3, #1
 80191fe:	703b      	strb	r3, [r7, #0]
 8019200:	6803      	ldr	r3, [r0, #0]
 8019202:	b10b      	cbz	r3, 8019208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019204:	3302      	adds	r3, #2
 8019206:	6003      	str	r3, [r0, #0]
 8019208:	680b      	ldr	r3, [r1, #0]
 801920a:	b10b      	cbz	r3, 8019210 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801920c:	3301      	adds	r3, #1
 801920e:	600b      	str	r3, [r1, #0]
 8019210:	6803      	ldr	r3, [r0, #0]
 8019212:	2b00      	cmp	r3, #0
 8019214:	d036      	beq.n	8019284 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019216:	881b      	ldrh	r3, [r3, #0]
 8019218:	2b2a      	cmp	r3, #42	; 0x2a
 801921a:	d137      	bne.n	801928c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801921c:	f04f 33ff 	mov.w	r3, #4294967295
 8019220:	602b      	str	r3, [r5, #0]
 8019222:	6803      	ldr	r3, [r0, #0]
 8019224:	b10b      	cbz	r3, 801922a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019226:	3302      	adds	r3, #2
 8019228:	6003      	str	r3, [r0, #0]
 801922a:	680b      	ldr	r3, [r1, #0]
 801922c:	b10b      	cbz	r3, 8019232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801922e:	3301      	adds	r3, #1
 8019230:	600b      	str	r3, [r1, #0]
 8019232:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019236:	680c      	ldr	r4, [r1, #0]
 8019238:	b134      	cbz	r4, 8019248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801923a:	7824      	ldrb	r4, [r4, #0]
 801923c:	e7cc      	b.n	80191d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801923e:	680b      	ldr	r3, [r1, #0]
 8019240:	2b00      	cmp	r3, #0
 8019242:	d0f6      	beq.n	8019232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019244:	781c      	ldrb	r4, [r3, #0]
 8019246:	e7d7      	b.n	80191f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019248:	2300      	movs	r3, #0
 801924a:	6033      	str	r3, [r6, #0]
 801924c:	220a      	movs	r2, #10
 801924e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019252:	fa1f f38c 	uxth.w	r3, ip
 8019256:	2b09      	cmp	r3, #9
 8019258:	d8ce      	bhi.n	80191f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801925a:	6833      	ldr	r3, [r6, #0]
 801925c:	fb02 c303 	mla	r3, r2, r3, ip
 8019260:	6033      	str	r3, [r6, #0]
 8019262:	6803      	ldr	r3, [r0, #0]
 8019264:	b10b      	cbz	r3, 801926a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019266:	3302      	adds	r3, #2
 8019268:	6003      	str	r3, [r0, #0]
 801926a:	680b      	ldr	r3, [r1, #0]
 801926c:	b10b      	cbz	r3, 8019272 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801926e:	3301      	adds	r3, #1
 8019270:	600b      	str	r3, [r1, #0]
 8019272:	6803      	ldr	r3, [r0, #0]
 8019274:	b10b      	cbz	r3, 801927a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019276:	881c      	ldrh	r4, [r3, #0]
 8019278:	e7e9      	b.n	801924e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801927a:	680c      	ldr	r4, [r1, #0]
 801927c:	2c00      	cmp	r4, #0
 801927e:	d0e6      	beq.n	801924e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019280:	7824      	ldrb	r4, [r4, #0]
 8019282:	e7e4      	b.n	801924e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019284:	680b      	ldr	r3, [r1, #0]
 8019286:	b10b      	cbz	r3, 801928c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019288:	781b      	ldrb	r3, [r3, #0]
 801928a:	e7c5      	b.n	8019218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801928c:	2200      	movs	r2, #0
 801928e:	602a      	str	r2, [r5, #0]
 8019290:	240a      	movs	r4, #10
 8019292:	3b30      	subs	r3, #48	; 0x30
 8019294:	b29e      	uxth	r6, r3
 8019296:	2e09      	cmp	r6, #9
 8019298:	682a      	ldr	r2, [r5, #0]
 801929a:	d813      	bhi.n	80192c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801929c:	fb04 3302 	mla	r3, r4, r2, r3
 80192a0:	602b      	str	r3, [r5, #0]
 80192a2:	6803      	ldr	r3, [r0, #0]
 80192a4:	b10b      	cbz	r3, 80192aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80192a6:	3302      	adds	r3, #2
 80192a8:	6003      	str	r3, [r0, #0]
 80192aa:	680b      	ldr	r3, [r1, #0]
 80192ac:	b10b      	cbz	r3, 80192b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80192ae:	3301      	adds	r3, #1
 80192b0:	600b      	str	r3, [r1, #0]
 80192b2:	6803      	ldr	r3, [r0, #0]
 80192b4:	b10b      	cbz	r3, 80192ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80192b6:	881b      	ldrh	r3, [r3, #0]
 80192b8:	e7eb      	b.n	8019292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80192ba:	680b      	ldr	r3, [r1, #0]
 80192bc:	2b00      	cmp	r3, #0
 80192be:	d0e8      	beq.n	8019292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80192c0:	781b      	ldrb	r3, [r3, #0]
 80192c2:	e7e6      	b.n	8019292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80192c4:	2a06      	cmp	r2, #6
 80192c6:	bfa8      	it	ge
 80192c8:	2206      	movge	r2, #6
 80192ca:	602a      	str	r2, [r5, #0]
 80192cc:	e7b1      	b.n	8019232 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080192ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80192ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192d2:	b0a3      	sub	sp, #140	; 0x8c
 80192d4:	2600      	movs	r6, #0
 80192d6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80192da:	4607      	mov	r7, r0
 80192dc:	4688      	mov	r8, r1
 80192de:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80192e2:	4631      	mov	r1, r6
 80192e4:	2242      	movs	r2, #66	; 0x42
 80192e6:	4648      	mov	r0, r9
 80192e8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80192ea:	960d      	str	r6, [sp, #52]	; 0x34
 80192ec:	f00c fbe2 	bl	8025ab4 <memset>
 80192f0:	b15f      	cbz	r7, 801930a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80192f2:	f108 3aff 	add.w	sl, r8, #4294967295
 80192f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80192f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80192fa:	b152      	cbz	r2, 8019312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80192fc:	8812      	ldrh	r2, [r2, #0]
 80192fe:	b10a      	cbz	r2, 8019304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019300:	459a      	cmp	sl, r3
 8019302:	dc2e      	bgt.n	8019362 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019304:	2200      	movs	r2, #0
 8019306:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801930a:	4638      	mov	r0, r7
 801930c:	b023      	add	sp, #140	; 0x8c
 801930e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019312:	9a08      	ldr	r2, [sp, #32]
 8019314:	2a00      	cmp	r2, #0
 8019316:	d0f5      	beq.n	8019304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019318:	7812      	ldrb	r2, [r2, #0]
 801931a:	e7f0      	b.n	80192fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801931c:	2d00      	cmp	r5, #0
 801931e:	d0ea      	beq.n	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019320:	782a      	ldrb	r2, [r5, #0]
 8019322:	b142      	cbz	r2, 8019336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019324:	2a25      	cmp	r2, #37	; 0x25
 8019326:	d001      	beq.n	801932c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019328:	459a      	cmp	sl, r3
 801932a:	dc08      	bgt.n	801933e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801932c:	f1bb 0f00 	cmp.w	fp, #0
 8019330:	d121      	bne.n	8019376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019332:	2d00      	cmp	r5, #0
 8019334:	d0df      	beq.n	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019336:	782a      	ldrb	r2, [r5, #0]
 8019338:	f04f 0b00 	mov.w	fp, #0
 801933c:	e01d      	b.n	801937a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801933e:	f1bb 0f00 	cmp.w	fp, #0
 8019342:	d078      	beq.n	8019436 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019344:	f8bb 2000 	ldrh.w	r2, [fp]
 8019348:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801934c:	f1bb 0f00 	cmp.w	fp, #0
 8019350:	d002      	beq.n	8019358 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019352:	f10b 0202 	add.w	r2, fp, #2
 8019356:	9209      	str	r2, [sp, #36]	; 0x24
 8019358:	b10d      	cbz	r5, 801935e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801935a:	3501      	adds	r5, #1
 801935c:	9508      	str	r5, [sp, #32]
 801935e:	3301      	adds	r3, #1
 8019360:	930d      	str	r3, [sp, #52]	; 0x34
 8019362:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019366:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019368:	f1bb 0f00 	cmp.w	fp, #0
 801936c:	d0d6      	beq.n	801931c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801936e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019372:	2a00      	cmp	r2, #0
 8019374:	d1d6      	bne.n	8019324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019376:	f8bb 2000 	ldrh.w	r2, [fp]
 801937a:	2a00      	cmp	r2, #0
 801937c:	d0bb      	beq.n	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801937e:	459a      	cmp	sl, r3
 8019380:	ddb9      	ble.n	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019382:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019386:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801938a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801938e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019392:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019396:	960e      	str	r6, [sp, #56]	; 0x38
 8019398:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801939c:	960f      	str	r6, [sp, #60]	; 0x3c
 801939e:	f1bb 0f00 	cmp.w	fp, #0
 80193a2:	d002      	beq.n	80193aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80193a4:	f10b 0302 	add.w	r3, fp, #2
 80193a8:	9309      	str	r3, [sp, #36]	; 0x24
 80193aa:	b10d      	cbz	r5, 80193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80193ac:	1c6b      	adds	r3, r5, #1
 80193ae:	9308      	str	r3, [sp, #32]
 80193b0:	ab0f      	add	r3, sp, #60	; 0x3c
 80193b2:	9305      	str	r3, [sp, #20]
 80193b4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80193b8:	9304      	str	r3, [sp, #16]
 80193ba:	ab0e      	add	r3, sp, #56	; 0x38
 80193bc:	9303      	str	r3, [sp, #12]
 80193be:	ab0c      	add	r3, sp, #48	; 0x30
 80193c0:	9302      	str	r3, [sp, #8]
 80193c2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80193c6:	9301      	str	r3, [sp, #4]
 80193c8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80193cc:	9300      	str	r3, [sp, #0]
 80193ce:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80193d2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80193d6:	a908      	add	r1, sp, #32
 80193d8:	a809      	add	r0, sp, #36	; 0x24
 80193da:	f7ff fea8 	bl	801912e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80193de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193e0:	2b00      	cmp	r3, #0
 80193e2:	bfbe      	ittt	lt
 80193e4:	6823      	ldrlt	r3, [r4, #0]
 80193e6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80193ea:	930e      	strlt	r3, [sp, #56]	; 0x38
 80193ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80193ee:	bfb8      	it	lt
 80193f0:	3404      	addlt	r4, #4
 80193f2:	2b00      	cmp	r3, #0
 80193f4:	bfb8      	it	lt
 80193f6:	6823      	ldrlt	r3, [r4, #0]
 80193f8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80193fc:	bfbe      	ittt	lt
 80193fe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019402:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019404:	3404      	addlt	r4, #4
 8019406:	b1d9      	cbz	r1, 8019440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019408:	880b      	ldrh	r3, [r1, #0]
 801940a:	2b69      	cmp	r3, #105	; 0x69
 801940c:	d01f      	beq.n	801944e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801940e:	d82f      	bhi.n	8019470 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019410:	2b58      	cmp	r3, #88	; 0x58
 8019412:	d01c      	beq.n	801944e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019414:	d818      	bhi.n	8019448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019416:	2b25      	cmp	r3, #37	; 0x25
 8019418:	d034      	beq.n	8019484 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801941a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801941e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019420:	f1bb 0f00 	cmp.w	fp, #0
 8019424:	f000 80b8 	beq.w	8019598 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019428:	f8bb 5000 	ldrh.w	r5, [fp]
 801942c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019430:	3301      	adds	r3, #1
 8019432:	930d      	str	r3, [sp, #52]	; 0x34
 8019434:	e029      	b.n	801948a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019436:	b10d      	cbz	r5, 801943c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019438:	782a      	ldrb	r2, [r5, #0]
 801943a:	e785      	b.n	8019348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801943c:	462a      	mov	r2, r5
 801943e:	e783      	b.n	8019348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019440:	2a00      	cmp	r2, #0
 8019442:	d0ea      	beq.n	801941a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019444:	7813      	ldrb	r3, [r2, #0]
 8019446:	e7e0      	b.n	801940a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019448:	3b63      	subs	r3, #99	; 0x63
 801944a:	2b01      	cmp	r3, #1
 801944c:	d8e5      	bhi.n	801941a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801944e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019452:	b329      	cbz	r1, 80194a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019454:	880b      	ldrh	r3, [r1, #0]
 8019456:	2b69      	cmp	r3, #105	; 0x69
 8019458:	d063      	beq.n	8019522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801945a:	d825      	bhi.n	80194a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801945c:	2b63      	cmp	r3, #99	; 0x63
 801945e:	d038      	beq.n	80194d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019460:	2b64      	cmp	r3, #100	; 0x64
 8019462:	d05e      	beq.n	8019522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019464:	2b58      	cmp	r3, #88	; 0x58
 8019466:	d07b      	beq.n	8019560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019468:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801946c:	4625      	mov	r5, r4
 801946e:	e036      	b.n	80194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019470:	2b73      	cmp	r3, #115	; 0x73
 8019472:	d0ec      	beq.n	801944e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019474:	d802      	bhi.n	801947c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019476:	2b6f      	cmp	r3, #111	; 0x6f
 8019478:	d1cf      	bne.n	801941a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801947a:	e7e8      	b.n	801944e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801947c:	2b75      	cmp	r3, #117	; 0x75
 801947e:	d0e6      	beq.n	801944e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019480:	2b78      	cmp	r3, #120	; 0x78
 8019482:	e7f9      	b.n	8019478 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019484:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019486:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801948a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801948c:	b10b      	cbz	r3, 8019492 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801948e:	3302      	adds	r3, #2
 8019490:	9309      	str	r3, [sp, #36]	; 0x24
 8019492:	9b08      	ldr	r3, [sp, #32]
 8019494:	2b00      	cmp	r3, #0
 8019496:	f43f af2e 	beq.w	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801949a:	3301      	adds	r3, #1
 801949c:	9308      	str	r3, [sp, #32]
 801949e:	e72a      	b.n	80192f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80194a0:	2a00      	cmp	r2, #0
 80194a2:	d0e1      	beq.n	8019468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80194a4:	7813      	ldrb	r3, [r2, #0]
 80194a6:	e7d6      	b.n	8019456 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80194a8:	2b73      	cmp	r3, #115	; 0x73
 80194aa:	d036      	beq.n	801951a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80194ac:	d807      	bhi.n	80194be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80194ae:	2b6f      	cmp	r3, #111	; 0x6f
 80194b0:	d1da      	bne.n	8019468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80194b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80194b4:	1d25      	adds	r5, r4, #4
 80194b6:	eba8 0202 	sub.w	r2, r8, r2
 80194ba:	2308      	movs	r3, #8
 80194bc:	e04a      	b.n	8019554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80194be:	2b75      	cmp	r3, #117	; 0x75
 80194c0:	d043      	beq.n	801954a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80194c2:	2b78      	cmp	r3, #120	; 0x78
 80194c4:	d1d0      	bne.n	8019468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80194c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80194c8:	1d25      	adds	r5, r4, #4
 80194ca:	eba8 0202 	sub.w	r2, r8, r2
 80194ce:	2310      	movs	r3, #16
 80194d0:	e040      	b.n	8019554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80194d2:	6823      	ldr	r3, [r4, #0]
 80194d4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80194d8:	1d25      	adds	r5, r4, #4
 80194da:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80194de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194e0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80194e4:	2b00      	cmp	r3, #0
 80194e6:	d052      	beq.n	801958e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80194e8:	881a      	ldrh	r2, [r3, #0]
 80194ea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80194ee:	a80d      	add	r0, sp, #52	; 0x34
 80194f0:	9005      	str	r0, [sp, #20]
 80194f2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80194f6:	9004      	str	r0, [sp, #16]
 80194f8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80194fa:	9003      	str	r0, [sp, #12]
 80194fc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019500:	9002      	str	r0, [sp, #8]
 8019502:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019504:	9001      	str	r0, [sp, #4]
 8019506:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801950a:	9000      	str	r0, [sp, #0]
 801950c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019510:	a810      	add	r0, sp, #64	; 0x40
 8019512:	f7ff fd49 	bl	8018fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019516:	462c      	mov	r4, r5
 8019518:	e7b7      	b.n	801948a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801951a:	6823      	ldr	r3, [r4, #0]
 801951c:	1d25      	adds	r5, r4, #4
 801951e:	9310      	str	r3, [sp, #64]	; 0x40
 8019520:	e7dd      	b.n	80194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019522:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019524:	6820      	ldr	r0, [r4, #0]
 8019526:	eba8 0202 	sub.w	r2, r8, r2
 801952a:	230a      	movs	r3, #10
 801952c:	b292      	uxth	r2, r2
 801952e:	4649      	mov	r1, r9
 8019530:	f7ff fd08 	bl	8018f44 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019534:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019538:	2b2d      	cmp	r3, #45	; 0x2d
 801953a:	f104 0504 	add.w	r5, r4, #4
 801953e:	d1ce      	bne.n	80194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019540:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019544:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019546:	3302      	adds	r3, #2
 8019548:	e7e9      	b.n	801951e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801954a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801954c:	1d25      	adds	r5, r4, #4
 801954e:	eba8 0202 	sub.w	r2, r8, r2
 8019552:	230a      	movs	r3, #10
 8019554:	b292      	uxth	r2, r2
 8019556:	4649      	mov	r1, r9
 8019558:	6820      	ldr	r0, [r4, #0]
 801955a:	f7ff fcd5 	bl	8018f08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801955e:	e7be      	b.n	80194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019560:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019562:	6820      	ldr	r0, [r4, #0]
 8019564:	eba8 0202 	sub.w	r2, r8, r2
 8019568:	b292      	uxth	r2, r2
 801956a:	2310      	movs	r3, #16
 801956c:	4649      	mov	r1, r9
 801956e:	f7ff fccb 	bl	8018f08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8019572:	1d25      	adds	r5, r4, #4
 8019574:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019578:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801957c:	2b00      	cmp	r3, #0
 801957e:	d0ae      	beq.n	80194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019580:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019584:	2919      	cmp	r1, #25
 8019586:	d8f7      	bhi.n	8019578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019588:	3b20      	subs	r3, #32
 801958a:	8013      	strh	r3, [r2, #0]
 801958c:	e7f4      	b.n	8019578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801958e:	9a08      	ldr	r2, [sp, #32]
 8019590:	2a00      	cmp	r2, #0
 8019592:	d0aa      	beq.n	80194ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019594:	7812      	ldrb	r2, [r2, #0]
 8019596:	e7a8      	b.n	80194ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019598:	2d00      	cmp	r5, #0
 801959a:	f43f af47 	beq.w	801942c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801959e:	782d      	ldrb	r5, [r5, #0]
 80195a0:	e744      	b.n	801942c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080195a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80195a2:	b507      	push	{r0, r1, r2, lr}
 80195a4:	9300      	str	r3, [sp, #0]
 80195a6:	4613      	mov	r3, r2
 80195a8:	2200      	movs	r2, #0
 80195aa:	f7ff fe90 	bl	80192ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80195ae:	b003      	add	sp, #12
 80195b0:	f85d fb04 	ldr.w	pc, [sp], #4

080195b4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80195b4:	b40c      	push	{r2, r3}
 80195b6:	b507      	push	{r0, r1, r2, lr}
 80195b8:	ab04      	add	r3, sp, #16
 80195ba:	f853 2b04 	ldr.w	r2, [r3], #4
 80195be:	9301      	str	r3, [sp, #4]
 80195c0:	f7ff ffef 	bl	80195a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80195c4:	b003      	add	sp, #12
 80195c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80195ca:	b002      	add	sp, #8
 80195cc:	4770      	bx	lr
	...

080195d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80195d0:	4b01      	ldr	r3, [pc, #4]	; (80195d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80195d2:	6018      	str	r0, [r3, #0]
 80195d4:	4770      	bx	lr
 80195d6:	bf00      	nop
 80195d8:	2000dcdc 	.word	0x2000dcdc

080195dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80195dc:	4b06      	ldr	r3, [pc, #24]	; (80195f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80195de:	881a      	ldrh	r2, [r3, #0]
 80195e0:	4282      	cmp	r2, r0
 80195e2:	d807      	bhi.n	80195f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80195e4:	4b05      	ldr	r3, [pc, #20]	; (80195fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80195e6:	881b      	ldrh	r3, [r3, #0]
 80195e8:	4413      	add	r3, r2
 80195ea:	4298      	cmp	r0, r3
 80195ec:	bfac      	ite	ge
 80195ee:	2000      	movge	r0, #0
 80195f0:	2001      	movlt	r0, #1
 80195f2:	4770      	bx	lr
 80195f4:	2000      	movs	r0, #0
 80195f6:	4770      	bx	lr
 80195f8:	2000dcfc 	.word	0x2000dcfc
 80195fc:	2000dd00 	.word	0x2000dd00

08019600 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019600:	b508      	push	{r3, lr}
 8019602:	4601      	mov	r1, r0
 8019604:	f7ff ffea 	bl	80195dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019608:	b118      	cbz	r0, 8019612 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801960a:	4b02      	ldr	r3, [pc, #8]	; (8019614 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801960c:	681b      	ldr	r3, [r3, #0]
 801960e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019612:	bd08      	pop	{r3, pc}
 8019614:	2000dce0 	.word	0x2000dce0

08019618 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019618:	b5f0      	push	{r4, r5, r6, r7, lr}
 801961a:	4c24      	ldr	r4, [pc, #144]	; (80196ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801961c:	6823      	ldr	r3, [r4, #0]
 801961e:	2b00      	cmp	r3, #0
 8019620:	d042      	beq.n	80196a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019622:	4a23      	ldr	r2, [pc, #140]	; (80196b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019624:	4d23      	ldr	r5, [pc, #140]	; (80196b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019626:	8811      	ldrh	r1, [r2, #0]
 8019628:	f8b5 c000 	ldrh.w	ip, [r5]
 801962c:	4822      	ldr	r0, [pc, #136]	; (80196b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801962e:	4461      	add	r1, ip
 8019630:	1c4a      	adds	r2, r1, #1
 8019632:	f022 0201 	bic.w	r2, r2, #1
 8019636:	008f      	lsls	r7, r1, #2
 8019638:	0412      	lsls	r2, r2, #16
 801963a:	19de      	adds	r6, r3, r7
 801963c:	0c12      	lsrs	r2, r2, #16
 801963e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019642:	6006      	str	r6, [r0, #0]
 8019644:	4e1d      	ldr	r6, [pc, #116]	; (80196bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019646:	19da      	adds	r2, r3, r7
 8019648:	6032      	str	r2, [r6, #0]
 801964a:	220e      	movs	r2, #14
 801964c:	fb02 f20c 	mul.w	r2, r2, ip
 8019650:	3203      	adds	r2, #3
 8019652:	f022 0203 	bic.w	r2, r2, #3
 8019656:	443a      	add	r2, r7
 8019658:	4f19      	ldr	r7, [pc, #100]	; (80196c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801965a:	4413      	add	r3, r2
 801965c:	603b      	str	r3, [r7, #0]
 801965e:	4f19      	ldr	r7, [pc, #100]	; (80196c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019660:	2300      	movs	r3, #0
 8019662:	803b      	strh	r3, [r7, #0]
 8019664:	4f18      	ldr	r7, [pc, #96]	; (80196c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019666:	683f      	ldr	r7, [r7, #0]
 8019668:	1aba      	subs	r2, r7, r2
 801966a:	4f18      	ldr	r7, [pc, #96]	; (80196cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801966c:	603a      	str	r2, [r7, #0]
 801966e:	4a18      	ldr	r2, [pc, #96]	; (80196d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019670:	469c      	mov	ip, r3
 8019672:	8013      	strh	r3, [r2, #0]
 8019674:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019678:	428b      	cmp	r3, r1
 801967a:	d10d      	bne.n	8019698 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801967c:	882d      	ldrh	r5, [r5, #0]
 801967e:	6830      	ldr	r0, [r6, #0]
 8019680:	2300      	movs	r3, #0
 8019682:	240e      	movs	r4, #14
 8019684:	429d      	cmp	r5, r3
 8019686:	d90f      	bls.n	80196a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019688:	fb04 0203 	mla	r2, r4, r3, r0
 801968c:	3301      	adds	r3, #1
 801968e:	7b11      	ldrb	r1, [r2, #12]
 8019690:	f36f 1145 	bfc	r1, #5, #1
 8019694:	7311      	strb	r1, [r2, #12]
 8019696:	e7f5      	b.n	8019684 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019698:	6822      	ldr	r2, [r4, #0]
 801969a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801969e:	6802      	ldr	r2, [r0, #0]
 80196a0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80196a4:	3301      	adds	r3, #1
 80196a6:	e7e7      	b.n	8019678 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80196a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80196aa:	bf00      	nop
 80196ac:	2000dce0 	.word	0x2000dce0
 80196b0:	2000dcfc 	.word	0x2000dcfc
 80196b4:	2000dd00 	.word	0x2000dd00
 80196b8:	2000dcf4 	.word	0x2000dcf4
 80196bc:	2000dce4 	.word	0x2000dce4
 80196c0:	2000dcec 	.word	0x2000dcec
 80196c4:	2000dcfe 	.word	0x2000dcfe
 80196c8:	2000dce8 	.word	0x2000dce8
 80196cc:	2000dcf8 	.word	0x2000dcf8
 80196d0:	2000dcf0 	.word	0x2000dcf0

080196d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80196d4:	4b06      	ldr	r3, [pc, #24]	; (80196f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80196d6:	681b      	ldr	r3, [r3, #0]
 80196d8:	b943      	cbnz	r3, 80196ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80196da:	b139      	cbz	r1, 80196ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80196dc:	4b05      	ldr	r3, [pc, #20]	; (80196f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80196de:	801a      	strh	r2, [r3, #0]
 80196e0:	4b05      	ldr	r3, [pc, #20]	; (80196f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80196e2:	6019      	str	r1, [r3, #0]
 80196e4:	4b05      	ldr	r3, [pc, #20]	; (80196fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80196e6:	6018      	str	r0, [r3, #0]
 80196e8:	f7ff bf96 	b.w	8019618 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80196ec:	4770      	bx	lr
 80196ee:	bf00      	nop
 80196f0:	2000dcec 	.word	0x2000dcec
 80196f4:	2000dd00 	.word	0x2000dd00
 80196f8:	2000dce8 	.word	0x2000dce8
 80196fc:	2000dce0 	.word	0x2000dce0

08019700 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019700:	b470      	push	{r4, r5, r6}
 8019702:	4c07      	ldr	r4, [pc, #28]	; (8019720 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019704:	6826      	ldr	r6, [r4, #0]
 8019706:	4605      	mov	r5, r0
 8019708:	4610      	mov	r0, r2
 801970a:	9a03      	ldr	r2, [sp, #12]
 801970c:	b936      	cbnz	r6, 801971c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801970e:	6025      	str	r5, [r4, #0]
 8019710:	4c04      	ldr	r4, [pc, #16]	; (8019724 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019712:	8021      	strh	r1, [r4, #0]
 8019714:	bc70      	pop	{r4, r5, r6}
 8019716:	4619      	mov	r1, r3
 8019718:	f7ff bfdc 	b.w	80196d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801971c:	bc70      	pop	{r4, r5, r6}
 801971e:	4770      	bx	lr
 8019720:	2000dd04 	.word	0x2000dd04
 8019724:	2000dcfc 	.word	0x2000dcfc

08019728 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019728:	4a12      	ldr	r2, [pc, #72]	; (8019774 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801972a:	8803      	ldrh	r3, [r0, #0]
 801972c:	8812      	ldrh	r2, [r2, #0]
 801972e:	4293      	cmp	r3, r2
 8019730:	d207      	bcs.n	8019742 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019732:	4a11      	ldr	r2, [pc, #68]	; (8019778 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019734:	6812      	ldr	r2, [r2, #0]
 8019736:	2114      	movs	r1, #20
 8019738:	fb01 2303 	mla	r3, r1, r3, r2
 801973c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019740:	4770      	bx	lr
 8019742:	490e      	ldr	r1, [pc, #56]	; (801977c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019744:	8809      	ldrh	r1, [r1, #0]
 8019746:	4411      	add	r1, r2
 8019748:	428b      	cmp	r3, r1
 801974a:	da04      	bge.n	8019756 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801974c:	1a9b      	subs	r3, r3, r2
 801974e:	4a0c      	ldr	r2, [pc, #48]	; (8019780 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019750:	210e      	movs	r1, #14
 8019752:	6812      	ldr	r2, [r2, #0]
 8019754:	e7f0      	b.n	8019738 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019756:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801975a:	4293      	cmp	r3, r2
 801975c:	d108      	bne.n	8019770 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801975e:	4b09      	ldr	r3, [pc, #36]	; (8019784 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019760:	781b      	ldrb	r3, [r3, #0]
 8019762:	b91b      	cbnz	r3, 801976c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019764:	4b08      	ldr	r3, [pc, #32]	; (8019788 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019766:	f9b3 0000 	ldrsh.w	r0, [r3]
 801976a:	4770      	bx	lr
 801976c:	4b07      	ldr	r3, [pc, #28]	; (801978c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801976e:	e7fa      	b.n	8019766 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019770:	2000      	movs	r0, #0
 8019772:	4770      	bx	lr
 8019774:	2000dcfc 	.word	0x2000dcfc
 8019778:	2000dd04 	.word	0x2000dd04
 801977c:	2000dd00 	.word	0x2000dd00
 8019780:	2000dce4 	.word	0x2000dce4
 8019784:	2000dc6c 	.word	0x2000dc6c
 8019788:	2000dc6e 	.word	0x2000dc6e
 801978c:	2000dc70 	.word	0x2000dc70

08019790 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019790:	4a12      	ldr	r2, [pc, #72]	; (80197dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019792:	8803      	ldrh	r3, [r0, #0]
 8019794:	8812      	ldrh	r2, [r2, #0]
 8019796:	4293      	cmp	r3, r2
 8019798:	d207      	bcs.n	80197aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801979a:	4a11      	ldr	r2, [pc, #68]	; (80197e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801979c:	6812      	ldr	r2, [r2, #0]
 801979e:	2114      	movs	r1, #20
 80197a0:	fb01 2303 	mla	r3, r1, r3, r2
 80197a4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80197a8:	4770      	bx	lr
 80197aa:	490e      	ldr	r1, [pc, #56]	; (80197e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80197ac:	8809      	ldrh	r1, [r1, #0]
 80197ae:	4411      	add	r1, r2
 80197b0:	428b      	cmp	r3, r1
 80197b2:	da04      	bge.n	80197be <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80197b4:	1a9b      	subs	r3, r3, r2
 80197b6:	4a0c      	ldr	r2, [pc, #48]	; (80197e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80197b8:	210e      	movs	r1, #14
 80197ba:	6812      	ldr	r2, [r2, #0]
 80197bc:	e7f0      	b.n	80197a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80197be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197c2:	4293      	cmp	r3, r2
 80197c4:	d108      	bne.n	80197d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80197c6:	4b09      	ldr	r3, [pc, #36]	; (80197ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80197c8:	781b      	ldrb	r3, [r3, #0]
 80197ca:	b91b      	cbnz	r3, 80197d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80197cc:	4b08      	ldr	r3, [pc, #32]	; (80197f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80197ce:	f9b3 0000 	ldrsh.w	r0, [r3]
 80197d2:	4770      	bx	lr
 80197d4:	4b07      	ldr	r3, [pc, #28]	; (80197f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80197d6:	e7fa      	b.n	80197ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80197d8:	2000      	movs	r0, #0
 80197da:	4770      	bx	lr
 80197dc:	2000dcfc 	.word	0x2000dcfc
 80197e0:	2000dd04 	.word	0x2000dd04
 80197e4:	2000dd00 	.word	0x2000dd00
 80197e8:	2000dce4 	.word	0x2000dce4
 80197ec:	2000dc6c 	.word	0x2000dc6c
 80197f0:	2000dc70 	.word	0x2000dc70
 80197f4:	2000dc6e 	.word	0x2000dc6e

080197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80197f8:	b510      	push	{r4, lr}
 80197fa:	4a1f      	ldr	r2, [pc, #124]	; (8019878 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80197fc:	880b      	ldrh	r3, [r1, #0]
 80197fe:	8812      	ldrh	r2, [r2, #0]
 8019800:	4293      	cmp	r3, r2
 8019802:	d213      	bcs.n	801982c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019804:	4a1d      	ldr	r2, [pc, #116]	; (801987c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019806:	6812      	ldr	r2, [r2, #0]
 8019808:	2114      	movs	r1, #20
 801980a:	fb01 2303 	mla	r3, r1, r3, r2
 801980e:	8a1a      	ldrh	r2, [r3, #16]
 8019810:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019814:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019818:	8a5b      	ldrh	r3, [r3, #18]
 801981a:	8004      	strh	r4, [r0, #0]
 801981c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019820:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019824:	8041      	strh	r1, [r0, #2]
 8019826:	8082      	strh	r2, [r0, #4]
 8019828:	80c3      	strh	r3, [r0, #6]
 801982a:	e00e      	b.n	801984a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801982c:	4914      	ldr	r1, [pc, #80]	; (8019880 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801982e:	8809      	ldrh	r1, [r1, #0]
 8019830:	4411      	add	r1, r2
 8019832:	428b      	cmp	r3, r1
 8019834:	da0a      	bge.n	801984c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019836:	1a9b      	subs	r3, r3, r2
 8019838:	4a12      	ldr	r2, [pc, #72]	; (8019884 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801983a:	6812      	ldr	r2, [r2, #0]
 801983c:	210e      	movs	r1, #14
 801983e:	fb01 2303 	mla	r3, r1, r3, r2
 8019842:	681a      	ldr	r2, [r3, #0]
 8019844:	6002      	str	r2, [r0, #0]
 8019846:	685a      	ldr	r2, [r3, #4]
 8019848:	6042      	str	r2, [r0, #4]
 801984a:	bd10      	pop	{r4, pc}
 801984c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019850:	4293      	cmp	r3, r2
 8019852:	d10b      	bne.n	801986c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019854:	4b0c      	ldr	r3, [pc, #48]	; (8019888 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019856:	f9b3 1000 	ldrsh.w	r1, [r3]
 801985a:	4b0c      	ldr	r3, [pc, #48]	; (801988c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801985c:	8081      	strh	r1, [r0, #4]
 801985e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019862:	80c2      	strh	r2, [r0, #6]
 8019864:	2300      	movs	r3, #0
 8019866:	8003      	strh	r3, [r0, #0]
 8019868:	8043      	strh	r3, [r0, #2]
 801986a:	e7ee      	b.n	801984a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801986c:	2300      	movs	r3, #0
 801986e:	8003      	strh	r3, [r0, #0]
 8019870:	8043      	strh	r3, [r0, #2]
 8019872:	8083      	strh	r3, [r0, #4]
 8019874:	e7d8      	b.n	8019828 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019876:	bf00      	nop
 8019878:	2000dcfc 	.word	0x2000dcfc
 801987c:	2000dd04 	.word	0x2000dd04
 8019880:	2000dd00 	.word	0x2000dd00
 8019884:	2000dce4 	.word	0x2000dce4
 8019888:	2000dc68 	.word	0x2000dc68
 801988c:	2000dc6a 	.word	0x2000dc6a

08019890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019890:	4a17      	ldr	r2, [pc, #92]	; (80198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019892:	8803      	ldrh	r3, [r0, #0]
 8019894:	8812      	ldrh	r2, [r2, #0]
 8019896:	4293      	cmp	r3, r2
 8019898:	d213      	bcs.n	80198c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801989a:	4a16      	ldr	r2, [pc, #88]	; (80198f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801989c:	6812      	ldr	r2, [r2, #0]
 801989e:	2114      	movs	r1, #20
 80198a0:	fb01 2303 	mla	r3, r1, r3, r2
 80198a4:	8a1a      	ldrh	r2, [r3, #16]
 80198a6:	8919      	ldrh	r1, [r3, #8]
 80198a8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80198ac:	428a      	cmp	r2, r1
 80198ae:	db1d      	blt.n	80198ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80198b0:	8a58      	ldrh	r0, [r3, #18]
 80198b2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80198b6:	895b      	ldrh	r3, [r3, #10]
 80198b8:	4298      	cmp	r0, r3
 80198ba:	bfac      	ite	ge
 80198bc:	2000      	movge	r0, #0
 80198be:	2001      	movlt	r0, #1
 80198c0:	4770      	bx	lr
 80198c2:	490d      	ldr	r1, [pc, #52]	; (80198f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80198c4:	8809      	ldrh	r1, [r1, #0]
 80198c6:	4411      	add	r1, r2
 80198c8:	428b      	cmp	r3, r1
 80198ca:	da0d      	bge.n	80198e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80198cc:	1a9b      	subs	r3, r3, r2
 80198ce:	4a0b      	ldr	r2, [pc, #44]	; (80198fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80198d0:	6812      	ldr	r2, [r2, #0]
 80198d2:	210e      	movs	r1, #14
 80198d4:	fb01 2303 	mla	r3, r1, r3, r2
 80198d8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80198dc:	891a      	ldrh	r2, [r3, #8]
 80198de:	4291      	cmp	r1, r2
 80198e0:	db04      	blt.n	80198ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80198e2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80198e6:	e7e6      	b.n	80198b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80198e8:	2000      	movs	r0, #0
 80198ea:	4770      	bx	lr
 80198ec:	2001      	movs	r0, #1
 80198ee:	4770      	bx	lr
 80198f0:	2000dcfc 	.word	0x2000dcfc
 80198f4:	2000dd04 	.word	0x2000dd04
 80198f8:	2000dd00 	.word	0x2000dd00
 80198fc:	2000dce4 	.word	0x2000dce4

08019900 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019900:	4a12      	ldr	r2, [pc, #72]	; (801994c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8019902:	8803      	ldrh	r3, [r0, #0]
 8019904:	8811      	ldrh	r1, [r2, #0]
 8019906:	428b      	cmp	r3, r1
 8019908:	d20b      	bcs.n	8019922 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801990a:	4a11      	ldr	r2, [pc, #68]	; (8019950 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801990c:	6812      	ldr	r2, [r2, #0]
 801990e:	b112      	cbz	r2, 8019916 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019910:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019914:	b9c0      	cbnz	r0, 8019948 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019916:	4a0f      	ldr	r2, [pc, #60]	; (8019954 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019918:	6811      	ldr	r1, [r2, #0]
 801991a:	2214      	movs	r2, #20
 801991c:	4353      	muls	r3, r2
 801991e:	58c8      	ldr	r0, [r1, r3]
 8019920:	4770      	bx	lr
 8019922:	4a0d      	ldr	r2, [pc, #52]	; (8019958 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019924:	8812      	ldrh	r2, [r2, #0]
 8019926:	440a      	add	r2, r1
 8019928:	4293      	cmp	r3, r2
 801992a:	da04      	bge.n	8019936 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801992c:	4a08      	ldr	r2, [pc, #32]	; (8019950 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801992e:	6812      	ldr	r2, [r2, #0]
 8019930:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019934:	4770      	bx	lr
 8019936:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801993a:	4293      	cmp	r3, r2
 801993c:	d103      	bne.n	8019946 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801993e:	4b07      	ldr	r3, [pc, #28]	; (801995c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019940:	681b      	ldr	r3, [r3, #0]
 8019942:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019944:	4770      	bx	lr
 8019946:	2000      	movs	r0, #0
 8019948:	4770      	bx	lr
 801994a:	bf00      	nop
 801994c:	2000dcfc 	.word	0x2000dcfc
 8019950:	2000dce0 	.word	0x2000dce0
 8019954:	2000dd04 	.word	0x2000dd04
 8019958:	2000dd00 	.word	0x2000dd00
 801995c:	2000dc74 	.word	0x2000dc74

08019960 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019960:	4b24      	ldr	r3, [pc, #144]	; (80199f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8019962:	8802      	ldrh	r2, [r0, #0]
 8019964:	8818      	ldrh	r0, [r3, #0]
 8019966:	4282      	cmp	r2, r0
 8019968:	d221      	bcs.n	80199ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801996a:	4b23      	ldr	r3, [pc, #140]	; (80199f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801996c:	6819      	ldr	r1, [r3, #0]
 801996e:	2314      	movs	r3, #20
 8019970:	fb03 1302 	mla	r3, r3, r2, r1
 8019974:	6858      	ldr	r0, [r3, #4]
 8019976:	2800      	cmp	r0, #0
 8019978:	d03a      	beq.n	80199f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801997a:	4920      	ldr	r1, [pc, #128]	; (80199fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801997c:	6809      	ldr	r1, [r1, #0]
 801997e:	2900      	cmp	r1, #0
 8019980:	d036      	beq.n	80199f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019982:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019986:	2900      	cmp	r1, #0
 8019988:	d032      	beq.n	80199f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801998a:	891a      	ldrh	r2, [r3, #8]
 801998c:	8958      	ldrh	r0, [r3, #10]
 801998e:	4350      	muls	r0, r2
 8019990:	7c5a      	ldrb	r2, [r3, #17]
 8019992:	7cdb      	ldrb	r3, [r3, #19]
 8019994:	0952      	lsrs	r2, r2, #5
 8019996:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801999a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801999e:	2b0b      	cmp	r3, #11
 80199a0:	bf18      	it	ne
 80199a2:	0040      	lslne	r0, r0, #1
 80199a4:	3003      	adds	r0, #3
 80199a6:	f020 0003 	bic.w	r0, r0, #3
 80199aa:	4408      	add	r0, r1
 80199ac:	4770      	bx	lr
 80199ae:	4b14      	ldr	r3, [pc, #80]	; (8019a00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80199b0:	881b      	ldrh	r3, [r3, #0]
 80199b2:	4403      	add	r3, r0
 80199b4:	429a      	cmp	r2, r3
 80199b6:	da1a      	bge.n	80199ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80199b8:	4b12      	ldr	r3, [pc, #72]	; (8019a04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80199ba:	681b      	ldr	r3, [r3, #0]
 80199bc:	1a10      	subs	r0, r2, r0
 80199be:	210e      	movs	r1, #14
 80199c0:	fb01 3000 	mla	r0, r1, r0, r3
 80199c4:	7b03      	ldrb	r3, [r0, #12]
 80199c6:	f003 031f 	and.w	r3, r3, #31
 80199ca:	2b0b      	cmp	r3, #11
 80199cc:	d10b      	bne.n	80199e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80199ce:	8903      	ldrh	r3, [r0, #8]
 80199d0:	8940      	ldrh	r0, [r0, #10]
 80199d2:	4358      	muls	r0, r3
 80199d4:	4b09      	ldr	r3, [pc, #36]	; (80199fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80199d6:	6819      	ldr	r1, [r3, #0]
 80199d8:	3003      	adds	r0, #3
 80199da:	f020 0303 	bic.w	r3, r0, #3
 80199de:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80199e2:	4418      	add	r0, r3
 80199e4:	4770      	bx	lr
 80199e6:	2b0d      	cmp	r3, #13
 80199e8:	d101      	bne.n	80199ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80199ea:	300d      	adds	r0, #13
 80199ec:	4770      	bx	lr
 80199ee:	2000      	movs	r0, #0
 80199f0:	4770      	bx	lr
 80199f2:	bf00      	nop
 80199f4:	2000dcfc 	.word	0x2000dcfc
 80199f8:	2000dd04 	.word	0x2000dd04
 80199fc:	2000dce0 	.word	0x2000dce0
 8019a00:	2000dd00 	.word	0x2000dd00
 8019a04:	2000dce4 	.word	0x2000dce4

08019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019a08:	b510      	push	{r4, lr}
 8019a0a:	4a17      	ldr	r2, [pc, #92]	; (8019a68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019a0c:	8803      	ldrh	r3, [r0, #0]
 8019a0e:	8812      	ldrh	r2, [r2, #0]
 8019a10:	4293      	cmp	r3, r2
 8019a12:	d20c      	bcs.n	8019a2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019a14:	4a15      	ldr	r2, [pc, #84]	; (8019a6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019a16:	6812      	ldr	r2, [r2, #0]
 8019a18:	2114      	movs	r1, #20
 8019a1a:	fb01 2303 	mla	r3, r1, r3, r2
 8019a1e:	7c58      	ldrb	r0, [r3, #17]
 8019a20:	0942      	lsrs	r2, r0, #5
 8019a22:	7cd8      	ldrb	r0, [r3, #19]
 8019a24:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019a28:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019a2c:	bd10      	pop	{r4, pc}
 8019a2e:	4910      	ldr	r1, [pc, #64]	; (8019a70 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8019a30:	8809      	ldrh	r1, [r1, #0]
 8019a32:	4411      	add	r1, r2
 8019a34:	428b      	cmp	r3, r1
 8019a36:	da09      	bge.n	8019a4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019a38:	1a9b      	subs	r3, r3, r2
 8019a3a:	4a0e      	ldr	r2, [pc, #56]	; (8019a74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019a3c:	6812      	ldr	r2, [r2, #0]
 8019a3e:	210e      	movs	r1, #14
 8019a40:	fb01 2303 	mla	r3, r1, r3, r2
 8019a44:	7b18      	ldrb	r0, [r3, #12]
 8019a46:	f000 001f 	and.w	r0, r0, #31
 8019a4a:	e7ef      	b.n	8019a2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019a4c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019a50:	4293      	cmp	r3, r2
 8019a52:	d106      	bne.n	8019a62 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019a54:	f7f6 ffea 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8019a58:	6803      	ldr	r3, [r0, #0]
 8019a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019a60:	4718      	bx	r3
 8019a62:	2000      	movs	r0, #0
 8019a64:	e7e2      	b.n	8019a2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019a66:	bf00      	nop
 8019a68:	2000dcfc 	.word	0x2000dcfc
 8019a6c:	2000dd04 	.word	0x2000dd04
 8019a70:	2000dd00 	.word	0x2000dd00
 8019a74:	2000dce4 	.word	0x2000dce4

08019a78 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019a78:	2010      	movs	r0, #16
 8019a7a:	4770      	bx	lr

08019a7c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019a7c:	2000      	movs	r0, #0
 8019a7e:	4770      	bx	lr

08019a80 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019a80:	4b02      	ldr	r3, [pc, #8]	; (8019a8c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8019a82:	8818      	ldrh	r0, [r3, #0]
 8019a84:	0040      	lsls	r0, r0, #1
 8019a86:	b280      	uxth	r0, r0
 8019a88:	4770      	bx	lr
 8019a8a:	bf00      	nop
 8019a8c:	2000dc6e 	.word	0x2000dc6e

08019a90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019a90:	2bff      	cmp	r3, #255	; 0xff
 8019a92:	d050      	beq.n	8019b36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019a94:	2a0b      	cmp	r2, #11
 8019a96:	d04a      	beq.n	8019b2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019a98:	d80e      	bhi.n	8019ab8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019a9a:	2a03      	cmp	r2, #3
 8019a9c:	d03f      	beq.n	8019b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019a9e:	d804      	bhi.n	8019aaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019aa0:	2a01      	cmp	r2, #1
 8019aa2:	d03e      	beq.n	8019b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019aa4:	d93f      	bls.n	8019b26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019aa6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019aa8:	4770      	bx	lr
 8019aaa:	2a09      	cmp	r2, #9
 8019aac:	d03f      	beq.n	8019b2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019aae:	d83c      	bhi.n	8019b2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019ab0:	2a08      	cmp	r2, #8
 8019ab2:	d03a      	beq.n	8019b2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019ab4:	2000      	movs	r0, #0
 8019ab6:	4770      	bx	lr
 8019ab8:	2a2f      	cmp	r2, #47	; 0x2f
 8019aba:	d024      	beq.n	8019b06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019abc:	d80d      	bhi.n	8019ada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019abe:	2a2d      	cmp	r2, #45	; 0x2d
 8019ac0:	d014      	beq.n	8019aec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019ac2:	d826      	bhi.n	8019b12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019ac4:	2a2c      	cmp	r2, #44	; 0x2c
 8019ac6:	d1f5      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ac8:	684b      	ldr	r3, [r1, #4]
 8019aca:	781b      	ldrb	r3, [r3, #0]
 8019acc:	2b01      	cmp	r3, #1
 8019ace:	d018      	beq.n	8019b02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019ad0:	d323      	bcc.n	8019b1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019ad2:	2b02      	cmp	r3, #2
 8019ad4:	d1ee      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ad6:	6880      	ldr	r0, [r0, #8]
 8019ad8:	4770      	bx	lr
 8019ada:	2a31      	cmp	r2, #49	; 0x31
 8019adc:	d004      	beq.n	8019ae8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019ade:	d328      	bcc.n	8019b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019ae0:	2a32      	cmp	r2, #50	; 0x32
 8019ae2:	d026      	beq.n	8019b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019ae4:	2a33      	cmp	r2, #51	; 0x33
 8019ae6:	d1e5      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ae8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019aea:	4770      	bx	lr
 8019aec:	684b      	ldr	r3, [r1, #4]
 8019aee:	781b      	ldrb	r3, [r3, #0]
 8019af0:	2b01      	cmp	r3, #1
 8019af2:	d004      	beq.n	8019afe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019af4:	d30b      	bcc.n	8019b0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019af6:	2b02      	cmp	r3, #2
 8019af8:	d1dc      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019afa:	6900      	ldr	r0, [r0, #16]
 8019afc:	4770      	bx	lr
 8019afe:	6a00      	ldr	r0, [r0, #32]
 8019b00:	4770      	bx	lr
 8019b02:	6980      	ldr	r0, [r0, #24]
 8019b04:	4770      	bx	lr
 8019b06:	684b      	ldr	r3, [r1, #4]
 8019b08:	781b      	ldrb	r3, [r3, #0]
 8019b0a:	2b00      	cmp	r3, #0
 8019b0c:	d1d2      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b0e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019b10:	4770      	bx	lr
 8019b12:	684b      	ldr	r3, [r1, #4]
 8019b14:	781b      	ldrb	r3, [r3, #0]
 8019b16:	2b00      	cmp	r3, #0
 8019b18:	d1cc      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b1a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019b1c:	4770      	bx	lr
 8019b1e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019b20:	4770      	bx	lr
 8019b22:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019b24:	4770      	bx	lr
 8019b26:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019b28:	4770      	bx	lr
 8019b2a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019b2c:	4770      	bx	lr
 8019b2e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019b30:	4770      	bx	lr
 8019b32:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019b34:	4770      	bx	lr
 8019b36:	2a0b      	cmp	r2, #11
 8019b38:	d049      	beq.n	8019bce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019b3a:	d80e      	bhi.n	8019b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019b3c:	2a03      	cmp	r2, #3
 8019b3e:	d040      	beq.n	8019bc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019b40:	d804      	bhi.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019b42:	2a01      	cmp	r2, #1
 8019b44:	d03f      	beq.n	8019bc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019b46:	d940      	bls.n	8019bca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019b48:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019b4a:	4770      	bx	lr
 8019b4c:	2a09      	cmp	r2, #9
 8019b4e:	d03e      	beq.n	8019bce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019b50:	d801      	bhi.n	8019b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019b52:	2a08      	cmp	r2, #8
 8019b54:	d1ae      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b56:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019b58:	4770      	bx	lr
 8019b5a:	2a2f      	cmp	r2, #47	; 0x2f
 8019b5c:	d024      	beq.n	8019ba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019b5e:	d80d      	bhi.n	8019b7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019b60:	2a2d      	cmp	r2, #45	; 0x2d
 8019b62:	d014      	beq.n	8019b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019b64:	d826      	bhi.n	8019bb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019b66:	2a2c      	cmp	r2, #44	; 0x2c
 8019b68:	d1a4      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b6a:	684b      	ldr	r3, [r1, #4]
 8019b6c:	781b      	ldrb	r3, [r3, #0]
 8019b6e:	2b01      	cmp	r3, #1
 8019b70:	d018      	beq.n	8019ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019b72:	d324      	bcc.n	8019bbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019b74:	2b02      	cmp	r3, #2
 8019b76:	d19d      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b78:	68c0      	ldr	r0, [r0, #12]
 8019b7a:	4770      	bx	lr
 8019b7c:	2a31      	cmp	r2, #49	; 0x31
 8019b7e:	d004      	beq.n	8019b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019b80:	d327      	bcc.n	8019bd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b82:	2a32      	cmp	r2, #50	; 0x32
 8019b84:	d025      	beq.n	8019bd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b86:	2a33      	cmp	r2, #51	; 0x33
 8019b88:	d194      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b8a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019b8c:	4770      	bx	lr
 8019b8e:	684b      	ldr	r3, [r1, #4]
 8019b90:	781b      	ldrb	r3, [r3, #0]
 8019b92:	2b01      	cmp	r3, #1
 8019b94:	d004      	beq.n	8019ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019b96:	d30b      	bcc.n	8019bb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019b98:	2b02      	cmp	r3, #2
 8019b9a:	d18b      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b9c:	6940      	ldr	r0, [r0, #20]
 8019b9e:	4770      	bx	lr
 8019ba0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019ba2:	4770      	bx	lr
 8019ba4:	69c0      	ldr	r0, [r0, #28]
 8019ba6:	4770      	bx	lr
 8019ba8:	684b      	ldr	r3, [r1, #4]
 8019baa:	781b      	ldrb	r3, [r3, #0]
 8019bac:	2b00      	cmp	r3, #0
 8019bae:	d181      	bne.n	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bb0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019bb2:	4770      	bx	lr
 8019bb4:	684b      	ldr	r3, [r1, #4]
 8019bb6:	781b      	ldrb	r3, [r3, #0]
 8019bb8:	2b00      	cmp	r3, #0
 8019bba:	f47f af7b 	bne.w	8019ab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bbe:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019bc0:	4770      	bx	lr
 8019bc2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019bc4:	4770      	bx	lr
 8019bc6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019bc8:	4770      	bx	lr
 8019bca:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019bcc:	4770      	bx	lr
 8019bce:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019bd0:	4770      	bx	lr
 8019bd2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019bd4:	4770      	bx	lr

08019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bda:	b087      	sub	sp, #28
 8019bdc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019bde:	9205      	str	r2, [sp, #20]
 8019be0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019be4:	9202      	str	r2, [sp, #8]
 8019be6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019bea:	9101      	str	r1, [sp, #4]
 8019bec:	6841      	ldr	r1, [r0, #4]
 8019bee:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019bf2:	fb01 2404 	mla	r4, r1, r4, r2
 8019bf6:	6802      	ldr	r2, [r0, #0]
 8019bf8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019bfc:	f8de 2000 	ldr.w	r2, [lr]
 8019c00:	9203      	str	r2, [sp, #12]
 8019c02:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019c06:	3204      	adds	r2, #4
 8019c08:	9204      	str	r2, [sp, #16]
 8019c0a:	9a02      	ldr	r2, [sp, #8]
 8019c0c:	43d6      	mvns	r6, r2
 8019c0e:	b2f6      	uxtb	r6, r6
 8019c10:	9a01      	ldr	r2, [sp, #4]
 8019c12:	2a00      	cmp	r2, #0
 8019c14:	dc03      	bgt.n	8019c1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019c16:	9a05      	ldr	r2, [sp, #20]
 8019c18:	2a00      	cmp	r2, #0
 8019c1a:	f340 8129 	ble.w	8019e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019c1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019c20:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019c24:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019c28:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c2e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c32:	2b00      	cmp	r3, #0
 8019c34:	dd0e      	ble.n	8019c54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019c36:	1408      	asrs	r0, r1, #16
 8019c38:	d405      	bmi.n	8019c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019c3a:	4560      	cmp	r0, ip
 8019c3c:	da03      	bge.n	8019c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019c3e:	1410      	asrs	r0, r2, #16
 8019c40:	d401      	bmi.n	8019c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019c42:	42b8      	cmp	r0, r7
 8019c44:	db07      	blt.n	8019c56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019c46:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c48:	4401      	add	r1, r0
 8019c4a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019c4c:	3b01      	subs	r3, #1
 8019c4e:	4402      	add	r2, r0
 8019c50:	3402      	adds	r4, #2
 8019c52:	e7ee      	b.n	8019c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019c54:	d071      	beq.n	8019d3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019c56:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c58:	1e58      	subs	r0, r3, #1
 8019c5a:	fb05 1500 	mla	r5, r5, r0, r1
 8019c5e:	142d      	asrs	r5, r5, #16
 8019c60:	d45f      	bmi.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c62:	4565      	cmp	r5, ip
 8019c64:	da5d      	bge.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c68:	fb05 2000 	mla	r0, r5, r0, r2
 8019c6c:	1400      	asrs	r0, r0, #16
 8019c6e:	d458      	bmi.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c70:	42b8      	cmp	r0, r7
 8019c72:	da56      	bge.n	8019d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c74:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019c78:	4699      	mov	r9, r3
 8019c7a:	46a2      	mov	sl, r4
 8019c7c:	f1b9 0f00 	cmp.w	r9, #0
 8019c80:	dd57      	ble.n	8019d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019c82:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019c86:	9803      	ldr	r0, [sp, #12]
 8019c88:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019c8c:	140d      	asrs	r5, r1, #16
 8019c8e:	fb07 000c 	mla	r0, r7, ip, r0
 8019c92:	f109 39ff 	add.w	r9, r9, #4294967295
 8019c96:	5d40      	ldrb	r0, [r0, r5]
 8019c98:	9d04      	ldr	r5, [sp, #16]
 8019c9a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c9e:	f8ba 5000 	ldrh.w	r5, [sl]
 8019ca2:	122f      	asrs	r7, r5, #8
 8019ca4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ca8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cac:	fb17 f706 	smulbb	r7, r7, r6
 8019cb0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019cb4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019cb8:	00ed      	lsls	r5, r5, #3
 8019cba:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019cbe:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019cc2:	10c7      	asrs	r7, r0, #3
 8019cc4:	b2ed      	uxtb	r5, r5
 8019cc6:	00c0      	lsls	r0, r0, #3
 8019cc8:	fb18 f806 	smulbb	r8, r8, r6
 8019ccc:	fb15 f506 	smulbb	r5, r5, r6
 8019cd0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cd4:	b2c0      	uxtb	r0, r0
 8019cd6:	fa1f fc8c 	uxth.w	ip, ip
 8019cda:	fb07 870b 	mla	r7, r7, fp, r8
 8019cde:	fb00 500b 	mla	r0, r0, fp, r5
 8019ce2:	b280      	uxth	r0, r0
 8019ce4:	b2bf      	uxth	r7, r7
 8019ce6:	f10c 0501 	add.w	r5, ip, #1
 8019cea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019cee:	f107 0801 	add.w	r8, r7, #1
 8019cf2:	1c45      	adds	r5, r0, #1
 8019cf4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019cf8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019cfc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019cfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d06:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019d0a:	ea45 0c0c 	orr.w	ip, r5, ip
 8019d0e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019d12:	4401      	add	r1, r0
 8019d14:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019d16:	ea4c 0c08 	orr.w	ip, ip, r8
 8019d1a:	f82a cb02 	strh.w	ip, [sl], #2
 8019d1e:	4402      	add	r2, r0
 8019d20:	e7ac      	b.n	8019c7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019d22:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019d26:	f04f 0800 	mov.w	r8, #0
 8019d2a:	eb03 0008 	add.w	r0, r3, r8
 8019d2e:	2800      	cmp	r0, #0
 8019d30:	dc41      	bgt.n	8019db6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019d32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d3a:	9b01      	ldr	r3, [sp, #4]
 8019d3c:	2b00      	cmp	r3, #0
 8019d3e:	f340 8097 	ble.w	8019e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019d42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d54:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d5c:	eef0 6a62 	vmov.f32	s13, s5
 8019d60:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d68:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d6c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019d70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d74:	eef0 6a43 	vmov.f32	s13, s6
 8019d78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d7c:	ee12 2a90 	vmov	r2, s5
 8019d80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d84:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d88:	ee13 2a10 	vmov	r2, s6
 8019d8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d94:	9314      	str	r3, [sp, #80]	; 0x50
 8019d96:	9b01      	ldr	r3, [sp, #4]
 8019d98:	9a05      	ldr	r2, [sp, #20]
 8019d9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d9e:	3b01      	subs	r3, #1
 8019da0:	9301      	str	r3, [sp, #4]
 8019da2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019da6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019da8:	eeb0 3a67 	vmov.f32	s6, s15
 8019dac:	bf08      	it	eq
 8019dae:	4613      	moveq	r3, r2
 8019db0:	eef0 2a47 	vmov.f32	s5, s14
 8019db4:	e72c      	b.n	8019c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019db6:	140f      	asrs	r7, r1, #16
 8019db8:	d453      	bmi.n	8019e62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019dba:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019dbe:	42bd      	cmp	r5, r7
 8019dc0:	dd4f      	ble.n	8019e62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019dc2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019dc6:	d44c      	bmi.n	8019e62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019dc8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019dcc:	4560      	cmp	r0, ip
 8019dce:	dd48      	ble.n	8019e62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019dd0:	9803      	ldr	r0, [sp, #12]
 8019dd2:	b22d      	sxth	r5, r5
 8019dd4:	fb0c 0505 	mla	r5, ip, r5, r0
 8019dd8:	5de8      	ldrb	r0, [r5, r7]
 8019dda:	9d04      	ldr	r5, [sp, #16]
 8019ddc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019de0:	f06f 0501 	mvn.w	r5, #1
 8019de4:	fb05 fb08 	mul.w	fp, r5, r8
 8019de8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019dec:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019df0:	122f      	asrs	r7, r5, #8
 8019df2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019df6:	fb17 f706 	smulbb	r7, r7, r6
 8019dfa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019dfe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e02:	00ed      	lsls	r5, r5, #3
 8019e04:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019e08:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019e0c:	10c7      	asrs	r7, r0, #3
 8019e0e:	b2ed      	uxtb	r5, r5
 8019e10:	00c0      	lsls	r0, r0, #3
 8019e12:	fb19 f906 	smulbb	r9, r9, r6
 8019e16:	fb15 f506 	smulbb	r5, r5, r6
 8019e1a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e1e:	b2c0      	uxtb	r0, r0
 8019e20:	fa1f fc8c 	uxth.w	ip, ip
 8019e24:	fb07 970a 	mla	r7, r7, sl, r9
 8019e28:	fb00 500a 	mla	r0, r0, sl, r5
 8019e2c:	b2bf      	uxth	r7, r7
 8019e2e:	b280      	uxth	r0, r0
 8019e30:	f10c 0501 	add.w	r5, ip, #1
 8019e34:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019e38:	f107 0901 	add.w	r9, r7, #1
 8019e3c:	1c45      	adds	r5, r0, #1
 8019e3e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019e42:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019e46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e4a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019e4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019e52:	ea45 0c0c 	orr.w	ip, r5, ip
 8019e56:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019e5a:	ea4c 0c09 	orr.w	ip, ip, r9
 8019e5e:	f824 c00b 	strh.w	ip, [r4, fp]
 8019e62:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e64:	4401      	add	r1, r0
 8019e66:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019e68:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e6c:	4402      	add	r2, r0
 8019e6e:	e75c      	b.n	8019d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019e70:	b007      	add	sp, #28
 8019e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e7a:	b085      	sub	sp, #20
 8019e7c:	4693      	mov	fp, r2
 8019e7e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e80:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e82:	6870      	ldr	r0, [r6, #4]
 8019e84:	9100      	str	r1, [sp, #0]
 8019e86:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e8a:	fb00 2404 	mla	r4, r0, r4, r2
 8019e8e:	6832      	ldr	r2, [r6, #0]
 8019e90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e94:	682a      	ldr	r2, [r5, #0]
 8019e96:	9201      	str	r2, [sp, #4]
 8019e98:	686a      	ldr	r2, [r5, #4]
 8019e9a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019e9e:	3204      	adds	r2, #4
 8019ea0:	9202      	str	r2, [sp, #8]
 8019ea2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ea6:	9a00      	ldr	r2, [sp, #0]
 8019ea8:	2a00      	cmp	r2, #0
 8019eaa:	dc03      	bgt.n	8019eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019eac:	f1bb 0f00 	cmp.w	fp, #0
 8019eb0:	f340 80a0 	ble.w	8019ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019eb4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019eb6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019eba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019ebe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019ec2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ec4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ec8:	2b00      	cmp	r3, #0
 8019eca:	dd0c      	ble.n	8019ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ecc:	1406      	asrs	r6, r0, #16
 8019ece:	d405      	bmi.n	8019edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ed0:	454e      	cmp	r6, r9
 8019ed2:	da03      	bge.n	8019edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ed4:	1416      	asrs	r6, r2, #16
 8019ed6:	d401      	bmi.n	8019edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ed8:	4546      	cmp	r6, r8
 8019eda:	db05      	blt.n	8019ee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019edc:	4470      	add	r0, lr
 8019ede:	4462      	add	r2, ip
 8019ee0:	3b01      	subs	r3, #1
 8019ee2:	3402      	adds	r4, #2
 8019ee4:	e7f0      	b.n	8019ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019ee6:	d00f      	beq.n	8019f08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ee8:	1e5e      	subs	r6, r3, #1
 8019eea:	fb0e 0706 	mla	r7, lr, r6, r0
 8019eee:	143f      	asrs	r7, r7, #16
 8019ef0:	d541      	bpl.n	8019f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019ef2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019ef6:	4698      	mov	r8, r3
 8019ef8:	9603      	str	r6, [sp, #12]
 8019efa:	f1b8 0f00 	cmp.w	r8, #0
 8019efe:	dc59      	bgt.n	8019fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f08:	9b00      	ldr	r3, [sp, #0]
 8019f0a:	2b00      	cmp	r3, #0
 8019f0c:	dd72      	ble.n	8019ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019f0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f24:	eeb0 6a62 	vmov.f32	s12, s5
 8019f28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f34:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f3c:	eeb0 6a43 	vmov.f32	s12, s6
 8019f40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f44:	ee12 2a90 	vmov	r2, s5
 8019f48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f4c:	fb92 fef3 	sdiv	lr, r2, r3
 8019f50:	ee13 2a10 	vmov	r2, s6
 8019f54:	fb92 fcf3 	sdiv	ip, r2, r3
 8019f58:	9b00      	ldr	r3, [sp, #0]
 8019f5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f5e:	3b01      	subs	r3, #1
 8019f60:	9300      	str	r3, [sp, #0]
 8019f62:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019f66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f68:	eeb0 3a67 	vmov.f32	s6, s15
 8019f6c:	bf08      	it	eq
 8019f6e:	465b      	moveq	r3, fp
 8019f70:	eef0 2a47 	vmov.f32	s5, s14
 8019f74:	e797      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019f76:	454f      	cmp	r7, r9
 8019f78:	dabb      	bge.n	8019ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f7a:	fb0c 2606 	mla	r6, ip, r6, r2
 8019f7e:	1436      	asrs	r6, r6, #16
 8019f80:	d4b7      	bmi.n	8019ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f82:	4546      	cmp	r6, r8
 8019f84:	dab5      	bge.n	8019ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f86:	461e      	mov	r6, r3
 8019f88:	46a0      	mov	r8, r4
 8019f8a:	2e00      	cmp	r6, #0
 8019f8c:	ddb8      	ble.n	8019f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019f8e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019f92:	9901      	ldr	r1, [sp, #4]
 8019f94:	1417      	asrs	r7, r2, #16
 8019f96:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019f9a:	fb0a 1707 	mla	r7, sl, r7, r1
 8019f9e:	9902      	ldr	r1, [sp, #8]
 8019fa0:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019fa4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019fa8:	f828 7b02 	strh.w	r7, [r8], #2
 8019fac:	4470      	add	r0, lr
 8019fae:	4462      	add	r2, ip
 8019fb0:	3e01      	subs	r6, #1
 8019fb2:	e7ea      	b.n	8019f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019fb4:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019fb8:	d417      	bmi.n	8019fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019fba:	68ae      	ldr	r6, [r5, #8]
 8019fbc:	454e      	cmp	r6, r9
 8019fbe:	dd14      	ble.n	8019fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019fc0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019fc4:	d411      	bmi.n	8019fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019fc6:	68ef      	ldr	r7, [r5, #12]
 8019fc8:	4557      	cmp	r7, sl
 8019fca:	dd0e      	ble.n	8019fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019fcc:	9f01      	ldr	r7, [sp, #4]
 8019fce:	b236      	sxth	r6, r6
 8019fd0:	fb0a 7606 	mla	r6, sl, r6, r7
 8019fd4:	9f02      	ldr	r7, [sp, #8]
 8019fd6:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019fda:	f06f 0101 	mvn.w	r1, #1
 8019fde:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019fe2:	fb01 f608 	mul.w	r6, r1, r8
 8019fe6:	9903      	ldr	r1, [sp, #12]
 8019fe8:	538f      	strh	r7, [r1, r6]
 8019fea:	4470      	add	r0, lr
 8019fec:	4462      	add	r2, ip
 8019fee:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ff2:	e782      	b.n	8019efa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019ff4:	b005      	add	sp, #20
 8019ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ffa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ffe:	b087      	sub	sp, #28
 801a000:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a002:	9205      	str	r2, [sp, #20]
 801a004:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a008:	9203      	str	r2, [sp, #12]
 801a00a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a00e:	9102      	str	r1, [sp, #8]
 801a010:	6861      	ldr	r1, [r4, #4]
 801a012:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a016:	fb01 2000 	mla	r0, r1, r0, r2
 801a01a:	6822      	ldr	r2, [r4, #0]
 801a01c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a020:	9200      	str	r2, [sp, #0]
 801a022:	f8dc 2000 	ldr.w	r2, [ip]
 801a026:	9204      	str	r2, [sp, #16]
 801a028:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a02c:	3204      	adds	r2, #4
 801a02e:	9201      	str	r2, [sp, #4]
 801a030:	9a03      	ldr	r2, [sp, #12]
 801a032:	43d5      	mvns	r5, r2
 801a034:	b2ed      	uxtb	r5, r5
 801a036:	9a02      	ldr	r2, [sp, #8]
 801a038:	2a00      	cmp	r2, #0
 801a03a:	dc03      	bgt.n	801a044 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a03c:	9a05      	ldr	r2, [sp, #20]
 801a03e:	2a00      	cmp	r2, #0
 801a040:	f340 812c 	ble.w	801a29c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a044:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a046:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a04a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a04e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a052:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a054:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a058:	2b00      	cmp	r3, #0
 801a05a:	dd10      	ble.n	801a07e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a05c:	140c      	asrs	r4, r1, #16
 801a05e:	d405      	bmi.n	801a06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a060:	4574      	cmp	r4, lr
 801a062:	da03      	bge.n	801a06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a064:	1414      	asrs	r4, r2, #16
 801a066:	d401      	bmi.n	801a06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a068:	42bc      	cmp	r4, r7
 801a06a:	db09      	blt.n	801a080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a06c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a06e:	9800      	ldr	r0, [sp, #0]
 801a070:	4421      	add	r1, r4
 801a072:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a074:	3002      	adds	r0, #2
 801a076:	4422      	add	r2, r4
 801a078:	3b01      	subs	r3, #1
 801a07a:	9000      	str	r0, [sp, #0]
 801a07c:	e7ec      	b.n	801a058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a07e:	d071      	beq.n	801a164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a080:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a082:	1e5c      	subs	r4, r3, #1
 801a084:	fb06 1604 	mla	r6, r6, r4, r1
 801a088:	1436      	asrs	r6, r6, #16
 801a08a:	d45d      	bmi.n	801a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a08c:	4576      	cmp	r6, lr
 801a08e:	da5b      	bge.n	801a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a090:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a092:	fb06 2404 	mla	r4, r6, r4, r2
 801a096:	1424      	asrs	r4, r4, #16
 801a098:	d456      	bmi.n	801a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a09a:	42bc      	cmp	r4, r7
 801a09c:	da54      	bge.n	801a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a09e:	f8dd 9000 	ldr.w	r9, [sp]
 801a0a2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a0a6:	4698      	mov	r8, r3
 801a0a8:	f1b8 0f00 	cmp.w	r8, #0
 801a0ac:	dd54      	ble.n	801a158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a0ae:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a0b2:	9804      	ldr	r0, [sp, #16]
 801a0b4:	1414      	asrs	r4, r2, #16
 801a0b6:	fb07 0404 	mla	r4, r7, r4, r0
 801a0ba:	140e      	asrs	r6, r1, #16
 801a0bc:	9801      	ldr	r0, [sp, #4]
 801a0be:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a0c2:	f8b9 4000 	ldrh.w	r4, [r9]
 801a0c6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a0ca:	eb00 0b0e 	add.w	fp, r0, lr
 801a0ce:	1227      	asrs	r7, r4, #8
 801a0d0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a0d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a0d8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a0dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a0de:	fb16 f60a 	smulbb	r6, r6, sl
 801a0e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0e6:	fb07 6705 	mla	r7, r7, r5, r6
 801a0ea:	10e6      	asrs	r6, r4, #3
 801a0ec:	00e4      	lsls	r4, r4, #3
 801a0ee:	b2e4      	uxtb	r4, r4
 801a0f0:	fb1b fb0a 	smulbb	fp, fp, sl
 801a0f4:	fb14 f405 	smulbb	r4, r4, r5
 801a0f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a0fc:	b2bf      	uxth	r7, r7
 801a0fe:	fb06 b605 	mla	r6, r6, r5, fp
 801a102:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a106:	b2b6      	uxth	r6, r6
 801a108:	fa1f fe8e 	uxth.w	lr, lr
 801a10c:	1c7c      	adds	r4, r7, #1
 801a10e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a112:	f106 0b01 	add.w	fp, r6, #1
 801a116:	f10e 0401 	add.w	r4, lr, #1
 801a11a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a11e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a122:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a126:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a12a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a12e:	4327      	orrs	r7, r4
 801a130:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a134:	4401      	add	r1, r0
 801a136:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a138:	ea47 070b 	orr.w	r7, r7, fp
 801a13c:	f829 7b02 	strh.w	r7, [r9], #2
 801a140:	4402      	add	r2, r0
 801a142:	f108 38ff 	add.w	r8, r8, #4294967295
 801a146:	e7af      	b.n	801a0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a148:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a14c:	f04f 0e00 	mov.w	lr, #0
 801a150:	eb03 040e 	add.w	r4, r3, lr
 801a154:	2c00      	cmp	r4, #0
 801a156:	dc43      	bgt.n	801a1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a158:	9a00      	ldr	r2, [sp, #0]
 801a15a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a15e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a162:	9300      	str	r3, [sp, #0]
 801a164:	9b02      	ldr	r3, [sp, #8]
 801a166:	2b00      	cmp	r3, #0
 801a168:	f340 8098 	ble.w	801a29c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a16c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a170:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a174:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a178:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a17a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a17e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a182:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a186:	eef0 6a62 	vmov.f32	s13, s5
 801a18a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a18e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a192:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a196:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a19a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a19e:	eef0 6a43 	vmov.f32	s13, s6
 801a1a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1a6:	ee12 2a90 	vmov	r2, s5
 801a1aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b2:	ee13 2a10 	vmov	r2, s6
 801a1b6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a1b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1be:	9314      	str	r3, [sp, #80]	; 0x50
 801a1c0:	9b02      	ldr	r3, [sp, #8]
 801a1c2:	9a05      	ldr	r2, [sp, #20]
 801a1c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1c8:	3b01      	subs	r3, #1
 801a1ca:	9302      	str	r3, [sp, #8]
 801a1cc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a1d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1d2:	eeb0 3a67 	vmov.f32	s6, s15
 801a1d6:	bf08      	it	eq
 801a1d8:	4613      	moveq	r3, r2
 801a1da:	eef0 2a47 	vmov.f32	s5, s14
 801a1de:	e72a      	b.n	801a036 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a1e0:	140f      	asrs	r7, r1, #16
 801a1e2:	d454      	bmi.n	801a28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1e4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a1e8:	42be      	cmp	r6, r7
 801a1ea:	dd50      	ble.n	801a28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1ec:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a1f0:	d44d      	bmi.n	801a28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1f2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a1f6:	4544      	cmp	r4, r8
 801a1f8:	dd49      	ble.n	801a28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a1fa:	9c04      	ldr	r4, [sp, #16]
 801a1fc:	b236      	sxth	r6, r6
 801a1fe:	fb08 4606 	mla	r6, r8, r6, r4
 801a202:	f06f 0001 	mvn.w	r0, #1
 801a206:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a20a:	9c01      	ldr	r4, [sp, #4]
 801a20c:	fb00 fa0e 	mul.w	sl, r0, lr
 801a210:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a214:	9800      	ldr	r0, [sp, #0]
 801a216:	eb04 0b08 	add.w	fp, r4, r8
 801a21a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a21e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a222:	9801      	ldr	r0, [sp, #4]
 801a224:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a228:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a22c:	9800      	ldr	r0, [sp, #0]
 801a22e:	1227      	asrs	r7, r4, #8
 801a230:	fb16 f609 	smulbb	r6, r6, r9
 801a234:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a238:	fb07 6705 	mla	r7, r7, r5, r6
 801a23c:	10e6      	asrs	r6, r4, #3
 801a23e:	00e4      	lsls	r4, r4, #3
 801a240:	b2e4      	uxtb	r4, r4
 801a242:	fb1b fb09 	smulbb	fp, fp, r9
 801a246:	fb14 f405 	smulbb	r4, r4, r5
 801a24a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a24e:	b2bf      	uxth	r7, r7
 801a250:	fb06 b605 	mla	r6, r6, r5, fp
 801a254:	fb08 4809 	mla	r8, r8, r9, r4
 801a258:	b2b6      	uxth	r6, r6
 801a25a:	fa1f f888 	uxth.w	r8, r8
 801a25e:	1c7c      	adds	r4, r7, #1
 801a260:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a264:	f106 0b01 	add.w	fp, r6, #1
 801a268:	f108 0401 	add.w	r4, r8, #1
 801a26c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a270:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a274:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a278:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a27c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a280:	4327      	orrs	r7, r4
 801a282:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a286:	ea47 070b 	orr.w	r7, r7, fp
 801a28a:	f820 700a 	strh.w	r7, [r0, sl]
 801a28e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a290:	4401      	add	r1, r0
 801a292:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a294:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a298:	4402      	add	r2, r0
 801a29a:	e759      	b.n	801a150 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a29c:	b007      	add	sp, #28
 801a29e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2a8:	b085      	sub	sp, #20
 801a2aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2ae:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a2b0:	9203      	str	r2, [sp, #12]
 801a2b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a2b6:	6870      	ldr	r0, [r6, #4]
 801a2b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a2ba:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a2be:	686f      	ldr	r7, [r5, #4]
 801a2c0:	9101      	str	r1, [sp, #4]
 801a2c2:	fb00 2404 	mla	r4, r0, r4, r2
 801a2c6:	6832      	ldr	r2, [r6, #0]
 801a2c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a2cc:	682a      	ldr	r2, [r5, #0]
 801a2ce:	9202      	str	r2, [sp, #8]
 801a2d0:	3704      	adds	r7, #4
 801a2d2:	9a01      	ldr	r2, [sp, #4]
 801a2d4:	2a00      	cmp	r2, #0
 801a2d6:	dc03      	bgt.n	801a2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a2d8:	9a03      	ldr	r2, [sp, #12]
 801a2da:	2a00      	cmp	r2, #0
 801a2dc:	f340 80cc 	ble.w	801a478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a2e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a2e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a2e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a2ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a2ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a2f4:	2b00      	cmp	r3, #0
 801a2f6:	dd0d      	ble.n	801a314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a2f8:	1406      	asrs	r6, r0, #16
 801a2fa:	d405      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a2fc:	454e      	cmp	r6, r9
 801a2fe:	da03      	bge.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a300:	1416      	asrs	r6, r2, #16
 801a302:	d401      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a304:	4546      	cmp	r6, r8
 801a306:	db06      	blt.n	801a316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a308:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a30a:	4460      	add	r0, ip
 801a30c:	4432      	add	r2, r6
 801a30e:	3b01      	subs	r3, #1
 801a310:	3402      	adds	r4, #2
 801a312:	e7ef      	b.n	801a2f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a314:	d00f      	beq.n	801a336 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a316:	1e5e      	subs	r6, r3, #1
 801a318:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a31c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a320:	d543      	bpl.n	801a3aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a322:	4698      	mov	r8, r3
 801a324:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a328:	f1b8 0f00 	cmp.w	r8, #0
 801a32c:	dc71      	bgt.n	801a412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a32e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a332:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a336:	9b01      	ldr	r3, [sp, #4]
 801a338:	2b00      	cmp	r3, #0
 801a33a:	f340 809d 	ble.w	801a478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a33e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a342:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a346:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a34a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a34c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a350:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a354:	eeb0 6a62 	vmov.f32	s12, s5
 801a358:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a35c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a360:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a364:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a368:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a36c:	eeb0 6a43 	vmov.f32	s12, s6
 801a370:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a374:	ee12 2a90 	vmov	r2, s5
 801a378:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a37c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a380:	ee13 2a10 	vmov	r2, s6
 801a384:	fb92 f3f3 	sdiv	r3, r2, r3
 801a388:	9312      	str	r3, [sp, #72]	; 0x48
 801a38a:	9b01      	ldr	r3, [sp, #4]
 801a38c:	9a03      	ldr	r2, [sp, #12]
 801a38e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a392:	3b01      	subs	r3, #1
 801a394:	9301      	str	r3, [sp, #4]
 801a396:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a39a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a39c:	eeb0 3a67 	vmov.f32	s6, s15
 801a3a0:	bf08      	it	eq
 801a3a2:	4613      	moveq	r3, r2
 801a3a4:	eef0 2a47 	vmov.f32	s5, s14
 801a3a8:	e793      	b.n	801a2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a3aa:	45ce      	cmp	lr, r9
 801a3ac:	dab9      	bge.n	801a322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a3ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a3b0:	fb01 2606 	mla	r6, r1, r6, r2
 801a3b4:	1436      	asrs	r6, r6, #16
 801a3b6:	d4b4      	bmi.n	801a322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a3b8:	4546      	cmp	r6, r8
 801a3ba:	dab2      	bge.n	801a322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a3bc:	4698      	mov	r8, r3
 801a3be:	46a2      	mov	sl, r4
 801a3c0:	f1b8 0f00 	cmp.w	r8, #0
 801a3c4:	ddb3      	ble.n	801a32e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a3c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a3ca:	9902      	ldr	r1, [sp, #8]
 801a3cc:	1416      	asrs	r6, r2, #16
 801a3ce:	fb09 1606 	mla	r6, r9, r6, r1
 801a3d2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a3d6:	492a      	ldr	r1, [pc, #168]	; (801a480 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a3d8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a3dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a3e0:	eb07 0b0e 	add.w	fp, r7, lr
 801a3e4:	4460      	add	r0, ip
 801a3e6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a3ea:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a3ee:	00f6      	lsls	r6, r6, #3
 801a3f0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a3f4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a3f8:	ea49 0606 	orr.w	r6, r9, r6
 801a3fc:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a400:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a402:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a406:	f82a 6b02 	strh.w	r6, [sl], #2
 801a40a:	440a      	add	r2, r1
 801a40c:	f108 38ff 	add.w	r8, r8, #4294967295
 801a410:	e7d6      	b.n	801a3c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a412:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a416:	d429      	bmi.n	801a46c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a418:	68ae      	ldr	r6, [r5, #8]
 801a41a:	454e      	cmp	r6, r9
 801a41c:	dd26      	ble.n	801a46c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a41e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a422:	d423      	bmi.n	801a46c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a424:	68e9      	ldr	r1, [r5, #12]
 801a426:	4559      	cmp	r1, fp
 801a428:	dd20      	ble.n	801a46c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a42a:	9902      	ldr	r1, [sp, #8]
 801a42c:	fa0f fe86 	sxth.w	lr, r6
 801a430:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a434:	f06f 0101 	mvn.w	r1, #1
 801a438:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a43c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a440:	eb07 060e 	add.w	r6, r7, lr
 801a444:	fb01 f908 	mul.w	r9, r1, r8
 801a448:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a44c:	7876      	ldrb	r6, [r6, #1]
 801a44e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a452:	00f6      	lsls	r6, r6, #3
 801a454:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a458:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a45c:	ea4b 0606 	orr.w	r6, fp, r6
 801a460:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a464:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a468:	f82a 6009 	strh.w	r6, [sl, r9]
 801a46c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a46e:	4460      	add	r0, ip
 801a470:	440a      	add	r2, r1
 801a472:	f108 38ff 	add.w	r8, r8, #4294967295
 801a476:	e757      	b.n	801a328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a478:	b005      	add	sp, #20
 801a47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a47e:	bf00      	nop
 801a480:	fffff800 	.word	0xfffff800

0801a484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a488:	b087      	sub	sp, #28
 801a48a:	468b      	mov	fp, r1
 801a48c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a48e:	9204      	str	r2, [sp, #16]
 801a490:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a494:	9205      	str	r2, [sp, #20]
 801a496:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a49a:	6841      	ldr	r1, [r0, #4]
 801a49c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a4a0:	fb01 2404 	mla	r4, r1, r4, r2
 801a4a4:	6802      	ldr	r2, [r0, #0]
 801a4a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4aa:	f8dc 2000 	ldr.w	r2, [ip]
 801a4ae:	9201      	str	r2, [sp, #4]
 801a4b0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a4b4:	3204      	adds	r2, #4
 801a4b6:	9202      	str	r2, [sp, #8]
 801a4b8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4bc:	f1bb 0f00 	cmp.w	fp, #0
 801a4c0:	dc03      	bgt.n	801a4ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a4c2:	9a04      	ldr	r2, [sp, #16]
 801a4c4:	2a00      	cmp	r2, #0
 801a4c6:	f340 8138 	ble.w	801a73a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a4ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a4cc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a4d0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a4d4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a4d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a4da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	dd0e      	ble.n	801a500 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a4e2:	1402      	asrs	r2, r0, #16
 801a4e4:	d405      	bmi.n	801a4f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4e6:	42ba      	cmp	r2, r7
 801a4e8:	da03      	bge.n	801a4f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4ea:	140a      	asrs	r2, r1, #16
 801a4ec:	d401      	bmi.n	801a4f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a4ee:	42b2      	cmp	r2, r6
 801a4f0:	db07      	blt.n	801a502 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4f4:	4410      	add	r0, r2
 801a4f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4f8:	3b01      	subs	r3, #1
 801a4fa:	4411      	add	r1, r2
 801a4fc:	3402      	adds	r4, #2
 801a4fe:	e7ee      	b.n	801a4de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a500:	d019      	beq.n	801a536 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a502:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a504:	1e5a      	subs	r2, r3, #1
 801a506:	fb05 0502 	mla	r5, r5, r2, r0
 801a50a:	142d      	asrs	r5, r5, #16
 801a50c:	d409      	bmi.n	801a522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a50e:	42bd      	cmp	r5, r7
 801a510:	da07      	bge.n	801a522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a512:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a514:	fb05 1202 	mla	r2, r5, r2, r1
 801a518:	1412      	asrs	r2, r2, #16
 801a51a:	d402      	bmi.n	801a522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a51c:	42b2      	cmp	r2, r6
 801a51e:	f2c0 80ac 	blt.w	801a67a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a522:	f04f 0e00 	mov.w	lr, #0
 801a526:	eb03 020e 	add.w	r2, r3, lr
 801a52a:	2a00      	cmp	r2, #0
 801a52c:	dc3e      	bgt.n	801a5ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a52e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a532:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a536:	f1bb 0f00 	cmp.w	fp, #0
 801a53a:	f340 80fe 	ble.w	801a73a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a53e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a542:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a546:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a54a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a54c:	f1bb 0b01 	subs.w	fp, fp, #1
 801a550:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a554:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a558:	eeb0 6a62 	vmov.f32	s12, s5
 801a55c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a560:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a564:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a568:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a56c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a570:	eeb0 6a43 	vmov.f32	s12, s6
 801a574:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a578:	ee12 2a90 	vmov	r2, s5
 801a57c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a580:	fb92 f3f3 	sdiv	r3, r2, r3
 801a584:	ee13 2a10 	vmov	r2, s6
 801a588:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a58c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a58e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a590:	fb92 f3f3 	sdiv	r3, r2, r3
 801a594:	9a04      	ldr	r2, [sp, #16]
 801a596:	9314      	str	r3, [sp, #80]	; 0x50
 801a598:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a59c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a59e:	eeb0 3a67 	vmov.f32	s6, s15
 801a5a2:	bf08      	it	eq
 801a5a4:	4613      	moveq	r3, r2
 801a5a6:	eef0 2a47 	vmov.f32	s5, s14
 801a5aa:	e787      	b.n	801a4bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a5ac:	1406      	asrs	r6, r0, #16
 801a5ae:	d45d      	bmi.n	801a66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a5b0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a5b4:	42b5      	cmp	r5, r6
 801a5b6:	dd59      	ble.n	801a66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a5b8:	140f      	asrs	r7, r1, #16
 801a5ba:	d457      	bmi.n	801a66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a5bc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a5c0:	42ba      	cmp	r2, r7
 801a5c2:	dd53      	ble.n	801a66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a5c4:	9a01      	ldr	r2, [sp, #4]
 801a5c6:	b22d      	sxth	r5, r5
 801a5c8:	fb07 2505 	mla	r5, r7, r5, r2
 801a5cc:	5daa      	ldrb	r2, [r5, r6]
 801a5ce:	9d02      	ldr	r5, [sp, #8]
 801a5d0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a5d4:	0e2e      	lsrs	r6, r5, #24
 801a5d6:	d049      	beq.n	801a66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a5d8:	f06f 0201 	mvn.w	r2, #1
 801a5dc:	fb02 f20e 	mul.w	r2, r2, lr
 801a5e0:	9203      	str	r2, [sp, #12]
 801a5e2:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a5e6:	9a05      	ldr	r2, [sp, #20]
 801a5e8:	4356      	muls	r6, r2
 801a5ea:	1c72      	adds	r2, r6, #1
 801a5ec:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a5f0:	1212      	asrs	r2, r2, #8
 801a5f2:	fa1f f982 	uxth.w	r9, r2
 801a5f6:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a5fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a5fe:	43d2      	mvns	r2, r2
 801a600:	b2d2      	uxtb	r2, r2
 801a602:	fb16 f609 	smulbb	r6, r6, r9
 801a606:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a60a:	fb07 6702 	mla	r7, r7, r2, r6
 801a60e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a612:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a616:	b2ed      	uxtb	r5, r5
 801a618:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a61c:	fa5f f888 	uxtb.w	r8, r8
 801a620:	fb15 f509 	smulbb	r5, r5, r9
 801a624:	fb08 5502 	mla	r5, r8, r2, r5
 801a628:	b2bf      	uxth	r7, r7
 801a62a:	fb1a fa09 	smulbb	sl, sl, r9
 801a62e:	b2ad      	uxth	r5, r5
 801a630:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a634:	fb06 a602 	mla	r6, r6, r2, sl
 801a638:	1c7a      	adds	r2, r7, #1
 801a63a:	f105 0a01 	add.w	sl, r5, #1
 801a63e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a642:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a646:	b2b6      	uxth	r6, r6
 801a648:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a64c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a650:	ea4a 0707 	orr.w	r7, sl, r7
 801a654:	f106 0a01 	add.w	sl, r6, #1
 801a658:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a65c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a660:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a664:	9a03      	ldr	r2, [sp, #12]
 801a666:	ea47 070a 	orr.w	r7, r7, sl
 801a66a:	52a7      	strh	r7, [r4, r2]
 801a66c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a66e:	4410      	add	r0, r2
 801a670:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a672:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a676:	4411      	add	r1, r2
 801a678:	e755      	b.n	801a526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a67a:	f04f 0800 	mov.w	r8, #0
 801a67e:	eba3 0208 	sub.w	r2, r3, r8
 801a682:	2a00      	cmp	r2, #0
 801a684:	f77f af53 	ble.w	801a52e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a688:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a68c:	9f01      	ldr	r7, [sp, #4]
 801a68e:	140a      	asrs	r2, r1, #16
 801a690:	1405      	asrs	r5, r0, #16
 801a692:	fb06 7202 	mla	r2, r6, r2, r7
 801a696:	5d52      	ldrb	r2, [r2, r5]
 801a698:	9d02      	ldr	r5, [sp, #8]
 801a69a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a69e:	0e2e      	lsrs	r6, r5, #24
 801a6a0:	d044      	beq.n	801a72c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6a2:	9a05      	ldr	r2, [sp, #20]
 801a6a4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a6a8:	4356      	muls	r6, r2
 801a6aa:	1c72      	adds	r2, r6, #1
 801a6ac:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a6b0:	1212      	asrs	r2, r2, #8
 801a6b2:	fa1f f982 	uxth.w	r9, r2
 801a6b6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a6ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a6be:	43d2      	mvns	r2, r2
 801a6c0:	b2d2      	uxtb	r2, r2
 801a6c2:	fb16 f609 	smulbb	r6, r6, r9
 801a6c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6ca:	fb07 6702 	mla	r7, r7, r2, r6
 801a6ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a6d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a6d6:	b2ed      	uxtb	r5, r5
 801a6d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a6dc:	fa5f fe8e 	uxtb.w	lr, lr
 801a6e0:	fb15 f509 	smulbb	r5, r5, r9
 801a6e4:	fb0e 5502 	mla	r5, lr, r2, r5
 801a6e8:	b2bf      	uxth	r7, r7
 801a6ea:	fb1a fa09 	smulbb	sl, sl, r9
 801a6ee:	b2ad      	uxth	r5, r5
 801a6f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a6f4:	fb06 a602 	mla	r6, r6, r2, sl
 801a6f8:	1c7a      	adds	r2, r7, #1
 801a6fa:	f105 0a01 	add.w	sl, r5, #1
 801a6fe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a702:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a706:	b2b6      	uxth	r6, r6
 801a708:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a70c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a710:	ea4a 0707 	orr.w	r7, sl, r7
 801a714:	f106 0a01 	add.w	sl, r6, #1
 801a718:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a71c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a720:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a724:	ea47 070a 	orr.w	r7, r7, sl
 801a728:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a72c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a72e:	4410      	add	r0, r2
 801a730:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a732:	f108 0801 	add.w	r8, r8, #1
 801a736:	4411      	add	r1, r2
 801a738:	e7a1      	b.n	801a67e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a73a:	b007      	add	sp, #28
 801a73c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a740 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a744:	b085      	sub	sp, #20
 801a746:	468b      	mov	fp, r1
 801a748:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a74a:	9203      	str	r2, [sp, #12]
 801a74c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a750:	6841      	ldr	r1, [r0, #4]
 801a752:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a756:	fb01 2404 	mla	r4, r1, r4, r2
 801a75a:	6802      	ldr	r2, [r0, #0]
 801a75c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a760:	f8de 2000 	ldr.w	r2, [lr]
 801a764:	9200      	str	r2, [sp, #0]
 801a766:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a76a:	3204      	adds	r2, #4
 801a76c:	9201      	str	r2, [sp, #4]
 801a76e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a772:	f1bb 0f00 	cmp.w	fp, #0
 801a776:	dc03      	bgt.n	801a780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a778:	9a03      	ldr	r2, [sp, #12]
 801a77a:	2a00      	cmp	r2, #0
 801a77c:	f340 8153 	ble.w	801aa26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a780:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a782:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a786:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a78a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a78e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a790:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a794:	2b00      	cmp	r3, #0
 801a796:	dd0e      	ble.n	801a7b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a798:	1408      	asrs	r0, r1, #16
 801a79a:	d405      	bmi.n	801a7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a79c:	42b8      	cmp	r0, r7
 801a79e:	da03      	bge.n	801a7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a7a0:	1410      	asrs	r0, r2, #16
 801a7a2:	d401      	bmi.n	801a7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a7a4:	42b0      	cmp	r0, r6
 801a7a6:	db07      	blt.n	801a7b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a7a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7aa:	4401      	add	r1, r0
 801a7ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7ae:	3b01      	subs	r3, #1
 801a7b0:	4402      	add	r2, r0
 801a7b2:	3402      	adds	r4, #2
 801a7b4:	e7ee      	b.n	801a794 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a7b6:	d017      	beq.n	801a7e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a7b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a7ba:	1e58      	subs	r0, r3, #1
 801a7bc:	fb05 1500 	mla	r5, r5, r0, r1
 801a7c0:	142d      	asrs	r5, r5, #16
 801a7c2:	d409      	bmi.n	801a7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a7c4:	42bd      	cmp	r5, r7
 801a7c6:	da07      	bge.n	801a7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a7c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a7ca:	fb05 2000 	mla	r0, r5, r0, r2
 801a7ce:	1400      	asrs	r0, r0, #16
 801a7d0:	d402      	bmi.n	801a7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a7d2:	42b0      	cmp	r0, r6
 801a7d4:	f2c0 80bc 	blt.w	801a950 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a7d8:	2600      	movs	r6, #0
 801a7da:	1998      	adds	r0, r3, r6
 801a7dc:	2800      	cmp	r0, #0
 801a7de:	dc3e      	bgt.n	801a85e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a7e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a7e8:	f1bb 0f00 	cmp.w	fp, #0
 801a7ec:	f340 811b 	ble.w	801aa26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a7f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7fe:	f1bb 0b01 	subs.w	fp, fp, #1
 801a802:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a806:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a80a:	eeb0 6a62 	vmov.f32	s12, s5
 801a80e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a812:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a816:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a81a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a81e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a822:	eeb0 6a43 	vmov.f32	s12, s6
 801a826:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a82a:	ee12 2a90 	vmov	r2, s5
 801a82e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a832:	fb92 f3f3 	sdiv	r3, r2, r3
 801a836:	ee13 2a10 	vmov	r2, s6
 801a83a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a83e:	9311      	str	r3, [sp, #68]	; 0x44
 801a840:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a842:	fb92 f3f3 	sdiv	r3, r2, r3
 801a846:	9a03      	ldr	r2, [sp, #12]
 801a848:	9312      	str	r3, [sp, #72]	; 0x48
 801a84a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a84e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a850:	eeb0 3a67 	vmov.f32	s6, s15
 801a854:	bf08      	it	eq
 801a856:	4613      	moveq	r3, r2
 801a858:	eef0 2a47 	vmov.f32	s5, s14
 801a85c:	e789      	b.n	801a772 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a85e:	140f      	asrs	r7, r1, #16
 801a860:	d426      	bmi.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a862:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a866:	42bd      	cmp	r5, r7
 801a868:	dd22      	ble.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a86a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a86e:	d41f      	bmi.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a870:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a874:	4560      	cmp	r0, ip
 801a876:	dd1b      	ble.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a878:	9800      	ldr	r0, [sp, #0]
 801a87a:	b22d      	sxth	r5, r5
 801a87c:	fb0c 0505 	mla	r5, ip, r5, r0
 801a880:	5de8      	ldrb	r0, [r5, r7]
 801a882:	9d01      	ldr	r5, [sp, #4]
 801a884:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a888:	0e07      	lsrs	r7, r0, #24
 801a88a:	2fff      	cmp	r7, #255	; 0xff
 801a88c:	d116      	bne.n	801a8bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a88e:	f06f 0501 	mvn.w	r5, #1
 801a892:	fb05 f706 	mul.w	r7, r5, r6
 801a896:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a89a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a89e:	0945      	lsrs	r5, r0, #5
 801a8a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a8a4:	ea4c 0505 	orr.w	r5, ip, r5
 801a8a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a8ac:	4305      	orrs	r5, r0
 801a8ae:	53e5      	strh	r5, [r4, r7]
 801a8b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a8b2:	4401      	add	r1, r0
 801a8b4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a8b6:	3e01      	subs	r6, #1
 801a8b8:	4402      	add	r2, r0
 801a8ba:	e78e      	b.n	801a7da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a8bc:	b2fd      	uxtb	r5, r7
 801a8be:	2f00      	cmp	r7, #0
 801a8c0:	d0f6      	beq.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a8c2:	f06f 0701 	mvn.w	r7, #1
 801a8c6:	4377      	muls	r7, r6
 801a8c8:	fa1f f985 	uxth.w	r9, r5
 801a8cc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a8d0:	9702      	str	r7, [sp, #8]
 801a8d2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a8d6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a8da:	43ed      	mvns	r5, r5
 801a8dc:	b2ed      	uxtb	r5, r5
 801a8de:	fb17 f709 	smulbb	r7, r7, r9
 801a8e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8e6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a8ea:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a8ee:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a8f2:	b2c0      	uxtb	r0, r0
 801a8f4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a8f8:	fa5f f888 	uxtb.w	r8, r8
 801a8fc:	fb10 f009 	smulbb	r0, r0, r9
 801a900:	fb08 0005 	mla	r0, r8, r5, r0
 801a904:	b280      	uxth	r0, r0
 801a906:	fa1f fc8c 	uxth.w	ip, ip
 801a90a:	fb1a fa09 	smulbb	sl, sl, r9
 801a90e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a912:	fb07 a705 	mla	r7, r7, r5, sl
 801a916:	f100 0a01 	add.w	sl, r0, #1
 801a91a:	f10c 0501 	add.w	r5, ip, #1
 801a91e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a922:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a926:	b2bf      	uxth	r7, r7
 801a928:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a92c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a930:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a934:	f107 0a01 	add.w	sl, r7, #1
 801a938:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a93c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a940:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a944:	9802      	ldr	r0, [sp, #8]
 801a946:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a94a:	f824 c000 	strh.w	ip, [r4, r0]
 801a94e:	e7af      	b.n	801a8b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a950:	f04f 0800 	mov.w	r8, #0
 801a954:	eba3 0008 	sub.w	r0, r3, r8
 801a958:	2800      	cmp	r0, #0
 801a95a:	f77f af41 	ble.w	801a7e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a95e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a962:	9f00      	ldr	r7, [sp, #0]
 801a964:	1410      	asrs	r0, r2, #16
 801a966:	140d      	asrs	r5, r1, #16
 801a968:	fb06 7000 	mla	r0, r6, r0, r7
 801a96c:	5d40      	ldrb	r0, [r0, r5]
 801a96e:	9d01      	ldr	r5, [sp, #4]
 801a970:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a974:	0e2e      	lsrs	r6, r5, #24
 801a976:	2eff      	cmp	r6, #255	; 0xff
 801a978:	d112      	bne.n	801a9a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a97a:	482c      	ldr	r0, [pc, #176]	; (801aa2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a97c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a980:	0968      	lsrs	r0, r5, #5
 801a982:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a986:	4330      	orrs	r0, r6
 801a988:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a98c:	4328      	orrs	r0, r5
 801a98e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a992:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a994:	4401      	add	r1, r0
 801a996:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a998:	f108 0801 	add.w	r8, r8, #1
 801a99c:	4402      	add	r2, r0
 801a99e:	e7d9      	b.n	801a954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a9a0:	b2f0      	uxtb	r0, r6
 801a9a2:	2e00      	cmp	r6, #0
 801a9a4:	d0f5      	beq.n	801a992 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a9a6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a9aa:	fa1f f980 	uxth.w	r9, r0
 801a9ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a9b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a9b6:	43c0      	mvns	r0, r0
 801a9b8:	b2c0      	uxtb	r0, r0
 801a9ba:	fb16 f609 	smulbb	r6, r6, r9
 801a9be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a9c2:	fb07 6700 	mla	r7, r7, r0, r6
 801a9c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a9ca:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a9ce:	b2ed      	uxtb	r5, r5
 801a9d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a9d4:	fa5f fc8c 	uxtb.w	ip, ip
 801a9d8:	fb15 f509 	smulbb	r5, r5, r9
 801a9dc:	fb0c 5500 	mla	r5, ip, r0, r5
 801a9e0:	b2bf      	uxth	r7, r7
 801a9e2:	fb1a fa09 	smulbb	sl, sl, r9
 801a9e6:	b2ad      	uxth	r5, r5
 801a9e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a9ec:	fb06 a600 	mla	r6, r6, r0, sl
 801a9f0:	1c78      	adds	r0, r7, #1
 801a9f2:	f105 0a01 	add.w	sl, r5, #1
 801a9f6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a9fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a9fe:	b2b6      	uxth	r6, r6
 801aa00:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa04:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aa08:	ea4a 0707 	orr.w	r7, sl, r7
 801aa0c:	f106 0a01 	add.w	sl, r6, #1
 801aa10:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa1c:	ea47 070a 	orr.w	r7, r7, sl
 801aa20:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801aa24:	e7b5      	b.n	801a992 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aa26:	b005      	add	sp, #20
 801aa28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa2c:	fffff800 	.word	0xfffff800

0801aa30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa34:	b087      	sub	sp, #28
 801aa36:	468b      	mov	fp, r1
 801aa38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa3a:	9204      	str	r2, [sp, #16]
 801aa3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa40:	9205      	str	r2, [sp, #20]
 801aa42:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801aa46:	6861      	ldr	r1, [r4, #4]
 801aa48:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aa4c:	fb01 2000 	mla	r0, r1, r0, r2
 801aa50:	6822      	ldr	r2, [r4, #0]
 801aa52:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801aa56:	f8de 2000 	ldr.w	r2, [lr]
 801aa5a:	9201      	str	r2, [sp, #4]
 801aa5c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa60:	9202      	str	r2, [sp, #8]
 801aa62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa66:	f1bb 0f00 	cmp.w	fp, #0
 801aa6a:	dc03      	bgt.n	801aa74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801aa6c:	9a04      	ldr	r2, [sp, #16]
 801aa6e:	2a00      	cmp	r2, #0
 801aa70:	f340 8142 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aa74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aa7a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801aa7e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa82:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa88:	2b00      	cmp	r3, #0
 801aa8a:	dd0e      	ble.n	801aaaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa8c:	140c      	asrs	r4, r1, #16
 801aa8e:	d405      	bmi.n	801aa9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa90:	42bc      	cmp	r4, r7
 801aa92:	da03      	bge.n	801aa9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa94:	1414      	asrs	r4, r2, #16
 801aa96:	d401      	bmi.n	801aa9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa98:	42b4      	cmp	r4, r6
 801aa9a:	db07      	blt.n	801aaac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aa9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa9e:	4421      	add	r1, r4
 801aaa0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aaa2:	3b01      	subs	r3, #1
 801aaa4:	4422      	add	r2, r4
 801aaa6:	3002      	adds	r0, #2
 801aaa8:	e7ee      	b.n	801aa88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aaaa:	d019      	beq.n	801aae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801aaac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aaae:	1e5c      	subs	r4, r3, #1
 801aab0:	fb05 1504 	mla	r5, r5, r4, r1
 801aab4:	142d      	asrs	r5, r5, #16
 801aab6:	d409      	bmi.n	801aacc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aab8:	42bd      	cmp	r5, r7
 801aaba:	da07      	bge.n	801aacc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aabc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aabe:	fb05 2404 	mla	r4, r5, r4, r2
 801aac2:	1424      	asrs	r4, r4, #16
 801aac4:	d402      	bmi.n	801aacc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aac6:	42b4      	cmp	r4, r6
 801aac8:	f2c0 80b1 	blt.w	801ac2e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801aacc:	f04f 0800 	mov.w	r8, #0
 801aad0:	eb03 0408 	add.w	r4, r3, r8
 801aad4:	2c00      	cmp	r4, #0
 801aad6:	dc3e      	bgt.n	801ab56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aad8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aadc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aae0:	f1bb 0f00 	cmp.w	fp, #0
 801aae4:	f340 8108 	ble.w	801acf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aae8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aaec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aaf0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aaf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aaf6:	f1bb 0b01 	subs.w	fp, fp, #1
 801aafa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aafe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab02:	eeb0 6a62 	vmov.f32	s12, s5
 801ab06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab12:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ab16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab1a:	eeb0 6a43 	vmov.f32	s12, s6
 801ab1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab22:	ee12 2a90 	vmov	r2, s5
 801ab26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab2e:	ee13 2a10 	vmov	r2, s6
 801ab32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab36:	9313      	str	r3, [sp, #76]	; 0x4c
 801ab38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab3e:	9a04      	ldr	r2, [sp, #16]
 801ab40:	9314      	str	r3, [sp, #80]	; 0x50
 801ab42:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ab46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab48:	eeb0 3a67 	vmov.f32	s6, s15
 801ab4c:	bf08      	it	eq
 801ab4e:	4613      	moveq	r3, r2
 801ab50:	eef0 2a47 	vmov.f32	s5, s14
 801ab54:	e787      	b.n	801aa66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ab56:	140e      	asrs	r6, r1, #16
 801ab58:	d462      	bmi.n	801ac20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab5a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ab5e:	42b5      	cmp	r5, r6
 801ab60:	dd5e      	ble.n	801ac20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab62:	1417      	asrs	r7, r2, #16
 801ab64:	d45c      	bmi.n	801ac20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab66:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ab6a:	42bc      	cmp	r4, r7
 801ab6c:	dd58      	ble.n	801ac20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab6e:	b22d      	sxth	r5, r5
 801ab70:	fb07 6505 	mla	r5, r7, r5, r6
 801ab74:	9c02      	ldr	r4, [sp, #8]
 801ab76:	5d66      	ldrb	r6, [r4, r5]
 801ab78:	2e00      	cmp	r6, #0
 801ab7a:	d051      	beq.n	801ac20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab7c:	9c01      	ldr	r4, [sp, #4]
 801ab7e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ab82:	f06f 0401 	mvn.w	r4, #1
 801ab86:	fb04 f408 	mul.w	r4, r4, r8
 801ab8a:	9403      	str	r4, [sp, #12]
 801ab8c:	5b05      	ldrh	r5, [r0, r4]
 801ab8e:	9c05      	ldr	r4, [sp, #20]
 801ab90:	4366      	muls	r6, r4
 801ab92:	1c74      	adds	r4, r6, #1
 801ab94:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ab98:	1224      	asrs	r4, r4, #8
 801ab9a:	b2a7      	uxth	r7, r4
 801ab9c:	122e      	asrs	r6, r5, #8
 801ab9e:	43e4      	mvns	r4, r4
 801aba0:	b2e4      	uxtb	r4, r4
 801aba2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801aba6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801abaa:	fb16 f604 	smulbb	r6, r6, r4
 801abae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801abb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abb6:	00ed      	lsls	r5, r5, #3
 801abb8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801abbc:	b2ed      	uxtb	r5, r5
 801abbe:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801abc2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801abc6:	fb15 f504 	smulbb	r5, r5, r4
 801abca:	fa5f f989 	uxtb.w	r9, r9
 801abce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801abd2:	fb09 5507 	mla	r5, r9, r7, r5
 801abd6:	fb1a fa04 	smulbb	sl, sl, r4
 801abda:	fa1f fc8c 	uxth.w	ip, ip
 801abde:	b2ad      	uxth	r5, r5
 801abe0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801abe4:	fb06 a607 	mla	r6, r6, r7, sl
 801abe8:	f10c 0401 	add.w	r4, ip, #1
 801abec:	f105 0a01 	add.w	sl, r5, #1
 801abf0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801abf4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abf8:	b2b6      	uxth	r6, r6
 801abfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac02:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac06:	f106 0a01 	add.w	sl, r6, #1
 801ac0a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac16:	9c03      	ldr	r4, [sp, #12]
 801ac18:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ac1c:	f820 c004 	strh.w	ip, [r0, r4]
 801ac20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac22:	4421      	add	r1, r4
 801ac24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ac26:	f108 38ff 	add.w	r8, r8, #4294967295
 801ac2a:	4422      	add	r2, r4
 801ac2c:	e750      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ac2e:	f04f 0900 	mov.w	r9, #0
 801ac32:	eba3 0409 	sub.w	r4, r3, r9
 801ac36:	2c00      	cmp	r4, #0
 801ac38:	f77f af4e 	ble.w	801aad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ac3c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ac40:	140d      	asrs	r5, r1, #16
 801ac42:	1414      	asrs	r4, r2, #16
 801ac44:	fb06 5404 	mla	r4, r6, r4, r5
 801ac48:	9d02      	ldr	r5, [sp, #8]
 801ac4a:	5d2e      	ldrb	r6, [r5, r4]
 801ac4c:	2e00      	cmp	r6, #0
 801ac4e:	d04c      	beq.n	801acea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ac50:	9d01      	ldr	r5, [sp, #4]
 801ac52:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ac56:	9c05      	ldr	r4, [sp, #20]
 801ac58:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ac5c:	4366      	muls	r6, r4
 801ac5e:	1c74      	adds	r4, r6, #1
 801ac60:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ac64:	1224      	asrs	r4, r4, #8
 801ac66:	b2a7      	uxth	r7, r4
 801ac68:	122e      	asrs	r6, r5, #8
 801ac6a:	43e4      	mvns	r4, r4
 801ac6c:	b2e4      	uxtb	r4, r4
 801ac6e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ac72:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac76:	fb16 f604 	smulbb	r6, r6, r4
 801ac7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac7e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac82:	00ed      	lsls	r5, r5, #3
 801ac84:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac88:	b2ed      	uxtb	r5, r5
 801ac8a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ac8e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ac92:	fb15 f504 	smulbb	r5, r5, r4
 801ac96:	fa5f f888 	uxtb.w	r8, r8
 801ac9a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac9e:	fb08 5507 	mla	r5, r8, r7, r5
 801aca2:	fb1a fa04 	smulbb	sl, sl, r4
 801aca6:	fa1f fc8c 	uxth.w	ip, ip
 801acaa:	b2ad      	uxth	r5, r5
 801acac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801acb0:	fb06 a607 	mla	r6, r6, r7, sl
 801acb4:	f10c 0401 	add.w	r4, ip, #1
 801acb8:	f105 0a01 	add.w	sl, r5, #1
 801acbc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801acc0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801acc4:	b2b6      	uxth	r6, r6
 801acc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801acce:	ea4a 0c0c 	orr.w	ip, sl, ip
 801acd2:	f106 0a01 	add.w	sl, r6, #1
 801acd6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801acda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acde:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ace2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ace6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801acea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801acec:	4421      	add	r1, r4
 801acee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801acf0:	f109 0901 	add.w	r9, r9, #1
 801acf4:	4422      	add	r2, r4
 801acf6:	e79c      	b.n	801ac32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801acf8:	b007      	add	sp, #28
 801acfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad02:	b085      	sub	sp, #20
 801ad04:	468b      	mov	fp, r1
 801ad06:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad08:	9203      	str	r2, [sp, #12]
 801ad0a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801ad0e:	6861      	ldr	r1, [r4, #4]
 801ad10:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ad14:	fb01 2000 	mla	r0, r1, r0, r2
 801ad18:	6822      	ldr	r2, [r4, #0]
 801ad1a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ad1e:	f8d8 2000 	ldr.w	r2, [r8]
 801ad22:	9200      	str	r2, [sp, #0]
 801ad24:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ad28:	9201      	str	r2, [sp, #4]
 801ad2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ad2e:	f1bb 0f00 	cmp.w	fp, #0
 801ad32:	dc03      	bgt.n	801ad3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ad34:	9a03      	ldr	r2, [sp, #12]
 801ad36:	2a00      	cmp	r2, #0
 801ad38:	f340 8146 	ble.w	801afc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ad3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad3e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ad42:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ad46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad50:	2b00      	cmp	r3, #0
 801ad52:	dd0e      	ble.n	801ad72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ad54:	140c      	asrs	r4, r1, #16
 801ad56:	d405      	bmi.n	801ad64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad58:	42bc      	cmp	r4, r7
 801ad5a:	da03      	bge.n	801ad64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad5c:	1414      	asrs	r4, r2, #16
 801ad5e:	d401      	bmi.n	801ad64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad60:	42b4      	cmp	r4, r6
 801ad62:	db07      	blt.n	801ad74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ad64:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad66:	4421      	add	r1, r4
 801ad68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad6a:	3b01      	subs	r3, #1
 801ad6c:	4422      	add	r2, r4
 801ad6e:	3002      	adds	r0, #2
 801ad70:	e7ee      	b.n	801ad50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad72:	d017      	beq.n	801ada4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad76:	1e5c      	subs	r4, r3, #1
 801ad78:	fb05 1504 	mla	r5, r5, r4, r1
 801ad7c:	142d      	asrs	r5, r5, #16
 801ad7e:	d409      	bmi.n	801ad94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad80:	42bd      	cmp	r5, r7
 801ad82:	da07      	bge.n	801ad94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ad86:	fb05 2404 	mla	r4, r5, r4, r2
 801ad8a:	1424      	asrs	r4, r4, #16
 801ad8c:	d402      	bmi.n	801ad94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad8e:	42b4      	cmp	r4, r6
 801ad90:	f2c0 80b3 	blt.w	801aefa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ad94:	2600      	movs	r6, #0
 801ad96:	199c      	adds	r4, r3, r6
 801ad98:	2c00      	cmp	r4, #0
 801ad9a:	dc3e      	bgt.n	801ae1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ad9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ada0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ada4:	f1bb 0f00 	cmp.w	fp, #0
 801ada8:	f340 810e 	ble.w	801afc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801adac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801adb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801adb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adba:	f1bb 0b01 	subs.w	fp, fp, #1
 801adbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801adc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801adc6:	eeb0 6a62 	vmov.f32	s12, s5
 801adca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801adce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801add2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801add6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801adda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801adde:	eeb0 6a43 	vmov.f32	s12, s6
 801ade2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ade6:	ee12 2a90 	vmov	r2, s5
 801adea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801adee:	fb92 f3f3 	sdiv	r3, r2, r3
 801adf2:	ee13 2a10 	vmov	r2, s6
 801adf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801adfa:	9311      	str	r3, [sp, #68]	; 0x44
 801adfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adfe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae02:	9a03      	ldr	r2, [sp, #12]
 801ae04:	9312      	str	r3, [sp, #72]	; 0x48
 801ae06:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ae0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae0c:	eeb0 3a67 	vmov.f32	s6, s15
 801ae10:	bf08      	it	eq
 801ae12:	4613      	moveq	r3, r2
 801ae14:	eef0 2a47 	vmov.f32	s5, s14
 801ae18:	e789      	b.n	801ad2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ae1a:	140f      	asrs	r7, r1, #16
 801ae1c:	d418      	bmi.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae1e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ae22:	42bd      	cmp	r5, r7
 801ae24:	dd14      	ble.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae26:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ae2a:	d411      	bmi.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae2c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ae30:	4564      	cmp	r4, ip
 801ae32:	dd0d      	ble.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae34:	b22d      	sxth	r5, r5
 801ae36:	fb0c 7505 	mla	r5, ip, r5, r7
 801ae3a:	9c01      	ldr	r4, [sp, #4]
 801ae3c:	5d64      	ldrb	r4, [r4, r5]
 801ae3e:	2cff      	cmp	r4, #255	; 0xff
 801ae40:	d10c      	bne.n	801ae5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ae42:	9c00      	ldr	r4, [sp, #0]
 801ae44:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ae48:	f06f 0401 	mvn.w	r4, #1
 801ae4c:	4374      	muls	r4, r6
 801ae4e:	5305      	strh	r5, [r0, r4]
 801ae50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae52:	4421      	add	r1, r4
 801ae54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae56:	3e01      	subs	r6, #1
 801ae58:	4422      	add	r2, r4
 801ae5a:	e79c      	b.n	801ad96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ae5c:	2c00      	cmp	r4, #0
 801ae5e:	d0f7      	beq.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae60:	9f00      	ldr	r7, [sp, #0]
 801ae62:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ae66:	f06f 0501 	mvn.w	r5, #1
 801ae6a:	4375      	muls	r5, r6
 801ae6c:	9502      	str	r5, [sp, #8]
 801ae6e:	5b45      	ldrh	r5, [r0, r5]
 801ae70:	fa1f fc84 	uxth.w	ip, r4
 801ae74:	122f      	asrs	r7, r5, #8
 801ae76:	43e4      	mvns	r4, r4
 801ae78:	b2e4      	uxtb	r4, r4
 801ae7a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ae7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae82:	fb17 f704 	smulbb	r7, r7, r4
 801ae86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ae8a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ae8e:	00ed      	lsls	r5, r5, #3
 801ae90:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ae94:	b2ed      	uxtb	r5, r5
 801ae96:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ae9a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ae9e:	fb15 f504 	smulbb	r5, r5, r4
 801aea2:	fa5f f989 	uxtb.w	r9, r9
 801aea6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aeaa:	fb09 550c 	mla	r5, r9, ip, r5
 801aeae:	fb1a fa04 	smulbb	sl, sl, r4
 801aeb2:	fa1f fe8e 	uxth.w	lr, lr
 801aeb6:	b2ad      	uxth	r5, r5
 801aeb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aebc:	fb07 a70c 	mla	r7, r7, ip, sl
 801aec0:	f10e 0401 	add.w	r4, lr, #1
 801aec4:	f105 0a01 	add.w	sl, r5, #1
 801aec8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801aecc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aed0:	b2bf      	uxth	r7, r7
 801aed2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aed6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801aeda:	ea4a 0e0e 	orr.w	lr, sl, lr
 801aede:	f107 0a01 	add.w	sl, r7, #1
 801aee2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801aee6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aeea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aeee:	9c02      	ldr	r4, [sp, #8]
 801aef0:	ea4e 0e0a 	orr.w	lr, lr, sl
 801aef4:	f820 e004 	strh.w	lr, [r0, r4]
 801aef8:	e7aa      	b.n	801ae50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aefa:	f04f 0900 	mov.w	r9, #0
 801aefe:	eba3 0409 	sub.w	r4, r3, r9
 801af02:	2c00      	cmp	r4, #0
 801af04:	f77f af4a 	ble.w	801ad9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af08:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801af0c:	1414      	asrs	r4, r2, #16
 801af0e:	140d      	asrs	r5, r1, #16
 801af10:	fb06 5504 	mla	r5, r6, r4, r5
 801af14:	9c01      	ldr	r4, [sp, #4]
 801af16:	5d64      	ldrb	r4, [r4, r5]
 801af18:	2cff      	cmp	r4, #255	; 0xff
 801af1a:	d10b      	bne.n	801af34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af1c:	9c00      	ldr	r4, [sp, #0]
 801af1e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801af22:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801af26:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801af28:	4421      	add	r1, r4
 801af2a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801af2c:	f109 0901 	add.w	r9, r9, #1
 801af30:	4422      	add	r2, r4
 801af32:	e7e4      	b.n	801aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801af34:	2c00      	cmp	r4, #0
 801af36:	d0f6      	beq.n	801af26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801af38:	9e00      	ldr	r6, [sp, #0]
 801af3a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801af3e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801af42:	b2a7      	uxth	r7, r4
 801af44:	122e      	asrs	r6, r5, #8
 801af46:	43e4      	mvns	r4, r4
 801af48:	b2e4      	uxtb	r4, r4
 801af4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801af4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af52:	fb16 f604 	smulbb	r6, r6, r4
 801af56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801af5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af5e:	00ed      	lsls	r5, r5, #3
 801af60:	fb0c 6c07 	mla	ip, ip, r7, r6
 801af64:	b2ed      	uxtb	r5, r5
 801af66:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801af6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af6e:	fb15 f504 	smulbb	r5, r5, r4
 801af72:	fa5f fe8e 	uxtb.w	lr, lr
 801af76:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801af7a:	fb0e 5507 	mla	r5, lr, r7, r5
 801af7e:	fb1a fa04 	smulbb	sl, sl, r4
 801af82:	fa1f fc8c 	uxth.w	ip, ip
 801af86:	b2ad      	uxth	r5, r5
 801af88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af8c:	fb06 a607 	mla	r6, r6, r7, sl
 801af90:	f10c 0401 	add.w	r4, ip, #1
 801af94:	f105 0a01 	add.w	sl, r5, #1
 801af98:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801af9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801afa0:	b2b6      	uxth	r6, r6
 801afa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801afa6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801afaa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801afae:	f106 0a01 	add.w	sl, r6, #1
 801afb2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801afb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801afba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801afbe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801afc2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801afc6:	e7ae      	b.n	801af26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801afc8:	b005      	add	sp, #20
 801afca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afd2:	b085      	sub	sp, #20
 801afd4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801afd6:	9203      	str	r2, [sp, #12]
 801afd8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801afdc:	9201      	str	r2, [sp, #4]
 801afde:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801afe2:	9100      	str	r1, [sp, #0]
 801afe4:	6841      	ldr	r1, [r0, #4]
 801afe6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801afea:	fb01 2404 	mla	r4, r1, r4, r2
 801afee:	6802      	ldr	r2, [r0, #0]
 801aff0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aff4:	f8de 2000 	ldr.w	r2, [lr]
 801aff8:	9202      	str	r2, [sp, #8]
 801affa:	9a01      	ldr	r2, [sp, #4]
 801affc:	43d6      	mvns	r6, r2
 801affe:	b2f6      	uxtb	r6, r6
 801b000:	9a00      	ldr	r2, [sp, #0]
 801b002:	2a00      	cmp	r2, #0
 801b004:	dc03      	bgt.n	801b00e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b006:	9a03      	ldr	r2, [sp, #12]
 801b008:	2a00      	cmp	r2, #0
 801b00a:	f340 8124 	ble.w	801b256 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b00e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b010:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b014:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b018:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b01c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b01e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b022:	2b00      	cmp	r3, #0
 801b024:	dd0e      	ble.n	801b044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b026:	1408      	asrs	r0, r1, #16
 801b028:	d405      	bmi.n	801b036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b02a:	4560      	cmp	r0, ip
 801b02c:	da03      	bge.n	801b036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b02e:	1410      	asrs	r0, r2, #16
 801b030:	d401      	bmi.n	801b036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b032:	42b8      	cmp	r0, r7
 801b034:	db07      	blt.n	801b046 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b036:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b038:	4401      	add	r1, r0
 801b03a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b03c:	3b01      	subs	r3, #1
 801b03e:	4402      	add	r2, r0
 801b040:	3402      	adds	r4, #2
 801b042:	e7ee      	b.n	801b022 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b044:	d06e      	beq.n	801b124 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b046:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b048:	1e58      	subs	r0, r3, #1
 801b04a:	fb05 1500 	mla	r5, r5, r0, r1
 801b04e:	142d      	asrs	r5, r5, #16
 801b050:	d45c      	bmi.n	801b10c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b052:	4565      	cmp	r5, ip
 801b054:	da5a      	bge.n	801b10c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b056:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b058:	fb05 2000 	mla	r0, r5, r0, r2
 801b05c:	1400      	asrs	r0, r0, #16
 801b05e:	d455      	bmi.n	801b10c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b060:	42b8      	cmp	r0, r7
 801b062:	da53      	bge.n	801b10c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b064:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b068:	4699      	mov	r9, r3
 801b06a:	46a2      	mov	sl, r4
 801b06c:	f1b9 0f00 	cmp.w	r9, #0
 801b070:	dd54      	ble.n	801b11c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b072:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b076:	140d      	asrs	r5, r1, #16
 801b078:	1410      	asrs	r0, r2, #16
 801b07a:	fb07 5000 	mla	r0, r7, r0, r5
 801b07e:	9d02      	ldr	r5, [sp, #8]
 801b080:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b084:	f8ba 5000 	ldrh.w	r5, [sl]
 801b088:	122f      	asrs	r7, r5, #8
 801b08a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b08e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b092:	fb17 f706 	smulbb	r7, r7, r6
 801b096:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b09a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b09e:	00ed      	lsls	r5, r5, #3
 801b0a0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b0a4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b0a8:	10c7      	asrs	r7, r0, #3
 801b0aa:	b2ed      	uxtb	r5, r5
 801b0ac:	00c0      	lsls	r0, r0, #3
 801b0ae:	fb18 f806 	smulbb	r8, r8, r6
 801b0b2:	fb15 f506 	smulbb	r5, r5, r6
 801b0b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b0ba:	b2c0      	uxtb	r0, r0
 801b0bc:	fa1f fc8c 	uxth.w	ip, ip
 801b0c0:	fb07 870b 	mla	r7, r7, fp, r8
 801b0c4:	fb00 500b 	mla	r0, r0, fp, r5
 801b0c8:	b280      	uxth	r0, r0
 801b0ca:	b2bf      	uxth	r7, r7
 801b0cc:	f10c 0501 	add.w	r5, ip, #1
 801b0d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b0d4:	f107 0801 	add.w	r8, r7, #1
 801b0d8:	1c45      	adds	r5, r0, #1
 801b0da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b0de:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b0e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b0e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b0ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b0f0:	ea45 0c0c 	orr.w	ip, r5, ip
 801b0f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b0f8:	4401      	add	r1, r0
 801b0fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0fc:	ea4c 0c08 	orr.w	ip, ip, r8
 801b100:	f82a cb02 	strh.w	ip, [sl], #2
 801b104:	4402      	add	r2, r0
 801b106:	f109 39ff 	add.w	r9, r9, #4294967295
 801b10a:	e7af      	b.n	801b06c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b10c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b110:	f04f 0800 	mov.w	r8, #0
 801b114:	eb03 0008 	add.w	r0, r3, r8
 801b118:	2800      	cmp	r0, #0
 801b11a:	dc41      	bgt.n	801b1a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b11c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b120:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b124:	9b00      	ldr	r3, [sp, #0]
 801b126:	2b00      	cmp	r3, #0
 801b128:	f340 8095 	ble.w	801b256 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b12c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b130:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b134:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b138:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b13a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b13e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b142:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b146:	eef0 6a62 	vmov.f32	s13, s5
 801b14a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b14e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b152:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b156:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b15a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b15e:	eef0 6a43 	vmov.f32	s13, s6
 801b162:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b166:	ee12 2a90 	vmov	r2, s5
 801b16a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b16e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b172:	ee13 2a10 	vmov	r2, s6
 801b176:	9311      	str	r3, [sp, #68]	; 0x44
 801b178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b17a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b17e:	9312      	str	r3, [sp, #72]	; 0x48
 801b180:	9b00      	ldr	r3, [sp, #0]
 801b182:	9a03      	ldr	r2, [sp, #12]
 801b184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b188:	3b01      	subs	r3, #1
 801b18a:	9300      	str	r3, [sp, #0]
 801b18c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b190:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b192:	eeb0 3a67 	vmov.f32	s6, s15
 801b196:	bf08      	it	eq
 801b198:	4613      	moveq	r3, r2
 801b19a:	eef0 2a47 	vmov.f32	s5, s14
 801b19e:	e72f      	b.n	801b000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b1a0:	140f      	asrs	r7, r1, #16
 801b1a2:	d451      	bmi.n	801b248 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b1a4:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b1a8:	42bd      	cmp	r5, r7
 801b1aa:	dd4d      	ble.n	801b248 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b1ac:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b1b0:	d44a      	bmi.n	801b248 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b1b2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b1b6:	4560      	cmp	r0, ip
 801b1b8:	dd46      	ble.n	801b248 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b1ba:	b22d      	sxth	r5, r5
 801b1bc:	fb0c 7505 	mla	r5, ip, r5, r7
 801b1c0:	9802      	ldr	r0, [sp, #8]
 801b1c2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b1c6:	f06f 0501 	mvn.w	r5, #1
 801b1ca:	fb05 fb08 	mul.w	fp, r5, r8
 801b1ce:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b1d2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b1d6:	122f      	asrs	r7, r5, #8
 801b1d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b1dc:	fb17 f706 	smulbb	r7, r7, r6
 801b1e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b1e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b1e8:	00ed      	lsls	r5, r5, #3
 801b1ea:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b1ee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b1f2:	10c7      	asrs	r7, r0, #3
 801b1f4:	b2ed      	uxtb	r5, r5
 801b1f6:	00c0      	lsls	r0, r0, #3
 801b1f8:	fb19 f906 	smulbb	r9, r9, r6
 801b1fc:	fb15 f506 	smulbb	r5, r5, r6
 801b200:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b204:	b2c0      	uxtb	r0, r0
 801b206:	fa1f fc8c 	uxth.w	ip, ip
 801b20a:	fb07 970a 	mla	r7, r7, sl, r9
 801b20e:	fb00 500a 	mla	r0, r0, sl, r5
 801b212:	b2bf      	uxth	r7, r7
 801b214:	b280      	uxth	r0, r0
 801b216:	f10c 0501 	add.w	r5, ip, #1
 801b21a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b21e:	f107 0901 	add.w	r9, r7, #1
 801b222:	1c45      	adds	r5, r0, #1
 801b224:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b228:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b22c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b230:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b234:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b238:	ea45 0c0c 	orr.w	ip, r5, ip
 801b23c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b240:	ea4c 0c09 	orr.w	ip, ip, r9
 801b244:	f824 c00b 	strh.w	ip, [r4, fp]
 801b248:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b24a:	4401      	add	r1, r0
 801b24c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b24e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b252:	4402      	add	r2, r0
 801b254:	e75e      	b.n	801b114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b256:	b005      	add	sp, #20
 801b258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b25c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b260:	b085      	sub	sp, #20
 801b262:	4693      	mov	fp, r2
 801b264:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b266:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b268:	6870      	ldr	r0, [r6, #4]
 801b26a:	9101      	str	r1, [sp, #4]
 801b26c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b270:	fb00 2404 	mla	r4, r0, r4, r2
 801b274:	6832      	ldr	r2, [r6, #0]
 801b276:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b27a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b27e:	682a      	ldr	r2, [r5, #0]
 801b280:	9202      	str	r2, [sp, #8]
 801b282:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b286:	9a01      	ldr	r2, [sp, #4]
 801b288:	2a00      	cmp	r2, #0
 801b28a:	dc03      	bgt.n	801b294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b28c:	f1bb 0f00 	cmp.w	fp, #0
 801b290:	f340 809a 	ble.w	801b3c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b294:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b296:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b29a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b29e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b2a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b2a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b2a8:	2b00      	cmp	r3, #0
 801b2aa:	dd0c      	ble.n	801b2c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b2ac:	1406      	asrs	r6, r0, #16
 801b2ae:	d405      	bmi.n	801b2bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b2b0:	454e      	cmp	r6, r9
 801b2b2:	da03      	bge.n	801b2bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b2b4:	1416      	asrs	r6, r2, #16
 801b2b6:	d401      	bmi.n	801b2bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b2b8:	4546      	cmp	r6, r8
 801b2ba:	db05      	blt.n	801b2c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b2bc:	4470      	add	r0, lr
 801b2be:	4462      	add	r2, ip
 801b2c0:	3b01      	subs	r3, #1
 801b2c2:	3402      	adds	r4, #2
 801b2c4:	e7f0      	b.n	801b2a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b2c6:	d00f      	beq.n	801b2e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b2c8:	1e5e      	subs	r6, r3, #1
 801b2ca:	fb0e 0706 	mla	r7, lr, r6, r0
 801b2ce:	143f      	asrs	r7, r7, #16
 801b2d0:	d541      	bpl.n	801b356 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b2d2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b2d6:	4698      	mov	r8, r3
 801b2d8:	9603      	str	r6, [sp, #12]
 801b2da:	f1b8 0f00 	cmp.w	r8, #0
 801b2de:	dc56      	bgt.n	801b38e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b2e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b2e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2e8:	9b01      	ldr	r3, [sp, #4]
 801b2ea:	2b00      	cmp	r3, #0
 801b2ec:	dd6c      	ble.n	801b3c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b2ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b2fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b2fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b300:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b304:	eeb0 6a62 	vmov.f32	s12, s5
 801b308:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b30c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b310:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b314:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b318:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b31c:	eeb0 6a43 	vmov.f32	s12, s6
 801b320:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b324:	ee12 2a90 	vmov	r2, s5
 801b328:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b32c:	fb92 fef3 	sdiv	lr, r2, r3
 801b330:	ee13 2a10 	vmov	r2, s6
 801b334:	fb92 fcf3 	sdiv	ip, r2, r3
 801b338:	9b01      	ldr	r3, [sp, #4]
 801b33a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b33e:	3b01      	subs	r3, #1
 801b340:	9301      	str	r3, [sp, #4]
 801b342:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b348:	eeb0 3a67 	vmov.f32	s6, s15
 801b34c:	bf08      	it	eq
 801b34e:	465b      	moveq	r3, fp
 801b350:	eef0 2a47 	vmov.f32	s5, s14
 801b354:	e797      	b.n	801b286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b356:	454f      	cmp	r7, r9
 801b358:	dabb      	bge.n	801b2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b35a:	fb0c 2606 	mla	r6, ip, r6, r2
 801b35e:	1436      	asrs	r6, r6, #16
 801b360:	d4b7      	bmi.n	801b2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b362:	4546      	cmp	r6, r8
 801b364:	dab5      	bge.n	801b2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b366:	461e      	mov	r6, r3
 801b368:	46a0      	mov	r8, r4
 801b36a:	2e00      	cmp	r6, #0
 801b36c:	ddb8      	ble.n	801b2e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b36e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b372:	9902      	ldr	r1, [sp, #8]
 801b374:	1417      	asrs	r7, r2, #16
 801b376:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b37a:	fb0a 9707 	mla	r7, sl, r7, r9
 801b37e:	4470      	add	r0, lr
 801b380:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b384:	f828 7b02 	strh.w	r7, [r8], #2
 801b388:	4462      	add	r2, ip
 801b38a:	3e01      	subs	r6, #1
 801b38c:	e7ed      	b.n	801b36a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b38e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b392:	d414      	bmi.n	801b3be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b394:	68ae      	ldr	r6, [r5, #8]
 801b396:	454e      	cmp	r6, r9
 801b398:	dd11      	ble.n	801b3be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b39a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b39e:	d40e      	bmi.n	801b3be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b3a0:	68ef      	ldr	r7, [r5, #12]
 801b3a2:	4557      	cmp	r7, sl
 801b3a4:	dd0b      	ble.n	801b3be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b3a6:	b236      	sxth	r6, r6
 801b3a8:	fb0a 9606 	mla	r6, sl, r6, r9
 801b3ac:	9f02      	ldr	r7, [sp, #8]
 801b3ae:	f06f 0101 	mvn.w	r1, #1
 801b3b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b3b6:	fb01 f608 	mul.w	r6, r1, r8
 801b3ba:	9903      	ldr	r1, [sp, #12]
 801b3bc:	538f      	strh	r7, [r1, r6]
 801b3be:	4470      	add	r0, lr
 801b3c0:	4462      	add	r2, ip
 801b3c2:	f108 38ff 	add.w	r8, r8, #4294967295
 801b3c6:	e788      	b.n	801b2da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b3c8:	b005      	add	sp, #20
 801b3ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3d2:	b087      	sub	sp, #28
 801b3d4:	468b      	mov	fp, r1
 801b3d6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b3d8:	9203      	str	r2, [sp, #12]
 801b3da:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b3de:	9204      	str	r2, [sp, #16]
 801b3e0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b3e4:	6841      	ldr	r1, [r0, #4]
 801b3e6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b3ea:	fb01 2505 	mla	r5, r1, r5, r2
 801b3ee:	6802      	ldr	r2, [r0, #0]
 801b3f0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b3f4:	f8d9 2000 	ldr.w	r2, [r9]
 801b3f8:	9201      	str	r2, [sp, #4]
 801b3fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b3fe:	f1bb 0f00 	cmp.w	fp, #0
 801b402:	dc03      	bgt.n	801b40c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b404:	9a03      	ldr	r2, [sp, #12]
 801b406:	2a00      	cmp	r2, #0
 801b408:	f340 8159 	ble.w	801b6be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b40c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b40e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b412:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b416:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b41a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b41c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b420:	2b00      	cmp	r3, #0
 801b422:	dd0e      	ble.n	801b442 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b424:	1402      	asrs	r2, r0, #16
 801b426:	d405      	bmi.n	801b434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b428:	42ba      	cmp	r2, r7
 801b42a:	da03      	bge.n	801b434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b42c:	140a      	asrs	r2, r1, #16
 801b42e:	d401      	bmi.n	801b434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b430:	42b2      	cmp	r2, r6
 801b432:	db07      	blt.n	801b444 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b434:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b436:	4410      	add	r0, r2
 801b438:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b43a:	3b01      	subs	r3, #1
 801b43c:	4411      	add	r1, r2
 801b43e:	3502      	adds	r5, #2
 801b440:	e7ee      	b.n	801b420 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b442:	d017      	beq.n	801b474 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b444:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b446:	1e5a      	subs	r2, r3, #1
 801b448:	fb04 0402 	mla	r4, r4, r2, r0
 801b44c:	1424      	asrs	r4, r4, #16
 801b44e:	d409      	bmi.n	801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b450:	42bc      	cmp	r4, r7
 801b452:	da07      	bge.n	801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b454:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b456:	fb04 1202 	mla	r2, r4, r2, r1
 801b45a:	1412      	asrs	r2, r2, #16
 801b45c:	d402      	bmi.n	801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b45e:	42b2      	cmp	r2, r6
 801b460:	f2c0 80bf 	blt.w	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b464:	2700      	movs	r7, #0
 801b466:	19da      	adds	r2, r3, r7
 801b468:	2a00      	cmp	r2, #0
 801b46a:	dc3e      	bgt.n	801b4ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b46c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b470:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b474:	f1bb 0f00 	cmp.w	fp, #0
 801b478:	f340 8121 	ble.w	801b6be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b47c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b480:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b484:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b488:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b48a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b48e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b492:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b496:	eeb0 6a62 	vmov.f32	s12, s5
 801b49a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b49e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b4a6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b4aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b4ae:	eeb0 6a43 	vmov.f32	s12, s6
 801b4b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b4b6:	ee12 2a90 	vmov	r2, s5
 801b4ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b4be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4c2:	ee13 2a10 	vmov	r2, s6
 801b4c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4ca:	9313      	str	r3, [sp, #76]	; 0x4c
 801b4cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b4ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4d2:	9a03      	ldr	r2, [sp, #12]
 801b4d4:	9314      	str	r3, [sp, #80]	; 0x50
 801b4d6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b4da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b4dc:	eeb0 3a67 	vmov.f32	s6, s15
 801b4e0:	bf08      	it	eq
 801b4e2:	4613      	moveq	r3, r2
 801b4e4:	eef0 2a47 	vmov.f32	s5, s14
 801b4e8:	e789      	b.n	801b3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b4ea:	1406      	asrs	r6, r0, #16
 801b4ec:	d42d      	bmi.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4ee:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b4f2:	42b4      	cmp	r4, r6
 801b4f4:	dd29      	ble.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4f6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b4fa:	d426      	bmi.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4fc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b500:	4562      	cmp	r2, ip
 801b502:	dd22      	ble.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b504:	b224      	sxth	r4, r4
 801b506:	9a01      	ldr	r2, [sp, #4]
 801b508:	fb0c 6404 	mla	r4, ip, r4, r6
 801b50c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b510:	0e22      	lsrs	r2, r4, #24
 801b512:	d01a      	beq.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b514:	9e04      	ldr	r6, [sp, #16]
 801b516:	4372      	muls	r2, r6
 801b518:	1c56      	adds	r6, r2, #1
 801b51a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b51e:	1212      	asrs	r2, r2, #8
 801b520:	0a26      	lsrs	r6, r4, #8
 801b522:	2aff      	cmp	r2, #255	; 0xff
 801b524:	9605      	str	r6, [sp, #20]
 801b526:	d116      	bne.n	801b556 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b528:	f06f 0201 	mvn.w	r2, #1
 801b52c:	fb02 fc07 	mul.w	ip, r2, r7
 801b530:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b534:	0962      	lsrs	r2, r4, #5
 801b536:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b53a:	f026 0607 	bic.w	r6, r6, #7
 801b53e:	4316      	orrs	r6, r2
 801b540:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b544:	4326      	orrs	r6, r4
 801b546:	f825 600c 	strh.w	r6, [r5, ip]
 801b54a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b54c:	4410      	add	r0, r2
 801b54e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b550:	3f01      	subs	r7, #1
 801b552:	4411      	add	r1, r2
 801b554:	e787      	b.n	801b466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b556:	f06f 0601 	mvn.w	r6, #1
 801b55a:	437e      	muls	r6, r7
 801b55c:	fa1f fa82 	uxth.w	sl, r2
 801b560:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b564:	9602      	str	r6, [sp, #8]
 801b566:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b56a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b56e:	43d2      	mvns	r2, r2
 801b570:	b2d2      	uxtb	r2, r2
 801b572:	fb1c fc0a 	smulbb	ip, ip, sl
 801b576:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b57a:	fb0e ce02 	mla	lr, lr, r2, ip
 801b57e:	b2e4      	uxtb	r4, r4
 801b580:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b584:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b588:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b58c:	fa5f f888 	uxtb.w	r8, r8
 801b590:	fb14 f40a 	smulbb	r4, r4, sl
 801b594:	fb08 4402 	mla	r4, r8, r2, r4
 801b598:	fa1f fe8e 	uxth.w	lr, lr
 801b59c:	fb16 f60a 	smulbb	r6, r6, sl
 801b5a0:	b2a4      	uxth	r4, r4
 801b5a2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b5a6:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b5aa:	f10e 0201 	add.w	r2, lr, #1
 801b5ae:	1c66      	adds	r6, r4, #1
 801b5b0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b5b4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b5b8:	fa1f fc8c 	uxth.w	ip, ip
 801b5bc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b5c0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b5c4:	ea46 0e0e 	orr.w	lr, r6, lr
 801b5c8:	f10c 0601 	add.w	r6, ip, #1
 801b5cc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b5d0:	0976      	lsrs	r6, r6, #5
 801b5d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b5d6:	9a02      	ldr	r2, [sp, #8]
 801b5d8:	ea4e 0e06 	orr.w	lr, lr, r6
 801b5dc:	f825 e002 	strh.w	lr, [r5, r2]
 801b5e0:	e7b3      	b.n	801b54a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5e2:	f04f 0800 	mov.w	r8, #0
 801b5e6:	eba3 0208 	sub.w	r2, r3, r8
 801b5ea:	2a00      	cmp	r2, #0
 801b5ec:	f77f af3e 	ble.w	801b46c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b5f0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b5f4:	1404      	asrs	r4, r0, #16
 801b5f6:	140a      	asrs	r2, r1, #16
 801b5f8:	fb06 4202 	mla	r2, r6, r2, r4
 801b5fc:	9c01      	ldr	r4, [sp, #4]
 801b5fe:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b602:	0e22      	lsrs	r2, r4, #24
 801b604:	d016      	beq.n	801b634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b606:	9e04      	ldr	r6, [sp, #16]
 801b608:	4372      	muls	r2, r6
 801b60a:	1c56      	adds	r6, r2, #1
 801b60c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b610:	1212      	asrs	r2, r2, #8
 801b612:	2aff      	cmp	r2, #255	; 0xff
 801b614:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b618:	d113      	bne.n	801b642 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b61a:	0962      	lsrs	r2, r4, #5
 801b61c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b620:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b624:	f026 0607 	bic.w	r6, r6, #7
 801b628:	4316      	orrs	r6, r2
 801b62a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b62e:	4326      	orrs	r6, r4
 801b630:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b634:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b636:	4410      	add	r0, r2
 801b638:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b63a:	f108 0801 	add.w	r8, r8, #1
 801b63e:	4411      	add	r1, r2
 801b640:	e7d1      	b.n	801b5e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b642:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b646:	fa1f fa82 	uxth.w	sl, r2
 801b64a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b64e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b652:	43d2      	mvns	r2, r2
 801b654:	b2d2      	uxtb	r2, r2
 801b656:	fb17 f70a 	smulbb	r7, r7, sl
 801b65a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b65e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b662:	b2e4      	uxtb	r4, r4
 801b664:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b668:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b66c:	fa5f fe8e 	uxtb.w	lr, lr
 801b670:	fb14 f40a 	smulbb	r4, r4, sl
 801b674:	fb0e 4402 	mla	r4, lr, r2, r4
 801b678:	b2f6      	uxtb	r6, r6
 801b67a:	fa1f fc8c 	uxth.w	ip, ip
 801b67e:	fb16 f60a 	smulbb	r6, r6, sl
 801b682:	b2a4      	uxth	r4, r4
 801b684:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b688:	fb07 6702 	mla	r7, r7, r2, r6
 801b68c:	f10c 0201 	add.w	r2, ip, #1
 801b690:	1c66      	adds	r6, r4, #1
 801b692:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b696:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b69a:	b2bf      	uxth	r7, r7
 801b69c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b6a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6a4:	ea46 0c0c 	orr.w	ip, r6, ip
 801b6a8:	1c7e      	adds	r6, r7, #1
 801b6aa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b6ae:	0976      	lsrs	r6, r6, #5
 801b6b0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b6b4:	ea4c 0c06 	orr.w	ip, ip, r6
 801b6b8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b6bc:	e7ba      	b.n	801b634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b6be:	b007      	add	sp, #28
 801b6c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6c8:	b085      	sub	sp, #20
 801b6ca:	468b      	mov	fp, r1
 801b6cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b6ce:	9203      	str	r2, [sp, #12]
 801b6d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b6d4:	6841      	ldr	r1, [r0, #4]
 801b6d6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b6da:	fb01 2404 	mla	r4, r1, r4, r2
 801b6de:	6802      	ldr	r2, [r0, #0]
 801b6e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b6e4:	f8d8 2000 	ldr.w	r2, [r8]
 801b6e8:	9201      	str	r2, [sp, #4]
 801b6ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b6ee:	f1bb 0f00 	cmp.w	fp, #0
 801b6f2:	dc03      	bgt.n	801b6fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b6f4:	9a03      	ldr	r2, [sp, #12]
 801b6f6:	2a00      	cmp	r2, #0
 801b6f8:	f340 814f 	ble.w	801b99a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b6fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b6fe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b702:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b706:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b70a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b70c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b710:	2b00      	cmp	r3, #0
 801b712:	dd0e      	ble.n	801b732 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b714:	1408      	asrs	r0, r1, #16
 801b716:	d405      	bmi.n	801b724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b718:	42b8      	cmp	r0, r7
 801b71a:	da03      	bge.n	801b724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b71c:	1410      	asrs	r0, r2, #16
 801b71e:	d401      	bmi.n	801b724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b720:	42b0      	cmp	r0, r6
 801b722:	db07      	blt.n	801b734 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b724:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b726:	4401      	add	r1, r0
 801b728:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b72a:	3b01      	subs	r3, #1
 801b72c:	4402      	add	r2, r0
 801b72e:	3402      	adds	r4, #2
 801b730:	e7ee      	b.n	801b710 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b732:	d017      	beq.n	801b764 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b734:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b736:	1e58      	subs	r0, r3, #1
 801b738:	fb05 1500 	mla	r5, r5, r0, r1
 801b73c:	142d      	asrs	r5, r5, #16
 801b73e:	d409      	bmi.n	801b754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b740:	42bd      	cmp	r5, r7
 801b742:	da07      	bge.n	801b754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b744:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b746:	fb05 2000 	mla	r0, r5, r0, r2
 801b74a:	1400      	asrs	r0, r0, #16
 801b74c:	d402      	bmi.n	801b754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b74e:	42b0      	cmp	r0, r6
 801b750:	f2c0 80ba 	blt.w	801b8c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b754:	2600      	movs	r6, #0
 801b756:	1998      	adds	r0, r3, r6
 801b758:	2800      	cmp	r0, #0
 801b75a:	dc3e      	bgt.n	801b7da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b75c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b760:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b764:	f1bb 0f00 	cmp.w	fp, #0
 801b768:	f340 8117 	ble.w	801b99a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b76c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b770:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b774:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b778:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b77a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b77e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b782:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b786:	eeb0 6a62 	vmov.f32	s12, s5
 801b78a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b78e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b792:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b796:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b79a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b79e:	eeb0 6a43 	vmov.f32	s12, s6
 801b7a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7a6:	ee12 2a90 	vmov	r2, s5
 801b7aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7b2:	ee13 2a10 	vmov	r2, s6
 801b7b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7ba:	9311      	str	r3, [sp, #68]	; 0x44
 801b7bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7c2:	9a03      	ldr	r2, [sp, #12]
 801b7c4:	9312      	str	r3, [sp, #72]	; 0x48
 801b7c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b7ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7cc:	eeb0 3a67 	vmov.f32	s6, s15
 801b7d0:	bf08      	it	eq
 801b7d2:	4613      	moveq	r3, r2
 801b7d4:	eef0 2a47 	vmov.f32	s5, s14
 801b7d8:	e789      	b.n	801b6ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b7da:	140f      	asrs	r7, r1, #16
 801b7dc:	d424      	bmi.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7de:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b7e2:	42bd      	cmp	r5, r7
 801b7e4:	dd20      	ble.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b7ea:	d41d      	bmi.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7ec:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b7f0:	4560      	cmp	r0, ip
 801b7f2:	dd19      	ble.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7f4:	b22d      	sxth	r5, r5
 801b7f6:	fb0c 7505 	mla	r5, ip, r5, r7
 801b7fa:	9801      	ldr	r0, [sp, #4]
 801b7fc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b800:	0e07      	lsrs	r7, r0, #24
 801b802:	2fff      	cmp	r7, #255	; 0xff
 801b804:	d116      	bne.n	801b834 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b806:	f06f 0501 	mvn.w	r5, #1
 801b80a:	fb05 f706 	mul.w	r7, r5, r6
 801b80e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b812:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b816:	0945      	lsrs	r5, r0, #5
 801b818:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b81c:	ea4c 0505 	orr.w	r5, ip, r5
 801b820:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b824:	4305      	orrs	r5, r0
 801b826:	53e5      	strh	r5, [r4, r7]
 801b828:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b82a:	4401      	add	r1, r0
 801b82c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b82e:	3e01      	subs	r6, #1
 801b830:	4402      	add	r2, r0
 801b832:	e790      	b.n	801b756 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b834:	b2fd      	uxtb	r5, r7
 801b836:	2f00      	cmp	r7, #0
 801b838:	d0f6      	beq.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b83a:	f06f 0701 	mvn.w	r7, #1
 801b83e:	4377      	muls	r7, r6
 801b840:	fa1f f985 	uxth.w	r9, r5
 801b844:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b848:	9702      	str	r7, [sp, #8]
 801b84a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b84e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b852:	43ed      	mvns	r5, r5
 801b854:	b2ed      	uxtb	r5, r5
 801b856:	fb17 f709 	smulbb	r7, r7, r9
 801b85a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b85e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b862:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b866:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b86a:	b2c0      	uxtb	r0, r0
 801b86c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b870:	fa5f fe8e 	uxtb.w	lr, lr
 801b874:	fb10 f009 	smulbb	r0, r0, r9
 801b878:	fb0e 0005 	mla	r0, lr, r5, r0
 801b87c:	b280      	uxth	r0, r0
 801b87e:	fa1f fc8c 	uxth.w	ip, ip
 801b882:	fb1a fa09 	smulbb	sl, sl, r9
 801b886:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b88a:	fb07 a705 	mla	r7, r7, r5, sl
 801b88e:	f100 0a01 	add.w	sl, r0, #1
 801b892:	f10c 0501 	add.w	r5, ip, #1
 801b896:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b89a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b89e:	b2bf      	uxth	r7, r7
 801b8a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b8a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b8a8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b8ac:	f107 0a01 	add.w	sl, r7, #1
 801b8b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b8b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b8b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b8bc:	9802      	ldr	r0, [sp, #8]
 801b8be:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b8c2:	f824 c000 	strh.w	ip, [r4, r0]
 801b8c6:	e7af      	b.n	801b828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8c8:	f04f 0e00 	mov.w	lr, #0
 801b8cc:	eba3 000e 	sub.w	r0, r3, lr
 801b8d0:	2800      	cmp	r0, #0
 801b8d2:	f77f af43 	ble.w	801b75c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b8d6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b8da:	140d      	asrs	r5, r1, #16
 801b8dc:	1410      	asrs	r0, r2, #16
 801b8de:	fb06 5000 	mla	r0, r6, r0, r5
 801b8e2:	9d01      	ldr	r5, [sp, #4]
 801b8e4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b8e8:	0e2e      	lsrs	r6, r5, #24
 801b8ea:	2eff      	cmp	r6, #255	; 0xff
 801b8ec:	d112      	bne.n	801b914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b8ee:	482c      	ldr	r0, [pc, #176]	; (801b9a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b8f0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b8f4:	0968      	lsrs	r0, r5, #5
 801b8f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b8fa:	4330      	orrs	r0, r6
 801b8fc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b900:	4328      	orrs	r0, r5
 801b902:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b906:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b908:	4401      	add	r1, r0
 801b90a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b90c:	f10e 0e01 	add.w	lr, lr, #1
 801b910:	4402      	add	r2, r0
 801b912:	e7db      	b.n	801b8cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b914:	b2f0      	uxtb	r0, r6
 801b916:	2e00      	cmp	r6, #0
 801b918:	d0f5      	beq.n	801b906 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b91a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b91e:	fa1f f980 	uxth.w	r9, r0
 801b922:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b926:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b92a:	43c0      	mvns	r0, r0
 801b92c:	b2c0      	uxtb	r0, r0
 801b92e:	fb16 f609 	smulbb	r6, r6, r9
 801b932:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b936:	fb07 6700 	mla	r7, r7, r0, r6
 801b93a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b93e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b942:	b2ed      	uxtb	r5, r5
 801b944:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b948:	fa5f fc8c 	uxtb.w	ip, ip
 801b94c:	fb15 f509 	smulbb	r5, r5, r9
 801b950:	fb0c 5500 	mla	r5, ip, r0, r5
 801b954:	b2bf      	uxth	r7, r7
 801b956:	fb1a fa09 	smulbb	sl, sl, r9
 801b95a:	b2ad      	uxth	r5, r5
 801b95c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b960:	fb06 a600 	mla	r6, r6, r0, sl
 801b964:	1c78      	adds	r0, r7, #1
 801b966:	f105 0a01 	add.w	sl, r5, #1
 801b96a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b96e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b972:	b2b6      	uxth	r6, r6
 801b974:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b978:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b97c:	ea4a 0707 	orr.w	r7, sl, r7
 801b980:	f106 0a01 	add.w	sl, r6, #1
 801b984:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b988:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b98c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b990:	ea47 070a 	orr.w	r7, r7, sl
 801b994:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b998:	e7b5      	b.n	801b906 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b99a:	b005      	add	sp, #20
 801b99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9a0:	fffff800 	.word	0xfffff800

0801b9a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9a8:	b087      	sub	sp, #28
 801b9aa:	468b      	mov	fp, r1
 801b9ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b9ae:	9203      	str	r2, [sp, #12]
 801b9b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b9b4:	9204      	str	r2, [sp, #16]
 801b9b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b9ba:	6841      	ldr	r1, [r0, #4]
 801b9bc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b9c0:	fb01 2404 	mla	r4, r1, r4, r2
 801b9c4:	6802      	ldr	r2, [r0, #0]
 801b9c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b9ca:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b9ce:	3201      	adds	r2, #1
 801b9d0:	f022 0201 	bic.w	r2, r2, #1
 801b9d4:	9200      	str	r2, [sp, #0]
 801b9d6:	f8d9 2000 	ldr.w	r2, [r9]
 801b9da:	9201      	str	r2, [sp, #4]
 801b9dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b9e0:	f1bb 0f00 	cmp.w	fp, #0
 801b9e4:	dc03      	bgt.n	801b9ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b9e6:	9a03      	ldr	r2, [sp, #12]
 801b9e8:	2a00      	cmp	r2, #0
 801b9ea:	f340 8169 	ble.w	801bcc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b9ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b9f0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b9f4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b9f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b9fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b9fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba02:	2b00      	cmp	r3, #0
 801ba04:	dd0e      	ble.n	801ba24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ba06:	1402      	asrs	r2, r0, #16
 801ba08:	d405      	bmi.n	801ba16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba0a:	42ba      	cmp	r2, r7
 801ba0c:	da03      	bge.n	801ba16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba0e:	140a      	asrs	r2, r1, #16
 801ba10:	d401      	bmi.n	801ba16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba12:	42b2      	cmp	r2, r6
 801ba14:	db07      	blt.n	801ba26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ba16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba18:	4410      	add	r0, r2
 801ba1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba1c:	3b01      	subs	r3, #1
 801ba1e:	4411      	add	r1, r2
 801ba20:	3402      	adds	r4, #2
 801ba22:	e7ee      	b.n	801ba02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ba24:	d017      	beq.n	801ba56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ba26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ba28:	1e5a      	subs	r2, r3, #1
 801ba2a:	fb05 0502 	mla	r5, r5, r2, r0
 801ba2e:	142d      	asrs	r5, r5, #16
 801ba30:	d409      	bmi.n	801ba46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ba32:	42bd      	cmp	r5, r7
 801ba34:	da07      	bge.n	801ba46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ba36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba38:	fb05 1202 	mla	r2, r5, r2, r1
 801ba3c:	1412      	asrs	r2, r2, #16
 801ba3e:	d402      	bmi.n	801ba46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ba40:	42b2      	cmp	r2, r6
 801ba42:	f2c0 80c7 	blt.w	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ba46:	2700      	movs	r7, #0
 801ba48:	19da      	adds	r2, r3, r7
 801ba4a:	2a00      	cmp	r2, #0
 801ba4c:	dc3e      	bgt.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ba4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba56:	f1bb 0f00 	cmp.w	fp, #0
 801ba5a:	f340 8131 	ble.w	801bcc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ba5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba6c:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba78:	eeb0 6a62 	vmov.f32	s12, s5
 801ba7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba88:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba90:	eeb0 6a43 	vmov.f32	s12, s6
 801ba94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba98:	ee12 2a90 	vmov	r2, s5
 801ba9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801baa0:	fb92 f3f3 	sdiv	r3, r2, r3
 801baa4:	ee13 2a10 	vmov	r2, s6
 801baa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801baac:	9313      	str	r3, [sp, #76]	; 0x4c
 801baae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bab0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bab4:	9a03      	ldr	r2, [sp, #12]
 801bab6:	9314      	str	r3, [sp, #80]	; 0x50
 801bab8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801babc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801babe:	eeb0 3a67 	vmov.f32	s6, s15
 801bac2:	bf08      	it	eq
 801bac4:	4613      	moveq	r3, r2
 801bac6:	eef0 2a47 	vmov.f32	s5, s14
 801baca:	e789      	b.n	801b9e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bacc:	1405      	asrs	r5, r0, #16
 801bace:	d435      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bad0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bad4:	42aa      	cmp	r2, r5
 801bad6:	dd31      	ble.n	801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bad8:	140e      	asrs	r6, r1, #16
 801bada:	d42f      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801badc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bae0:	42b2      	cmp	r2, r6
 801bae2:	dd2b      	ble.n	801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bae4:	9a00      	ldr	r2, [sp, #0]
 801bae6:	fb06 5502 	mla	r5, r6, r2, r5
 801baea:	086a      	lsrs	r2, r5, #1
 801baec:	9e01      	ldr	r6, [sp, #4]
 801baee:	5cb2      	ldrb	r2, [r6, r2]
 801baf0:	07ee      	lsls	r6, r5, #31
 801baf2:	bf54      	ite	pl
 801baf4:	f002 020f 	andpl.w	r2, r2, #15
 801baf8:	1112      	asrmi	r2, r2, #4
 801bafa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bafe:	b2d2      	uxtb	r2, r2
 801bb00:	b1e2      	cbz	r2, 801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb02:	9d04      	ldr	r5, [sp, #16]
 801bb04:	436a      	muls	r2, r5
 801bb06:	1c55      	adds	r5, r2, #1
 801bb08:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bb0c:	4d6e      	ldr	r5, [pc, #440]	; (801bcc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bb0e:	682d      	ldr	r5, [r5, #0]
 801bb10:	1212      	asrs	r2, r2, #8
 801bb12:	0a2e      	lsrs	r6, r5, #8
 801bb14:	2aff      	cmp	r2, #255	; 0xff
 801bb16:	9605      	str	r6, [sp, #20]
 801bb18:	d116      	bne.n	801bb48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bb1a:	f06f 0201 	mvn.w	r2, #1
 801bb1e:	fb02 fc07 	mul.w	ip, r2, r7
 801bb22:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bb26:	096a      	lsrs	r2, r5, #5
 801bb28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb2c:	f026 0607 	bic.w	r6, r6, #7
 801bb30:	4316      	orrs	r6, r2
 801bb32:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bb36:	432e      	orrs	r6, r5
 801bb38:	f824 600c 	strh.w	r6, [r4, ip]
 801bb3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb3e:	4410      	add	r0, r2
 801bb40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb42:	3f01      	subs	r7, #1
 801bb44:	4411      	add	r1, r2
 801bb46:	e77f      	b.n	801ba48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801bb48:	f06f 0601 	mvn.w	r6, #1
 801bb4c:	437e      	muls	r6, r7
 801bb4e:	fa1f fa82 	uxth.w	sl, r2
 801bb52:	f834 8006 	ldrh.w	r8, [r4, r6]
 801bb56:	9602      	str	r6, [sp, #8]
 801bb58:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bb5c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801bb60:	43d2      	mvns	r2, r2
 801bb62:	b2d2      	uxtb	r2, r2
 801bb64:	fb1c fc0a 	smulbb	ip, ip, sl
 801bb68:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bb6c:	fb0e ce02 	mla	lr, lr, r2, ip
 801bb70:	b2ed      	uxtb	r5, r5
 801bb72:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bb76:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bb7a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bb7e:	fa5f f888 	uxtb.w	r8, r8
 801bb82:	fb15 f50a 	smulbb	r5, r5, sl
 801bb86:	fb08 5502 	mla	r5, r8, r2, r5
 801bb8a:	fa1f fe8e 	uxth.w	lr, lr
 801bb8e:	fb16 f60a 	smulbb	r6, r6, sl
 801bb92:	b2ad      	uxth	r5, r5
 801bb94:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bb98:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bb9c:	f10e 0201 	add.w	r2, lr, #1
 801bba0:	1c6e      	adds	r6, r5, #1
 801bba2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bba6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bbaa:	fa1f fc8c 	uxth.w	ip, ip
 801bbae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bbb2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bbb6:	ea46 0e0e 	orr.w	lr, r6, lr
 801bbba:	f10c 0601 	add.w	r6, ip, #1
 801bbbe:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bbc2:	0976      	lsrs	r6, r6, #5
 801bbc4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bbc8:	9a02      	ldr	r2, [sp, #8]
 801bbca:	ea4e 0e06 	orr.w	lr, lr, r6
 801bbce:	f824 e002 	strh.w	lr, [r4, r2]
 801bbd2:	e7b3      	b.n	801bb3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbd4:	f04f 0800 	mov.w	r8, #0
 801bbd8:	eba3 0208 	sub.w	r2, r3, r8
 801bbdc:	2a00      	cmp	r2, #0
 801bbde:	f77f af36 	ble.w	801ba4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bbe2:	9e00      	ldr	r6, [sp, #0]
 801bbe4:	1402      	asrs	r2, r0, #16
 801bbe6:	140d      	asrs	r5, r1, #16
 801bbe8:	fb06 2505 	mla	r5, r6, r5, r2
 801bbec:	086a      	lsrs	r2, r5, #1
 801bbee:	9e01      	ldr	r6, [sp, #4]
 801bbf0:	5cb2      	ldrb	r2, [r6, r2]
 801bbf2:	07ed      	lsls	r5, r5, #31
 801bbf4:	bf54      	ite	pl
 801bbf6:	f002 020f 	andpl.w	r2, r2, #15
 801bbfa:	1112      	asrmi	r2, r2, #4
 801bbfc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc00:	b2d2      	uxtb	r2, r2
 801bc02:	b1c2      	cbz	r2, 801bc36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bc04:	9d04      	ldr	r5, [sp, #16]
 801bc06:	436a      	muls	r2, r5
 801bc08:	1c55      	adds	r5, r2, #1
 801bc0a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bc0e:	4d2e      	ldr	r5, [pc, #184]	; (801bcc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bc10:	1212      	asrs	r2, r2, #8
 801bc12:	682e      	ldr	r6, [r5, #0]
 801bc14:	2aff      	cmp	r2, #255	; 0xff
 801bc16:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bc1a:	d113      	bne.n	801bc44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bc1c:	0972      	lsrs	r2, r6, #5
 801bc1e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bc22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc26:	f025 0507 	bic.w	r5, r5, #7
 801bc2a:	4315      	orrs	r5, r2
 801bc2c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bc30:	4335      	orrs	r5, r6
 801bc32:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bc36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc38:	4410      	add	r0, r2
 801bc3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc3c:	f108 0801 	add.w	r8, r8, #1
 801bc40:	4411      	add	r1, r2
 801bc42:	e7c9      	b.n	801bbd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bc44:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bc48:	fa1f fa82 	uxth.w	sl, r2
 801bc4c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bc50:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bc54:	43d2      	mvns	r2, r2
 801bc56:	b2d2      	uxtb	r2, r2
 801bc58:	fb17 f70a 	smulbb	r7, r7, sl
 801bc5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc60:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bc64:	b2f6      	uxtb	r6, r6
 801bc66:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bc6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bc6e:	fa5f fe8e 	uxtb.w	lr, lr
 801bc72:	fb16 f60a 	smulbb	r6, r6, sl
 801bc76:	fb0e 6602 	mla	r6, lr, r2, r6
 801bc7a:	b2ed      	uxtb	r5, r5
 801bc7c:	fa1f fc8c 	uxth.w	ip, ip
 801bc80:	fb15 f50a 	smulbb	r5, r5, sl
 801bc84:	b2b6      	uxth	r6, r6
 801bc86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc8a:	fb07 5702 	mla	r7, r7, r2, r5
 801bc8e:	f10c 0201 	add.w	r2, ip, #1
 801bc92:	1c75      	adds	r5, r6, #1
 801bc94:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bc98:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bc9c:	b2bf      	uxth	r7, r7
 801bc9e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bca2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bca6:	ea45 0c0c 	orr.w	ip, r5, ip
 801bcaa:	1c7d      	adds	r5, r7, #1
 801bcac:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bcb0:	096d      	lsrs	r5, r5, #5
 801bcb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bcb6:	ea4c 0c05 	orr.w	ip, ip, r5
 801bcba:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bcbe:	e7ba      	b.n	801bc36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bcc0:	b007      	add	sp, #28
 801bcc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcc6:	bf00      	nop
 801bcc8:	2000dc84 	.word	0x2000dc84

0801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcd0:	b087      	sub	sp, #28
 801bcd2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bfe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bcd6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bcd8:	9205      	str	r2, [sp, #20]
 801bcda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bcde:	9101      	str	r1, [sp, #4]
 801bce0:	6841      	ldr	r1, [r0, #4]
 801bce2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bce6:	fb01 2404 	mla	r4, r1, r4, r2
 801bcea:	6802      	ldr	r2, [r0, #0]
 801bcec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bcf0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bcf4:	3201      	adds	r2, #1
 801bcf6:	f022 0201 	bic.w	r2, r2, #1
 801bcfa:	9202      	str	r2, [sp, #8]
 801bcfc:	f8db 2000 	ldr.w	r2, [fp]
 801bd00:	9203      	str	r2, [sp, #12]
 801bd02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bd06:	9a01      	ldr	r2, [sp, #4]
 801bd08:	2a00      	cmp	r2, #0
 801bd0a:	dc03      	bgt.n	801bd14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bd0c:	9a05      	ldr	r2, [sp, #20]
 801bd0e:	2a00      	cmp	r2, #0
 801bd10:	f340 8162 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bd14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bd16:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bd1a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bd1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bd22:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bd24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bd28:	2b00      	cmp	r3, #0
 801bd2a:	dd0e      	ble.n	801bd4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bd2c:	1402      	asrs	r2, r0, #16
 801bd2e:	d405      	bmi.n	801bd3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bd30:	42ba      	cmp	r2, r7
 801bd32:	da03      	bge.n	801bd3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bd34:	140a      	asrs	r2, r1, #16
 801bd36:	d401      	bmi.n	801bd3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bd38:	42b2      	cmp	r2, r6
 801bd3a:	db07      	blt.n	801bd4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bd3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd3e:	4410      	add	r0, r2
 801bd40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd42:	3b01      	subs	r3, #1
 801bd44:	4411      	add	r1, r2
 801bd46:	3402      	adds	r4, #2
 801bd48:	e7ee      	b.n	801bd28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bd4a:	d017      	beq.n	801bd7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bd4c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bd4e:	1e5a      	subs	r2, r3, #1
 801bd50:	fb05 0502 	mla	r5, r5, r2, r0
 801bd54:	142d      	asrs	r5, r5, #16
 801bd56:	d409      	bmi.n	801bd6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd58:	42bd      	cmp	r5, r7
 801bd5a:	da07      	bge.n	801bd6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bd5e:	fb05 1202 	mla	r2, r5, r2, r1
 801bd62:	1412      	asrs	r2, r2, #16
 801bd64:	d402      	bmi.n	801bd6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd66:	42b2      	cmp	r2, r6
 801bd68:	f2c0 80c3 	blt.w	801bef2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bd6c:	2500      	movs	r5, #0
 801bd6e:	195a      	adds	r2, r3, r5
 801bd70:	2a00      	cmp	r2, #0
 801bd72:	dc3f      	bgt.n	801bdf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bd74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd7c:	9b01      	ldr	r3, [sp, #4]
 801bd7e:	2b00      	cmp	r3, #0
 801bd80:	f340 812a 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bd84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd92:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd9a:	eeb0 6a62 	vmov.f32	s12, s5
 801bd9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bda2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bda6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bdaa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bdae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bdb2:	eeb0 6a43 	vmov.f32	s12, s6
 801bdb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdba:	ee12 2a90 	vmov	r2, s5
 801bdbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bdc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdc6:	ee13 2a10 	vmov	r2, s6
 801bdca:	9313      	str	r3, [sp, #76]	; 0x4c
 801bdcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdce:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdd2:	9314      	str	r3, [sp, #80]	; 0x50
 801bdd4:	9b01      	ldr	r3, [sp, #4]
 801bdd6:	9a05      	ldr	r2, [sp, #20]
 801bdd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bddc:	3b01      	subs	r3, #1
 801bdde:	9301      	str	r3, [sp, #4]
 801bde0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bde4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bde6:	eeb0 3a67 	vmov.f32	s6, s15
 801bdea:	bf08      	it	eq
 801bdec:	4613      	moveq	r3, r2
 801bdee:	eef0 2a47 	vmov.f32	s5, s14
 801bdf2:	e788      	b.n	801bd06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bdf4:	1406      	asrs	r6, r0, #16
 801bdf6:	d42c      	bmi.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdf8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bdfc:	42b2      	cmp	r2, r6
 801bdfe:	dd28      	ble.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be00:	140f      	asrs	r7, r1, #16
 801be02:	d426      	bmi.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be04:	f8db 200c 	ldr.w	r2, [fp, #12]
 801be08:	42ba      	cmp	r2, r7
 801be0a:	dd22      	ble.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be0c:	9a02      	ldr	r2, [sp, #8]
 801be0e:	fb07 6602 	mla	r6, r7, r2, r6
 801be12:	0872      	lsrs	r2, r6, #1
 801be14:	9f03      	ldr	r7, [sp, #12]
 801be16:	5cba      	ldrb	r2, [r7, r2]
 801be18:	07f6      	lsls	r6, r6, #31
 801be1a:	bf54      	ite	pl
 801be1c:	f002 020f 	andpl.w	r2, r2, #15
 801be20:	1112      	asrmi	r2, r2, #4
 801be22:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801be26:	b2d2      	uxtb	r2, r2
 801be28:	2aff      	cmp	r2, #255	; 0xff
 801be2a:	d118      	bne.n	801be5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801be2c:	f8d8 2000 	ldr.w	r2, [r8]
 801be30:	f06f 0601 	mvn.w	r6, #1
 801be34:	fb06 f705 	mul.w	r7, r6, r5
 801be38:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801be3c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801be40:	0956      	lsrs	r6, r2, #5
 801be42:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801be46:	ea4c 0606 	orr.w	r6, ip, r6
 801be4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801be4e:	4316      	orrs	r6, r2
 801be50:	53e6      	strh	r6, [r4, r7]
 801be52:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be54:	4410      	add	r0, r2
 801be56:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be58:	3d01      	subs	r5, #1
 801be5a:	4411      	add	r1, r2
 801be5c:	e787      	b.n	801bd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801be5e:	2a00      	cmp	r2, #0
 801be60:	d0f7      	beq.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be62:	f06f 0601 	mvn.w	r6, #1
 801be66:	436e      	muls	r6, r5
 801be68:	f8d8 c000 	ldr.w	ip, [r8]
 801be6c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801be70:	9604      	str	r6, [sp, #16]
 801be72:	fa1f f982 	uxth.w	r9, r2
 801be76:	ea4f 272e 	mov.w	r7, lr, asr #8
 801be7a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801be7e:	43d2      	mvns	r2, r2
 801be80:	b2d2      	uxtb	r2, r2
 801be82:	fb16 f609 	smulbb	r6, r6, r9
 801be86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801be8a:	fb07 6702 	mla	r7, r7, r2, r6
 801be8e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801be92:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801be96:	fa5f fc8c 	uxtb.w	ip, ip
 801be9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801be9e:	fa5f fe8e 	uxtb.w	lr, lr
 801bea2:	fb1c fc09 	smulbb	ip, ip, r9
 801bea6:	fb0e cc02 	mla	ip, lr, r2, ip
 801beaa:	b2bf      	uxth	r7, r7
 801beac:	fb1a fa09 	smulbb	sl, sl, r9
 801beb0:	fa1f fc8c 	uxth.w	ip, ip
 801beb4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801beb8:	fb06 a602 	mla	r6, r6, r2, sl
 801bebc:	1c7a      	adds	r2, r7, #1
 801bebe:	f10c 0a01 	add.w	sl, ip, #1
 801bec2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bec6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801beca:	b2b6      	uxth	r6, r6
 801becc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bed0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bed4:	ea4a 0707 	orr.w	r7, sl, r7
 801bed8:	f106 0a01 	add.w	sl, r6, #1
 801bedc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bee0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bee4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bee8:	9a04      	ldr	r2, [sp, #16]
 801beea:	ea47 070a 	orr.w	r7, r7, sl
 801beee:	52a7      	strh	r7, [r4, r2]
 801bef0:	e7af      	b.n	801be52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bef2:	f04f 0e00 	mov.w	lr, #0
 801bef6:	eba3 020e 	sub.w	r2, r3, lr
 801befa:	2a00      	cmp	r2, #0
 801befc:	f77f af3a 	ble.w	801bd74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bf00:	9e02      	ldr	r6, [sp, #8]
 801bf02:	1402      	asrs	r2, r0, #16
 801bf04:	140d      	asrs	r5, r1, #16
 801bf06:	fb06 2505 	mla	r5, r6, r5, r2
 801bf0a:	086a      	lsrs	r2, r5, #1
 801bf0c:	9e03      	ldr	r6, [sp, #12]
 801bf0e:	5cb2      	ldrb	r2, [r6, r2]
 801bf10:	07ed      	lsls	r5, r5, #31
 801bf12:	bf54      	ite	pl
 801bf14:	f002 020f 	andpl.w	r2, r2, #15
 801bf18:	1112      	asrmi	r2, r2, #4
 801bf1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bf1e:	b2d2      	uxtb	r2, r2
 801bf20:	2aff      	cmp	r2, #255	; 0xff
 801bf22:	d115      	bne.n	801bf50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bf24:	f8d8 5000 	ldr.w	r5, [r8]
 801bf28:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bf2c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bf30:	096a      	lsrs	r2, r5, #5
 801bf32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf36:	4332      	orrs	r2, r6
 801bf38:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bf3c:	432a      	orrs	r2, r5
 801bf3e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bf42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bf44:	4410      	add	r0, r2
 801bf46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf48:	f10e 0e01 	add.w	lr, lr, #1
 801bf4c:	4411      	add	r1, r2
 801bf4e:	e7d2      	b.n	801bef6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bf50:	2a00      	cmp	r2, #0
 801bf52:	d0f6      	beq.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bf54:	f8d8 7000 	ldr.w	r7, [r8]
 801bf58:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bf5c:	fa1f f982 	uxth.w	r9, r2
 801bf60:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bf64:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bf68:	43d2      	mvns	r2, r2
 801bf6a:	b2d2      	uxtb	r2, r2
 801bf6c:	fb15 f509 	smulbb	r5, r5, r9
 801bf70:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf74:	fb06 5602 	mla	r6, r6, r2, r5
 801bf78:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bf7c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bf80:	b2ff      	uxtb	r7, r7
 801bf82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf86:	fa5f fc8c 	uxtb.w	ip, ip
 801bf8a:	fb17 f709 	smulbb	r7, r7, r9
 801bf8e:	fb0c 7702 	mla	r7, ip, r2, r7
 801bf92:	b2b6      	uxth	r6, r6
 801bf94:	fb1a fa09 	smulbb	sl, sl, r9
 801bf98:	b2bf      	uxth	r7, r7
 801bf9a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf9e:	fb05 a502 	mla	r5, r5, r2, sl
 801bfa2:	1c72      	adds	r2, r6, #1
 801bfa4:	f107 0a01 	add.w	sl, r7, #1
 801bfa8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bfac:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bfb0:	b2ad      	uxth	r5, r5
 801bfb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bfb6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bfba:	ea4a 0606 	orr.w	r6, sl, r6
 801bfbe:	f105 0a01 	add.w	sl, r5, #1
 801bfc2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bfc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bfca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bfce:	ea46 060a 	orr.w	r6, r6, sl
 801bfd2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bfd6:	e7b4      	b.n	801bf42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bfd8:	b007      	add	sp, #28
 801bfda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfde:	bf00      	nop
 801bfe0:	2000dc84 	.word	0x2000dc84

0801bfe4 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bfe4:	4770      	bx	lr

0801bfe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bfe6:	4770      	bx	lr

0801bfe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bfe8:	4770      	bx	lr

0801bfea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bfea:	4770      	bx	lr

0801bfec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bfec:	4770      	bx	lr

0801bfee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bfee:	4770      	bx	lr

0801bff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bff0:	4770      	bx	lr

0801bff2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bff2:	4770      	bx	lr

0801bff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bff4:	4770      	bx	lr

0801bff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bff6:	4770      	bx	lr

0801bff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bff8:	4770      	bx	lr

0801bffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bffa:	4770      	bx	lr

0801bffc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bffc:	4770      	bx	lr

0801bffe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bffe:	4770      	bx	lr

0801c000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c000:	4770      	bx	lr

0801c002 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c002:	4770      	bx	lr

0801c004 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c004:	4770      	bx	lr

0801c006 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c006:	4770      	bx	lr

0801c008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c008:	4770      	bx	lr

0801c00a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c00a:	4770      	bx	lr

0801c00c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c00c:	4770      	bx	lr

0801c00e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c00e:	4770      	bx	lr

0801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c010:	4770      	bx	lr

0801c012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c012:	4770      	bx	lr

0801c014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c014:	4770      	bx	lr

0801c016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c016:	4770      	bx	lr

0801c018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c018:	4770      	bx	lr

0801c01a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c01a:	4770      	bx	lr

0801c01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c01c:	4770      	bx	lr

0801c01e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c01e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c022:	b088      	sub	sp, #32
 801c024:	ac08      	add	r4, sp, #32
 801c026:	4606      	mov	r6, r0
 801c028:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c02c:	4620      	mov	r0, r4
 801c02e:	4688      	mov	r8, r1
 801c030:	4691      	mov	r9, r2
 801c032:	f7fd fc65 	bl	8019900 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c036:	6833      	ldr	r3, [r6, #0]
 801c038:	4605      	mov	r5, r0
 801c03a:	4620      	mov	r0, r4
 801c03c:	699f      	ldr	r7, [r3, #24]
 801c03e:	f7fd fb73 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c042:	4682      	mov	sl, r0
 801c044:	4620      	mov	r0, r4
 801c046:	f7fd fba3 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c04a:	9500      	str	r5, [sp, #0]
 801c04c:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c050:	464b      	mov	r3, r9
 801c052:	a806      	add	r0, sp, #24
 801c054:	4642      	mov	r2, r8
 801c056:	4631      	mov	r1, r6
 801c058:	47b8      	blx	r7
 801c05a:	4628      	mov	r0, r5
 801c05c:	b008      	add	sp, #32
 801c05e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801c064 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c064:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c068:	2300      	movs	r3, #0
 801c06a:	9300      	str	r3, [sp, #0]
 801c06c:	4b3d      	ldr	r3, [pc, #244]	; (801c164 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c06e:	781b      	ldrb	r3, [r3, #0]
 801c070:	2b00      	cmp	r3, #0
 801c072:	d137      	bne.n	801c0e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c074:	4a3c      	ldr	r2, [pc, #240]	; (801c168 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c076:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c07a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c07e:	2b00      	cmp	r3, #0
 801c080:	d132      	bne.n	801c0e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c082:	4b3a      	ldr	r3, [pc, #232]	; (801c16c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c084:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c088:	6808      	ldr	r0, [r1, #0]
 801c08a:	6849      	ldr	r1, [r1, #4]
 801c08c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c090:	ac02      	add	r4, sp, #8
 801c092:	ab02      	add	r3, sp, #8
 801c094:	c303      	stmia	r3!, {r0, r1}
 801c096:	4669      	mov	r1, sp
 801c098:	4620      	mov	r0, r4
 801c09a:	f7fa f947 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c09e:	4668      	mov	r0, sp
 801c0a0:	f7fa f900 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0a4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c0a8:	f8bd 2000 	ldrh.w	r2, [sp]
 801c0ac:	4d30      	ldr	r5, [pc, #192]	; (801c170 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c0ae:	4413      	add	r3, r2
 801c0b0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c0b4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c0b8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c0bc:	6828      	ldr	r0, [r5, #0]
 801c0be:	4413      	add	r3, r2
 801c0c0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c0c4:	6803      	ldr	r3, [r0, #0]
 801c0c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c0c8:	4798      	blx	r3
 801c0ca:	f010 0f01 	tst.w	r0, #1
 801c0ce:	462f      	mov	r7, r5
 801c0d0:	d00c      	beq.n	801c0ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c0d2:	6828      	ldr	r0, [r5, #0]
 801c0d4:	6803      	ldr	r3, [r0, #0]
 801c0d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c0da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c0dc:	4798      	blx	r3
 801c0de:	b004      	add	sp, #16
 801c0e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c0e4:	4a21      	ldr	r2, [pc, #132]	; (801c16c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c0e6:	e7c6      	b.n	801c076 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c0e8:	4b1f      	ldr	r3, [pc, #124]	; (801c168 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c0ea:	e7cb      	b.n	801c084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c0ec:	6838      	ldr	r0, [r7, #0]
 801c0ee:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c0f2:	6803      	ldr	r3, [r0, #0]
 801c0f4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c0f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c0fa:	4798      	blx	r3
 801c0fc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c100:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c104:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c108:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c10c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c110:	6838      	ldr	r0, [r7, #0]
 801c112:	6803      	ldr	r3, [r0, #0]
 801c114:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c116:	4798      	blx	r3
 801c118:	4a13      	ldr	r2, [pc, #76]	; (801c168 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c11a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c11e:	8813      	ldrh	r3, [r2, #0]
 801c120:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c124:	fb03 1404 	mla	r4, r3, r4, r1
 801c128:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c12c:	435d      	muls	r5, r3
 801c12e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c132:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c136:	4691      	mov	r9, r2
 801c138:	6838      	ldr	r0, [r7, #0]
 801c13a:	42ac      	cmp	r4, r5
 801c13c:	6803      	ldr	r3, [r0, #0]
 801c13e:	d20e      	bcs.n	801c15e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c140:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c144:	4632      	mov	r2, r6
 801c146:	4643      	mov	r3, r8
 801c148:	4621      	mov	r1, r4
 801c14a:	47d0      	blx	sl
 801c14c:	f8b9 3000 	ldrh.w	r3, [r9]
 801c150:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c154:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c158:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c15c:	e7ec      	b.n	801c138 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c15e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c160:	4798      	blx	r3
 801c162:	e7bc      	b.n	801c0de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c164:	2000dc6c 	.word	0x2000dc6c
 801c168:	2000dc6e 	.word	0x2000dc6e
 801c16c:	2000dc70 	.word	0x2000dc70
 801c170:	2000dc74 	.word	0x2000dc74

0801c174 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c178:	b08b      	sub	sp, #44	; 0x2c
 801c17a:	460f      	mov	r7, r1
 801c17c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c180:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c184:	4616      	mov	r6, r2
 801c186:	f1bb 0f00 	cmp.w	fp, #0
 801c18a:	d049      	beq.n	801c220 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c18c:	6810      	ldr	r0, [r2, #0]
 801c18e:	6851      	ldr	r1, [r2, #4]
 801c190:	ad06      	add	r5, sp, #24
 801c192:	c503      	stmia	r5!, {r0, r1}
 801c194:	6818      	ldr	r0, [r3, #0]
 801c196:	6859      	ldr	r1, [r3, #4]
 801c198:	ad08      	add	r5, sp, #32
 801c19a:	c503      	stmia	r5!, {r0, r1}
 801c19c:	a806      	add	r0, sp, #24
 801c19e:	f7fa f881 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c1a2:	4631      	mov	r1, r6
 801c1a4:	a808      	add	r0, sp, #32
 801c1a6:	f7fa f8c1 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c1aa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c1ae:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c1b2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c1b6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c1ba:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c1be:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c1c2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c1c6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c1ca:	4f5f      	ldr	r7, [pc, #380]	; (801c348 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c1cc:	440a      	add	r2, r1
 801c1ce:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c1d2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c1d6:	6838      	ldr	r0, [r7, #0]
 801c1d8:	4413      	add	r3, r2
 801c1da:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c1de:	6803      	ldr	r3, [r0, #0]
 801c1e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c1e2:	4798      	blx	r3
 801c1e4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c1e8:	46b9      	mov	r9, r7
 801c1ea:	d01c      	beq.n	801c226 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801c1ec:	f010 0f04 	tst.w	r0, #4
 801c1f0:	d01d      	beq.n	801c22e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c1f2:	f8d9 0000 	ldr.w	r0, [r9]
 801c1f6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c1fa:	6801      	ldr	r1, [r0, #0]
 801c1fc:	f8cd b00c 	str.w	fp, [sp, #12]
 801c200:	2700      	movs	r7, #0
 801c202:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c206:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c20a:	9402      	str	r4, [sp, #8]
 801c20c:	b2ad      	uxth	r5, r5
 801c20e:	fa1f f488 	uxth.w	r4, r8
 801c212:	9501      	str	r5, [sp, #4]
 801c214:	9400      	str	r4, [sp, #0]
 801c216:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c218:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c21c:	4631      	mov	r1, r6
 801c21e:	47a0      	blx	r4
 801c220:	b00b      	add	sp, #44	; 0x2c
 801c222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c226:	b914      	cbnz	r4, 801c22e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c228:	f010 0f01 	tst.w	r0, #1
 801c22c:	e7e0      	b.n	801c1f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801c22e:	f8d9 0000 	ldr.w	r0, [r9]
 801c232:	6803      	ldr	r3, [r0, #0]
 801c234:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c236:	4798      	blx	r3
 801c238:	4b44      	ldr	r3, [pc, #272]	; (801c34c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c23a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c23e:	881a      	ldrh	r2, [r3, #0]
 801c240:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c244:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c248:	fb02 1404 	mla	r4, r2, r4, r1
 801c24c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c250:	469a      	mov	sl, r3
 801c252:	fb05 f502 	mul.w	r5, r5, r2
 801c256:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c25a:	d059      	beq.n	801c310 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c25c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c260:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c264:	fa1f f28b 	uxth.w	r2, fp
 801c268:	fa1f f989 	uxth.w	r9, r9
 801c26c:	469e      	mov	lr, r3
 801c26e:	42ac      	cmp	r4, r5
 801c270:	d264      	bcs.n	801c33c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c272:	eb04 0a07 	add.w	sl, r4, r7
 801c276:	4554      	cmp	r4, sl
 801c278:	d23d      	bcs.n	801c2f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c27a:	8821      	ldrh	r1, [r4, #0]
 801c27c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c280:	1208      	asrs	r0, r1, #8
 801c282:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c286:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c28a:	fb10 f009 	smulbb	r0, r0, r9
 801c28e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c292:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c296:	00c9      	lsls	r1, r1, #3
 801c298:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c29c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c2a0:	10d8      	asrs	r0, r3, #3
 801c2a2:	b2c9      	uxtb	r1, r1
 801c2a4:	00db      	lsls	r3, r3, #3
 801c2a6:	fa1f fc8c 	uxth.w	ip, ip
 801c2aa:	fb1b fb09 	smulbb	fp, fp, r9
 801c2ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c2b2:	b2db      	uxtb	r3, r3
 801c2b4:	fb11 f109 	smulbb	r1, r1, r9
 801c2b8:	fb00 b002 	mla	r0, r0, r2, fp
 801c2bc:	fb03 1302 	mla	r3, r3, r2, r1
 801c2c0:	f10c 0b01 	add.w	fp, ip, #1
 801c2c4:	b29b      	uxth	r3, r3
 801c2c6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c2ca:	b280      	uxth	r0, r0
 801c2cc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c2d0:	f103 0c01 	add.w	ip, r3, #1
 801c2d4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c2d8:	1c43      	adds	r3, r0, #1
 801c2da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c2de:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c2e2:	0940      	lsrs	r0, r0, #5
 801c2e4:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c2e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2ec:	ea4c 0c00 	orr.w	ip, ip, r0
 801c2f0:	f824 cb02 	strh.w	ip, [r4], #2
 801c2f4:	e7bf      	b.n	801c276 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c2f6:	f8be 3000 	ldrh.w	r3, [lr]
 801c2fa:	eba3 0308 	sub.w	r3, r3, r8
 801c2fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c302:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c306:	eba3 0308 	sub.w	r3, r3, r8
 801c30a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c30e:	e7ae      	b.n	801c26e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c310:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c314:	f8d9 0000 	ldr.w	r0, [r9]
 801c318:	42ac      	cmp	r4, r5
 801c31a:	6803      	ldr	r3, [r0, #0]
 801c31c:	d20e      	bcs.n	801c33c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c31e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c322:	4632      	mov	r2, r6
 801c324:	463b      	mov	r3, r7
 801c326:	4621      	mov	r1, r4
 801c328:	47c0      	blx	r8
 801c32a:	f8ba 3000 	ldrh.w	r3, [sl]
 801c32e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c332:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c336:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c33a:	e7eb      	b.n	801c314 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c33c:	4b02      	ldr	r3, [pc, #8]	; (801c348 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c33e:	6818      	ldr	r0, [r3, #0]
 801c340:	6803      	ldr	r3, [r0, #0]
 801c342:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c344:	4798      	blx	r3
 801c346:	e76b      	b.n	801c220 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c348:	2000dc74 	.word	0x2000dc74
 801c34c:	2000dc6e 	.word	0x2000dc6e

0801c350 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c350:	b510      	push	{r4, lr}
 801c352:	2178      	movs	r1, #120	; 0x78
 801c354:	4604      	mov	r4, r0
 801c356:	f009 faf2 	bl	802593e <_ZdlPvj>
 801c35a:	4620      	mov	r0, r4
 801c35c:	bd10      	pop	{r4, pc}

0801c35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c35e:	b510      	push	{r4, lr}
 801c360:	2104      	movs	r1, #4
 801c362:	4604      	mov	r4, r0
 801c364:	f009 faeb 	bl	802593e <_ZdlPvj>
 801c368:	4620      	mov	r0, r4
 801c36a:	bd10      	pop	{r4, pc}

0801c36c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c36c:	b510      	push	{r4, lr}
 801c36e:	2104      	movs	r1, #4
 801c370:	4604      	mov	r4, r0
 801c372:	f009 fae4 	bl	802593e <_ZdlPvj>
 801c376:	4620      	mov	r0, r4
 801c378:	bd10      	pop	{r4, pc}

0801c37a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c37a:	b510      	push	{r4, lr}
 801c37c:	2104      	movs	r1, #4
 801c37e:	4604      	mov	r4, r0
 801c380:	f009 fadd 	bl	802593e <_ZdlPvj>
 801c384:	4620      	mov	r0, r4
 801c386:	bd10      	pop	{r4, pc}

0801c388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c388:	b510      	push	{r4, lr}
 801c38a:	2104      	movs	r1, #4
 801c38c:	4604      	mov	r4, r0
 801c38e:	f009 fad6 	bl	802593e <_ZdlPvj>
 801c392:	4620      	mov	r0, r4
 801c394:	bd10      	pop	{r4, pc}

0801c396 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c396:	b510      	push	{r4, lr}
 801c398:	2104      	movs	r1, #4
 801c39a:	4604      	mov	r4, r0
 801c39c:	f009 facf 	bl	802593e <_ZdlPvj>
 801c3a0:	4620      	mov	r0, r4
 801c3a2:	bd10      	pop	{r4, pc}

0801c3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c3a4:	b510      	push	{r4, lr}
 801c3a6:	2104      	movs	r1, #4
 801c3a8:	4604      	mov	r4, r0
 801c3aa:	f009 fac8 	bl	802593e <_ZdlPvj>
 801c3ae:	4620      	mov	r0, r4
 801c3b0:	bd10      	pop	{r4, pc}

0801c3b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c3b2:	b510      	push	{r4, lr}
 801c3b4:	2104      	movs	r1, #4
 801c3b6:	4604      	mov	r4, r0
 801c3b8:	f009 fac1 	bl	802593e <_ZdlPvj>
 801c3bc:	4620      	mov	r0, r4
 801c3be:	bd10      	pop	{r4, pc}

0801c3c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c3c0:	b510      	push	{r4, lr}
 801c3c2:	2104      	movs	r1, #4
 801c3c4:	4604      	mov	r4, r0
 801c3c6:	f009 faba 	bl	802593e <_ZdlPvj>
 801c3ca:	4620      	mov	r0, r4
 801c3cc:	bd10      	pop	{r4, pc}

0801c3ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c3ce:	b510      	push	{r4, lr}
 801c3d0:	2104      	movs	r1, #4
 801c3d2:	4604      	mov	r4, r0
 801c3d4:	f009 fab3 	bl	802593e <_ZdlPvj>
 801c3d8:	4620      	mov	r0, r4
 801c3da:	bd10      	pop	{r4, pc}

0801c3dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c3dc:	b510      	push	{r4, lr}
 801c3de:	2104      	movs	r1, #4
 801c3e0:	4604      	mov	r4, r0
 801c3e2:	f009 faac 	bl	802593e <_ZdlPvj>
 801c3e6:	4620      	mov	r0, r4
 801c3e8:	bd10      	pop	{r4, pc}

0801c3ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c3ea:	b510      	push	{r4, lr}
 801c3ec:	2104      	movs	r1, #4
 801c3ee:	4604      	mov	r4, r0
 801c3f0:	f009 faa5 	bl	802593e <_ZdlPvj>
 801c3f4:	4620      	mov	r0, r4
 801c3f6:	bd10      	pop	{r4, pc}

0801c3f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c3f8:	b510      	push	{r4, lr}
 801c3fa:	2104      	movs	r1, #4
 801c3fc:	4604      	mov	r4, r0
 801c3fe:	f009 fa9e 	bl	802593e <_ZdlPvj>
 801c402:	4620      	mov	r0, r4
 801c404:	bd10      	pop	{r4, pc}

0801c406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c406:	b510      	push	{r4, lr}
 801c408:	2104      	movs	r1, #4
 801c40a:	4604      	mov	r4, r0
 801c40c:	f009 fa97 	bl	802593e <_ZdlPvj>
 801c410:	4620      	mov	r0, r4
 801c412:	bd10      	pop	{r4, pc}

0801c414 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c414:	b510      	push	{r4, lr}
 801c416:	2104      	movs	r1, #4
 801c418:	4604      	mov	r4, r0
 801c41a:	f009 fa90 	bl	802593e <_ZdlPvj>
 801c41e:	4620      	mov	r0, r4
 801c420:	bd10      	pop	{r4, pc}

0801c422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c422:	b510      	push	{r4, lr}
 801c424:	2104      	movs	r1, #4
 801c426:	4604      	mov	r4, r0
 801c428:	f009 fa89 	bl	802593e <_ZdlPvj>
 801c42c:	4620      	mov	r0, r4
 801c42e:	bd10      	pop	{r4, pc}

0801c430 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c430:	b510      	push	{r4, lr}
 801c432:	2104      	movs	r1, #4
 801c434:	4604      	mov	r4, r0
 801c436:	f009 fa82 	bl	802593e <_ZdlPvj>
 801c43a:	4620      	mov	r0, r4
 801c43c:	bd10      	pop	{r4, pc}

0801c43e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c43e:	b510      	push	{r4, lr}
 801c440:	2104      	movs	r1, #4
 801c442:	4604      	mov	r4, r0
 801c444:	f009 fa7b 	bl	802593e <_ZdlPvj>
 801c448:	4620      	mov	r0, r4
 801c44a:	bd10      	pop	{r4, pc}

0801c44c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c44c:	b510      	push	{r4, lr}
 801c44e:	2104      	movs	r1, #4
 801c450:	4604      	mov	r4, r0
 801c452:	f009 fa74 	bl	802593e <_ZdlPvj>
 801c456:	4620      	mov	r0, r4
 801c458:	bd10      	pop	{r4, pc}

0801c45a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c45a:	b510      	push	{r4, lr}
 801c45c:	2104      	movs	r1, #4
 801c45e:	4604      	mov	r4, r0
 801c460:	f009 fa6d 	bl	802593e <_ZdlPvj>
 801c464:	4620      	mov	r0, r4
 801c466:	bd10      	pop	{r4, pc}

0801c468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c468:	b510      	push	{r4, lr}
 801c46a:	2104      	movs	r1, #4
 801c46c:	4604      	mov	r4, r0
 801c46e:	f009 fa66 	bl	802593e <_ZdlPvj>
 801c472:	4620      	mov	r0, r4
 801c474:	bd10      	pop	{r4, pc}

0801c476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c476:	b510      	push	{r4, lr}
 801c478:	2104      	movs	r1, #4
 801c47a:	4604      	mov	r4, r0
 801c47c:	f009 fa5f 	bl	802593e <_ZdlPvj>
 801c480:	4620      	mov	r0, r4
 801c482:	bd10      	pop	{r4, pc}

0801c484 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c484:	b510      	push	{r4, lr}
 801c486:	2104      	movs	r1, #4
 801c488:	4604      	mov	r4, r0
 801c48a:	f009 fa58 	bl	802593e <_ZdlPvj>
 801c48e:	4620      	mov	r0, r4
 801c490:	bd10      	pop	{r4, pc}

0801c492 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c492:	b510      	push	{r4, lr}
 801c494:	2104      	movs	r1, #4
 801c496:	4604      	mov	r4, r0
 801c498:	f009 fa51 	bl	802593e <_ZdlPvj>
 801c49c:	4620      	mov	r0, r4
 801c49e:	bd10      	pop	{r4, pc}

0801c4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c4a0:	b510      	push	{r4, lr}
 801c4a2:	2104      	movs	r1, #4
 801c4a4:	4604      	mov	r4, r0
 801c4a6:	f009 fa4a 	bl	802593e <_ZdlPvj>
 801c4aa:	4620      	mov	r0, r4
 801c4ac:	bd10      	pop	{r4, pc}

0801c4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c4ae:	b510      	push	{r4, lr}
 801c4b0:	2104      	movs	r1, #4
 801c4b2:	4604      	mov	r4, r0
 801c4b4:	f009 fa43 	bl	802593e <_ZdlPvj>
 801c4b8:	4620      	mov	r0, r4
 801c4ba:	bd10      	pop	{r4, pc}

0801c4bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c4bc:	b510      	push	{r4, lr}
 801c4be:	2104      	movs	r1, #4
 801c4c0:	4604      	mov	r4, r0
 801c4c2:	f009 fa3c 	bl	802593e <_ZdlPvj>
 801c4c6:	4620      	mov	r0, r4
 801c4c8:	bd10      	pop	{r4, pc}

0801c4ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c4ca:	b510      	push	{r4, lr}
 801c4cc:	2104      	movs	r1, #4
 801c4ce:	4604      	mov	r4, r0
 801c4d0:	f009 fa35 	bl	802593e <_ZdlPvj>
 801c4d4:	4620      	mov	r0, r4
 801c4d6:	bd10      	pop	{r4, pc}

0801c4d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c4d8:	b510      	push	{r4, lr}
 801c4da:	2104      	movs	r1, #4
 801c4dc:	4604      	mov	r4, r0
 801c4de:	f009 fa2e 	bl	802593e <_ZdlPvj>
 801c4e2:	4620      	mov	r0, r4
 801c4e4:	bd10      	pop	{r4, pc}
	...

0801c4e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4ec:	b091      	sub	sp, #68	; 0x44
 801c4ee:	469b      	mov	fp, r3
 801c4f0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c4f4:	4616      	mov	r6, r2
 801c4f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c4fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c4fe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c502:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c506:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c50a:	4604      	mov	r4, r0
 801c50c:	460d      	mov	r5, r1
 801c50e:	4640      	mov	r0, r8
 801c510:	4659      	mov	r1, fp
 801c512:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c516:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c51a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c51e:	f7f3 ffb7 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801c522:	4631      	mov	r1, r6
 801c524:	4640      	mov	r0, r8
 801c526:	f7f3 ffb3 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801c52a:	4b74      	ldr	r3, [pc, #464]	; (801c6fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c52c:	8818      	ldrh	r0, [r3, #0]
 801c52e:	4b74      	ldr	r3, [pc, #464]	; (801c700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c530:	8819      	ldrh	r1, [r3, #0]
 801c532:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c536:	2b00      	cmp	r3, #0
 801c538:	b202      	sxth	r2, r0
 801c53a:	b20e      	sxth	r6, r1
 801c53c:	da07      	bge.n	801c54e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c53e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c542:	4463      	add	r3, ip
 801c544:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c548:	2300      	movs	r3, #0
 801c54a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c54e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c552:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c556:	1ad2      	subs	r2, r2, r3
 801c558:	4594      	cmp	ip, r2
 801c55a:	bfc4      	itt	gt
 801c55c:	1ac2      	subgt	r2, r0, r3
 801c55e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c562:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c566:	2a00      	cmp	r2, #0
 801c568:	da07      	bge.n	801c57a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c56a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c56e:	4462      	add	r2, ip
 801c570:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c574:	2200      	movs	r2, #0
 801c576:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c57a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c57e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c582:	eba6 060a 	sub.w	r6, r6, sl
 801c586:	42b2      	cmp	r2, r6
 801c588:	bfc4      	itt	gt
 801c58a:	eba1 020a 	subgt.w	r2, r1, sl
 801c58e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c592:	4a5c      	ldr	r2, [pc, #368]	; (801c704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c594:	7812      	ldrb	r2, [r2, #0]
 801c596:	b9a2      	cbnz	r2, 801c5c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c598:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c59c:	4286      	cmp	r6, r0
 801c59e:	4640      	mov	r0, r8
 801c5a0:	9303      	str	r3, [sp, #12]
 801c5a2:	bf14      	ite	ne
 801c5a4:	2600      	movne	r6, #0
 801c5a6:	2601      	moveq	r6, #1
 801c5a8:	f7f3 ffb5 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c5ac:	9b03      	ldr	r3, [sp, #12]
 801c5ae:	b160      	cbz	r0, 801c5ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c5b0:	2300      	movs	r3, #0
 801c5b2:	8023      	strh	r3, [r4, #0]
 801c5b4:	8063      	strh	r3, [r4, #2]
 801c5b6:	80a3      	strh	r3, [r4, #4]
 801c5b8:	4620      	mov	r0, r4
 801c5ba:	80e3      	strh	r3, [r4, #6]
 801c5bc:	b011      	add	sp, #68	; 0x44
 801c5be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c5c6:	428e      	cmp	r6, r1
 801c5c8:	e7e9      	b.n	801c59e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c5ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c5ce:	9205      	str	r2, [sp, #20]
 801c5d0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c5d4:	9206      	str	r2, [sp, #24]
 801c5d6:	f8bb 2000 	ldrh.w	r2, [fp]
 801c5da:	900e      	str	r0, [sp, #56]	; 0x38
 801c5dc:	1a9b      	subs	r3, r3, r2
 801c5de:	b21b      	sxth	r3, r3
 801c5e0:	9303      	str	r3, [sp, #12]
 801c5e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c5e6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c5ea:	ebaa 0a03 	sub.w	sl, sl, r3
 801c5ee:	fa0f f38a 	sxth.w	r3, sl
 801c5f2:	9304      	str	r3, [sp, #16]
 801c5f4:	9b03      	ldr	r3, [sp, #12]
 801c5f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c5fa:	9b04      	ldr	r3, [sp, #16]
 801c5fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c600:	9b05      	ldr	r3, [sp, #20]
 801c602:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c606:	a90e      	add	r1, sp, #56	; 0x38
 801c608:	9b06      	ldr	r3, [sp, #24]
 801c60a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c60e:	a80c      	add	r0, sp, #48	; 0x30
 801c610:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c614:	f7f9 fe8a 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c618:	4640      	mov	r0, r8
 801c61a:	f7f9 fe43 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c61e:	a80e      	add	r0, sp, #56	; 0x38
 801c620:	f7f9 fe40 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c624:	4b38      	ldr	r3, [pc, #224]	; (801c708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c626:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c62a:	881b      	ldrh	r3, [r3, #0]
 801c62c:	9307      	str	r3, [sp, #28]
 801c62e:	682b      	ldr	r3, [r5, #0]
 801c630:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c636:	4628      	mov	r0, r5
 801c638:	4798      	blx	r3
 801c63a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c63e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c642:	4681      	mov	r9, r0
 801c644:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c648:	f8db 0000 	ldr.w	r0, [fp]
 801c64c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c64e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c652:	6803      	ldr	r3, [r0, #0]
 801c654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c656:	4798      	blx	r3
 801c658:	4607      	mov	r7, r0
 801c65a:	f8db 0000 	ldr.w	r0, [fp]
 801c65e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c662:	6803      	ldr	r3, [r0, #0]
 801c664:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c668:	9109      	str	r1, [sp, #36]	; 0x24
 801c66a:	9208      	str	r2, [sp, #32]
 801c66c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c66e:	4798      	blx	r3
 801c670:	f010 0f01 	tst.w	r0, #1
 801c674:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c678:	d012      	beq.n	801c6a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c67a:	f8db 0000 	ldr.w	r0, [fp]
 801c67e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c682:	6803      	ldr	r3, [r0, #0]
 801c684:	9200      	str	r2, [sp, #0]
 801c686:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c688:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c68c:	462b      	mov	r3, r5
 801c68e:	47b0      	blx	r6
 801c690:	9b03      	ldr	r3, [sp, #12]
 801c692:	8023      	strh	r3, [r4, #0]
 801c694:	9b04      	ldr	r3, [sp, #16]
 801c696:	8063      	strh	r3, [r4, #2]
 801c698:	9b05      	ldr	r3, [sp, #20]
 801c69a:	80a3      	strh	r3, [r4, #4]
 801c69c:	9b06      	ldr	r3, [sp, #24]
 801c69e:	e78b      	b.n	801c5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c6a0:	fb09 f202 	mul.w	r2, r9, r2
 801c6a4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c6a8:	440f      	add	r7, r1
 801c6aa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c6ae:	b166      	cbz	r6, 801c6ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6b0:	9a07      	ldr	r2, [sp, #28]
 801c6b2:	4592      	cmp	sl, r2
 801c6b4:	d109      	bne.n	801c6ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6b6:	f8db 0000 	ldr.w	r0, [fp]
 801c6ba:	6802      	ldr	r2, [r0, #0]
 801c6bc:	fb09 f303 	mul.w	r3, r9, r3
 801c6c0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c6c2:	4629      	mov	r1, r5
 801c6c4:	463a      	mov	r2, r7
 801c6c6:	47b0      	blx	r6
 801c6c8:	e7e2      	b.n	801c690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6ca:	fb0a f303 	mul.w	r3, sl, r3
 801c6ce:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c6d2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c6d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c6da:	4545      	cmp	r5, r8
 801c6dc:	d2d8      	bcs.n	801c690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6de:	f8db 0000 	ldr.w	r0, [fp]
 801c6e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c6e6:	6802      	ldr	r2, [r0, #0]
 801c6e8:	4629      	mov	r1, r5
 801c6ea:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c6ee:	005b      	lsls	r3, r3, #1
 801c6f0:	463a      	mov	r2, r7
 801c6f2:	47d0      	blx	sl
 801c6f4:	444f      	add	r7, r9
 801c6f6:	4435      	add	r5, r6
 801c6f8:	e7ef      	b.n	801c6da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c6fa:	bf00      	nop
 801c6fc:	2000dc68 	.word	0x2000dc68
 801c700:	2000dc6a 	.word	0x2000dc6a
 801c704:	2000dc6c 	.word	0x2000dc6c
 801c708:	2000dc6e 	.word	0x2000dc6e
 801c70c:	2000dc74 	.word	0x2000dc74

0801c710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c710:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c712:	4606      	mov	r6, r0
 801c714:	b087      	sub	sp, #28
 801c716:	460c      	mov	r4, r1
 801c718:	4617      	mov	r7, r2
 801c71a:	461d      	mov	r5, r3
 801c71c:	b333      	cbz	r3, 801c76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c71e:	4608      	mov	r0, r1
 801c720:	f7f3 fef9 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c724:	bb10      	cbnz	r0, 801c76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c726:	6820      	ldr	r0, [r4, #0]
 801c728:	6861      	ldr	r1, [r4, #4]
 801c72a:	4c1c      	ldr	r4, [pc, #112]	; (801c79c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c72c:	ab04      	add	r3, sp, #16
 801c72e:	c303      	stmia	r3!, {r0, r1}
 801c730:	a804      	add	r0, sp, #16
 801c732:	f7f9 fdb7 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c736:	6820      	ldr	r0, [r4, #0]
 801c738:	6803      	ldr	r3, [r0, #0]
 801c73a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c73c:	4798      	blx	r3
 801c73e:	2dff      	cmp	r5, #255	; 0xff
 801c740:	d016      	beq.n	801c770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c742:	f010 0f08 	tst.w	r0, #8
 801c746:	6820      	ldr	r0, [r4, #0]
 801c748:	d015      	beq.n	801c776 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c74a:	2400      	movs	r4, #0
 801c74c:	6801      	ldr	r1, [r0, #0]
 801c74e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c752:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c756:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c75a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c75e:	9401      	str	r4, [sp, #4]
 801c760:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c764:	9400      	str	r4, [sp, #0]
 801c766:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c768:	4639      	mov	r1, r7
 801c76a:	47a0      	blx	r4
 801c76c:	b007      	add	sp, #28
 801c76e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c770:	f010 0f02 	tst.w	r0, #2
 801c774:	e7e7      	b.n	801c746 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c776:	6803      	ldr	r3, [r0, #0]
 801c778:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c77a:	4798      	blx	r3
 801c77c:	4b08      	ldr	r3, [pc, #32]	; (801c7a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c77e:	881a      	ldrh	r2, [r3, #0]
 801c780:	6833      	ldr	r3, [r6, #0]
 801c782:	e9cd 7500 	strd	r7, r5, [sp]
 801c786:	4601      	mov	r1, r0
 801c788:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c78a:	4630      	mov	r0, r6
 801c78c:	ab04      	add	r3, sp, #16
 801c78e:	47a8      	blx	r5
 801c790:	6820      	ldr	r0, [r4, #0]
 801c792:	6803      	ldr	r3, [r0, #0]
 801c794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c796:	4798      	blx	r3
 801c798:	e7e8      	b.n	801c76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c79a:	bf00      	nop
 801c79c:	2000dc74 	.word	0x2000dc74
 801c7a0:	2000dc6e 	.word	0x2000dc6e

0801c7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c7a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c7ac:	9e08      	ldr	r6, [sp, #32]
 801c7ae:	4688      	mov	r8, r1
 801c7b0:	4614      	mov	r4, r2
 801c7b2:	461d      	mov	r5, r3
 801c7b4:	2f00      	cmp	r7, #0
 801c7b6:	f000 80a9 	beq.w	801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7ba:	4618      	mov	r0, r3
 801c7bc:	f7f3 feab 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c7c0:	2800      	cmp	r0, #0
 801c7c2:	f040 80a3 	bne.w	801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7c6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c7ca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c7ce:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c7d2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c7d6:	fb04 1303 	mla	r3, r4, r3, r1
 801c7da:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c7de:	4365      	muls	r5, r4
 801c7e0:	2fff      	cmp	r7, #255	; 0xff
 801c7e2:	eba4 0200 	sub.w	r2, r4, r0
 801c7e6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c7ea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c7ee:	d04a      	beq.n	801c886 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c7f0:	b2bc      	uxth	r4, r7
 801c7f2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c7f6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c7fa:	fa5f f788 	uxtb.w	r7, r8
 801c7fe:	b2f3      	uxtb	r3, r6
 801c800:	0040      	lsls	r0, r0, #1
 801c802:	fb0e fe04 	mul.w	lr, lr, r4
 801c806:	4367      	muls	r7, r4
 801c808:	4363      	muls	r3, r4
 801c80a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c80e:	fa1f fc8c 	uxth.w	ip, ip
 801c812:	42a9      	cmp	r1, r5
 801c814:	d27a      	bcs.n	801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c816:	eb01 0900 	add.w	r9, r1, r0
 801c81a:	4549      	cmp	r1, r9
 801c81c:	d231      	bcs.n	801c882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c81e:	880a      	ldrh	r2, [r1, #0]
 801c820:	1214      	asrs	r4, r2, #8
 801c822:	10d6      	asrs	r6, r2, #3
 801c824:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c828:	00d2      	lsls	r2, r2, #3
 801c82a:	b2d2      	uxtb	r2, r2
 801c82c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c830:	fb14 f40c 	smulbb	r4, r4, ip
 801c834:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c838:	4474      	add	r4, lr
 801c83a:	fb12 f20c 	smulbb	r2, r2, ip
 801c83e:	b2a4      	uxth	r4, r4
 801c840:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c844:	441a      	add	r2, r3
 801c846:	b292      	uxth	r2, r2
 801c848:	f104 0a01 	add.w	sl, r4, #1
 801c84c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c850:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c854:	fb16 f60c 	smulbb	r6, r6, ip
 801c858:	f102 0a01 	add.w	sl, r2, #1
 801c85c:	443e      	add	r6, r7
 801c85e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c862:	b2b6      	uxth	r6, r6
 801c864:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c868:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c86c:	4322      	orrs	r2, r4
 801c86e:	1c74      	adds	r4, r6, #1
 801c870:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c874:	0976      	lsrs	r6, r6, #5
 801c876:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c87a:	4332      	orrs	r2, r6
 801c87c:	f821 2b02 	strh.w	r2, [r1], #2
 801c880:	e7cb      	b.n	801c81a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c882:	4441      	add	r1, r8
 801c884:	e7c5      	b.n	801c812 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c886:	4f22      	ldr	r7, [pc, #136]	; (801c910 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c888:	0973      	lsrs	r3, r6, #5
 801c88a:	ea08 0707 	and.w	r7, r8, r7
 801c88e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c892:	433b      	orrs	r3, r7
 801c894:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c898:	4333      	orrs	r3, r6
 801c89a:	07e7      	lsls	r7, r4, #31
 801c89c:	b29b      	uxth	r3, r3
 801c89e:	d50b      	bpl.n	801c8b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c8a0:	0040      	lsls	r0, r0, #1
 801c8a2:	0052      	lsls	r2, r2, #1
 801c8a4:	42a9      	cmp	r1, r5
 801c8a6:	d231      	bcs.n	801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8a8:	180c      	adds	r4, r1, r0
 801c8aa:	42a1      	cmp	r1, r4
 801c8ac:	d202      	bcs.n	801c8b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c8ae:	f821 3b02 	strh.w	r3, [r1], #2
 801c8b2:	e7fa      	b.n	801c8aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c8b4:	4411      	add	r1, r2
 801c8b6:	e7f5      	b.n	801c8a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c8b8:	078e      	lsls	r6, r1, #30
 801c8ba:	d008      	beq.n	801c8ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c8bc:	0066      	lsls	r6, r4, #1
 801c8be:	460a      	mov	r2, r1
 801c8c0:	42aa      	cmp	r2, r5
 801c8c2:	d202      	bcs.n	801c8ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c8c4:	8013      	strh	r3, [r2, #0]
 801c8c6:	4432      	add	r2, r6
 801c8c8:	e7fa      	b.n	801c8c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c8ca:	3102      	adds	r1, #2
 801c8cc:	3801      	subs	r0, #1
 801c8ce:	07c2      	lsls	r2, r0, #31
 801c8d0:	d50b      	bpl.n	801c8ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c8d2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c8d6:	3a01      	subs	r2, #1
 801c8d8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c8dc:	0066      	lsls	r6, r4, #1
 801c8de:	42aa      	cmp	r2, r5
 801c8e0:	d202      	bcs.n	801c8e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c8e2:	8013      	strh	r3, [r2, #0]
 801c8e4:	4432      	add	r2, r6
 801c8e6:	e7fa      	b.n	801c8de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c8e8:	3801      	subs	r0, #1
 801c8ea:	b178      	cbz	r0, 801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8ec:	1040      	asrs	r0, r0, #1
 801c8ee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c8f2:	0080      	lsls	r0, r0, #2
 801c8f4:	0064      	lsls	r4, r4, #1
 801c8f6:	42a9      	cmp	r1, r5
 801c8f8:	d208      	bcs.n	801c90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8fa:	180e      	adds	r6, r1, r0
 801c8fc:	460a      	mov	r2, r1
 801c8fe:	42b2      	cmp	r2, r6
 801c900:	d202      	bcs.n	801c908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c902:	f842 3b04 	str.w	r3, [r2], #4
 801c906:	e7fa      	b.n	801c8fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c908:	4421      	add	r1, r4
 801c90a:	e7f4      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c90c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c910:	00fff800 	.word	0x00fff800

0801c914 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c914:	2200      	movs	r2, #0
 801c916:	4910      	ldr	r1, [pc, #64]	; (801c958 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801c918:	6042      	str	r2, [r0, #4]
 801c91a:	6001      	str	r1, [r0, #0]
 801c91c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c920:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c924:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c928:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c92c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c930:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c934:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c938:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c93c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c940:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c944:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c948:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c94c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c950:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c954:	4770      	bx	lr
 801c956:	bf00      	nop
 801c958:	08029078 	.word	0x08029078

0801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c960:	460d      	mov	r5, r1
 801c962:	b08d      	sub	sp, #52	; 0x34
 801c964:	4604      	mov	r4, r0
 801c966:	6808      	ldr	r0, [r1, #0]
 801c968:	6849      	ldr	r1, [r1, #4]
 801c96a:	4699      	mov	r9, r3
 801c96c:	ab08      	add	r3, sp, #32
 801c96e:	c303      	stmia	r3!, {r0, r1}
 801c970:	6810      	ldr	r0, [r2, #0]
 801c972:	6851      	ldr	r1, [r2, #4]
 801c974:	ab0a      	add	r3, sp, #40	; 0x28
 801c976:	c303      	stmia	r3!, {r0, r1}
 801c978:	a808      	add	r0, sp, #32
 801c97a:	f7f9 fc93 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c97e:	4629      	mov	r1, r5
 801c980:	a80a      	add	r0, sp, #40	; 0x28
 801c982:	f7f9 fcd3 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c986:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c98a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c98e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c992:	4d63      	ldr	r5, [pc, #396]	; (801cb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c994:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c998:	6828      	ldr	r0, [r5, #0]
 801c99a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c99e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9a2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c9a6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c9aa:	440a      	add	r2, r1
 801c9ac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c9b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c9b4:	4413      	add	r3, r2
 801c9b6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c9ba:	6803      	ldr	r3, [r0, #0]
 801c9bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c9be:	4798      	blx	r3
 801c9c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c9c4:	d119      	bne.n	801c9fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c9c6:	f010 0f20 	tst.w	r0, #32
 801c9ca:	6828      	ldr	r0, [r5, #0]
 801c9cc:	d018      	beq.n	801ca00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c9ce:	2500      	movs	r5, #0
 801c9d0:	6801      	ldr	r1, [r0, #0]
 801c9d2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c9d6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c9da:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c9de:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c9e2:	9502      	str	r5, [sp, #8]
 801c9e4:	b2b6      	uxth	r6, r6
 801c9e6:	fa1f f588 	uxth.w	r5, r8
 801c9ea:	9601      	str	r6, [sp, #4]
 801c9ec:	9500      	str	r5, [sp, #0]
 801c9ee:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c9f0:	4621      	mov	r1, r4
 801c9f2:	47a8      	blx	r5
 801c9f4:	b00d      	add	sp, #52	; 0x34
 801c9f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9fa:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c9fe:	e7e4      	b.n	801c9ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ca00:	6803      	ldr	r3, [r0, #0]
 801ca02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca04:	4798      	blx	r3
 801ca06:	4947      	ldr	r1, [pc, #284]	; (801cb24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ca08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ca0c:	880b      	ldrh	r3, [r1, #0]
 801ca0e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ca12:	fb03 5202 	mla	r2, r3, r2, r5
 801ca16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca1a:	4373      	muls	r3, r6
 801ca1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca20:	9307      	str	r3, [sp, #28]
 801ca22:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ca26:	9306      	str	r3, [sp, #24]
 801ca28:	468a      	mov	sl, r1
 801ca2a:	9b07      	ldr	r3, [sp, #28]
 801ca2c:	4298      	cmp	r0, r3
 801ca2e:	d270      	bcs.n	801cb12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ca30:	9b06      	ldr	r3, [sp, #24]
 801ca32:	4621      	mov	r1, r4
 801ca34:	eb00 0b03 	add.w	fp, r0, r3
 801ca38:	4558      	cmp	r0, fp
 801ca3a:	d25d      	bcs.n	801caf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ca3c:	f851 4b04 	ldr.w	r4, [r1], #4
 801ca40:	0e23      	lsrs	r3, r4, #24
 801ca42:	d014      	beq.n	801ca6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca44:	2bff      	cmp	r3, #255	; 0xff
 801ca46:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ca4a:	d112      	bne.n	801ca72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca4c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca50:	d10f      	bne.n	801ca72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca52:	0963      	lsrs	r3, r4, #5
 801ca54:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ca58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca5c:	f02c 0c07 	bic.w	ip, ip, #7
 801ca60:	ea43 0c0c 	orr.w	ip, r3, ip
 801ca64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ca68:	ea4c 0404 	orr.w	r4, ip, r4
 801ca6c:	8004      	strh	r4, [r0, #0]
 801ca6e:	3002      	adds	r0, #2
 801ca70:	e7e2      	b.n	801ca38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ca72:	fb09 f303 	mul.w	r3, r9, r3
 801ca76:	8807      	ldrh	r7, [r0, #0]
 801ca78:	1c5a      	adds	r2, r3, #1
 801ca7a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ca7e:	1212      	asrs	r2, r2, #8
 801ca80:	123e      	asrs	r6, r7, #8
 801ca82:	b293      	uxth	r3, r2
 801ca84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ca88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ca8c:	43d2      	mvns	r2, r2
 801ca8e:	b2d2      	uxtb	r2, r2
 801ca90:	10fd      	asrs	r5, r7, #3
 801ca92:	fb1e fe03 	smulbb	lr, lr, r3
 801ca96:	00ff      	lsls	r7, r7, #3
 801ca98:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ca9c:	fb06 e602 	mla	r6, r6, r2, lr
 801caa0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801caa4:	b2ff      	uxtb	r7, r7
 801caa6:	fa5f fc8c 	uxtb.w	ip, ip
 801caaa:	b2e4      	uxtb	r4, r4
 801caac:	b2b6      	uxth	r6, r6
 801caae:	fb1c fc03 	smulbb	ip, ip, r3
 801cab2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cab6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801caba:	fb14 f403 	smulbb	r4, r4, r3
 801cabe:	fb05 c502 	mla	r5, r5, r2, ip
 801cac2:	f106 0e01 	add.w	lr, r6, #1
 801cac6:	fb07 4702 	mla	r7, r7, r2, r4
 801caca:	b2ad      	uxth	r5, r5
 801cacc:	b2bf      	uxth	r7, r7
 801cace:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cad2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cad6:	f105 0c01 	add.w	ip, r5, #1
 801cada:	1c7e      	adds	r6, r7, #1
 801cadc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cae0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cae4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cae8:	096d      	lsrs	r5, r5, #5
 801caea:	ea46 060e 	orr.w	r6, r6, lr
 801caee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801caf2:	432e      	orrs	r6, r5
 801caf4:	8006      	strh	r6, [r0, #0]
 801caf6:	e7ba      	b.n	801ca6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801caf8:	f8ba 3000 	ldrh.w	r3, [sl]
 801cafc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cb00:	eba3 0308 	sub.w	r3, r3, r8
 801cb04:	eba4 0408 	sub.w	r4, r4, r8
 801cb08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cb0c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cb10:	e78b      	b.n	801ca2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cb12:	4b03      	ldr	r3, [pc, #12]	; (801cb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cb14:	6818      	ldr	r0, [r3, #0]
 801cb16:	6803      	ldr	r3, [r0, #0]
 801cb18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb1a:	4798      	blx	r3
 801cb1c:	e76a      	b.n	801c9f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cb1e:	bf00      	nop
 801cb20:	2000dc74 	.word	0x2000dc74
 801cb24:	2000dc6e 	.word	0x2000dc6e

0801cb28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cb28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cb2c:	460c      	mov	r4, r1
 801cb2e:	b085      	sub	sp, #20
 801cb30:	6810      	ldr	r0, [r2, #0]
 801cb32:	6851      	ldr	r1, [r2, #4]
 801cb34:	466d      	mov	r5, sp
 801cb36:	c503      	stmia	r5!, {r0, r1}
 801cb38:	6818      	ldr	r0, [r3, #0]
 801cb3a:	6859      	ldr	r1, [r3, #4]
 801cb3c:	4616      	mov	r6, r2
 801cb3e:	c503      	stmia	r5!, {r0, r1}
 801cb40:	4668      	mov	r0, sp
 801cb42:	f7f9 fbaf 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb46:	4631      	mov	r1, r6
 801cb48:	a802      	add	r0, sp, #8
 801cb4a:	f7f9 fbef 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb4e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cb52:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cb56:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cb5a:	4d28      	ldr	r5, [pc, #160]	; (801cbfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cb5c:	4e28      	ldr	r6, [pc, #160]	; (801cc00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cb5e:	6828      	ldr	r0, [r5, #0]
 801cb60:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cb64:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cb68:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb6c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cb70:	f8bd 1000 	ldrh.w	r1, [sp]
 801cb74:	440a      	add	r2, r1
 801cb76:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cb7a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cb7e:	4413      	add	r3, r2
 801cb80:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cb84:	6803      	ldr	r3, [r0, #0]
 801cb86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb88:	4798      	blx	r3
 801cb8a:	8833      	ldrh	r3, [r6, #0]
 801cb8c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cb90:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cb94:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cc04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cb98:	fb03 1202 	mla	r2, r3, r2, r1
 801cb9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cba0:	fb08 f303 	mul.w	r3, r8, r3
 801cba4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cba8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cbac:	4298      	cmp	r0, r3
 801cbae:	d21d      	bcs.n	801cbec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cbb0:	eb00 080c 	add.w	r8, r0, ip
 801cbb4:	4540      	cmp	r0, r8
 801cbb6:	d20f      	bcs.n	801cbd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cbb8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cbbc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cbc0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cbc4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cbc8:	ea42 0209 	orr.w	r2, r2, r9
 801cbcc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cbd0:	430a      	orrs	r2, r1
 801cbd2:	f820 2b02 	strh.w	r2, [r0], #2
 801cbd6:	e7ed      	b.n	801cbb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cbd8:	8832      	ldrh	r2, [r6, #0]
 801cbda:	1bd2      	subs	r2, r2, r7
 801cbdc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbe0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cbe4:	1bd2      	subs	r2, r2, r7
 801cbe6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cbea:	e7df      	b.n	801cbac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cbec:	6828      	ldr	r0, [r5, #0]
 801cbee:	6803      	ldr	r3, [r0, #0]
 801cbf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbf2:	4798      	blx	r3
 801cbf4:	b005      	add	sp, #20
 801cbf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cbfa:	bf00      	nop
 801cbfc:	2000dc74 	.word	0x2000dc74
 801cc00:	2000dc6e 	.word	0x2000dc6e
 801cc04:	fffff800 	.word	0xfffff800

0801cc08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cc08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc0c:	460e      	mov	r6, r1
 801cc0e:	b08e      	sub	sp, #56	; 0x38
 801cc10:	4604      	mov	r4, r0
 801cc12:	6808      	ldr	r0, [r1, #0]
 801cc14:	6849      	ldr	r1, [r1, #4]
 801cc16:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cc1a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801cdf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cc1e:	461d      	mov	r5, r3
 801cc20:	ab0a      	add	r3, sp, #40	; 0x28
 801cc22:	c303      	stmia	r3!, {r0, r1}
 801cc24:	6810      	ldr	r0, [r2, #0]
 801cc26:	6851      	ldr	r1, [r2, #4]
 801cc28:	ab0c      	add	r3, sp, #48	; 0x30
 801cc2a:	c303      	stmia	r3!, {r0, r1}
 801cc2c:	a80a      	add	r0, sp, #40	; 0x28
 801cc2e:	f7f9 fb39 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc32:	4631      	mov	r1, r6
 801cc34:	a80c      	add	r0, sp, #48	; 0x30
 801cc36:	f7f9 fb79 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc3a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cc3e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cc42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cc46:	f8d8 0000 	ldr.w	r0, [r8]
 801cc4a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cc4e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cc52:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc56:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cc5a:	440c      	add	r4, r1
 801cc5c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cc60:	440a      	add	r2, r1
 801cc62:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cc66:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cc6a:	4413      	add	r3, r2
 801cc6c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cc70:	6803      	ldr	r3, [r0, #0]
 801cc72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc74:	4798      	blx	r3
 801cc76:	2dff      	cmp	r5, #255	; 0xff
 801cc78:	d124      	bne.n	801ccc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cc7a:	f010 0f01 	tst.w	r0, #1
 801cc7e:	f8d8 0000 	ldr.w	r0, [r8]
 801cc82:	d022      	beq.n	801ccca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cc84:	2100      	movs	r1, #0
 801cc86:	f8d0 c000 	ldr.w	ip, [r0]
 801cc8a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cc8e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cc92:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cc96:	f04f 0e01 	mov.w	lr, #1
 801cc9a:	f8cd e018 	str.w	lr, [sp, #24]
 801cc9e:	f8b9 e000 	ldrh.w	lr, [r9]
 801cca2:	9503      	str	r5, [sp, #12]
 801cca4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cca8:	b2b6      	uxth	r6, r6
 801ccaa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ccae:	9102      	str	r1, [sp, #8]
 801ccb0:	b2bf      	uxth	r7, r7
 801ccb2:	9601      	str	r6, [sp, #4]
 801ccb4:	9700      	str	r7, [sp, #0]
 801ccb6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ccba:	4621      	mov	r1, r4
 801ccbc:	47a8      	blx	r5
 801ccbe:	b00e      	add	sp, #56	; 0x38
 801ccc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ccc4:	f010 0f04 	tst.w	r0, #4
 801ccc8:	e7d9      	b.n	801cc7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ccca:	6803      	ldr	r3, [r0, #0]
 801cccc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ccce:	4798      	blx	r3
 801ccd0:	f8b9 3000 	ldrh.w	r3, [r9]
 801ccd4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ccd8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801ccdc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cce0:	fb03 1202 	mla	r2, r3, r2, r1
 801cce4:	ebac 0c07 	sub.w	ip, ip, r7
 801cce8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccec:	435e      	muls	r6, r3
 801ccee:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ccf2:	2dff      	cmp	r5, #255	; 0xff
 801ccf4:	eba3 0707 	sub.w	r7, r3, r7
 801ccf8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ccfc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cd00:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cd04:	d049      	beq.n	801cd9a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cd06:	43eb      	mvns	r3, r5
 801cd08:	fa1f f985 	uxth.w	r9, r5
 801cd0c:	b2db      	uxtb	r3, r3
 801cd0e:	42b0      	cmp	r0, r6
 801cd10:	d266      	bcs.n	801cde0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cd12:	eb00 0a0e 	add.w	sl, r0, lr
 801cd16:	4550      	cmp	r0, sl
 801cd18:	4621      	mov	r1, r4
 801cd1a:	f104 0403 	add.w	r4, r4, #3
 801cd1e:	d25b      	bcs.n	801cdd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cd20:	8802      	ldrh	r2, [r0, #0]
 801cd22:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cd26:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cd2a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cd2e:	fb11 f109 	smulbb	r1, r1, r9
 801cd32:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cd36:	10d5      	asrs	r5, r2, #3
 801cd38:	fb08 1803 	mla	r8, r8, r3, r1
 801cd3c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cd40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd44:	fb11 f109 	smulbb	r1, r1, r9
 801cd48:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cd4c:	fb05 1503 	mla	r5, r5, r3, r1
 801cd50:	00d2      	lsls	r2, r2, #3
 801cd52:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cd56:	b2d2      	uxtb	r2, r2
 801cd58:	fb11 f109 	smulbb	r1, r1, r9
 801cd5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd60:	fa1f f888 	uxth.w	r8, r8
 801cd64:	fb02 1203 	mla	r2, r2, r3, r1
 801cd68:	b292      	uxth	r2, r2
 801cd6a:	f108 0101 	add.w	r1, r8, #1
 801cd6e:	b2ad      	uxth	r5, r5
 801cd70:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cd74:	1c51      	adds	r1, r2, #1
 801cd76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cd7a:	1c69      	adds	r1, r5, #1
 801cd7c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cd80:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cd84:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cd88:	096d      	lsrs	r5, r5, #5
 801cd8a:	ea42 0208 	orr.w	r2, r2, r8
 801cd8e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd92:	432a      	orrs	r2, r5
 801cd94:	f820 2b02 	strh.w	r2, [r0], #2
 801cd98:	e7bd      	b.n	801cd16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cd9a:	4a14      	ldr	r2, [pc, #80]	; (801cdec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cd9c:	42b0      	cmp	r0, r6
 801cd9e:	d21f      	bcs.n	801cde0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cda0:	eb00 050e 	add.w	r5, r0, lr
 801cda4:	42a8      	cmp	r0, r5
 801cda6:	4621      	mov	r1, r4
 801cda8:	f104 0403 	add.w	r4, r4, #3
 801cdac:	d210      	bcs.n	801cdd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cdae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cdb2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cdb6:	00db      	lsls	r3, r3, #3
 801cdb8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cdbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cdc0:	430b      	orrs	r3, r1
 801cdc2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cdc6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cdca:	f820 3b02 	strh.w	r3, [r0], #2
 801cdce:	e7e9      	b.n	801cda4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cdd0:	4438      	add	r0, r7
 801cdd2:	eb01 040c 	add.w	r4, r1, ip
 801cdd6:	e7e1      	b.n	801cd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cdd8:	4438      	add	r0, r7
 801cdda:	eb01 040c 	add.w	r4, r1, ip
 801cdde:	e796      	b.n	801cd0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cde0:	4b03      	ldr	r3, [pc, #12]	; (801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cde2:	6818      	ldr	r0, [r3, #0]
 801cde4:	6803      	ldr	r3, [r0, #0]
 801cde6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cde8:	4798      	blx	r3
 801cdea:	e768      	b.n	801ccbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cdec:	fffff800 	.word	0xfffff800
 801cdf0:	2000dc74 	.word	0x2000dc74
 801cdf4:	2000dc6e 	.word	0x2000dc6e

0801cdf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cdf8:	b4f0      	push	{r4, r5, r6, r7}
 801cdfa:	4616      	mov	r6, r2
 801cdfc:	2e01      	cmp	r6, #1
 801cdfe:	461c      	mov	r4, r3
 801ce00:	460d      	mov	r5, r1
 801ce02:	9a04      	ldr	r2, [sp, #16]
 801ce04:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ce08:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ce0c:	d012      	beq.n	801ce34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ce0e:	d303      	bcc.n	801ce18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ce10:	2e02      	cmp	r6, #2
 801ce12:	d00a      	beq.n	801ce2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ce14:	bcf0      	pop	{r4, r5, r6, r7}
 801ce16:	4770      	bx	lr
 801ce18:	6805      	ldr	r5, [r0, #0]
 801ce1a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ce1e:	68ed      	ldr	r5, [r5, #12]
 801ce20:	4613      	mov	r3, r2
 801ce22:	46ac      	mov	ip, r5
 801ce24:	4622      	mov	r2, r4
 801ce26:	bcf0      	pop	{r4, r5, r6, r7}
 801ce28:	4760      	bx	ip
 801ce2a:	4621      	mov	r1, r4
 801ce2c:	4628      	mov	r0, r5
 801ce2e:	bcf0      	pop	{r4, r5, r6, r7}
 801ce30:	f7ff bd94 	b.w	801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ce34:	4621      	mov	r1, r4
 801ce36:	4628      	mov	r0, r5
 801ce38:	bcf0      	pop	{r4, r5, r6, r7}
 801ce3a:	f7ff bee5 	b.w	801cc08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ce40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ce40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce44:	4681      	mov	r9, r0
 801ce46:	b093      	sub	sp, #76	; 0x4c
 801ce48:	6810      	ldr	r0, [r2, #0]
 801ce4a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ce4e:	4f6d      	ldr	r7, [pc, #436]	; (801d004 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ce50:	4688      	mov	r8, r1
 801ce52:	6851      	ldr	r1, [r2, #4]
 801ce54:	ac0e      	add	r4, sp, #56	; 0x38
 801ce56:	c403      	stmia	r4!, {r0, r1}
 801ce58:	6818      	ldr	r0, [r3, #0]
 801ce5a:	6859      	ldr	r1, [r3, #4]
 801ce5c:	ac10      	add	r4, sp, #64	; 0x40
 801ce5e:	4616      	mov	r6, r2
 801ce60:	c403      	stmia	r4!, {r0, r1}
 801ce62:	a80e      	add	r0, sp, #56	; 0x38
 801ce64:	f7f9 fa1e 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce68:	4631      	mov	r1, r6
 801ce6a:	a810      	add	r0, sp, #64	; 0x40
 801ce6c:	f7f9 fa5e 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce70:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ce74:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ce78:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ce7c:	4e62      	ldr	r6, [pc, #392]	; (801d008 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ce7e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ce82:	6830      	ldr	r0, [r6, #0]
 801ce84:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ce88:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce8c:	4489      	add	r9, r1
 801ce8e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ce92:	440a      	add	r2, r1
 801ce94:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ce98:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ce9c:	4413      	add	r3, r2
 801ce9e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cea2:	6803      	ldr	r3, [r0, #0]
 801cea4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cea6:	4798      	blx	r3
 801cea8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ceac:	6830      	ldr	r0, [r6, #0]
 801ceae:	d01d      	beq.n	801ceec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ceb0:	2200      	movs	r2, #0
 801ceb2:	6801      	ldr	r1, [r0, #0]
 801ceb4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ceb8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cebc:	220b      	movs	r2, #11
 801cebe:	9207      	str	r2, [sp, #28]
 801cec0:	883a      	ldrh	r2, [r7, #0]
 801cec2:	9206      	str	r2, [sp, #24]
 801cec4:	2201      	movs	r2, #1
 801cec6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ceca:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cece:	9203      	str	r2, [sp, #12]
 801ced0:	b2a4      	uxth	r4, r4
 801ced2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ced6:	9200      	str	r2, [sp, #0]
 801ced8:	b2ad      	uxth	r5, r5
 801ceda:	9502      	str	r5, [sp, #8]
 801cedc:	9401      	str	r4, [sp, #4]
 801cede:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cee0:	4642      	mov	r2, r8
 801cee2:	4649      	mov	r1, r9
 801cee4:	47a0      	blx	r4
 801cee6:	b013      	add	sp, #76	; 0x4c
 801cee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceec:	6803      	ldr	r3, [r0, #0]
 801ceee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cef0:	4798      	blx	r3
 801cef2:	883b      	ldrh	r3, [r7, #0]
 801cef4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cef8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cefc:	fb03 1202 	mla	r2, r3, r2, r1
 801cf00:	435d      	muls	r5, r3
 801cf02:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf06:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cf0a:	920c      	str	r2, [sp, #48]	; 0x30
 801cf0c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801cf10:	1b12      	subs	r2, r2, r4
 801cf12:	920d      	str	r2, [sp, #52]	; 0x34
 801cf14:	0062      	lsls	r2, r4, #1
 801cf16:	1b1c      	subs	r4, r3, r4
 801cf18:	0063      	lsls	r3, r4, #1
 801cf1a:	920a      	str	r2, [sp, #40]	; 0x28
 801cf1c:	930b      	str	r3, [sp, #44]	; 0x2c
 801cf1e:	f04f 0e04 	mov.w	lr, #4
 801cf22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cf24:	4298      	cmp	r0, r3
 801cf26:	d266      	bcs.n	801cff6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cf28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf2a:	eb00 0b03 	add.w	fp, r0, r3
 801cf2e:	4558      	cmp	r0, fp
 801cf30:	d25c      	bcs.n	801cfec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cf32:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cf36:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cf3a:	f858 2003 	ldr.w	r2, [r8, r3]
 801cf3e:	0e11      	lsrs	r1, r2, #24
 801cf40:	d012      	beq.n	801cf68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cf42:	29ff      	cmp	r1, #255	; 0xff
 801cf44:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cf48:	d110      	bne.n	801cf6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf4a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cf4e:	d10d      	bne.n	801cf6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf50:	0953      	lsrs	r3, r2, #5
 801cf52:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cf56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cf5a:	f027 0707 	bic.w	r7, r7, #7
 801cf5e:	431f      	orrs	r7, r3
 801cf60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf64:	433a      	orrs	r2, r7
 801cf66:	8002      	strh	r2, [r0, #0]
 801cf68:	3002      	adds	r0, #2
 801cf6a:	e7e0      	b.n	801cf2e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cf6c:	fb0a f101 	mul.w	r1, sl, r1
 801cf70:	8806      	ldrh	r6, [r0, #0]
 801cf72:	1c4b      	adds	r3, r1, #1
 801cf74:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cf78:	1235      	asrs	r5, r6, #8
 801cf7a:	10f4      	asrs	r4, r6, #3
 801cf7c:	121b      	asrs	r3, r3, #8
 801cf7e:	00f6      	lsls	r6, r6, #3
 801cf80:	b299      	uxth	r1, r3
 801cf82:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cf86:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cf8a:	b2f6      	uxtb	r6, r6
 801cf8c:	43db      	mvns	r3, r3
 801cf8e:	b2d2      	uxtb	r2, r2
 801cf90:	b2db      	uxtb	r3, r3
 801cf92:	fb1c fc01 	smulbb	ip, ip, r1
 801cf96:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cf9a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cf9e:	fb12 f201 	smulbb	r2, r2, r1
 801cfa2:	fb05 c503 	mla	r5, r5, r3, ip
 801cfa6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cfaa:	b2ff      	uxtb	r7, r7
 801cfac:	fb06 2203 	mla	r2, r6, r3, r2
 801cfb0:	b2ad      	uxth	r5, r5
 801cfb2:	fb17 f701 	smulbb	r7, r7, r1
 801cfb6:	b292      	uxth	r2, r2
 801cfb8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cfbc:	fb04 7403 	mla	r4, r4, r3, r7
 801cfc0:	f105 0c01 	add.w	ip, r5, #1
 801cfc4:	1c57      	adds	r7, r2, #1
 801cfc6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cfca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cfce:	b2a4      	uxth	r4, r4
 801cfd0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cfd4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cfd8:	433d      	orrs	r5, r7
 801cfda:	1c67      	adds	r7, r4, #1
 801cfdc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cfe0:	0964      	lsrs	r4, r4, #5
 801cfe2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cfe6:	4325      	orrs	r5, r4
 801cfe8:	8005      	strh	r5, [r0, #0]
 801cfea:	e7bd      	b.n	801cf68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cfec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cfee:	4418      	add	r0, r3
 801cff0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cff2:	4499      	add	r9, r3
 801cff4:	e795      	b.n	801cf22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cff6:	4b04      	ldr	r3, [pc, #16]	; (801d008 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cff8:	6818      	ldr	r0, [r3, #0]
 801cffa:	6803      	ldr	r3, [r0, #0]
 801cffc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cffe:	4798      	blx	r3
 801d000:	e771      	b.n	801cee6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d002:	bf00      	nop
 801d004:	2000dc6e 	.word	0x2000dc6e
 801d008:	2000dc74 	.word	0x2000dc74

0801d00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d00c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d010:	b087      	sub	sp, #28
 801d012:	4680      	mov	r8, r0
 801d014:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d018:	460d      	mov	r5, r1
 801d01a:	4614      	mov	r4, r2
 801d01c:	2e00      	cmp	r6, #0
 801d01e:	f000 80b9 	beq.w	801d194 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d022:	6810      	ldr	r0, [r2, #0]
 801d024:	6851      	ldr	r1, [r2, #4]
 801d026:	af02      	add	r7, sp, #8
 801d028:	c703      	stmia	r7!, {r0, r1}
 801d02a:	6818      	ldr	r0, [r3, #0]
 801d02c:	6859      	ldr	r1, [r3, #4]
 801d02e:	af04      	add	r7, sp, #16
 801d030:	c703      	stmia	r7!, {r0, r1}
 801d032:	a802      	add	r0, sp, #8
 801d034:	f7f9 f936 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d038:	4621      	mov	r1, r4
 801d03a:	a804      	add	r0, sp, #16
 801d03c:	f7f9 f976 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d040:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d044:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d048:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d04c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d050:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d054:	eb08 0401 	add.w	r4, r8, r1
 801d058:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d05c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d060:	440a      	add	r2, r1
 801d062:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d066:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d06a:	4413      	add	r3, r2
 801d06c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d070:	4b4a      	ldr	r3, [pc, #296]	; (801d19c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d072:	6818      	ldr	r0, [r3, #0]
 801d074:	6803      	ldr	r3, [r0, #0]
 801d076:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d078:	4798      	blx	r3
 801d07a:	4b49      	ldr	r3, [pc, #292]	; (801d1a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d07c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d080:	881a      	ldrh	r2, [r3, #0]
 801d082:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d086:	2eff      	cmp	r6, #255	; 0xff
 801d088:	fb02 c101 	mla	r1, r2, r1, ip
 801d08c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d090:	fb02 f207 	mul.w	r2, r2, r7
 801d094:	f105 0104 	add.w	r1, r5, #4
 801d098:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d09c:	461d      	mov	r5, r3
 801d09e:	d05a      	beq.n	801d156 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d0a0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d0a4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d0a8:	b2b6      	uxth	r6, r6
 801d0aa:	fa1f fe8e 	uxth.w	lr, lr
 801d0ae:	9301      	str	r3, [sp, #4]
 801d0b0:	4282      	cmp	r2, r0
 801d0b2:	d96a      	bls.n	801d18a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d0b4:	eb00 0b0a 	add.w	fp, r0, sl
 801d0b8:	4583      	cmp	fp, r0
 801d0ba:	d940      	bls.n	801d13e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d0bc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d0c0:	8805      	ldrh	r5, [r0, #0]
 801d0c2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d0c6:	122f      	asrs	r7, r5, #8
 801d0c8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0d0:	fb17 f70e 	smulbb	r7, r7, lr
 801d0d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d0d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d0dc:	00ed      	lsls	r5, r5, #3
 801d0de:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d0e2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d0e6:	10df      	asrs	r7, r3, #3
 801d0e8:	b2ed      	uxtb	r5, r5
 801d0ea:	00db      	lsls	r3, r3, #3
 801d0ec:	fa1f fc8c 	uxth.w	ip, ip
 801d0f0:	fb19 f90e 	smulbb	r9, r9, lr
 801d0f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d0f8:	b2db      	uxtb	r3, r3
 801d0fa:	fb15 f50e 	smulbb	r5, r5, lr
 801d0fe:	fb07 9706 	mla	r7, r7, r6, r9
 801d102:	fb03 5306 	mla	r3, r3, r6, r5
 801d106:	f10c 0901 	add.w	r9, ip, #1
 801d10a:	b29b      	uxth	r3, r3
 801d10c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d110:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d114:	f103 0c01 	add.w	ip, r3, #1
 801d118:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d11c:	b2bf      	uxth	r7, r7
 801d11e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d122:	ea4c 0c09 	orr.w	ip, ip, r9
 801d126:	f107 0901 	add.w	r9, r7, #1
 801d12a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d12e:	097f      	lsrs	r7, r7, #5
 801d130:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d134:	ea4c 0c07 	orr.w	ip, ip, r7
 801d138:	f820 cb02 	strh.w	ip, [r0], #2
 801d13c:	e7bc      	b.n	801d0b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d13e:	9b01      	ldr	r3, [sp, #4]
 801d140:	881b      	ldrh	r3, [r3, #0]
 801d142:	eba3 0308 	sub.w	r3, r3, r8
 801d146:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d14a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d14e:	eba3 0308 	sub.w	r3, r3, r8
 801d152:	441c      	add	r4, r3
 801d154:	e7ac      	b.n	801d0b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d156:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d15a:	4282      	cmp	r2, r0
 801d15c:	d915      	bls.n	801d18a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d15e:	eb00 060a 	add.w	r6, r0, sl
 801d162:	4286      	cmp	r6, r0
 801d164:	d906      	bls.n	801d174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d166:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d16a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d16e:	f820 3b02 	strh.w	r3, [r0], #2
 801d172:	e7f6      	b.n	801d162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d174:	882b      	ldrh	r3, [r5, #0]
 801d176:	eba3 0308 	sub.w	r3, r3, r8
 801d17a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d17e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d182:	eba3 0308 	sub.w	r3, r3, r8
 801d186:	441c      	add	r4, r3
 801d188:	e7e7      	b.n	801d15a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d18a:	4b04      	ldr	r3, [pc, #16]	; (801d19c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d18c:	6818      	ldr	r0, [r3, #0]
 801d18e:	6803      	ldr	r3, [r0, #0]
 801d190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d192:	4798      	blx	r3
 801d194:	b007      	add	sp, #28
 801d196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d19a:	bf00      	nop
 801d19c:	2000dc74 	.word	0x2000dc74
 801d1a0:	2000dc6e 	.word	0x2000dc6e

0801d1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1a8:	b091      	sub	sp, #68	; 0x44
 801d1aa:	4680      	mov	r8, r0
 801d1ac:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d1b0:	460f      	mov	r7, r1
 801d1b2:	4614      	mov	r4, r2
 801d1b4:	2d00      	cmp	r5, #0
 801d1b6:	d051      	beq.n	801d25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1b8:	6810      	ldr	r0, [r2, #0]
 801d1ba:	6851      	ldr	r1, [r2, #4]
 801d1bc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d3c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d1c0:	ae0c      	add	r6, sp, #48	; 0x30
 801d1c2:	c603      	stmia	r6!, {r0, r1}
 801d1c4:	6818      	ldr	r0, [r3, #0]
 801d1c6:	6859      	ldr	r1, [r3, #4]
 801d1c8:	ae0e      	add	r6, sp, #56	; 0x38
 801d1ca:	c603      	stmia	r6!, {r0, r1}
 801d1cc:	a80c      	add	r0, sp, #48	; 0x30
 801d1ce:	f7f9 f869 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1d2:	4621      	mov	r1, r4
 801d1d4:	a80e      	add	r0, sp, #56	; 0x38
 801d1d6:	f7f9 f8a9 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1da:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d1de:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d1e2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d1e6:	f8d9 0000 	ldr.w	r0, [r9]
 801d1ea:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d1ee:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d1f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1f6:	eb08 0401 	add.w	r4, r8, r1
 801d1fa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d1fe:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d3c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d202:	440a      	add	r2, r1
 801d204:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d208:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d20c:	4413      	add	r3, r2
 801d20e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d212:	6803      	ldr	r3, [r0, #0]
 801d214:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d216:	4798      	blx	r3
 801d218:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d21c:	f8d9 0000 	ldr.w	r0, [r9]
 801d220:	d01f      	beq.n	801d262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d222:	2200      	movs	r2, #0
 801d224:	6801      	ldr	r1, [r0, #0]
 801d226:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d22a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d22e:	220b      	movs	r2, #11
 801d230:	9207      	str	r2, [sp, #28]
 801d232:	f8b8 2000 	ldrh.w	r2, [r8]
 801d236:	9206      	str	r2, [sp, #24]
 801d238:	2201      	movs	r2, #1
 801d23a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d23e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d242:	9203      	str	r2, [sp, #12]
 801d244:	fa1f f28a 	uxth.w	r2, sl
 801d248:	9202      	str	r2, [sp, #8]
 801d24a:	b2b6      	uxth	r6, r6
 801d24c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d250:	9200      	str	r2, [sp, #0]
 801d252:	9601      	str	r6, [sp, #4]
 801d254:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d256:	463a      	mov	r2, r7
 801d258:	4621      	mov	r1, r4
 801d25a:	47a8      	blx	r5
 801d25c:	b011      	add	sp, #68	; 0x44
 801d25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d262:	6803      	ldr	r3, [r0, #0]
 801d264:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d266:	4798      	blx	r3
 801d268:	f8b8 2000 	ldrh.w	r2, [r8]
 801d26c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d270:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d274:	2dff      	cmp	r5, #255	; 0xff
 801d276:	fb02 1303 	mla	r3, r2, r3, r1
 801d27a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d27e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d282:	fb0a fa02 	mul.w	sl, sl, r2
 801d286:	d062      	beq.n	801d34e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d288:	ea6f 0c05 	mvn.w	ip, r5
 801d28c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d290:	930a      	str	r3, [sp, #40]	; 0x28
 801d292:	b2ad      	uxth	r5, r5
 801d294:	fa5f fc8c 	uxtb.w	ip, ip
 801d298:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d29c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d29e:	4298      	cmp	r0, r3
 801d2a0:	f080 8085 	bcs.w	801d3ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d2a4:	eb00 0b09 	add.w	fp, r0, r9
 801d2a8:	4558      	cmp	r0, fp
 801d2aa:	d246      	bcs.n	801d33a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d2ac:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d2b0:	2303      	movs	r3, #3
 801d2b2:	2204      	movs	r2, #4
 801d2b4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d2b8:	eb07 0a0e 	add.w	sl, r7, lr
 801d2bc:	8803      	ldrh	r3, [r0, #0]
 801d2be:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d2c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d2c6:	1219      	asrs	r1, r3, #8
 801d2c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d2cc:	fb18 f805 	smulbb	r8, r8, r5
 801d2d0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d2d4:	10da      	asrs	r2, r3, #3
 801d2d6:	fb01 810c 	mla	r1, r1, ip, r8
 801d2da:	00db      	lsls	r3, r3, #3
 801d2dc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d2e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d2e4:	b2db      	uxtb	r3, r3
 801d2e6:	fb18 f805 	smulbb	r8, r8, r5
 801d2ea:	fb1e fe05 	smulbb	lr, lr, r5
 801d2ee:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d2f2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d2f6:	b289      	uxth	r1, r1
 801d2f8:	fb02 820c 	mla	r2, r2, ip, r8
 801d2fc:	fb03 e30c 	mla	r3, r3, ip, lr
 801d300:	b292      	uxth	r2, r2
 801d302:	b29b      	uxth	r3, r3
 801d304:	f101 0801 	add.w	r8, r1, #1
 801d308:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d30c:	f103 0e01 	add.w	lr, r3, #1
 801d310:	f102 0801 	add.w	r8, r2, #1
 801d314:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d318:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d31c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d320:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d324:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d328:	ea4e 0101 	orr.w	r1, lr, r1
 801d32c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d330:	ea41 0108 	orr.w	r1, r1, r8
 801d334:	f820 1b02 	strh.w	r1, [r0], #2
 801d338:	e7b6      	b.n	801d2a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d33a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d33c:	881b      	ldrh	r3, [r3, #0]
 801d33e:	1b9b      	subs	r3, r3, r6
 801d340:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d344:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d348:	1b9b      	subs	r3, r3, r6
 801d34a:	441c      	add	r4, r3
 801d34c:	e7a6      	b.n	801d29c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d34e:	491b      	ldr	r1, [pc, #108]	; (801d3bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d350:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d354:	2203      	movs	r2, #3
 801d356:	2504      	movs	r5, #4
 801d358:	4550      	cmp	r0, sl
 801d35a:	d228      	bcs.n	801d3ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d35c:	eb00 0c09 	add.w	ip, r0, r9
 801d360:	4560      	cmp	r0, ip
 801d362:	4623      	mov	r3, r4
 801d364:	d219      	bcs.n	801d39a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d366:	f893 e000 	ldrb.w	lr, [r3]
 801d36a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d36e:	eb07 0b0e 	add.w	fp, r7, lr
 801d372:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d376:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d37a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d37e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d382:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d386:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d38a:	ea43 030b 	orr.w	r3, r3, fp
 801d38e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d392:	3401      	adds	r4, #1
 801d394:	f820 3b02 	strh.w	r3, [r0], #2
 801d398:	e7e2      	b.n	801d360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d39a:	f8b8 3000 	ldrh.w	r3, [r8]
 801d39e:	1b9b      	subs	r3, r3, r6
 801d3a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d3a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d3a8:	1b9b      	subs	r3, r3, r6
 801d3aa:	441c      	add	r4, r3
 801d3ac:	e7d4      	b.n	801d358 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d3ae:	4b04      	ldr	r3, [pc, #16]	; (801d3c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d3b0:	6818      	ldr	r0, [r3, #0]
 801d3b2:	6803      	ldr	r3, [r0, #0]
 801d3b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3b6:	4798      	blx	r3
 801d3b8:	e750      	b.n	801d25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3ba:	bf00      	nop
 801d3bc:	fffff800 	.word	0xfffff800
 801d3c0:	2000dc74 	.word	0x2000dc74
 801d3c4:	2000dc6e 	.word	0x2000dc6e

0801d3c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d3c8:	b430      	push	{r4, r5}
 801d3ca:	780d      	ldrb	r5, [r1, #0]
 801d3cc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801d3d0:	2d01      	cmp	r5, #1
 801d3d2:	d00a      	beq.n	801d3ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801d3d4:	d305      	bcc.n	801d3e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801d3d6:	2d02      	cmp	r5, #2
 801d3d8:	d10b      	bne.n	801d3f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801d3da:	9402      	str	r4, [sp, #8]
 801d3dc:	bc30      	pop	{r4, r5}
 801d3de:	f7ff be15 	b.w	801d00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d3e2:	9402      	str	r4, [sp, #8]
 801d3e4:	bc30      	pop	{r4, r5}
 801d3e6:	f7ff bd2b 	b.w	801ce40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d3ea:	9402      	str	r4, [sp, #8]
 801d3ec:	bc30      	pop	{r4, r5}
 801d3ee:	f7ff bed9 	b.w	801d1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d3f2:	bc30      	pop	{r4, r5}
 801d3f4:	4770      	bx	lr
	...

0801d3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3fc:	4604      	mov	r4, r0
 801d3fe:	b087      	sub	sp, #28
 801d400:	6810      	ldr	r0, [r2, #0]
 801d402:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d406:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d40a:	460e      	mov	r6, r1
 801d40c:	6851      	ldr	r1, [r2, #4]
 801d40e:	ad02      	add	r5, sp, #8
 801d410:	c503      	stmia	r5!, {r0, r1}
 801d412:	6818      	ldr	r0, [r3, #0]
 801d414:	6859      	ldr	r1, [r3, #4]
 801d416:	ad04      	add	r5, sp, #16
 801d418:	4617      	mov	r7, r2
 801d41a:	c503      	stmia	r5!, {r0, r1}
 801d41c:	a802      	add	r0, sp, #8
 801d41e:	f7f8 ff41 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d422:	4639      	mov	r1, r7
 801d424:	a804      	add	r0, sp, #16
 801d426:	f7f8 ff81 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d42a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d42e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d432:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d436:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d43a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d43e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d442:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d446:	440e      	add	r6, r1
 801d448:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d44c:	440a      	add	r2, r1
 801d44e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d452:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d456:	4413      	add	r3, r2
 801d458:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d45c:	4b77      	ldr	r3, [pc, #476]	; (801d63c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d45e:	6818      	ldr	r0, [r3, #0]
 801d460:	6803      	ldr	r3, [r0, #0]
 801d462:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d464:	4798      	blx	r3
 801d466:	f8b9 b000 	ldrh.w	fp, [r9]
 801d46a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d46e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d472:	fb0b 2303 	mla	r3, fp, r3, r2
 801d476:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d47a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d47e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d482:	fb05 f50b 	mul.w	r5, r5, fp
 801d486:	9300      	str	r3, [sp, #0]
 801d488:	d069      	beq.n	801d55e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d48a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d48e:	4558      	cmp	r0, fp
 801d490:	f080 80cc 	bcs.w	801d62c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d494:	9b00      	ldr	r3, [sp, #0]
 801d496:	18c3      	adds	r3, r0, r3
 801d498:	9301      	str	r3, [sp, #4]
 801d49a:	4631      	mov	r1, r6
 801d49c:	9b01      	ldr	r3, [sp, #4]
 801d49e:	4298      	cmp	r0, r3
 801d4a0:	d24f      	bcs.n	801d542 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d4a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d4a6:	2a00      	cmp	r2, #0
 801d4a8:	d048      	beq.n	801d53c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d4aa:	fb0a f202 	mul.w	r2, sl, r2
 801d4ae:	1c53      	adds	r3, r2, #1
 801d4b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d4b4:	121b      	asrs	r3, r3, #8
 801d4b6:	d041      	beq.n	801d53c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d4b8:	8802      	ldrh	r2, [r0, #0]
 801d4ba:	f8b4 c000 	ldrh.w	ip, [r4]
 801d4be:	b29e      	uxth	r6, r3
 801d4c0:	1215      	asrs	r5, r2, #8
 801d4c2:	43db      	mvns	r3, r3
 801d4c4:	b2db      	uxtb	r3, r3
 801d4c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d4ce:	fb15 f503 	smulbb	r5, r5, r3
 801d4d2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d4d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4da:	00d2      	lsls	r2, r2, #3
 801d4dc:	fb07 5706 	mla	r7, r7, r6, r5
 801d4e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d4e4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d4e8:	b2d2      	uxtb	r2, r2
 801d4ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4ee:	b2bf      	uxth	r7, r7
 801d4f0:	fb1e fe03 	smulbb	lr, lr, r3
 801d4f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d4f8:	fa5f fc8c 	uxtb.w	ip, ip
 801d4fc:	fb12 f203 	smulbb	r2, r2, r3
 801d500:	fb05 e506 	mla	r5, r5, r6, lr
 801d504:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d508:	f107 0e01 	add.w	lr, r7, #1
 801d50c:	fa1f fc8c 	uxth.w	ip, ip
 801d510:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d514:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d518:	f10c 0701 	add.w	r7, ip, #1
 801d51c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d520:	b2ad      	uxth	r5, r5
 801d522:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d526:	ea47 070e 	orr.w	r7, r7, lr
 801d52a:	f105 0e01 	add.w	lr, r5, #1
 801d52e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d532:	096d      	lsrs	r5, r5, #5
 801d534:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d538:	432f      	orrs	r7, r5
 801d53a:	8007      	strh	r7, [r0, #0]
 801d53c:	3002      	adds	r0, #2
 801d53e:	3402      	adds	r4, #2
 801d540:	e7ac      	b.n	801d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d542:	f8b9 3000 	ldrh.w	r3, [r9]
 801d546:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d54a:	eba3 0308 	sub.w	r3, r3, r8
 801d54e:	eba6 0608 	sub.w	r6, r6, r8
 801d552:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d556:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d55a:	440e      	add	r6, r1
 801d55c:	e797      	b.n	801d48e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d55e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d562:	42a8      	cmp	r0, r5
 801d564:	d262      	bcs.n	801d62c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d566:	9b00      	ldr	r3, [sp, #0]
 801d568:	4631      	mov	r1, r6
 801d56a:	eb00 0b03 	add.w	fp, r0, r3
 801d56e:	4558      	cmp	r0, fp
 801d570:	d24e      	bcs.n	801d610 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d572:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d576:	b12b      	cbz	r3, 801d584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d578:	2bff      	cmp	r3, #255	; 0xff
 801d57a:	f8b4 e000 	ldrh.w	lr, [r4]
 801d57e:	d104      	bne.n	801d58a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d580:	f8a0 e000 	strh.w	lr, [r0]
 801d584:	3002      	adds	r0, #2
 801d586:	3402      	adds	r4, #2
 801d588:	e7f1      	b.n	801d56e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d58a:	8802      	ldrh	r2, [r0, #0]
 801d58c:	b29f      	uxth	r7, r3
 801d58e:	1216      	asrs	r6, r2, #8
 801d590:	43db      	mvns	r3, r3
 801d592:	b2db      	uxtb	r3, r3
 801d594:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d598:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d59c:	fb16 f603 	smulbb	r6, r6, r3
 801d5a0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d5a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d5a8:	00d2      	lsls	r2, r2, #3
 801d5aa:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d5ae:	b2d2      	uxtb	r2, r2
 801d5b0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d5b4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d5b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d5bc:	fb1a fa03 	smulbb	sl, sl, r3
 801d5c0:	fa1f fc8c 	uxth.w	ip, ip
 801d5c4:	fb12 f303 	smulbb	r3, r2, r3
 801d5c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d5cc:	fa5f fe8e 	uxtb.w	lr, lr
 801d5d0:	fb06 a607 	mla	r6, r6, r7, sl
 801d5d4:	f10c 0201 	add.w	r2, ip, #1
 801d5d8:	fb0e 3307 	mla	r3, lr, r7, r3
 801d5dc:	b2b6      	uxth	r6, r6
 801d5de:	b29b      	uxth	r3, r3
 801d5e0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d5e4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d5e8:	f106 0a01 	add.w	sl, r6, #1
 801d5ec:	f103 0c01 	add.w	ip, r3, #1
 801d5f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d5f4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d5f8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d5fc:	0976      	lsrs	r6, r6, #5
 801d5fe:	ea4c 0c02 	orr.w	ip, ip, r2
 801d602:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d606:	ea4c 0c06 	orr.w	ip, ip, r6
 801d60a:	f8a0 c000 	strh.w	ip, [r0]
 801d60e:	e7b9      	b.n	801d584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d610:	f8b9 3000 	ldrh.w	r3, [r9]
 801d614:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d618:	eba3 0308 	sub.w	r3, r3, r8
 801d61c:	eba6 0608 	sub.w	r6, r6, r8
 801d620:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d624:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d628:	440e      	add	r6, r1
 801d62a:	e79a      	b.n	801d562 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d62c:	4b03      	ldr	r3, [pc, #12]	; (801d63c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d62e:	6818      	ldr	r0, [r3, #0]
 801d630:	6803      	ldr	r3, [r0, #0]
 801d632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d634:	4798      	blx	r3
 801d636:	b007      	add	sp, #28
 801d638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d63c:	2000dc74 	.word	0x2000dc74
 801d640:	2000dc6e 	.word	0x2000dc6e

0801d644 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d648:	b089      	sub	sp, #36	; 0x24
 801d64a:	4682      	mov	sl, r0
 801d64c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d650:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d652:	460f      	mov	r7, r1
 801d654:	4691      	mov	r9, r2
 801d656:	4698      	mov	r8, r3
 801d658:	2e00      	cmp	r6, #0
 801d65a:	d036      	beq.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d65c:	4608      	mov	r0, r1
 801d65e:	f7fc f863 	bl	8019728 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d662:	4605      	mov	r5, r0
 801d664:	4638      	mov	r0, r7
 801d666:	f7fc f893 	bl	8019790 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d66a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d66e:	4638      	mov	r0, r7
 801d670:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d674:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d678:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d67c:	f7fc f940 	bl	8019900 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d680:	4605      	mov	r5, r0
 801d682:	4638      	mov	r0, r7
 801d684:	f7fc f96c 	bl	8019960 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d688:	4681      	mov	r9, r0
 801d68a:	4638      	mov	r0, r7
 801d68c:	f7fc f9bc 	bl	8019a08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d690:	280b      	cmp	r0, #11
 801d692:	d81a      	bhi.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d694:	e8df f000 	tbb	[pc, r0]
 801d698:	1906aebd 	.word	0x1906aebd
 801d69c:	19191919 	.word	0x19191919
 801d6a0:	b5191919 	.word	0xb5191919
 801d6a4:	4bb0      	ldr	r3, [pc, #704]	; (801d968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d6a6:	6818      	ldr	r0, [r3, #0]
 801d6a8:	6803      	ldr	r3, [r0, #0]
 801d6aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d6ac:	4798      	blx	r3
 801d6ae:	2eff      	cmp	r6, #255	; 0xff
 801d6b0:	d121      	bne.n	801d6f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801d6b2:	0683      	lsls	r3, r0, #26
 801d6b4:	d41f      	bmi.n	801d6f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801d6b6:	4638      	mov	r0, r7
 801d6b8:	f7fc f8ea 	bl	8019890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d6bc:	b940      	cbnz	r0, 801d6d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801d6be:	4623      	mov	r3, r4
 801d6c0:	aa02      	add	r2, sp, #8
 801d6c2:	4629      	mov	r1, r5
 801d6c4:	4650      	mov	r0, sl
 801d6c6:	f7ff fa2f 	bl	801cb28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d6ca:	b009      	add	sp, #36	; 0x24
 801d6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6d0:	f10d 0818 	add.w	r8, sp, #24
 801d6d4:	4639      	mov	r1, r7
 801d6d6:	4640      	mov	r0, r8
 801d6d8:	f7fc f88e 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d6dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d6e0:	af04      	add	r7, sp, #16
 801d6e2:	e887 0003 	stmia.w	r7, {r0, r1}
 801d6e6:	4638      	mov	r0, r7
 801d6e8:	4621      	mov	r1, r4
 801d6ea:	f7f2 fed1 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801d6ee:	4638      	mov	r0, r7
 801d6f0:	f7f2 ff11 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d6f4:	b130      	cbz	r0, 801d704 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801d6f6:	4633      	mov	r3, r6
 801d6f8:	4622      	mov	r2, r4
 801d6fa:	a902      	add	r1, sp, #8
 801d6fc:	4628      	mov	r0, r5
 801d6fe:	f7ff f92d 	bl	801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d702:	e7e2      	b.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d704:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d708:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d70c:	4293      	cmp	r3, r2
 801d70e:	dd12      	ble.n	801d736 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 801d710:	1a9b      	subs	r3, r3, r2
 801d712:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d716:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d71a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d71e:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d722:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d726:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d72a:	4642      	mov	r2, r8
 801d72c:	4633      	mov	r3, r6
 801d72e:	a902      	add	r1, sp, #8
 801d730:	4628      	mov	r0, r5
 801d732:	f7ff f913 	bl	801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d736:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d73a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d73e:	4293      	cmp	r3, r2
 801d740:	dd12      	ble.n	801d768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801d742:	1a9b      	subs	r3, r3, r2
 801d744:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d748:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d74c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d750:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d754:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d758:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d75c:	23ff      	movs	r3, #255	; 0xff
 801d75e:	4642      	mov	r2, r8
 801d760:	a902      	add	r1, sp, #8
 801d762:	4628      	mov	r0, r5
 801d764:	f7ff f8fa 	bl	801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d768:	463b      	mov	r3, r7
 801d76a:	aa02      	add	r2, sp, #8
 801d76c:	4629      	mov	r1, r5
 801d76e:	4650      	mov	r0, sl
 801d770:	f7ff f9da 	bl	801cb28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d774:	88a2      	ldrh	r2, [r4, #4]
 801d776:	8823      	ldrh	r3, [r4, #0]
 801d778:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d77c:	4413      	add	r3, r2
 801d77e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d782:	440a      	add	r2, r1
 801d784:	b29b      	uxth	r3, r3
 801d786:	b292      	uxth	r2, r2
 801d788:	b211      	sxth	r1, r2
 801d78a:	b218      	sxth	r0, r3
 801d78c:	4288      	cmp	r0, r1
 801d78e:	dd12      	ble.n	801d7b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 801d790:	1a9b      	subs	r3, r3, r2
 801d792:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d796:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d79a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d79e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d7a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d7a6:	23ff      	movs	r3, #255	; 0xff
 801d7a8:	4642      	mov	r2, r8
 801d7aa:	a902      	add	r1, sp, #8
 801d7ac:	4628      	mov	r0, r5
 801d7ae:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d7b2:	f7ff f8d3 	bl	801c95c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d7b6:	88e2      	ldrh	r2, [r4, #6]
 801d7b8:	8863      	ldrh	r3, [r4, #2]
 801d7ba:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d7be:	4413      	add	r3, r2
 801d7c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d7c4:	440a      	add	r2, r1
 801d7c6:	b29b      	uxth	r3, r3
 801d7c8:	b292      	uxth	r2, r2
 801d7ca:	b211      	sxth	r1, r2
 801d7cc:	b218      	sxth	r0, r3
 801d7ce:	4288      	cmp	r0, r1
 801d7d0:	f77f af7b 	ble.w	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d7d4:	1a9b      	subs	r3, r3, r2
 801d7d6:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d7da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d7de:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d7e2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d7e6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d7ea:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d7ee:	23ff      	movs	r3, #255	; 0xff
 801d7f0:	4642      	mov	r2, r8
 801d7f2:	e782      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801d7f4:	4633      	mov	r3, r6
 801d7f6:	4622      	mov	r2, r4
 801d7f8:	a902      	add	r1, sp, #8
 801d7fa:	4628      	mov	r0, r5
 801d7fc:	f7ff fa04 	bl	801cc08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d800:	e763      	b.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d802:	9600      	str	r6, [sp, #0]
 801d804:	4623      	mov	r3, r4
 801d806:	aa02      	add	r2, sp, #8
 801d808:	4649      	mov	r1, r9
 801d80a:	4628      	mov	r0, r5
 801d80c:	f7ff fddc 	bl	801d3c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d810:	e75b      	b.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d812:	4638      	mov	r0, r7
 801d814:	f7fc f83c 	bl	8019890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d818:	b950      	cbnz	r0, 801d830 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 801d81a:	e9cd 6000 	strd	r6, r0, [sp]
 801d81e:	f8da 3000 	ldr.w	r3, [sl]
 801d822:	aa02      	add	r2, sp, #8
 801d824:	68de      	ldr	r6, [r3, #12]
 801d826:	4629      	mov	r1, r5
 801d828:	4623      	mov	r3, r4
 801d82a:	4650      	mov	r0, sl
 801d82c:	47b0      	blx	r6
 801d82e:	e74c      	b.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d830:	f10d 0818 	add.w	r8, sp, #24
 801d834:	4639      	mov	r1, r7
 801d836:	4640      	mov	r0, r8
 801d838:	f7fb ffde 	bl	80197f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d83c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d840:	af04      	add	r7, sp, #16
 801d842:	e887 0003 	stmia.w	r7, {r0, r1}
 801d846:	4638      	mov	r0, r7
 801d848:	4621      	mov	r1, r4
 801d84a:	f7f2 fe21 	bl	8010490 <_ZN8touchgfx4RectaNERKS0_>
 801d84e:	4638      	mov	r0, r7
 801d850:	f7f2 fe61 	bl	8010516 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d854:	b138      	cbz	r0, 801d866 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801d856:	9600      	str	r6, [sp, #0]
 801d858:	4623      	mov	r3, r4
 801d85a:	aa02      	add	r2, sp, #8
 801d85c:	4649      	mov	r1, r9
 801d85e:	4628      	mov	r0, r5
 801d860:	f7ff fdca 	bl	801d3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d864:	e731      	b.n	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d866:	e9cd 6000 	strd	r6, r0, [sp]
 801d86a:	f8da 3000 	ldr.w	r3, [sl]
 801d86e:	aa02      	add	r2, sp, #8
 801d870:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d874:	4629      	mov	r1, r5
 801d876:	463b      	mov	r3, r7
 801d878:	4650      	mov	r0, sl
 801d87a:	47d8      	blx	fp
 801d87c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d880:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d884:	4293      	cmp	r3, r2
 801d886:	dd13      	ble.n	801d8b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 801d888:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d88c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d890:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d894:	1a9b      	subs	r3, r3, r2
 801d896:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d89a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d89e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d8a2:	9600      	str	r6, [sp, #0]
 801d8a4:	4643      	mov	r3, r8
 801d8a6:	aa02      	add	r2, sp, #8
 801d8a8:	4649      	mov	r1, r9
 801d8aa:	4628      	mov	r0, r5
 801d8ac:	f7ff fda4 	bl	801d3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8b0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d8b4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d8b8:	4293      	cmp	r3, r2
 801d8ba:	dd13      	ble.n	801d8e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 801d8bc:	1a9b      	subs	r3, r3, r2
 801d8be:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d8c2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d8c6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d8ca:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d8ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8d2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d8d6:	9600      	str	r6, [sp, #0]
 801d8d8:	4643      	mov	r3, r8
 801d8da:	aa02      	add	r2, sp, #8
 801d8dc:	4649      	mov	r1, r9
 801d8de:	4628      	mov	r0, r5
 801d8e0:	f7ff fd8a 	bl	801d3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8e4:	88a2      	ldrh	r2, [r4, #4]
 801d8e6:	8823      	ldrh	r3, [r4, #0]
 801d8e8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d8ec:	4413      	add	r3, r2
 801d8ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d8f2:	440a      	add	r2, r1
 801d8f4:	b29b      	uxth	r3, r3
 801d8f6:	b292      	uxth	r2, r2
 801d8f8:	b211      	sxth	r1, r2
 801d8fa:	b218      	sxth	r0, r3
 801d8fc:	4288      	cmp	r0, r1
 801d8fe:	dd13      	ble.n	801d928 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 801d900:	1a9b      	subs	r3, r3, r2
 801d902:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d906:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d90a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d90e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d912:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d916:	9600      	str	r6, [sp, #0]
 801d918:	4643      	mov	r3, r8
 801d91a:	aa02      	add	r2, sp, #8
 801d91c:	4649      	mov	r1, r9
 801d91e:	4628      	mov	r0, r5
 801d920:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d924:	f7ff fd68 	bl	801d3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d928:	88e2      	ldrh	r2, [r4, #6]
 801d92a:	8863      	ldrh	r3, [r4, #2]
 801d92c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d930:	4413      	add	r3, r2
 801d932:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d936:	440a      	add	r2, r1
 801d938:	b29b      	uxth	r3, r3
 801d93a:	b292      	uxth	r2, r2
 801d93c:	b211      	sxth	r1, r2
 801d93e:	b218      	sxth	r0, r3
 801d940:	4288      	cmp	r0, r1
 801d942:	f77f aec2 	ble.w	801d6ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801d946:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d94a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d94e:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d952:	1a9b      	subs	r3, r3, r2
 801d954:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d958:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d95c:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d960:	9600      	str	r6, [sp, #0]
 801d962:	4643      	mov	r3, r8
 801d964:	e779      	b.n	801d85a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801d966:	bf00      	nop
 801d968:	2000dc74 	.word	0x2000dc74

0801d96c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d96c:	b180      	cbz	r0, 801d990 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d96e:	2903      	cmp	r1, #3
 801d970:	d81c      	bhi.n	801d9ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d972:	e8df f001 	tbb	[pc, r1]
 801d976:	1d02      	.short	0x1d02
 801d978:	1f08      	.short	0x1f08
 801d97a:	4b10      	ldr	r3, [pc, #64]	; (801d9bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d97c:	8818      	ldrh	r0, [r3, #0]
 801d97e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d982:	4240      	negs	r0, r0
 801d984:	4770      	bx	lr
 801d986:	4b0d      	ldr	r3, [pc, #52]	; (801d9bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d988:	8818      	ldrh	r0, [r3, #0]
 801d98a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d98e:	4770      	bx	lr
 801d990:	2903      	cmp	r1, #3
 801d992:	d80b      	bhi.n	801d9ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d994:	a301      	add	r3, pc, #4	; (adr r3, 801d99c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d996:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d99a:	bf00      	nop
 801d99c:	0801d9b1 	.word	0x0801d9b1
 801d9a0:	0801d987 	.word	0x0801d987
 801d9a4:	0801d9b5 	.word	0x0801d9b5
 801d9a8:	0801d97b 	.word	0x0801d97b
 801d9ac:	2000      	movs	r0, #0
 801d9ae:	4770      	bx	lr
 801d9b0:	2001      	movs	r0, #1
 801d9b2:	4770      	bx	lr
 801d9b4:	f04f 30ff 	mov.w	r0, #4294967295
 801d9b8:	4770      	bx	lr
 801d9ba:	bf00      	nop
 801d9bc:	2000dc6e 	.word	0x2000dc6e

0801d9c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d9c0:	b180      	cbz	r0, 801d9e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d9c2:	2903      	cmp	r1, #3
 801d9c4:	d81c      	bhi.n	801da00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d9c6:	e8df f001 	tbb	[pc, r1]
 801d9ca:	021d      	.short	0x021d
 801d9cc:	071f      	.short	0x071f
 801d9ce:	4b10      	ldr	r3, [pc, #64]	; (801da10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d9d0:	8818      	ldrh	r0, [r3, #0]
 801d9d2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9d6:	4770      	bx	lr
 801d9d8:	4b0d      	ldr	r3, [pc, #52]	; (801da10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d9da:	8818      	ldrh	r0, [r3, #0]
 801d9dc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9e0:	4240      	negs	r0, r0
 801d9e2:	4770      	bx	lr
 801d9e4:	2903      	cmp	r1, #3
 801d9e6:	d80b      	bhi.n	801da00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d9e8:	a301      	add	r3, pc, #4	; (adr r3, 801d9f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d9ea:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d9ee:	bf00      	nop
 801d9f0:	0801d9cf 	.word	0x0801d9cf
 801d9f4:	0801da09 	.word	0x0801da09
 801d9f8:	0801d9d9 	.word	0x0801d9d9
 801d9fc:	0801da05 	.word	0x0801da05
 801da00:	2000      	movs	r0, #0
 801da02:	4770      	bx	lr
 801da04:	2001      	movs	r0, #1
 801da06:	4770      	bx	lr
 801da08:	f04f 30ff 	mov.w	r0, #4294967295
 801da0c:	4770      	bx	lr
 801da0e:	bf00      	nop
 801da10:	2000dc6e 	.word	0x2000dc6e

0801da14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801da14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da18:	b099      	sub	sp, #100	; 0x64
 801da1a:	910b      	str	r1, [sp, #44]	; 0x2c
 801da1c:	a914      	add	r1, sp, #80	; 0x50
 801da1e:	e881 000c 	stmia.w	r1, {r2, r3}
 801da22:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801da26:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801da2a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801da2e:	9309      	str	r3, [sp, #36]	; 0x24
 801da30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801da34:	9310      	str	r3, [sp, #64]	; 0x40
 801da36:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801da3a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801da3e:	930c      	str	r3, [sp, #48]	; 0x30
 801da40:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801da44:	798f      	ldrb	r7, [r1, #6]
 801da46:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801da4a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801da4e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801da52:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801da56:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801da5a:	431f      	orrs	r7, r3
 801da5c:	f000 8195 	beq.w	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801da60:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801da64:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801da68:	f891 9007 	ldrb.w	r9, [r1, #7]
 801da6c:	ea59 0903 	orrs.w	r9, r9, r3
 801da70:	f000 818b 	beq.w	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801da74:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801da78:	b29b      	uxth	r3, r3
 801da7a:	2d00      	cmp	r5, #0
 801da7c:	f000 812e 	beq.w	801dcdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801da80:	1aed      	subs	r5, r5, r3
 801da82:	b2ad      	uxth	r5, r5
 801da84:	042b      	lsls	r3, r5, #16
 801da86:	d502      	bpl.n	801da8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801da88:	1b64      	subs	r4, r4, r5
 801da8a:	b224      	sxth	r4, r4
 801da8c:	2500      	movs	r5, #0
 801da8e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801da92:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801da96:	428c      	cmp	r4, r1
 801da98:	b28b      	uxth	r3, r1
 801da9a:	bfbf      	itttt	lt
 801da9c:	18ed      	addlt	r5, r5, r3
 801da9e:	1b2c      	sublt	r4, r5, r4
 801daa0:	b2a5      	uxthlt	r5, r4
 801daa2:	460c      	movlt	r4, r1
 801daa4:	8891      	ldrh	r1, [r2, #4]
 801daa6:	440b      	add	r3, r1
 801daa8:	b21b      	sxth	r3, r3
 801daaa:	930f      	str	r3, [sp, #60]	; 0x3c
 801daac:	88d3      	ldrh	r3, [r2, #6]
 801daae:	8852      	ldrh	r2, [r2, #2]
 801dab0:	4413      	add	r3, r2
 801dab2:	b21b      	sxth	r3, r3
 801dab4:	930d      	str	r3, [sp, #52]	; 0x34
 801dab6:	4bbe      	ldr	r3, [pc, #760]	; (801ddb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801dab8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801daba:	f893 b000 	ldrb.w	fp, [r3]
 801dabe:	f10b 3cff 	add.w	ip, fp, #4294967295
 801dac2:	f1dc 0300 	rsbs	r3, ip, #0
 801dac6:	eb43 030c 	adc.w	r3, r3, ip
 801daca:	930e      	str	r3, [sp, #56]	; 0x38
 801dacc:	4621      	mov	r1, r4
 801dace:	4653      	mov	r3, sl
 801dad0:	a814      	add	r0, sp, #80	; 0x50
 801dad2:	f7f8 fa61 	bl	8015f98 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dad6:	4621      	mov	r1, r4
 801dad8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dadc:	4653      	mov	r3, sl
 801dade:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dae0:	a814      	add	r0, sp, #80	; 0x50
 801dae2:	f7f8 fa76 	bl	8015fd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dae6:	a918      	add	r1, sp, #96	; 0x60
 801dae8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801daec:	a817      	add	r0, sp, #92	; 0x5c
 801daee:	f7f8 fb97 	bl	8016220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801daf2:	f1ba 0f00 	cmp.w	sl, #0
 801daf6:	f040 80f4 	bne.w	801dce2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dafa:	f1bb 0f01 	cmp.w	fp, #1
 801dafe:	f040 80f8 	bne.w	801dcf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801db02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db04:	2b00      	cmp	r3, #0
 801db06:	f040 8145 	bne.w	801dd94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801db0a:	b2ba      	uxth	r2, r7
 801db0c:	b905      	cbnz	r5, 801db10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801db0e:	b16e      	cbz	r6, 801db2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801db10:	fb06 5302 	mla	r3, r6, r2, r5
 801db14:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801db16:	fb08 f303 	mul.w	r3, r8, r3
 801db1a:	4631      	mov	r1, r6
 801db1c:	f003 0607 	and.w	r6, r3, #7
 801db20:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801db24:	9328      	str	r3, [sp, #160]	; 0xa0
 801db26:	eba9 0301 	sub.w	r3, r9, r1
 801db2a:	930a      	str	r3, [sp, #40]	; 0x28
 801db2c:	4651      	mov	r1, sl
 801db2e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db30:	f7ff ff1c 	bl	801d96c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801db34:	4681      	mov	r9, r0
 801db36:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db38:	f7ff ff42 	bl	801d9c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801db3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db3e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801db40:	eba3 0a01 	sub.w	sl, r3, r1
 801db44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db46:	459a      	cmp	sl, r3
 801db48:	bfa8      	it	ge
 801db4a:	469a      	movge	sl, r3
 801db4c:	f1ba 0f00 	cmp.w	sl, #0
 801db50:	4683      	mov	fp, r0
 801db52:	f340 811a 	ble.w	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801db58:	1b64      	subs	r4, r4, r5
 801db5a:	1b1c      	subs	r4, r3, r4
 801db5c:	42bc      	cmp	r4, r7
 801db5e:	bfd4      	ite	le
 801db60:	ebc5 0504 	rsble	r5, r5, r4
 801db64:	ebc5 0507 	rsbgt	r5, r5, r7
 801db68:	2d00      	cmp	r5, #0
 801db6a:	f340 810e 	ble.w	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db6e:	1b52      	subs	r2, r2, r5
 801db70:	fb08 f302 	mul.w	r3, r8, r2
 801db74:	930f      	str	r3, [sp, #60]	; 0x3c
 801db76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db78:	2b00      	cmp	r3, #0
 801db7a:	f040 8116 	bne.w	801ddaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801db7e:	4b8d      	ldr	r3, [pc, #564]	; (801ddb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801db80:	6818      	ldr	r0, [r3, #0]
 801db82:	6803      	ldr	r3, [r0, #0]
 801db84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db86:	4798      	blx	r3
 801db88:	2301      	movs	r3, #1
 801db8a:	fa03 f308 	lsl.w	r3, r3, r8
 801db8e:	4a8a      	ldr	r2, [pc, #552]	; (801ddb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801db90:	3b01      	subs	r3, #1
 801db92:	b2db      	uxtb	r3, r3
 801db94:	8811      	ldrh	r1, [r2, #0]
 801db96:	930e      	str	r3, [sp, #56]	; 0x38
 801db98:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801db9c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dba0:	fb01 2303 	mla	r3, r1, r3, r2
 801dba4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dba8:	930a      	str	r3, [sp, #40]	; 0x28
 801dbaa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbac:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dbb0:	9313      	str	r3, [sp, #76]	; 0x4c
 801dbb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbb4:	0a19      	lsrs	r1, r3, #8
 801dbb6:	b2cb      	uxtb	r3, r1
 801dbb8:	9312      	str	r3, [sp, #72]	; 0x48
 801dbba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbbc:	b2db      	uxtb	r3, r3
 801dbbe:	9311      	str	r3, [sp, #68]	; 0x44
 801dbc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbc2:	095a      	lsrs	r2, r3, #5
 801dbc4:	4b7d      	ldr	r3, [pc, #500]	; (801ddbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dbc6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dbca:	400b      	ands	r3, r1
 801dbcc:	4313      	orrs	r3, r2
 801dbce:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dbd0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dbd4:	4313      	orrs	r3, r2
 801dbd6:	b29b      	uxth	r3, r3
 801dbd8:	9310      	str	r3, [sp, #64]	; 0x40
 801dbda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbdc:	781a      	ldrb	r2, [r3, #0]
 801dbde:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dbe2:	4132      	asrs	r2, r6
 801dbe4:	fb05 b919 	mls	r9, r5, r9, fp
 801dbe8:	fb03 fb05 	mul.w	fp, r3, r5
 801dbec:	b2d2      	uxtb	r2, r2
 801dbee:	930d      	str	r3, [sp, #52]	; 0x34
 801dbf0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dbf4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dbf8:	f0c0 80f5 	bcc.w	801dde6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dbfc:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dc00:	46ae      	mov	lr, r5
 801dc02:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dc06:	f0c0 80dd 	bcc.w	801ddc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dc0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc0c:	4013      	ands	r3, r2
 801dc0e:	d055      	beq.n	801dcbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dc10:	20ff      	movs	r0, #255	; 0xff
 801dc12:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dc14:	fb90 f1f1 	sdiv	r1, r0, r1
 801dc18:	434b      	muls	r3, r1
 801dc1a:	2bfe      	cmp	r3, #254	; 0xfe
 801dc1c:	dd03      	ble.n	801dc26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dc1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc20:	4281      	cmp	r1, r0
 801dc22:	f000 80cd 	beq.w	801ddc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dc26:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc28:	f8bc 4000 	ldrh.w	r4, [ip]
 801dc2c:	fb11 f303 	smulbb	r3, r1, r3
 801dc30:	b29b      	uxth	r3, r3
 801dc32:	1c59      	adds	r1, r3, #1
 801dc34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dc38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dc3c:	b29f      	uxth	r7, r3
 801dc3e:	43db      	mvns	r3, r3
 801dc40:	b2db      	uxtb	r3, r3
 801dc42:	9309      	str	r3, [sp, #36]	; 0x24
 801dc44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dc46:	1220      	asrs	r0, r4, #8
 801dc48:	fb13 f907 	smulbb	r9, r3, r7
 801dc4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dc50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc52:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dc56:	fb00 9003 	mla	r0, r0, r3, r9
 801dc5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dc5c:	10e1      	asrs	r1, r4, #3
 801dc5e:	fb13 f907 	smulbb	r9, r3, r7
 801dc62:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dc66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc68:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dc6c:	fb01 9103 	mla	r1, r1, r3, r9
 801dc70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dc72:	00e4      	lsls	r4, r4, #3
 801dc74:	fb13 f707 	smulbb	r7, r3, r7
 801dc78:	b2e4      	uxtb	r4, r4
 801dc7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dc80:	fb04 7403 	mla	r4, r4, r3, r7
 801dc84:	b280      	uxth	r0, r0
 801dc86:	b2a4      	uxth	r4, r4
 801dc88:	1c43      	adds	r3, r0, #1
 801dc8a:	f104 0901 	add.w	r9, r4, #1
 801dc8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dc92:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dc96:	b289      	uxth	r1, r1
 801dc98:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dc9c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dca0:	ea49 0000 	orr.w	r0, r9, r0
 801dca4:	f101 0901 	add.w	r9, r1, #1
 801dca8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dcac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dcb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dcb4:	ea40 0009 	orr.w	r0, r0, r9
 801dcb8:	f8ac 0000 	strh.w	r0, [ip]
 801dcbc:	4446      	add	r6, r8
 801dcbe:	b2b6      	uxth	r6, r6
 801dcc0:	2e07      	cmp	r6, #7
 801dcc2:	bf81      	itttt	hi
 801dcc4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801dcc6:	785a      	ldrbhi	r2, [r3, #1]
 801dcc8:	3301      	addhi	r3, #1
 801dcca:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801dccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dcce:	bf9a      	itte	ls
 801dcd0:	fa42 f208 	asrls.w	r2, r2, r8
 801dcd4:	b2d2      	uxtbls	r2, r2
 801dcd6:	2600      	movhi	r6, #0
 801dcd8:	449c      	add	ip, r3
 801dcda:	e792      	b.n	801dc02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dcdc:	441c      	add	r4, r3
 801dcde:	b224      	sxth	r4, r4
 801dce0:	e6d5      	b.n	801da8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dce2:	f1ba 0f01 	cmp.w	sl, #1
 801dce6:	f47f af0c 	bne.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcea:	f1bb 0f01 	cmp.w	fp, #1
 801dcee:	f47f af08 	bne.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcf2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ddb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801dcf6:	f8db 0000 	ldr.w	r0, [fp]
 801dcfa:	6803      	ldr	r3, [r0, #0]
 801dcfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dcfe:	4798      	blx	r3
 801dd00:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801dd04:	465a      	mov	r2, fp
 801dd06:	d006      	beq.n	801dd16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dd08:	f1b8 0f04 	cmp.w	r8, #4
 801dd0c:	d140      	bne.n	801dd90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801dd0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd10:	3300      	adds	r3, #0
 801dd12:	bf18      	it	ne
 801dd14:	2301      	movne	r3, #1
 801dd16:	0580      	lsls	r0, r0, #22
 801dd18:	d56e      	bpl.n	801ddf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dd1a:	f1b8 0f08 	cmp.w	r8, #8
 801dd1e:	d16b      	bne.n	801ddf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dd20:	2b00      	cmp	r3, #0
 801dd22:	bf0c      	ite	eq
 801dd24:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801dd28:	f44f 7180 	movne.w	r1, #256	; 0x100
 801dd2c:	2d00      	cmp	r5, #0
 801dd2e:	f47f aee8 	bne.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd32:	2e00      	cmp	r6, #0
 801dd34:	f47f aee5 	bne.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd38:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dd3a:	19e3      	adds	r3, r4, r7
 801dd3c:	4283      	cmp	r3, r0
 801dd3e:	f73f aee0 	bgt.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd44:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dd46:	444b      	add	r3, r9
 801dd48:	4283      	cmp	r3, r0
 801dd4a:	f73f aeda 	bgt.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd4e:	6810      	ldr	r0, [r2, #0]
 801dd50:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dd54:	6804      	ldr	r4, [r0, #0]
 801dd56:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801dd5a:	b2bf      	uxth	r7, r7
 801dd5c:	f1b8 0f08 	cmp.w	r8, #8
 801dd60:	f04f 0500 	mov.w	r5, #0
 801dd64:	bf18      	it	ne
 801dd66:	3701      	addne	r7, #1
 801dd68:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801dd6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd6e:	9104      	str	r1, [sp, #16]
 801dd70:	bf18      	it	ne
 801dd72:	f027 0701 	bicne.w	r7, r7, #1
 801dd76:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dd78:	bf18      	it	ne
 801dd7a:	b2bf      	uxthne	r7, r7
 801dd7c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dd80:	e9cd 7900 	strd	r7, r9, [sp]
 801dd84:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dd86:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801dd88:	47a0      	blx	r4
 801dd8a:	b019      	add	sp, #100	; 0x64
 801dd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd90:	2300      	movs	r3, #0
 801dd92:	e7c0      	b.n	801dd16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dd94:	2208      	movs	r2, #8
 801dd96:	fb92 f3f8 	sdiv	r3, r2, r8
 801dd9a:	1e5a      	subs	r2, r3, #1
 801dd9c:	443a      	add	r2, r7
 801dd9e:	fb92 f2f3 	sdiv	r2, r2, r3
 801dda2:	fb12 f203 	smulbb	r2, r2, r3
 801dda6:	b292      	uxth	r2, r2
 801dda8:	e6b0      	b.n	801db0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ddaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ddac:	e6ec      	b.n	801db88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ddae:	bf00      	nop
 801ddb0:	2000dc6c 	.word	0x2000dc6c
 801ddb4:	2000dc74 	.word	0x2000dc74
 801ddb8:	2000dc6e 	.word	0x2000dc6e
 801ddbc:	00fff800 	.word	0x00fff800
 801ddc0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ddc2:	e779      	b.n	801dcb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801ddc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ddc6:	b153      	cbz	r3, 801ddde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ddc8:	441e      	add	r6, r3
 801ddca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ddcc:	b2b6      	uxth	r6, r6
 801ddce:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ddd2:	f006 0607 	and.w	r6, r6, #7
 801ddd6:	781a      	ldrb	r2, [r3, #0]
 801ddd8:	9328      	str	r3, [sp, #160]	; 0xa0
 801ddda:	4132      	asrs	r2, r6
 801dddc:	b2d2      	uxtb	r2, r2
 801ddde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dde0:	445b      	add	r3, fp
 801dde2:	930a      	str	r3, [sp, #40]	; 0x28
 801dde4:	e706      	b.n	801dbf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801dde6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dde8:	2b00      	cmp	r3, #0
 801ddea:	d1ce      	bne.n	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ddec:	4b05      	ldr	r3, [pc, #20]	; (801de04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801ddee:	6818      	ldr	r0, [r3, #0]
 801ddf0:	6803      	ldr	r3, [r0, #0]
 801ddf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ddf4:	4798      	blx	r3
 801ddf6:	e7c8      	b.n	801dd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ddf8:	2b00      	cmp	r3, #0
 801ddfa:	f43f ae82 	beq.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddfe:	f44f 7180 	mov.w	r1, #256	; 0x100
 801de02:	e793      	b.n	801dd2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801de04:	2000dc74 	.word	0x2000dc74

0801de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801de08:	b538      	push	{r3, r4, r5, lr}
 801de0a:	4c15      	ldr	r4, [pc, #84]	; (801de60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801de0c:	7823      	ldrb	r3, [r4, #0]
 801de0e:	f3bf 8f5b 	dmb	ish
 801de12:	07da      	lsls	r2, r3, #31
 801de14:	4605      	mov	r5, r0
 801de16:	d40b      	bmi.n	801de30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801de18:	4620      	mov	r0, r4
 801de1a:	f007 fd92 	bl	8025942 <__cxa_guard_acquire>
 801de1e:	b138      	cbz	r0, 801de30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801de20:	4620      	mov	r0, r4
 801de22:	f007 fd9a 	bl	802595a <__cxa_guard_release>
 801de26:	4a0f      	ldr	r2, [pc, #60]	; (801de64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de28:	490f      	ldr	r1, [pc, #60]	; (801de68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801de2a:	4810      	ldr	r0, [pc, #64]	; (801de6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de2c:	f007 fd82 	bl	8025934 <__aeabi_atexit>
 801de30:	4c0f      	ldr	r4, [pc, #60]	; (801de70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801de32:	7823      	ldrb	r3, [r4, #0]
 801de34:	f3bf 8f5b 	dmb	ish
 801de38:	07db      	lsls	r3, r3, #31
 801de3a:	d40b      	bmi.n	801de54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de3c:	4620      	mov	r0, r4
 801de3e:	f007 fd80 	bl	8025942 <__cxa_guard_acquire>
 801de42:	b138      	cbz	r0, 801de54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de44:	4620      	mov	r0, r4
 801de46:	f007 fd88 	bl	802595a <__cxa_guard_release>
 801de4a:	4a06      	ldr	r2, [pc, #24]	; (801de64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de4c:	4909      	ldr	r1, [pc, #36]	; (801de74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801de4e:	480a      	ldr	r0, [pc, #40]	; (801de78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de50:	f007 fd70 	bl	8025934 <__aeabi_atexit>
 801de54:	4b05      	ldr	r3, [pc, #20]	; (801de6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de56:	612b      	str	r3, [r5, #16]
 801de58:	4b07      	ldr	r3, [pc, #28]	; (801de78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de5a:	616b      	str	r3, [r5, #20]
 801de5c:	bd38      	pop	{r3, r4, r5, pc}
 801de5e:	bf00      	nop
 801de60:	2000dd48 	.word	0x2000dd48
 801de64:	20000000 	.word	0x20000000
 801de68:	0801c019 	.word	0x0801c019
 801de6c:	200000a4 	.word	0x200000a4
 801de70:	2000dd4c 	.word	0x2000dd4c
 801de74:	0801c017 	.word	0x0801c017
 801de78:	200000a8 	.word	0x200000a8

0801de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801de7c:	b538      	push	{r3, r4, r5, lr}
 801de7e:	4c15      	ldr	r4, [pc, #84]	; (801ded4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801de80:	7823      	ldrb	r3, [r4, #0]
 801de82:	f3bf 8f5b 	dmb	ish
 801de86:	07da      	lsls	r2, r3, #31
 801de88:	4605      	mov	r5, r0
 801de8a:	d40b      	bmi.n	801dea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de8c:	4620      	mov	r0, r4
 801de8e:	f007 fd58 	bl	8025942 <__cxa_guard_acquire>
 801de92:	b138      	cbz	r0, 801dea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de94:	4620      	mov	r0, r4
 801de96:	f007 fd60 	bl	802595a <__cxa_guard_release>
 801de9a:	4a0f      	ldr	r2, [pc, #60]	; (801ded8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801de9c:	490f      	ldr	r1, [pc, #60]	; (801dedc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801de9e:	4810      	ldr	r0, [pc, #64]	; (801dee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dea0:	f007 fd48 	bl	8025934 <__aeabi_atexit>
 801dea4:	4c0f      	ldr	r4, [pc, #60]	; (801dee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dea6:	7823      	ldrb	r3, [r4, #0]
 801dea8:	f3bf 8f5b 	dmb	ish
 801deac:	07db      	lsls	r3, r3, #31
 801deae:	d40b      	bmi.n	801dec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801deb0:	4620      	mov	r0, r4
 801deb2:	f007 fd46 	bl	8025942 <__cxa_guard_acquire>
 801deb6:	b138      	cbz	r0, 801dec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801deb8:	4620      	mov	r0, r4
 801deba:	f007 fd4e 	bl	802595a <__cxa_guard_release>
 801debe:	4a06      	ldr	r2, [pc, #24]	; (801ded8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dec0:	4909      	ldr	r1, [pc, #36]	; (801dee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dec2:	480a      	ldr	r0, [pc, #40]	; (801deec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dec4:	f007 fd36 	bl	8025934 <__aeabi_atexit>
 801dec8:	4b05      	ldr	r3, [pc, #20]	; (801dee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801deca:	60ab      	str	r3, [r5, #8]
 801decc:	4b07      	ldr	r3, [pc, #28]	; (801deec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dece:	60eb      	str	r3, [r5, #12]
 801ded0:	bd38      	pop	{r3, r4, r5, pc}
 801ded2:	bf00      	nop
 801ded4:	2000dd20 	.word	0x2000dd20
 801ded8:	20000000 	.word	0x20000000
 801dedc:	0801c01d 	.word	0x0801c01d
 801dee0:	2000007c 	.word	0x2000007c
 801dee4:	2000dd24 	.word	0x2000dd24
 801dee8:	0801c01b 	.word	0x0801c01b
 801deec:	20000080 	.word	0x20000080

0801def0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801def0:	b510      	push	{r4, lr}
 801def2:	4604      	mov	r4, r0
 801def4:	f7ff ff88 	bl	801de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801def8:	4620      	mov	r0, r4
 801defa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801defe:	f7ff bfbd 	b.w	801de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801df04:	b538      	push	{r3, r4, r5, lr}
 801df06:	4c15      	ldr	r4, [pc, #84]	; (801df5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801df08:	7823      	ldrb	r3, [r4, #0]
 801df0a:	f3bf 8f5b 	dmb	ish
 801df0e:	07da      	lsls	r2, r3, #31
 801df10:	4605      	mov	r5, r0
 801df12:	d40b      	bmi.n	801df2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801df14:	4620      	mov	r0, r4
 801df16:	f007 fd14 	bl	8025942 <__cxa_guard_acquire>
 801df1a:	b138      	cbz	r0, 801df2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801df1c:	4620      	mov	r0, r4
 801df1e:	f007 fd1c 	bl	802595a <__cxa_guard_release>
 801df22:	4a0f      	ldr	r2, [pc, #60]	; (801df60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df24:	490f      	ldr	r1, [pc, #60]	; (801df64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801df26:	4810      	ldr	r0, [pc, #64]	; (801df68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df28:	f007 fd04 	bl	8025934 <__aeabi_atexit>
 801df2c:	4c0f      	ldr	r4, [pc, #60]	; (801df6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801df2e:	7823      	ldrb	r3, [r4, #0]
 801df30:	f3bf 8f5b 	dmb	ish
 801df34:	07db      	lsls	r3, r3, #31
 801df36:	d40b      	bmi.n	801df50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df38:	4620      	mov	r0, r4
 801df3a:	f007 fd02 	bl	8025942 <__cxa_guard_acquire>
 801df3e:	b138      	cbz	r0, 801df50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df40:	4620      	mov	r0, r4
 801df42:	f007 fd0a 	bl	802595a <__cxa_guard_release>
 801df46:	4a06      	ldr	r2, [pc, #24]	; (801df60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df48:	4909      	ldr	r1, [pc, #36]	; (801df70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801df4a:	480a      	ldr	r0, [pc, #40]	; (801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df4c:	f007 fcf2 	bl	8025934 <__aeabi_atexit>
 801df50:	4b05      	ldr	r3, [pc, #20]	; (801df68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df52:	622b      	str	r3, [r5, #32]
 801df54:	4b07      	ldr	r3, [pc, #28]	; (801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df56:	626b      	str	r3, [r5, #36]	; 0x24
 801df58:	bd38      	pop	{r3, r4, r5, pc}
 801df5a:	bf00      	nop
 801df5c:	2000dd50 	.word	0x2000dd50
 801df60:	20000000 	.word	0x20000000
 801df64:	0801c011 	.word	0x0801c011
 801df68:	200000ac 	.word	0x200000ac
 801df6c:	2000dd54 	.word	0x2000dd54
 801df70:	0801c00f 	.word	0x0801c00f
 801df74:	200000b0 	.word	0x200000b0

0801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801df78:	b538      	push	{r3, r4, r5, lr}
 801df7a:	4c15      	ldr	r4, [pc, #84]	; (801dfd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801df7c:	7823      	ldrb	r3, [r4, #0]
 801df7e:	f3bf 8f5b 	dmb	ish
 801df82:	07da      	lsls	r2, r3, #31
 801df84:	4605      	mov	r5, r0
 801df86:	d40b      	bmi.n	801dfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df88:	4620      	mov	r0, r4
 801df8a:	f007 fcda 	bl	8025942 <__cxa_guard_acquire>
 801df8e:	b138      	cbz	r0, 801dfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df90:	4620      	mov	r0, r4
 801df92:	f007 fce2 	bl	802595a <__cxa_guard_release>
 801df96:	4a0f      	ldr	r2, [pc, #60]	; (801dfd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801df98:	490f      	ldr	r1, [pc, #60]	; (801dfd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801df9a:	4810      	ldr	r0, [pc, #64]	; (801dfdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801df9c:	f007 fcca 	bl	8025934 <__aeabi_atexit>
 801dfa0:	4c0f      	ldr	r4, [pc, #60]	; (801dfe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801dfa2:	7823      	ldrb	r3, [r4, #0]
 801dfa4:	f3bf 8f5b 	dmb	ish
 801dfa8:	07db      	lsls	r3, r3, #31
 801dfaa:	d40b      	bmi.n	801dfc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dfac:	4620      	mov	r0, r4
 801dfae:	f007 fcc8 	bl	8025942 <__cxa_guard_acquire>
 801dfb2:	b138      	cbz	r0, 801dfc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dfb4:	4620      	mov	r0, r4
 801dfb6:	f007 fcd0 	bl	802595a <__cxa_guard_release>
 801dfba:	4a06      	ldr	r2, [pc, #24]	; (801dfd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dfbc:	4909      	ldr	r1, [pc, #36]	; (801dfe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801dfbe:	480a      	ldr	r0, [pc, #40]	; (801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dfc0:	f007 fcb8 	bl	8025934 <__aeabi_atexit>
 801dfc4:	4b05      	ldr	r3, [pc, #20]	; (801dfdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dfc6:	61ab      	str	r3, [r5, #24]
 801dfc8:	4b07      	ldr	r3, [pc, #28]	; (801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dfca:	61eb      	str	r3, [r5, #28]
 801dfcc:	bd38      	pop	{r3, r4, r5, pc}
 801dfce:	bf00      	nop
 801dfd0:	2000dd28 	.word	0x2000dd28
 801dfd4:	20000000 	.word	0x20000000
 801dfd8:	0801c015 	.word	0x0801c015
 801dfdc:	20000084 	.word	0x20000084
 801dfe0:	2000dd2c 	.word	0x2000dd2c
 801dfe4:	0801c013 	.word	0x0801c013
 801dfe8:	20000088 	.word	0x20000088

0801dfec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dfec:	b510      	push	{r4, lr}
 801dfee:	4604      	mov	r4, r0
 801dff0:	f7ff ff88 	bl	801df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dff4:	4620      	mov	r0, r4
 801dff6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dffa:	f7ff bfbd 	b.w	801df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e000:	b538      	push	{r3, r4, r5, lr}
 801e002:	4c15      	ldr	r4, [pc, #84]	; (801e058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e004:	7823      	ldrb	r3, [r4, #0]
 801e006:	f3bf 8f5b 	dmb	ish
 801e00a:	07da      	lsls	r2, r3, #31
 801e00c:	4605      	mov	r5, r0
 801e00e:	d40b      	bmi.n	801e028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e010:	4620      	mov	r0, r4
 801e012:	f007 fc96 	bl	8025942 <__cxa_guard_acquire>
 801e016:	b138      	cbz	r0, 801e028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e018:	4620      	mov	r0, r4
 801e01a:	f007 fc9e 	bl	802595a <__cxa_guard_release>
 801e01e:	4a0f      	ldr	r2, [pc, #60]	; (801e05c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e020:	490f      	ldr	r1, [pc, #60]	; (801e060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e022:	4810      	ldr	r0, [pc, #64]	; (801e064 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e024:	f007 fc86 	bl	8025934 <__aeabi_atexit>
 801e028:	4c0f      	ldr	r4, [pc, #60]	; (801e068 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e02a:	7823      	ldrb	r3, [r4, #0]
 801e02c:	f3bf 8f5b 	dmb	ish
 801e030:	07db      	lsls	r3, r3, #31
 801e032:	d40b      	bmi.n	801e04c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e034:	4620      	mov	r0, r4
 801e036:	f007 fc84 	bl	8025942 <__cxa_guard_acquire>
 801e03a:	b138      	cbz	r0, 801e04c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e03c:	4620      	mov	r0, r4
 801e03e:	f007 fc8c 	bl	802595a <__cxa_guard_release>
 801e042:	4a06      	ldr	r2, [pc, #24]	; (801e05c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e044:	4909      	ldr	r1, [pc, #36]	; (801e06c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e046:	480a      	ldr	r0, [pc, #40]	; (801e070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e048:	f007 fc74 	bl	8025934 <__aeabi_atexit>
 801e04c:	4b05      	ldr	r3, [pc, #20]	; (801e064 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e04e:	632b      	str	r3, [r5, #48]	; 0x30
 801e050:	4b07      	ldr	r3, [pc, #28]	; (801e070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e052:	636b      	str	r3, [r5, #52]	; 0x34
 801e054:	bd38      	pop	{r3, r4, r5, pc}
 801e056:	bf00      	nop
 801e058:	2000dd60 	.word	0x2000dd60
 801e05c:	20000000 	.word	0x20000000
 801e060:	0801c009 	.word	0x0801c009
 801e064:	200000bc 	.word	0x200000bc
 801e068:	2000dd64 	.word	0x2000dd64
 801e06c:	0801c007 	.word	0x0801c007
 801e070:	200000c0 	.word	0x200000c0

0801e074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e074:	b538      	push	{r3, r4, r5, lr}
 801e076:	4c15      	ldr	r4, [pc, #84]	; (801e0cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e078:	7823      	ldrb	r3, [r4, #0]
 801e07a:	f3bf 8f5b 	dmb	ish
 801e07e:	07da      	lsls	r2, r3, #31
 801e080:	4605      	mov	r5, r0
 801e082:	d40b      	bmi.n	801e09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e084:	4620      	mov	r0, r4
 801e086:	f007 fc5c 	bl	8025942 <__cxa_guard_acquire>
 801e08a:	b138      	cbz	r0, 801e09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e08c:	4620      	mov	r0, r4
 801e08e:	f007 fc64 	bl	802595a <__cxa_guard_release>
 801e092:	4a0f      	ldr	r2, [pc, #60]	; (801e0d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e094:	490f      	ldr	r1, [pc, #60]	; (801e0d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e096:	4810      	ldr	r0, [pc, #64]	; (801e0d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e098:	f007 fc4c 	bl	8025934 <__aeabi_atexit>
 801e09c:	4c0f      	ldr	r4, [pc, #60]	; (801e0dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e09e:	7823      	ldrb	r3, [r4, #0]
 801e0a0:	f3bf 8f5b 	dmb	ish
 801e0a4:	07db      	lsls	r3, r3, #31
 801e0a6:	d40b      	bmi.n	801e0c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e0a8:	4620      	mov	r0, r4
 801e0aa:	f007 fc4a 	bl	8025942 <__cxa_guard_acquire>
 801e0ae:	b138      	cbz	r0, 801e0c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e0b0:	4620      	mov	r0, r4
 801e0b2:	f007 fc52 	bl	802595a <__cxa_guard_release>
 801e0b6:	4a06      	ldr	r2, [pc, #24]	; (801e0d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e0b8:	4909      	ldr	r1, [pc, #36]	; (801e0e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e0ba:	480a      	ldr	r0, [pc, #40]	; (801e0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e0bc:	f007 fc3a 	bl	8025934 <__aeabi_atexit>
 801e0c0:	4b05      	ldr	r3, [pc, #20]	; (801e0d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e0c2:	62ab      	str	r3, [r5, #40]	; 0x28
 801e0c4:	4b07      	ldr	r3, [pc, #28]	; (801e0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e0c6:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e0c8:	bd38      	pop	{r3, r4, r5, pc}
 801e0ca:	bf00      	nop
 801e0cc:	2000dd30 	.word	0x2000dd30
 801e0d0:	20000000 	.word	0x20000000
 801e0d4:	0801c00d 	.word	0x0801c00d
 801e0d8:	2000008c 	.word	0x2000008c
 801e0dc:	2000dd34 	.word	0x2000dd34
 801e0e0:	0801c00b 	.word	0x0801c00b
 801e0e4:	20000090 	.word	0x20000090

0801e0e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e0e8:	b510      	push	{r4, lr}
 801e0ea:	4604      	mov	r4, r0
 801e0ec:	f7ff ff88 	bl	801e000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0f6:	f7ff bfbd 	b.w	801e074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e0fc:	b538      	push	{r3, r4, r5, lr}
 801e0fe:	4c15      	ldr	r4, [pc, #84]	; (801e154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e100:	7823      	ldrb	r3, [r4, #0]
 801e102:	f3bf 8f5b 	dmb	ish
 801e106:	07da      	lsls	r2, r3, #31
 801e108:	4605      	mov	r5, r0
 801e10a:	d40b      	bmi.n	801e124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e10c:	4620      	mov	r0, r4
 801e10e:	f007 fc18 	bl	8025942 <__cxa_guard_acquire>
 801e112:	b138      	cbz	r0, 801e124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e114:	4620      	mov	r0, r4
 801e116:	f007 fc20 	bl	802595a <__cxa_guard_release>
 801e11a:	4a0f      	ldr	r2, [pc, #60]	; (801e158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e11c:	490f      	ldr	r1, [pc, #60]	; (801e15c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e11e:	4810      	ldr	r0, [pc, #64]	; (801e160 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e120:	f007 fc08 	bl	8025934 <__aeabi_atexit>
 801e124:	4c0f      	ldr	r4, [pc, #60]	; (801e164 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e126:	7823      	ldrb	r3, [r4, #0]
 801e128:	f3bf 8f5b 	dmb	ish
 801e12c:	07db      	lsls	r3, r3, #31
 801e12e:	d40b      	bmi.n	801e148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e130:	4620      	mov	r0, r4
 801e132:	f007 fc06 	bl	8025942 <__cxa_guard_acquire>
 801e136:	b138      	cbz	r0, 801e148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e138:	4620      	mov	r0, r4
 801e13a:	f007 fc0e 	bl	802595a <__cxa_guard_release>
 801e13e:	4a06      	ldr	r2, [pc, #24]	; (801e158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e140:	4909      	ldr	r1, [pc, #36]	; (801e168 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e142:	480a      	ldr	r0, [pc, #40]	; (801e16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e144:	f007 fbf6 	bl	8025934 <__aeabi_atexit>
 801e148:	4b05      	ldr	r3, [pc, #20]	; (801e160 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e14a:	652b      	str	r3, [r5, #80]	; 0x50
 801e14c:	4b07      	ldr	r3, [pc, #28]	; (801e16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e14e:	656b      	str	r3, [r5, #84]	; 0x54
 801e150:	bd38      	pop	{r3, r4, r5, pc}
 801e152:	bf00      	nop
 801e154:	2000dd68 	.word	0x2000dd68
 801e158:	20000000 	.word	0x20000000
 801e15c:	0801bff9 	.word	0x0801bff9
 801e160:	200000c4 	.word	0x200000c4
 801e164:	2000dd6c 	.word	0x2000dd6c
 801e168:	0801bff7 	.word	0x0801bff7
 801e16c:	200000c8 	.word	0x200000c8

0801e170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e170:	b538      	push	{r3, r4, r5, lr}
 801e172:	4c15      	ldr	r4, [pc, #84]	; (801e1c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e174:	7823      	ldrb	r3, [r4, #0]
 801e176:	f3bf 8f5b 	dmb	ish
 801e17a:	07da      	lsls	r2, r3, #31
 801e17c:	4605      	mov	r5, r0
 801e17e:	d40b      	bmi.n	801e198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e180:	4620      	mov	r0, r4
 801e182:	f007 fbde 	bl	8025942 <__cxa_guard_acquire>
 801e186:	b138      	cbz	r0, 801e198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e188:	4620      	mov	r0, r4
 801e18a:	f007 fbe6 	bl	802595a <__cxa_guard_release>
 801e18e:	4a0f      	ldr	r2, [pc, #60]	; (801e1cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e190:	490f      	ldr	r1, [pc, #60]	; (801e1d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e192:	4810      	ldr	r0, [pc, #64]	; (801e1d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e194:	f007 fbce 	bl	8025934 <__aeabi_atexit>
 801e198:	4c0f      	ldr	r4, [pc, #60]	; (801e1d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e19a:	7823      	ldrb	r3, [r4, #0]
 801e19c:	f3bf 8f5b 	dmb	ish
 801e1a0:	07db      	lsls	r3, r3, #31
 801e1a2:	d40b      	bmi.n	801e1bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e1a4:	4620      	mov	r0, r4
 801e1a6:	f007 fbcc 	bl	8025942 <__cxa_guard_acquire>
 801e1aa:	b138      	cbz	r0, 801e1bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e1ac:	4620      	mov	r0, r4
 801e1ae:	f007 fbd4 	bl	802595a <__cxa_guard_release>
 801e1b2:	4a06      	ldr	r2, [pc, #24]	; (801e1cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e1b4:	4909      	ldr	r1, [pc, #36]	; (801e1dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e1b6:	480a      	ldr	r0, [pc, #40]	; (801e1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e1b8:	f007 fbbc 	bl	8025934 <__aeabi_atexit>
 801e1bc:	4b05      	ldr	r3, [pc, #20]	; (801e1d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e1be:	64ab      	str	r3, [r5, #72]	; 0x48
 801e1c0:	4b07      	ldr	r3, [pc, #28]	; (801e1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e1c2:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e1c4:	bd38      	pop	{r3, r4, r5, pc}
 801e1c6:	bf00      	nop
 801e1c8:	2000dd70 	.word	0x2000dd70
 801e1cc:	20000000 	.word	0x20000000
 801e1d0:	0801bffd 	.word	0x0801bffd
 801e1d4:	200000cc 	.word	0x200000cc
 801e1d8:	2000dd74 	.word	0x2000dd74
 801e1dc:	0801bffb 	.word	0x0801bffb
 801e1e0:	200000d0 	.word	0x200000d0

0801e1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e1e4:	b538      	push	{r3, r4, r5, lr}
 801e1e6:	4c15      	ldr	r4, [pc, #84]	; (801e23c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e1e8:	7823      	ldrb	r3, [r4, #0]
 801e1ea:	f3bf 8f5b 	dmb	ish
 801e1ee:	07da      	lsls	r2, r3, #31
 801e1f0:	4605      	mov	r5, r0
 801e1f2:	d40b      	bmi.n	801e20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1f4:	4620      	mov	r0, r4
 801e1f6:	f007 fba4 	bl	8025942 <__cxa_guard_acquire>
 801e1fa:	b138      	cbz	r0, 801e20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1fc:	4620      	mov	r0, r4
 801e1fe:	f007 fbac 	bl	802595a <__cxa_guard_release>
 801e202:	4a0f      	ldr	r2, [pc, #60]	; (801e240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e204:	490f      	ldr	r1, [pc, #60]	; (801e244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e206:	4810      	ldr	r0, [pc, #64]	; (801e248 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e208:	f007 fb94 	bl	8025934 <__aeabi_atexit>
 801e20c:	4c0f      	ldr	r4, [pc, #60]	; (801e24c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e20e:	7823      	ldrb	r3, [r4, #0]
 801e210:	f3bf 8f5b 	dmb	ish
 801e214:	07db      	lsls	r3, r3, #31
 801e216:	d40b      	bmi.n	801e230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e218:	4620      	mov	r0, r4
 801e21a:	f007 fb92 	bl	8025942 <__cxa_guard_acquire>
 801e21e:	b138      	cbz	r0, 801e230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e220:	4620      	mov	r0, r4
 801e222:	f007 fb9a 	bl	802595a <__cxa_guard_release>
 801e226:	4a06      	ldr	r2, [pc, #24]	; (801e240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e228:	4909      	ldr	r1, [pc, #36]	; (801e250 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e22a:	480a      	ldr	r0, [pc, #40]	; (801e254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e22c:	f007 fb82 	bl	8025934 <__aeabi_atexit>
 801e230:	4b05      	ldr	r3, [pc, #20]	; (801e248 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e232:	642b      	str	r3, [r5, #64]	; 0x40
 801e234:	4b07      	ldr	r3, [pc, #28]	; (801e254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e236:	646b      	str	r3, [r5, #68]	; 0x44
 801e238:	bd38      	pop	{r3, r4, r5, pc}
 801e23a:	bf00      	nop
 801e23c:	2000dd38 	.word	0x2000dd38
 801e240:	20000000 	.word	0x20000000
 801e244:	0801c001 	.word	0x0801c001
 801e248:	20000094 	.word	0x20000094
 801e24c:	2000dd3c 	.word	0x2000dd3c
 801e250:	0801bfff 	.word	0x0801bfff
 801e254:	20000098 	.word	0x20000098

0801e258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e258:	b538      	push	{r3, r4, r5, lr}
 801e25a:	4c15      	ldr	r4, [pc, #84]	; (801e2b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e25c:	7823      	ldrb	r3, [r4, #0]
 801e25e:	f3bf 8f5b 	dmb	ish
 801e262:	07da      	lsls	r2, r3, #31
 801e264:	4605      	mov	r5, r0
 801e266:	d40b      	bmi.n	801e280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e268:	4620      	mov	r0, r4
 801e26a:	f007 fb6a 	bl	8025942 <__cxa_guard_acquire>
 801e26e:	b138      	cbz	r0, 801e280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e270:	4620      	mov	r0, r4
 801e272:	f007 fb72 	bl	802595a <__cxa_guard_release>
 801e276:	4a0f      	ldr	r2, [pc, #60]	; (801e2b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e278:	490f      	ldr	r1, [pc, #60]	; (801e2b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e27a:	4810      	ldr	r0, [pc, #64]	; (801e2bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e27c:	f007 fb5a 	bl	8025934 <__aeabi_atexit>
 801e280:	4c0f      	ldr	r4, [pc, #60]	; (801e2c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e282:	7823      	ldrb	r3, [r4, #0]
 801e284:	f3bf 8f5b 	dmb	ish
 801e288:	07db      	lsls	r3, r3, #31
 801e28a:	d40b      	bmi.n	801e2a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e28c:	4620      	mov	r0, r4
 801e28e:	f007 fb58 	bl	8025942 <__cxa_guard_acquire>
 801e292:	b138      	cbz	r0, 801e2a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e294:	4620      	mov	r0, r4
 801e296:	f007 fb60 	bl	802595a <__cxa_guard_release>
 801e29a:	4a06      	ldr	r2, [pc, #24]	; (801e2b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e29c:	4909      	ldr	r1, [pc, #36]	; (801e2c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e29e:	480a      	ldr	r0, [pc, #40]	; (801e2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e2a0:	f007 fb48 	bl	8025934 <__aeabi_atexit>
 801e2a4:	4b05      	ldr	r3, [pc, #20]	; (801e2bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e2a6:	63ab      	str	r3, [r5, #56]	; 0x38
 801e2a8:	4b07      	ldr	r3, [pc, #28]	; (801e2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e2aa:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e2ac:	bd38      	pop	{r3, r4, r5, pc}
 801e2ae:	bf00      	nop
 801e2b0:	2000dd58 	.word	0x2000dd58
 801e2b4:	20000000 	.word	0x20000000
 801e2b8:	0801c005 	.word	0x0801c005
 801e2bc:	200000b4 	.word	0x200000b4
 801e2c0:	2000dd5c 	.word	0x2000dd5c
 801e2c4:	0801c003 	.word	0x0801c003
 801e2c8:	200000b8 	.word	0x200000b8

0801e2cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e2cc:	b510      	push	{r4, lr}
 801e2ce:	4604      	mov	r4, r0
 801e2d0:	f7ff ff14 	bl	801e0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	f7ff ff85 	bl	801e1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e2da:	4620      	mov	r0, r4
 801e2dc:	f7ff ff48 	bl	801e170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e2e0:	4620      	mov	r0, r4
 801e2e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2e6:	f7ff bfb7 	b.w	801e258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e2ec:	b538      	push	{r3, r4, r5, lr}
 801e2ee:	4c15      	ldr	r4, [pc, #84]	; (801e344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e2f0:	7823      	ldrb	r3, [r4, #0]
 801e2f2:	f3bf 8f5b 	dmb	ish
 801e2f6:	07da      	lsls	r2, r3, #31
 801e2f8:	4605      	mov	r5, r0
 801e2fa:	d40b      	bmi.n	801e314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e2fc:	4620      	mov	r0, r4
 801e2fe:	f007 fb20 	bl	8025942 <__cxa_guard_acquire>
 801e302:	b138      	cbz	r0, 801e314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e304:	4620      	mov	r0, r4
 801e306:	f007 fb28 	bl	802595a <__cxa_guard_release>
 801e30a:	4a0f      	ldr	r2, [pc, #60]	; (801e348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e30c:	490f      	ldr	r1, [pc, #60]	; (801e34c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e30e:	4810      	ldr	r0, [pc, #64]	; (801e350 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e310:	f007 fb10 	bl	8025934 <__aeabi_atexit>
 801e314:	4c0f      	ldr	r4, [pc, #60]	; (801e354 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e316:	7823      	ldrb	r3, [r4, #0]
 801e318:	f3bf 8f5b 	dmb	ish
 801e31c:	07db      	lsls	r3, r3, #31
 801e31e:	d40b      	bmi.n	801e338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e320:	4620      	mov	r0, r4
 801e322:	f007 fb0e 	bl	8025942 <__cxa_guard_acquire>
 801e326:	b138      	cbz	r0, 801e338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e328:	4620      	mov	r0, r4
 801e32a:	f007 fb16 	bl	802595a <__cxa_guard_release>
 801e32e:	4a06      	ldr	r2, [pc, #24]	; (801e348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e330:	4909      	ldr	r1, [pc, #36]	; (801e358 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e332:	480a      	ldr	r0, [pc, #40]	; (801e35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e334:	f007 fafe 	bl	8025934 <__aeabi_atexit>
 801e338:	4b05      	ldr	r3, [pc, #20]	; (801e350 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e33a:	662b      	str	r3, [r5, #96]	; 0x60
 801e33c:	4b07      	ldr	r3, [pc, #28]	; (801e35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e33e:	666b      	str	r3, [r5, #100]	; 0x64
 801e340:	bd38      	pop	{r3, r4, r5, pc}
 801e342:	bf00      	nop
 801e344:	2000dd40 	.word	0x2000dd40
 801e348:	20000000 	.word	0x20000000
 801e34c:	0801bff1 	.word	0x0801bff1
 801e350:	2000009c 	.word	0x2000009c
 801e354:	2000dd44 	.word	0x2000dd44
 801e358:	0801bfef 	.word	0x0801bfef
 801e35c:	200000a0 	.word	0x200000a0

0801e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e360:	b538      	push	{r3, r4, r5, lr}
 801e362:	4c15      	ldr	r4, [pc, #84]	; (801e3b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e364:	7823      	ldrb	r3, [r4, #0]
 801e366:	f3bf 8f5b 	dmb	ish
 801e36a:	07da      	lsls	r2, r3, #31
 801e36c:	4605      	mov	r5, r0
 801e36e:	d40b      	bmi.n	801e388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e370:	4620      	mov	r0, r4
 801e372:	f007 fae6 	bl	8025942 <__cxa_guard_acquire>
 801e376:	b138      	cbz	r0, 801e388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e378:	4620      	mov	r0, r4
 801e37a:	f007 faee 	bl	802595a <__cxa_guard_release>
 801e37e:	4a0f      	ldr	r2, [pc, #60]	; (801e3bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e380:	490f      	ldr	r1, [pc, #60]	; (801e3c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e382:	4810      	ldr	r0, [pc, #64]	; (801e3c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e384:	f007 fad6 	bl	8025934 <__aeabi_atexit>
 801e388:	4c0f      	ldr	r4, [pc, #60]	; (801e3c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e38a:	7823      	ldrb	r3, [r4, #0]
 801e38c:	f3bf 8f5b 	dmb	ish
 801e390:	07db      	lsls	r3, r3, #31
 801e392:	d40b      	bmi.n	801e3ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e394:	4620      	mov	r0, r4
 801e396:	f007 fad4 	bl	8025942 <__cxa_guard_acquire>
 801e39a:	b138      	cbz	r0, 801e3ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e39c:	4620      	mov	r0, r4
 801e39e:	f007 fadc 	bl	802595a <__cxa_guard_release>
 801e3a2:	4a06      	ldr	r2, [pc, #24]	; (801e3bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e3a4:	4909      	ldr	r1, [pc, #36]	; (801e3cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e3a6:	480a      	ldr	r0, [pc, #40]	; (801e3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e3a8:	f007 fac4 	bl	8025934 <__aeabi_atexit>
 801e3ac:	4b05      	ldr	r3, [pc, #20]	; (801e3c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e3ae:	65ab      	str	r3, [r5, #88]	; 0x58
 801e3b0:	4b07      	ldr	r3, [pc, #28]	; (801e3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e3b2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e3b4:	bd38      	pop	{r3, r4, r5, pc}
 801e3b6:	bf00      	nop
 801e3b8:	2000dd18 	.word	0x2000dd18
 801e3bc:	20000000 	.word	0x20000000
 801e3c0:	0801bff5 	.word	0x0801bff5
 801e3c4:	20000074 	.word	0x20000074
 801e3c8:	2000dd1c 	.word	0x2000dd1c
 801e3cc:	0801bff3 	.word	0x0801bff3
 801e3d0:	20000078 	.word	0x20000078

0801e3d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e3d4:	b510      	push	{r4, lr}
 801e3d6:	4604      	mov	r4, r0
 801e3d8:	f7ff ff88 	bl	801e2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3e2:	f7ff bfbd 	b.w	801e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e3e8:	b538      	push	{r3, r4, r5, lr}
 801e3ea:	4c15      	ldr	r4, [pc, #84]	; (801e440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e3ec:	7823      	ldrb	r3, [r4, #0]
 801e3ee:	f3bf 8f5b 	dmb	ish
 801e3f2:	07da      	lsls	r2, r3, #31
 801e3f4:	4605      	mov	r5, r0
 801e3f6:	d40b      	bmi.n	801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e3f8:	4620      	mov	r0, r4
 801e3fa:	f007 faa2 	bl	8025942 <__cxa_guard_acquire>
 801e3fe:	b138      	cbz	r0, 801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e400:	4620      	mov	r0, r4
 801e402:	f007 faaa 	bl	802595a <__cxa_guard_release>
 801e406:	4a0f      	ldr	r2, [pc, #60]	; (801e444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e408:	490f      	ldr	r1, [pc, #60]	; (801e448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e40a:	4810      	ldr	r0, [pc, #64]	; (801e44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e40c:	f007 fa92 	bl	8025934 <__aeabi_atexit>
 801e410:	4c0f      	ldr	r4, [pc, #60]	; (801e450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e412:	7823      	ldrb	r3, [r4, #0]
 801e414:	f3bf 8f5b 	dmb	ish
 801e418:	07db      	lsls	r3, r3, #31
 801e41a:	d40b      	bmi.n	801e434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e41c:	4620      	mov	r0, r4
 801e41e:	f007 fa90 	bl	8025942 <__cxa_guard_acquire>
 801e422:	b138      	cbz	r0, 801e434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e424:	4620      	mov	r0, r4
 801e426:	f007 fa98 	bl	802595a <__cxa_guard_release>
 801e42a:	4a06      	ldr	r2, [pc, #24]	; (801e444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e42c:	4909      	ldr	r1, [pc, #36]	; (801e454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e42e:	480a      	ldr	r0, [pc, #40]	; (801e458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e430:	f007 fa80 	bl	8025934 <__aeabi_atexit>
 801e434:	4b05      	ldr	r3, [pc, #20]	; (801e44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e436:	672b      	str	r3, [r5, #112]	; 0x70
 801e438:	4b07      	ldr	r3, [pc, #28]	; (801e458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e43a:	676b      	str	r3, [r5, #116]	; 0x74
 801e43c:	bd38      	pop	{r3, r4, r5, pc}
 801e43e:	bf00      	nop
 801e440:	2000dd10 	.word	0x2000dd10
 801e444:	20000000 	.word	0x20000000
 801e448:	0801bfe9 	.word	0x0801bfe9
 801e44c:	2000006c 	.word	0x2000006c
 801e450:	2000dd14 	.word	0x2000dd14
 801e454:	0801bfe7 	.word	0x0801bfe7
 801e458:	20000070 	.word	0x20000070

0801e45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e45c:	b538      	push	{r3, r4, r5, lr}
 801e45e:	4c15      	ldr	r4, [pc, #84]	; (801e4b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e460:	7823      	ldrb	r3, [r4, #0]
 801e462:	f3bf 8f5b 	dmb	ish
 801e466:	07da      	lsls	r2, r3, #31
 801e468:	4605      	mov	r5, r0
 801e46a:	d40b      	bmi.n	801e484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e46c:	4620      	mov	r0, r4
 801e46e:	f007 fa68 	bl	8025942 <__cxa_guard_acquire>
 801e472:	b138      	cbz	r0, 801e484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e474:	4620      	mov	r0, r4
 801e476:	f007 fa70 	bl	802595a <__cxa_guard_release>
 801e47a:	4a0f      	ldr	r2, [pc, #60]	; (801e4b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e47c:	490f      	ldr	r1, [pc, #60]	; (801e4bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e47e:	4810      	ldr	r0, [pc, #64]	; (801e4c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e480:	f007 fa58 	bl	8025934 <__aeabi_atexit>
 801e484:	4c0f      	ldr	r4, [pc, #60]	; (801e4c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e486:	7823      	ldrb	r3, [r4, #0]
 801e488:	f3bf 8f5b 	dmb	ish
 801e48c:	07db      	lsls	r3, r3, #31
 801e48e:	d40b      	bmi.n	801e4a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e490:	4620      	mov	r0, r4
 801e492:	f007 fa56 	bl	8025942 <__cxa_guard_acquire>
 801e496:	b138      	cbz	r0, 801e4a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e498:	4620      	mov	r0, r4
 801e49a:	f007 fa5e 	bl	802595a <__cxa_guard_release>
 801e49e:	4a06      	ldr	r2, [pc, #24]	; (801e4b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e4a0:	4909      	ldr	r1, [pc, #36]	; (801e4c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e4a2:	480a      	ldr	r0, [pc, #40]	; (801e4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e4a4:	f007 fa46 	bl	8025934 <__aeabi_atexit>
 801e4a8:	4b05      	ldr	r3, [pc, #20]	; (801e4c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e4aa:	66ab      	str	r3, [r5, #104]	; 0x68
 801e4ac:	4b07      	ldr	r3, [pc, #28]	; (801e4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e4ae:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e4b0:	bd38      	pop	{r3, r4, r5, pc}
 801e4b2:	bf00      	nop
 801e4b4:	2000dd08 	.word	0x2000dd08
 801e4b8:	20000000 	.word	0x20000000
 801e4bc:	0801bfed 	.word	0x0801bfed
 801e4c0:	20000064 	.word	0x20000064
 801e4c4:	2000dd0c 	.word	0x2000dd0c
 801e4c8:	0801bfeb 	.word	0x0801bfeb
 801e4cc:	20000068 	.word	0x20000068

0801e4d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e4d0:	b510      	push	{r4, lr}
 801e4d2:	4604      	mov	r4, r0
 801e4d4:	f7ff ff88 	bl	801e3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4de:	f7ff bfbd 	b.w	801e45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e4e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e4e2:	b510      	push	{r4, lr}
 801e4e4:	4604      	mov	r4, r0
 801e4e6:	f7ff fff3 	bl	801e4d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e4ea:	4620      	mov	r0, r4
 801e4ec:	f7ff ff72 	bl	801e3d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e4f0:	4620      	mov	r0, r4
 801e4f2:	f7ff fdf9 	bl	801e0e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e4f6:	4620      	mov	r0, r4
 801e4f8:	f7ff fcfa 	bl	801def0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e4fc:	4620      	mov	r0, r4
 801e4fe:	f7ff fd75 	bl	801dfec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e502:	4620      	mov	r0, r4
 801e504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e508:	f7ff bee0 	b.w	801e2cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e50c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e510:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e514:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e518:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e51c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e520:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e524:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e528:	8808      	ldrh	r0, [r1, #0]
 801e52a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e52e:	2d00      	cmp	r5, #0
 801e530:	eb02 0a0c 	add.w	sl, r2, ip
 801e534:	f2c0 80b0 	blt.w	801e698 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e538:	45ab      	cmp	fp, r5
 801e53a:	f340 80ad 	ble.w	801e698 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e53e:	2c00      	cmp	r4, #0
 801e540:	f2c0 80a8 	blt.w	801e694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e544:	45a6      	cmp	lr, r4
 801e546:	f340 80a5 	ble.w	801e694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e54a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e54e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e552:	1c62      	adds	r2, r4, #1
 801e554:	f100 80a3 	bmi.w	801e69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e558:	4596      	cmp	lr, r2
 801e55a:	f340 80a0 	ble.w	801e69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e55e:	f1b9 0f00 	cmp.w	r9, #0
 801e562:	f000 809c 	beq.w	801e69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e566:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e56a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e56e:	3501      	adds	r5, #1
 801e570:	f100 8099 	bmi.w	801e6a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e574:	45ab      	cmp	fp, r5
 801e576:	f340 8096 	ble.w	801e6a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e57a:	2f00      	cmp	r7, #0
 801e57c:	f000 8093 	beq.w	801e6a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e580:	2c00      	cmp	r4, #0
 801e582:	f2c0 808e 	blt.w	801e6a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e586:	45a6      	cmp	lr, r4
 801e588:	f340 808b 	ble.w	801e6a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e58c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e590:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e594:	3401      	adds	r4, #1
 801e596:	f100 8089 	bmi.w	801e6ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e59a:	45a6      	cmp	lr, r4
 801e59c:	f340 8086 	ble.w	801e6ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e5a0:	f1b9 0f00 	cmp.w	r9, #0
 801e5a4:	f000 8082 	beq.w	801e6ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e5a8:	44d6      	add	lr, sl
 801e5aa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e5ae:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e5b2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e5b6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e5ba:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e5be:	fb19 fe07 	smulbb	lr, r9, r7
 801e5c2:	ea44 0808 	orr.w	r8, r4, r8
 801e5c6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e5ca:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e5ce:	f1c7 0210 	rsb	r2, r7, #16
 801e5d2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e5d6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e5da:	ea44 0c0c 	orr.w	ip, r4, ip
 801e5de:	eba2 0209 	sub.w	r2, r2, r9
 801e5e2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e5e6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e5ea:	fb04 f40c 	mul.w	r4, r4, ip
 801e5ee:	fb02 4808 	mla	r8, r2, r8, r4
 801e5f2:	041a      	lsls	r2, r3, #16
 801e5f4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e5f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e5fc:	4313      	orrs	r3, r2
 801e5fe:	042a      	lsls	r2, r5, #16
 801e600:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e604:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e608:	fb0e 8303 	mla	r3, lr, r3, r8
 801e60c:	432a      	orrs	r2, r5
 801e60e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e612:	fb07 3202 	mla	r2, r7, r2, r3
 801e616:	0d53      	lsrs	r3, r2, #21
 801e618:	0952      	lsrs	r2, r2, #5
 801e61a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e61e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e622:	431a      	orrs	r2, r3
 801e624:	b293      	uxth	r3, r2
 801e626:	b2b4      	uxth	r4, r6
 801e628:	1202      	asrs	r2, r0, #8
 801e62a:	43f6      	mvns	r6, r6
 801e62c:	b2f6      	uxtb	r6, r6
 801e62e:	121d      	asrs	r5, r3, #8
 801e630:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e634:	fb12 f206 	smulbb	r2, r2, r6
 801e638:	10c7      	asrs	r7, r0, #3
 801e63a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e63e:	00c0      	lsls	r0, r0, #3
 801e640:	fb05 2504 	mla	r5, r5, r4, r2
 801e644:	b2c0      	uxtb	r0, r0
 801e646:	10da      	asrs	r2, r3, #3
 801e648:	00db      	lsls	r3, r3, #3
 801e64a:	b2db      	uxtb	r3, r3
 801e64c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e650:	fb10 f006 	smulbb	r0, r0, r6
 801e654:	b2ad      	uxth	r5, r5
 801e656:	fb03 0004 	mla	r0, r3, r4, r0
 801e65a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e65e:	fb17 f706 	smulbb	r7, r7, r6
 801e662:	b280      	uxth	r0, r0
 801e664:	1c6b      	adds	r3, r5, #1
 801e666:	fb02 7204 	mla	r2, r2, r4, r7
 801e66a:	b292      	uxth	r2, r2
 801e66c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e670:	1c43      	adds	r3, r0, #1
 801e672:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e676:	1c50      	adds	r0, r2, #1
 801e678:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e67c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e680:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e684:	0952      	lsrs	r2, r2, #5
 801e686:	432b      	orrs	r3, r5
 801e688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e68c:	4313      	orrs	r3, r2
 801e68e:	800b      	strh	r3, [r1, #0]
 801e690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e694:	4680      	mov	r8, r0
 801e696:	e75c      	b.n	801e552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e698:	4684      	mov	ip, r0
 801e69a:	4680      	mov	r8, r0
 801e69c:	e767      	b.n	801e56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e69e:	4684      	mov	ip, r0
 801e6a0:	e765      	b.n	801e56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e6a2:	4605      	mov	r5, r0
 801e6a4:	e776      	b.n	801e594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e6a6:	4603      	mov	r3, r0
 801e6a8:	4605      	mov	r5, r0
 801e6aa:	e782      	b.n	801e5b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e6ac:	4603      	mov	r3, r0
 801e6ae:	e780      	b.n	801e5b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e6b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6b4:	b099      	sub	sp, #100	; 0x64
 801e6b6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e6ba:	9215      	str	r2, [sp, #84]	; 0x54
 801e6bc:	9309      	str	r3, [sp, #36]	; 0x24
 801e6be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e6c0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e6c4:	930d      	str	r3, [sp, #52]	; 0x34
 801e6c6:	910c      	str	r1, [sp, #48]	; 0x30
 801e6c8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e6cc:	9016      	str	r0, [sp, #88]	; 0x58
 801e6ce:	6850      	ldr	r0, [r2, #4]
 801e6d0:	6812      	ldr	r2, [r2, #0]
 801e6d2:	fb00 1303 	mla	r3, r0, r3, r1
 801e6d6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e6da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6dc:	681b      	ldr	r3, [r3, #0]
 801e6de:	930b      	str	r3, [sp, #44]	; 0x2c
 801e6e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6e2:	685e      	ldr	r6, [r3, #4]
 801e6e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e6e6:	43db      	mvns	r3, r3
 801e6e8:	b2db      	uxtb	r3, r3
 801e6ea:	3604      	adds	r6, #4
 801e6ec:	930a      	str	r3, [sp, #40]	; 0x28
 801e6ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e6f0:	2b00      	cmp	r3, #0
 801e6f2:	dc03      	bgt.n	801e6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e6f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e6f6:	2b00      	cmp	r3, #0
 801e6f8:	f340 8225 	ble.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e6fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e702:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e706:	1e48      	subs	r0, r1, #1
 801e708:	1e57      	subs	r7, r2, #1
 801e70a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e70c:	2b00      	cmp	r3, #0
 801e70e:	f340 80e3 	ble.w	801e8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e712:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e716:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e71a:	d406      	bmi.n	801e72a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e71c:	4584      	cmp	ip, r0
 801e71e:	da04      	bge.n	801e72a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e720:	2b00      	cmp	r3, #0
 801e722:	db02      	blt.n	801e72a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e724:	42bb      	cmp	r3, r7
 801e726:	f2c0 80d8 	blt.w	801e8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e72a:	f11c 0c01 	adds.w	ip, ip, #1
 801e72e:	f100 80c9 	bmi.w	801e8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e732:	4561      	cmp	r1, ip
 801e734:	f2c0 80c6 	blt.w	801e8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e738:	3301      	adds	r3, #1
 801e73a:	f100 80c3 	bmi.w	801e8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e73e:	429a      	cmp	r2, r3
 801e740:	f2c0 80c0 	blt.w	801e8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e744:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e748:	4647      	mov	r7, r8
 801e74a:	f1bb 0f00 	cmp.w	fp, #0
 801e74e:	f340 80e3 	ble.w	801e918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e752:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e754:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e756:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e75a:	689b      	ldr	r3, [r3, #8]
 801e75c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e760:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e764:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e768:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e76c:	f100 8121 	bmi.w	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e770:	f103 39ff 	add.w	r9, r3, #4294967295
 801e774:	454a      	cmp	r2, r9
 801e776:	f280 811c 	bge.w	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e77a:	f1bc 0f00 	cmp.w	ip, #0
 801e77e:	f2c0 8118 	blt.w	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e782:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e786:	45cc      	cmp	ip, r9
 801e788:	f280 8113 	bge.w	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e78c:	b21b      	sxth	r3, r3
 801e78e:	fb0c 2203 	mla	r2, ip, r3, r2
 801e792:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e794:	eb04 0902 	add.w	r9, r4, r2
 801e798:	5ca2      	ldrb	r2, [r4, r2]
 801e79a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e79e:	2800      	cmp	r0, #0
 801e7a0:	f000 80fe 	beq.w	801e9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e7a4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e7a8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e7ac:	9211      	str	r2, [sp, #68]	; 0x44
 801e7ae:	b151      	cbz	r1, 801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e7b0:	eb09 0203 	add.w	r2, r9, r3
 801e7b4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e7b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7bc:	930f      	str	r3, [sp, #60]	; 0x3c
 801e7be:	7853      	ldrb	r3, [r2, #1]
 801e7c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7c4:	9312      	str	r3, [sp, #72]	; 0x48
 801e7c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e7c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e7ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e7ce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e7d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e7d6:	ea4c 0c03 	orr.w	ip, ip, r3
 801e7da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e7dc:	041b      	lsls	r3, r3, #16
 801e7de:	fb10 f201 	smulbb	r2, r0, r1
 801e7e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e7e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e7ea:	10d2      	asrs	r2, r2, #3
 801e7ec:	4323      	orrs	r3, r4
 801e7ee:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e7f2:	4353      	muls	r3, r2
 801e7f4:	fb09 330c 	mla	r3, r9, ip, r3
 801e7f8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e7fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e800:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e804:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e808:	f1c1 0c10 	rsb	ip, r1, #16
 801e80c:	ebac 0c00 	sub.w	ip, ip, r0
 801e810:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e814:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e818:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e81a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e81c:	0418      	lsls	r0, r3, #16
 801e81e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e822:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e826:	4318      	orrs	r0, r3
 801e828:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e82c:	fb02 c200 	mla	r2, r2, r0, ip
 801e830:	0d53      	lsrs	r3, r2, #21
 801e832:	0952      	lsrs	r2, r2, #5
 801e834:	8838      	ldrh	r0, [r7, #0]
 801e836:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e83a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e83e:	431a      	orrs	r2, r3
 801e840:	b292      	uxth	r2, r2
 801e842:	1201      	asrs	r1, r0, #8
 801e844:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e848:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e84c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e850:	fb11 f104 	smulbb	r1, r1, r4
 801e854:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e858:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e85c:	00c0      	lsls	r0, r0, #3
 801e85e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e862:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e866:	10d1      	asrs	r1, r2, #3
 801e868:	b2c0      	uxtb	r0, r0
 801e86a:	00d2      	lsls	r2, r2, #3
 801e86c:	b2d2      	uxtb	r2, r2
 801e86e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e872:	fb1e fe04 	smulbb	lr, lr, r4
 801e876:	fb10 f004 	smulbb	r0, r0, r4
 801e87a:	fa1f fc8c 	uxth.w	ip, ip
 801e87e:	fb01 e103 	mla	r1, r1, r3, lr
 801e882:	fb02 0303 	mla	r3, r2, r3, r0
 801e886:	b29a      	uxth	r2, r3
 801e888:	f10c 0301 	add.w	r3, ip, #1
 801e88c:	b289      	uxth	r1, r1
 801e88e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e892:	1c53      	adds	r3, r2, #1
 801e894:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e898:	1c4a      	adds	r2, r1, #1
 801e89a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e89e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e8a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e8a6:	0949      	lsrs	r1, r1, #5
 801e8a8:	ea43 030c 	orr.w	r3, r3, ip
 801e8ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8b0:	430b      	orrs	r3, r1
 801e8b2:	803b      	strh	r3, [r7, #0]
 801e8b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e8b6:	449a      	add	sl, r3
 801e8b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e8ba:	3702      	adds	r7, #2
 801e8bc:	441d      	add	r5, r3
 801e8be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e8c2:	e742      	b.n	801e74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e8c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e8c6:	449a      	add	sl, r3
 801e8c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e8ca:	441d      	add	r5, r3
 801e8cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8ce:	3b01      	subs	r3, #1
 801e8d0:	9309      	str	r3, [sp, #36]	; 0x24
 801e8d2:	f108 0802 	add.w	r8, r8, #2
 801e8d6:	e718      	b.n	801e70a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e8d8:	d023      	beq.n	801e922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e8da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8dc:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e8de:	3b01      	subs	r3, #1
 801e8e0:	fb00 a003 	mla	r0, r0, r3, sl
 801e8e4:	1400      	asrs	r0, r0, #16
 801e8e6:	f53f af2d 	bmi.w	801e744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8ea:	3901      	subs	r1, #1
 801e8ec:	4288      	cmp	r0, r1
 801e8ee:	f6bf af29 	bge.w	801e744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8f2:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e8f4:	fb01 5303 	mla	r3, r1, r3, r5
 801e8f8:	141b      	asrs	r3, r3, #16
 801e8fa:	f53f af23 	bmi.w	801e744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8fe:	3a01      	subs	r2, #1
 801e900:	4293      	cmp	r3, r2
 801e902:	f6bf af1f 	bge.w	801e744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e906:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e90a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e90e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e912:	f1be 0f00 	cmp.w	lr, #0
 801e916:	dc6c      	bgt.n	801e9f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e91a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e91e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e924:	2b00      	cmp	r3, #0
 801e926:	f340 810e 	ble.w	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e92a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e92e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e932:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e936:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e938:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e93c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e940:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e944:	eef0 6a62 	vmov.f32	s13, s5
 801e948:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e94c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e950:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e954:	ee16 aa90 	vmov	sl, s13
 801e958:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e95c:	eef0 6a43 	vmov.f32	s13, s6
 801e960:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e964:	ee12 2a90 	vmov	r2, s5
 801e968:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e96c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e970:	ee13 2a10 	vmov	r2, s6
 801e974:	9325      	str	r3, [sp, #148]	; 0x94
 801e976:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e978:	fb92 f3f3 	sdiv	r3, r2, r3
 801e97c:	9326      	str	r3, [sp, #152]	; 0x98
 801e97e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e980:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e982:	3b01      	subs	r3, #1
 801e984:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e988:	930c      	str	r3, [sp, #48]	; 0x30
 801e98a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e98c:	bf08      	it	eq
 801e98e:	4613      	moveq	r3, r2
 801e990:	ee16 5a90 	vmov	r5, s13
 801e994:	9309      	str	r3, [sp, #36]	; 0x24
 801e996:	eeb0 3a67 	vmov.f32	s6, s15
 801e99a:	eef0 2a47 	vmov.f32	s5, s14
 801e99e:	e6a6      	b.n	801e6ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e9a0:	2900      	cmp	r1, #0
 801e9a2:	f43f af10 	beq.w	801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e9a6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e9aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9ae:	930f      	str	r3, [sp, #60]	; 0x3c
 801e9b0:	e709      	b.n	801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e9b2:	f112 0901 	adds.w	r9, r2, #1
 801e9b6:	f53f af7d 	bmi.w	801e8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9ba:	454b      	cmp	r3, r9
 801e9bc:	f6ff af7a 	blt.w	801e8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9c0:	f11c 0901 	adds.w	r9, ip, #1
 801e9c4:	f53f af76 	bmi.w	801e8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9c8:	45ce      	cmp	lr, r9
 801e9ca:	f6ff af73 	blt.w	801e8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e9d0:	9202      	str	r2, [sp, #8]
 801e9d2:	b21b      	sxth	r3, r3
 801e9d4:	fa0f f28e 	sxth.w	r2, lr
 801e9d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e9dc:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e9e0:	9201      	str	r2, [sp, #4]
 801e9e2:	9300      	str	r3, [sp, #0]
 801e9e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e9e6:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e9e8:	4633      	mov	r3, r6
 801e9ea:	4639      	mov	r1, r7
 801e9ec:	f7ff fd8e 	bl	801e50c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e9f0:	e760      	b.n	801e8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e9f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e9f6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e9fa:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e9fe:	1429      	asrs	r1, r5, #16
 801ea00:	fb03 2101 	mla	r1, r3, r1, r2
 801ea04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ea06:	440a      	add	r2, r1
 801ea08:	5c61      	ldrb	r1, [r4, r1]
 801ea0a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ea0e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ea12:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ea16:	f1bc 0f00 	cmp.w	ip, #0
 801ea1a:	f000 808c 	beq.w	801eb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ea1e:	7857      	ldrb	r7, [r2, #1]
 801ea20:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ea24:	9413      	str	r4, [sp, #76]	; 0x4c
 801ea26:	b140      	cbz	r0, 801ea3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ea28:	18d7      	adds	r7, r2, r3
 801ea2a:	5cd3      	ldrb	r3, [r2, r3]
 801ea2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea30:	9310      	str	r3, [sp, #64]	; 0x40
 801ea32:	787b      	ldrb	r3, [r7, #1]
 801ea34:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea38:	9314      	str	r3, [sp, #80]	; 0x50
 801ea3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ea3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ea3e:	fb1c f200 	smulbb	r2, ip, r0
 801ea42:	041f      	lsls	r7, r3, #16
 801ea44:	10d2      	asrs	r2, r2, #3
 801ea46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea4a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ea4e:	431f      	orrs	r7, r3
 801ea50:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ea54:	9317      	str	r3, [sp, #92]	; 0x5c
 801ea56:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ea58:	041b      	lsls	r3, r3, #16
 801ea5a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ea5e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea62:	ea43 030b 	orr.w	r3, r3, fp
 801ea66:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ea68:	4353      	muls	r3, r2
 801ea6a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ea6e:	fb04 3707 	mla	r7, r4, r7, r3
 801ea72:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ea76:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ea7a:	ea43 0b01 	orr.w	fp, r3, r1
 801ea7e:	f1c0 0110 	rsb	r1, r0, #16
 801ea82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ea86:	eba1 0c0c 	sub.w	ip, r1, ip
 801ea8a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea8e:	fb0c 770b 	mla	r7, ip, fp, r7
 801ea92:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea96:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ea9a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea9e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801eaa2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801eaa6:	fb02 770c 	mla	r7, r2, ip, r7
 801eaaa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eaac:	0d79      	lsrs	r1, r7, #21
 801eaae:	097f      	lsrs	r7, r7, #5
 801eab0:	8812      	ldrh	r2, [r2, #0]
 801eab2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eab6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801eaba:	430f      	orrs	r7, r1
 801eabc:	b2bb      	uxth	r3, r7
 801eabe:	1211      	asrs	r1, r2, #8
 801eac0:	1218      	asrs	r0, r3, #8
 801eac2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eac6:	fb11 f104 	smulbb	r1, r1, r4
 801eaca:	10d7      	asrs	r7, r2, #3
 801eacc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ead0:	00d2      	lsls	r2, r2, #3
 801ead2:	fb00 1009 	mla	r0, r0, r9, r1
 801ead6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eada:	10d9      	asrs	r1, r3, #3
 801eadc:	b2d2      	uxtb	r2, r2
 801eade:	00db      	lsls	r3, r3, #3
 801eae0:	fb17 f704 	smulbb	r7, r7, r4
 801eae4:	fb12 f204 	smulbb	r2, r2, r4
 801eae8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eaec:	b2db      	uxtb	r3, r3
 801eaee:	b280      	uxth	r0, r0
 801eaf0:	fb01 7109 	mla	r1, r1, r9, r7
 801eaf4:	fb03 2309 	mla	r3, r3, r9, r2
 801eaf8:	b29b      	uxth	r3, r3
 801eafa:	b289      	uxth	r1, r1
 801eafc:	1c42      	adds	r2, r0, #1
 801eafe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eb02:	1c4f      	adds	r7, r1, #1
 801eb04:	1c5a      	adds	r2, r3, #1
 801eb06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eb0a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eb0e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eb12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eb16:	0949      	lsrs	r1, r1, #5
 801eb18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eb1a:	4310      	orrs	r0, r2
 801eb1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eb20:	4308      	orrs	r0, r1
 801eb22:	f823 0b02 	strh.w	r0, [r3], #2
 801eb26:	930e      	str	r3, [sp, #56]	; 0x38
 801eb28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801eb2a:	449a      	add	sl, r3
 801eb2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eb2e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801eb32:	441d      	add	r5, r3
 801eb34:	e6ed      	b.n	801e912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801eb36:	2800      	cmp	r0, #0
 801eb38:	f43f af7f 	beq.w	801ea3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eb3c:	5cd3      	ldrb	r3, [r2, r3]
 801eb3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb42:	9310      	str	r3, [sp, #64]	; 0x40
 801eb44:	e779      	b.n	801ea3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eb46:	b019      	add	sp, #100	; 0x64
 801eb48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801eb4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb50:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801eb54:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eb58:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801eb5c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801eb60:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801eb64:	8808      	ldrh	r0, [r1, #0]
 801eb66:	fb08 470e 	mla	r7, r8, lr, r4
 801eb6a:	f1b8 0f00 	cmp.w	r8, #0
 801eb6e:	eb02 0907 	add.w	r9, r2, r7
 801eb72:	db67      	blt.n	801ec44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eb74:	45c2      	cmp	sl, r8
 801eb76:	dd65      	ble.n	801ec44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eb78:	2c00      	cmp	r4, #0
 801eb7a:	db61      	blt.n	801ec40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eb7c:	45a6      	cmp	lr, r4
 801eb7e:	dd5f      	ble.n	801ec40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eb80:	5dd2      	ldrb	r2, [r2, r7]
 801eb82:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801eb86:	1c62      	adds	r2, r4, #1
 801eb88:	d45f      	bmi.n	801ec4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb8a:	4596      	cmp	lr, r2
 801eb8c:	dd5d      	ble.n	801ec4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb8e:	2d00      	cmp	r5, #0
 801eb90:	d05b      	beq.n	801ec4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb92:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eb96:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801eb9a:	f118 0801 	adds.w	r8, r8, #1
 801eb9e:	d458      	bmi.n	801ec52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eba0:	45c2      	cmp	sl, r8
 801eba2:	dd56      	ble.n	801ec52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eba4:	2e00      	cmp	r6, #0
 801eba6:	d054      	beq.n	801ec52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eba8:	2c00      	cmp	r4, #0
 801ebaa:	db50      	blt.n	801ec4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ebac:	45a6      	cmp	lr, r4
 801ebae:	dd4e      	ble.n	801ec4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ebb0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ebb4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ebb8:	3401      	adds	r4, #1
 801ebba:	d407      	bmi.n	801ebcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ebbc:	45a6      	cmp	lr, r4
 801ebbe:	dd05      	ble.n	801ebcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ebc0:	b125      	cbz	r5, 801ebcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ebc2:	44ce      	add	lr, r9
 801ebc4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ebc8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ebcc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ebd0:	fb15 f406 	smulbb	r4, r5, r6
 801ebd4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ebd8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ebdc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ebe0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ebe4:	ea43 0c0c 	orr.w	ip, r3, ip
 801ebe8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ebec:	f1c6 0310 	rsb	r3, r6, #16
 801ebf0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ebf4:	1b5b      	subs	r3, r3, r5
 801ebf6:	ea4e 0707 	orr.w	r7, lr, r7
 801ebfa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ebfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ec02:	437d      	muls	r5, r7
 801ec04:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ec08:	0403      	lsls	r3, r0, #16
 801ec0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ec12:	4318      	orrs	r0, r3
 801ec14:	0413      	lsls	r3, r2, #16
 801ec16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ec1e:	4313      	orrs	r3, r2
 801ec20:	fb04 c000 	mla	r0, r4, r0, ip
 801ec24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ec28:	fb06 0003 	mla	r0, r6, r3, r0
 801ec2c:	0d43      	lsrs	r3, r0, #21
 801ec2e:	0940      	lsrs	r0, r0, #5
 801ec30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec34:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ec38:	4318      	orrs	r0, r3
 801ec3a:	8008      	strh	r0, [r1, #0]
 801ec3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec40:	4684      	mov	ip, r0
 801ec42:	e7a0      	b.n	801eb86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ec44:	4607      	mov	r7, r0
 801ec46:	4684      	mov	ip, r0
 801ec48:	e7a7      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ec4a:	4607      	mov	r7, r0
 801ec4c:	e7a5      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ec4e:	4602      	mov	r2, r0
 801ec50:	e7b2      	b.n	801ebb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ec52:	4602      	mov	r2, r0
 801ec54:	e7ba      	b.n	801ebcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ec56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec5a:	b093      	sub	sp, #76	; 0x4c
 801ec5c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ec60:	920f      	str	r2, [sp, #60]	; 0x3c
 801ec62:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ec64:	9108      	str	r1, [sp, #32]
 801ec66:	9306      	str	r3, [sp, #24]
 801ec68:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ec6c:	9010      	str	r0, [sp, #64]	; 0x40
 801ec6e:	6850      	ldr	r0, [r2, #4]
 801ec70:	6812      	ldr	r2, [r2, #0]
 801ec72:	fb00 1303 	mla	r3, r0, r3, r1
 801ec76:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ec7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec7c:	681b      	ldr	r3, [r3, #0]
 801ec7e:	9307      	str	r3, [sp, #28]
 801ec80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec82:	685f      	ldr	r7, [r3, #4]
 801ec84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ec88:	3704      	adds	r7, #4
 801ec8a:	9b08      	ldr	r3, [sp, #32]
 801ec8c:	2b00      	cmp	r3, #0
 801ec8e:	dc03      	bgt.n	801ec98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ec90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ec92:	2b00      	cmp	r3, #0
 801ec94:	f340 81b2 	ble.w	801effc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ec98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eca2:	1e48      	subs	r0, r1, #1
 801eca4:	f102 3cff 	add.w	ip, r2, #4294967295
 801eca8:	9b06      	ldr	r3, [sp, #24]
 801ecaa:	2b00      	cmp	r3, #0
 801ecac:	f340 80a9 	ble.w	801ee02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ecb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ecb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ecb8:	d406      	bmi.n	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ecba:	4586      	cmp	lr, r0
 801ecbc:	da04      	bge.n	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ecbe:	2b00      	cmp	r3, #0
 801ecc0:	db02      	blt.n	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ecc2:	4563      	cmp	r3, ip
 801ecc4:	f2c0 809e 	blt.w	801ee04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ecc8:	f11e 0e01 	adds.w	lr, lr, #1
 801eccc:	f100 808f 	bmi.w	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecd0:	4571      	cmp	r1, lr
 801ecd2:	f2c0 808c 	blt.w	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecd6:	3301      	adds	r3, #1
 801ecd8:	f100 8089 	bmi.w	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ecdc:	429a      	cmp	r2, r3
 801ecde:	f2c0 8086 	blt.w	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ece2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ece6:	46c8      	mov	r8, r9
 801ece8:	f1bb 0f00 	cmp.w	fp, #0
 801ecec:	f340 80a6 	ble.w	801ee3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ecf0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ecf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecf4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ecf8:	689b      	ldr	r3, [r3, #8]
 801ecfa:	1422      	asrs	r2, r4, #16
 801ecfc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ed00:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ed04:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ed08:	f100 80e3 	bmi.w	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ed0c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ed10:	4552      	cmp	r2, sl
 801ed12:	f280 80de 	bge.w	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ed16:	f1bc 0f00 	cmp.w	ip, #0
 801ed1a:	f2c0 80da 	blt.w	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ed1e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ed22:	45d4      	cmp	ip, sl
 801ed24:	f280 80d5 	bge.w	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ed28:	b21b      	sxth	r3, r3
 801ed2a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ed2e:	9d07      	ldr	r5, [sp, #28]
 801ed30:	eb05 0a02 	add.w	sl, r5, r2
 801ed34:	5caa      	ldrb	r2, [r5, r2]
 801ed36:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ed3a:	2800      	cmp	r0, #0
 801ed3c:	f000 80c0 	beq.w	801eec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ed40:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ed44:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ed48:	920b      	str	r2, [sp, #44]	; 0x2c
 801ed4a:	b151      	cbz	r1, 801ed62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ed4c:	eb0a 0203 	add.w	r2, sl, r3
 801ed50:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ed54:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed58:	9309      	str	r3, [sp, #36]	; 0x24
 801ed5a:	7853      	ldrb	r3, [r2, #1]
 801ed5c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed60:	930c      	str	r3, [sp, #48]	; 0x30
 801ed62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ed66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ed6a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed6e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed72:	ea4c 0c03 	orr.w	ip, ip, r3
 801ed76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ed78:	041b      	lsls	r3, r3, #16
 801ed7a:	fb10 f201 	smulbb	r2, r0, r1
 801ed7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed82:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ed86:	10d2      	asrs	r2, r2, #3
 801ed88:	432b      	orrs	r3, r5
 801ed8a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ed8e:	4353      	muls	r3, r2
 801ed90:	fb0a 330c 	mla	r3, sl, ip, r3
 801ed94:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ed98:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed9c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eda0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801eda4:	f1c1 0c10 	rsb	ip, r1, #16
 801eda8:	ebac 0c00 	sub.w	ip, ip, r0
 801edac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801edb0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801edb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801edb6:	0418      	lsls	r0, r3, #16
 801edb8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801edbc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801edc0:	4318      	orrs	r0, r3
 801edc2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801edc6:	fb02 c200 	mla	r2, r2, r0, ip
 801edca:	0d53      	lsrs	r3, r2, #21
 801edcc:	0952      	lsrs	r2, r2, #5
 801edce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801edd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801edd6:	431a      	orrs	r2, r3
 801edd8:	f8a8 2000 	strh.w	r2, [r8]
 801eddc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801edde:	441c      	add	r4, r3
 801ede0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ede2:	f108 0802 	add.w	r8, r8, #2
 801ede6:	441e      	add	r6, r3
 801ede8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edec:	e77c      	b.n	801ece8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801edee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801edf0:	441c      	add	r4, r3
 801edf2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801edf4:	441e      	add	r6, r3
 801edf6:	9b06      	ldr	r3, [sp, #24]
 801edf8:	3b01      	subs	r3, #1
 801edfa:	9306      	str	r3, [sp, #24]
 801edfc:	f109 0902 	add.w	r9, r9, #2
 801ee00:	e752      	b.n	801eca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ee02:	d020      	beq.n	801ee46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ee04:	9b06      	ldr	r3, [sp, #24]
 801ee06:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ee08:	3b01      	subs	r3, #1
 801ee0a:	fb00 4003 	mla	r0, r0, r3, r4
 801ee0e:	1400      	asrs	r0, r0, #16
 801ee10:	f53f af67 	bmi.w	801ece2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ee14:	3901      	subs	r1, #1
 801ee16:	4288      	cmp	r0, r1
 801ee18:	f6bf af63 	bge.w	801ece2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ee1c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ee1e:	fb01 6303 	mla	r3, r1, r3, r6
 801ee22:	141b      	asrs	r3, r3, #16
 801ee24:	f53f af5d 	bmi.w	801ece2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ee28:	3a01      	subs	r2, #1
 801ee2a:	4293      	cmp	r3, r2
 801ee2c:	f6bf af59 	bge.w	801ece2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ee30:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ee34:	46ca      	mov	sl, r9
 801ee36:	f1b8 0f00 	cmp.w	r8, #0
 801ee3a:	dc67      	bgt.n	801ef0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ee3c:	9b06      	ldr	r3, [sp, #24]
 801ee3e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ee42:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ee46:	9b08      	ldr	r3, [sp, #32]
 801ee48:	2b00      	cmp	r3, #0
 801ee4a:	f340 80d7 	ble.w	801effc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ee4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee56:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ee5a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ee5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee64:	eeb0 6a62 	vmov.f32	s12, s5
 801ee68:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ee70:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee74:	ee16 4a10 	vmov	r4, s12
 801ee78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee7c:	eeb0 6a43 	vmov.f32	s12, s6
 801ee80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee84:	ee12 2a90 	vmov	r2, s5
 801ee88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee90:	ee13 2a10 	vmov	r2, s6
 801ee94:	931f      	str	r3, [sp, #124]	; 0x7c
 801ee96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ee98:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee9c:	9320      	str	r3, [sp, #128]	; 0x80
 801ee9e:	9b08      	ldr	r3, [sp, #32]
 801eea0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eea2:	3b01      	subs	r3, #1
 801eea4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eea8:	9308      	str	r3, [sp, #32]
 801eeaa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eeac:	bf08      	it	eq
 801eeae:	4613      	moveq	r3, r2
 801eeb0:	ee16 6a10 	vmov	r6, s12
 801eeb4:	9306      	str	r3, [sp, #24]
 801eeb6:	eeb0 3a67 	vmov.f32	s6, s15
 801eeba:	eef0 2a47 	vmov.f32	s5, s14
 801eebe:	e6e4      	b.n	801ec8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801eec0:	2900      	cmp	r1, #0
 801eec2:	f43f af4e 	beq.w	801ed62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eec6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eeca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eece:	9309      	str	r3, [sp, #36]	; 0x24
 801eed0:	e747      	b.n	801ed62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eed2:	f112 0a01 	adds.w	sl, r2, #1
 801eed6:	d481      	bmi.n	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eed8:	4553      	cmp	r3, sl
 801eeda:	f6ff af7f 	blt.w	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eede:	f11c 0a01 	adds.w	sl, ip, #1
 801eee2:	f53f af7b 	bmi.w	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eee6:	45d6      	cmp	lr, sl
 801eee8:	f6ff af78 	blt.w	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eeec:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801eef0:	b21b      	sxth	r3, r3
 801eef2:	fa0f f28e 	sxth.w	r2, lr
 801eef6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801eefa:	9201      	str	r2, [sp, #4]
 801eefc:	9300      	str	r3, [sp, #0]
 801eefe:	9a07      	ldr	r2, [sp, #28]
 801ef00:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ef02:	463b      	mov	r3, r7
 801ef04:	4641      	mov	r1, r8
 801ef06:	f7ff fe21 	bl	801eb4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ef0a:	e767      	b.n	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef0e:	9d07      	ldr	r5, [sp, #28]
 801ef10:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ef14:	1422      	asrs	r2, r4, #16
 801ef16:	1431      	asrs	r1, r6, #16
 801ef18:	fb03 2101 	mla	r1, r3, r1, r2
 801ef1c:	9a07      	ldr	r2, [sp, #28]
 801ef1e:	440a      	add	r2, r1
 801ef20:	5c69      	ldrb	r1, [r5, r1]
 801ef22:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ef26:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ef2a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ef2e:	f1be 0f00 	cmp.w	lr, #0
 801ef32:	d05c      	beq.n	801efee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ef34:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ef38:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ef3c:	950d      	str	r5, [sp, #52]	; 0x34
 801ef3e:	b150      	cbz	r0, 801ef56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ef40:	eb02 0c03 	add.w	ip, r2, r3
 801ef44:	5cd3      	ldrb	r3, [r2, r3]
 801ef46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef4a:	930a      	str	r3, [sp, #40]	; 0x28
 801ef4c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ef50:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef54:	930e      	str	r3, [sp, #56]	; 0x38
 801ef56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef5a:	fb1e f200 	smulbb	r2, lr, r0
 801ef5e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef62:	10d2      	asrs	r2, r2, #3
 801ef64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef68:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef6c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef70:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ef74:	9311      	str	r3, [sp, #68]	; 0x44
 801ef76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ef78:	041b      	lsls	r3, r3, #16
 801ef7a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ef7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef82:	ea43 030b 	orr.w	r3, r3, fp
 801ef86:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef88:	4353      	muls	r3, r2
 801ef8a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ef8e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ef92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ef96:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ef9a:	ea43 0b01 	orr.w	fp, r3, r1
 801ef9e:	f1c0 0110 	rsb	r1, r0, #16
 801efa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801efa4:	eba1 0e0e 	sub.w	lr, r1, lr
 801efa8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801efac:	fb0e cc0b 	mla	ip, lr, fp, ip
 801efb0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801efb4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801efb8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801efbc:	ea4b 0e0e 	orr.w	lr, fp, lr
 801efc0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801efc4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801efc8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801efcc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801efd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801efd4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801efd8:	ea43 0c0c 	orr.w	ip, r3, ip
 801efdc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801efde:	f82a cb02 	strh.w	ip, [sl], #2
 801efe2:	441c      	add	r4, r3
 801efe4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efe6:	f108 38ff 	add.w	r8, r8, #4294967295
 801efea:	441e      	add	r6, r3
 801efec:	e723      	b.n	801ee36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801efee:	2800      	cmp	r0, #0
 801eff0:	d0b1      	beq.n	801ef56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801eff2:	5cd3      	ldrb	r3, [r2, r3]
 801eff4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eff8:	930a      	str	r3, [sp, #40]	; 0x28
 801effa:	e7ac      	b.n	801ef56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801effc:	b013      	add	sp, #76	; 0x4c
 801effe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f006:	880d      	ldrh	r5, [r1, #0]
 801f008:	b087      	sub	sp, #28
 801f00a:	10ef      	asrs	r7, r5, #3
 801f00c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f010:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f014:	00ed      	lsls	r5, r5, #3
 801f016:	9701      	str	r7, [sp, #4]
 801f018:	b2ed      	uxtb	r5, r5
 801f01a:	9502      	str	r5, [sp, #8]
 801f01c:	9d01      	ldr	r5, [sp, #4]
 801f01e:	9103      	str	r1, [sp, #12]
 801f020:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f024:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f028:	9902      	ldr	r1, [sp, #8]
 801f02a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f02e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f032:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f036:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f03a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f03e:	022d      	lsls	r5, r5, #8
 801f040:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f044:	fb06 0709 	mla	r7, r6, r9, r0
 801f048:	430d      	orrs	r5, r1
 801f04a:	2e00      	cmp	r6, #0
 801f04c:	eb02 0c07 	add.w	ip, r2, r7
 801f050:	9505      	str	r5, [sp, #20]
 801f052:	f2c0 80b6 	blt.w	801f1c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f056:	45b3      	cmp	fp, r6
 801f058:	f340 80b3 	ble.w	801f1c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f05c:	2800      	cmp	r0, #0
 801f05e:	f2c0 80ae 	blt.w	801f1be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f062:	4581      	cmp	r9, r0
 801f064:	f340 80ab 	ble.w	801f1be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f068:	5dd7      	ldrb	r7, [r2, r7]
 801f06a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f06e:	441f      	add	r7, r3
 801f070:	1c42      	adds	r2, r0, #1
 801f072:	f100 80a9 	bmi.w	801f1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f076:	4591      	cmp	r9, r2
 801f078:	f340 80a6 	ble.w	801f1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f07c:	2c00      	cmp	r4, #0
 801f07e:	f000 80a3 	beq.w	801f1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f082:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f086:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f08a:	441d      	add	r5, r3
 801f08c:	3601      	adds	r6, #1
 801f08e:	f100 809f 	bmi.w	801f1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f092:	45b3      	cmp	fp, r6
 801f094:	f340 809c 	ble.w	801f1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f098:	f1be 0f00 	cmp.w	lr, #0
 801f09c:	f000 8098 	beq.w	801f1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f0a0:	2800      	cmp	r0, #0
 801f0a2:	f2c0 8093 	blt.w	801f1cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f0a6:	4581      	cmp	r9, r0
 801f0a8:	f340 8090 	ble.w	801f1cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f0ac:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f0b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f0b4:	441e      	add	r6, r3
 801f0b6:	3001      	adds	r0, #1
 801f0b8:	f100 808d 	bmi.w	801f1d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f0bc:	4581      	cmp	r9, r0
 801f0be:	f340 808a 	ble.w	801f1d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f0c2:	2c00      	cmp	r4, #0
 801f0c4:	f000 8087 	beq.w	801f1d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f0c8:	44e1      	add	r9, ip
 801f0ca:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f0ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f0d2:	4413      	add	r3, r2
 801f0d4:	b2a4      	uxth	r4, r4
 801f0d6:	fa1f fe8e 	uxth.w	lr, lr
 801f0da:	fb04 fb0e 	mul.w	fp, r4, lr
 801f0de:	0124      	lsls	r4, r4, #4
 801f0e0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f0e4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f0e8:	eba4 040b 	sub.w	r4, r4, fp
 801f0ec:	fa1f f08e 	uxth.w	r0, lr
 801f0f0:	b2a2      	uxth	r2, r4
 801f0f2:	78ac      	ldrb	r4, [r5, #2]
 801f0f4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f0f8:	9901      	ldr	r1, [sp, #4]
 801f0fa:	eba9 0900 	sub.w	r9, r9, r0
 801f0fe:	fa1f f989 	uxth.w	r9, r9
 801f102:	4354      	muls	r4, r2
 801f104:	fb09 440c 	mla	r4, r9, ip, r4
 801f108:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f10c:	fb00 440c 	mla	r4, r0, ip, r4
 801f110:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f114:	fa1f fe88 	uxth.w	lr, r8
 801f118:	ea6f 0808 	mvn.w	r8, r8
 801f11c:	fa5f f888 	uxtb.w	r8, r8
 801f120:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f124:	fb1a fa08 	smulbb	sl, sl, r8
 801f128:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f12c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f130:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f134:	787c      	ldrb	r4, [r7, #1]
 801f136:	782d      	ldrb	r5, [r5, #0]
 801f138:	783f      	ldrb	r7, [r7, #0]
 801f13a:	fb02 fa0a 	mul.w	sl, r2, sl
 801f13e:	fb09 aa04 	mla	sl, r9, r4, sl
 801f142:	7874      	ldrb	r4, [r6, #1]
 801f144:	436a      	muls	r2, r5
 801f146:	7835      	ldrb	r5, [r6, #0]
 801f148:	fb00 aa04 	mla	sl, r0, r4, sl
 801f14c:	fb09 2207 	mla	r2, r9, r7, r2
 801f150:	785c      	ldrb	r4, [r3, #1]
 801f152:	781b      	ldrb	r3, [r3, #0]
 801f154:	fb00 2005 	mla	r0, r0, r5, r2
 801f158:	fb0b a404 	mla	r4, fp, r4, sl
 801f15c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f160:	9b02      	ldr	r3, [sp, #8]
 801f162:	fb11 fa08 	smulbb	sl, r1, r8
 801f166:	fa1f fc8c 	uxth.w	ip, ip
 801f16a:	fb13 f808 	smulbb	r8, r3, r8
 801f16e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f172:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f176:	fb04 a40e 	mla	r4, r4, lr, sl
 801f17a:	f10c 0301 	add.w	r3, ip, #1
 801f17e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f182:	fa1f fe8e 	uxth.w	lr, lr
 801f186:	b2a4      	uxth	r4, r4
 801f188:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f18c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f190:	f104 0a01 	add.w	sl, r4, #1
 801f194:	f10e 0c01 	add.w	ip, lr, #1
 801f198:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f19c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f1a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f1a4:	0964      	lsrs	r4, r4, #5
 801f1a6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f1aa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f1ae:	9b03      	ldr	r3, [sp, #12]
 801f1b0:	ea4c 0c04 	orr.w	ip, ip, r4
 801f1b4:	f8a3 c000 	strh.w	ip, [r3]
 801f1b8:	b007      	add	sp, #28
 801f1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f1be:	af05      	add	r7, sp, #20
 801f1c0:	e756      	b.n	801f070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f1c2:	ad05      	add	r5, sp, #20
 801f1c4:	462f      	mov	r7, r5
 801f1c6:	e761      	b.n	801f08c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f1c8:	ad05      	add	r5, sp, #20
 801f1ca:	e75f      	b.n	801f08c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f1cc:	ae05      	add	r6, sp, #20
 801f1ce:	e772      	b.n	801f0b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f1d0:	ab05      	add	r3, sp, #20
 801f1d2:	461e      	mov	r6, r3
 801f1d4:	e77e      	b.n	801f0d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f1d6:	ab05      	add	r3, sp, #20
 801f1d8:	e77c      	b.n	801f0d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f1da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f1da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1de:	b095      	sub	sp, #84	; 0x54
 801f1e0:	9212      	str	r2, [sp, #72]	; 0x48
 801f1e2:	9309      	str	r3, [sp, #36]	; 0x24
 801f1e4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f1e6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f1ea:	930f      	str	r3, [sp, #60]	; 0x3c
 801f1ec:	910e      	str	r1, [sp, #56]	; 0x38
 801f1ee:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f1f2:	9013      	str	r0, [sp, #76]	; 0x4c
 801f1f4:	6850      	ldr	r0, [r2, #4]
 801f1f6:	6812      	ldr	r2, [r2, #0]
 801f1f8:	fb00 1303 	mla	r3, r0, r3, r1
 801f1fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f200:	930a      	str	r3, [sp, #40]	; 0x28
 801f202:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f204:	681b      	ldr	r3, [r3, #0]
 801f206:	930d      	str	r3, [sp, #52]	; 0x34
 801f208:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f20a:	685c      	ldr	r4, [r3, #4]
 801f20c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f20e:	43db      	mvns	r3, r3
 801f210:	b2db      	uxtb	r3, r3
 801f212:	3404      	adds	r4, #4
 801f214:	930b      	str	r3, [sp, #44]	; 0x2c
 801f216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f218:	2b00      	cmp	r3, #0
 801f21a:	dc03      	bgt.n	801f224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f21c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f21e:	2b00      	cmp	r3, #0
 801f220:	f340 8255 	ble.w	801f6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f224:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f226:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f22a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f22e:	1e48      	subs	r0, r1, #1
 801f230:	1e55      	subs	r5, r2, #1
 801f232:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f234:	2b00      	cmp	r3, #0
 801f236:	f340 80f9 	ble.w	801f42c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f23a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f23c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f23e:	1436      	asrs	r6, r6, #16
 801f240:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f244:	d406      	bmi.n	801f254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f246:	4286      	cmp	r6, r0
 801f248:	da04      	bge.n	801f254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f24a:	2b00      	cmp	r3, #0
 801f24c:	db02      	blt.n	801f254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f24e:	42ab      	cmp	r3, r5
 801f250:	f2c0 80ed 	blt.w	801f42e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f254:	3601      	adds	r6, #1
 801f256:	f100 80da 	bmi.w	801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f25a:	42b1      	cmp	r1, r6
 801f25c:	f2c0 80d7 	blt.w	801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f260:	3301      	adds	r3, #1
 801f262:	f100 80d4 	bmi.w	801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f266:	429a      	cmp	r2, r3
 801f268:	f2c0 80d1 	blt.w	801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f26c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f26e:	9311      	str	r3, [sp, #68]	; 0x44
 801f270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f272:	930c      	str	r3, [sp, #48]	; 0x30
 801f274:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f276:	2b00      	cmp	r3, #0
 801f278:	f340 80fa 	ble.w	801f470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f27c:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f27e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f280:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f282:	68c6      	ldr	r6, [r0, #12]
 801f284:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f286:	141d      	asrs	r5, r3, #16
 801f288:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f28c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f28e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f290:	1400      	asrs	r0, r0, #16
 801f292:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f296:	6892      	ldr	r2, [r2, #8]
 801f298:	f100 813e 	bmi.w	801f518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f29c:	1e57      	subs	r7, r2, #1
 801f29e:	42b8      	cmp	r0, r7
 801f2a0:	f280 813a 	bge.w	801f518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f2a4:	2d00      	cmp	r5, #0
 801f2a6:	f2c0 8137 	blt.w	801f518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f2aa:	1e77      	subs	r7, r6, #1
 801f2ac:	42bd      	cmp	r5, r7
 801f2ae:	f280 8133 	bge.w	801f518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f2b2:	b212      	sxth	r2, r2
 801f2b4:	fb05 0002 	mla	r0, r5, r2, r0
 801f2b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f2ba:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f2be:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f2c2:	182e      	adds	r6, r5, r0
 801f2c4:	eb04 050a 	add.w	r5, r4, sl
 801f2c8:	2b00      	cmp	r3, #0
 801f2ca:	f000 8117 	beq.w	801f4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f2ce:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f2d2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f2d6:	44a4      	add	ip, r4
 801f2d8:	2900      	cmp	r1, #0
 801f2da:	f000 8117 	beq.w	801f50c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f2de:	18b0      	adds	r0, r6, r2
 801f2e0:	5cb2      	ldrb	r2, [r6, r2]
 801f2e2:	7840      	ldrb	r0, [r0, #1]
 801f2e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f2e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f2ec:	4422      	add	r2, r4
 801f2ee:	4420      	add	r0, r4
 801f2f0:	b29b      	uxth	r3, r3
 801f2f2:	b289      	uxth	r1, r1
 801f2f4:	fb03 f901 	mul.w	r9, r3, r1
 801f2f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f2fc:	011b      	lsls	r3, r3, #4
 801f2fe:	b289      	uxth	r1, r1
 801f300:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f304:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f308:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f30a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f30e:	f8b6 e000 	ldrh.w	lr, [r6]
 801f312:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f316:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f31a:	eba3 0309 	sub.w	r3, r3, r9
 801f31e:	b29b      	uxth	r3, r3
 801f320:	eba8 0801 	sub.w	r8, r8, r1
 801f324:	fa1f f888 	uxth.w	r8, r8
 801f328:	435f      	muls	r7, r3
 801f32a:	fb08 770b 	mla	r7, r8, fp, r7
 801f32e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f332:	9310      	str	r3, [sp, #64]	; 0x40
 801f334:	fb01 770b 	mla	r7, r1, fp, r7
 801f338:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f33c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f33e:	fb09 770b 	mla	r7, r9, fp, r7
 801f342:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f346:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f34a:	fb1b fb03 	smulbb	fp, fp, r3
 801f34e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f352:	fb07 b706 	mla	r7, r7, r6, fp
 801f356:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f358:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f35c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f360:	f89c c000 	ldrb.w	ip, [ip]
 801f364:	435d      	muls	r5, r3
 801f366:	fb08 550b 	mla	r5, r8, fp, r5
 801f36a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f36e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f370:	fb01 550b 	mla	r5, r1, fp, r5
 801f374:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f378:	fb09 550b 	mla	r5, r9, fp, r5
 801f37c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f380:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f384:	fb1b fb03 	smulbb	fp, fp, r3
 801f388:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f38a:	fb03 f30c 	mul.w	r3, r3, ip
 801f38e:	f892 c000 	ldrb.w	ip, [r2]
 801f392:	fb08 330a 	mla	r3, r8, sl, r3
 801f396:	fb01 330c 	mla	r3, r1, ip, r3
 801f39a:	f890 c000 	ldrb.w	ip, [r0]
 801f39e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f3a2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f3a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f3a8:	fa5f fe8e 	uxtb.w	lr, lr
 801f3ac:	b2bf      	uxth	r7, r7
 801f3ae:	fb1e fe03 	smulbb	lr, lr, r3
 801f3b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f3b6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f3ba:	fb05 b506 	mla	r5, r5, r6, fp
 801f3be:	1c7b      	adds	r3, r7, #1
 801f3c0:	fb0c e606 	mla	r6, ip, r6, lr
 801f3c4:	b2ad      	uxth	r5, r5
 801f3c6:	b2b6      	uxth	r6, r6
 801f3c8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f3cc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f3d0:	f105 0b01 	add.w	fp, r5, #1
 801f3d4:	1c77      	adds	r7, r6, #1
 801f3d6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f3da:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f3de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f3e2:	096d      	lsrs	r5, r5, #5
 801f3e4:	431f      	orrs	r7, r3
 801f3e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f3ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f3ec:	433d      	orrs	r5, r7
 801f3ee:	801d      	strh	r5, [r3, #0]
 801f3f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f3f2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f3f4:	3302      	adds	r3, #2
 801f3f6:	930c      	str	r3, [sp, #48]	; 0x30
 801f3f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f3fa:	4413      	add	r3, r2
 801f3fc:	931f      	str	r3, [sp, #124]	; 0x7c
 801f3fe:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f400:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f402:	4413      	add	r3, r2
 801f404:	9320      	str	r3, [sp, #128]	; 0x80
 801f406:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f408:	3b01      	subs	r3, #1
 801f40a:	9311      	str	r3, [sp, #68]	; 0x44
 801f40c:	e732      	b.n	801f274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f40e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f410:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f412:	4433      	add	r3, r6
 801f414:	931f      	str	r3, [sp, #124]	; 0x7c
 801f416:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f418:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f41a:	4433      	add	r3, r6
 801f41c:	9320      	str	r3, [sp, #128]	; 0x80
 801f41e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f420:	3b01      	subs	r3, #1
 801f422:	9309      	str	r3, [sp, #36]	; 0x24
 801f424:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f426:	3302      	adds	r3, #2
 801f428:	930a      	str	r3, [sp, #40]	; 0x28
 801f42a:	e702      	b.n	801f232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f42c:	d027      	beq.n	801f47e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f42e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f430:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f432:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f434:	3b01      	subs	r3, #1
 801f436:	fb00 5003 	mla	r0, r0, r3, r5
 801f43a:	1400      	asrs	r0, r0, #16
 801f43c:	f53f af16 	bmi.w	801f26c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f440:	3901      	subs	r1, #1
 801f442:	4288      	cmp	r0, r1
 801f444:	f6bf af12 	bge.w	801f26c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f448:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f44a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f44c:	fb01 0303 	mla	r3, r1, r3, r0
 801f450:	141b      	asrs	r3, r3, #16
 801f452:	f53f af0b 	bmi.w	801f26c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f456:	3a01      	subs	r2, #1
 801f458:	4293      	cmp	r3, r2
 801f45a:	f6bf af07 	bge.w	801f26c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f45e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f460:	9311      	str	r3, [sp, #68]	; 0x44
 801f462:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f468:	930c      	str	r3, [sp, #48]	; 0x30
 801f46a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f46c:	2b00      	cmp	r3, #0
 801f46e:	dc70      	bgt.n	801f552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f470:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f472:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f474:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f478:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f47c:	930a      	str	r3, [sp, #40]	; 0x28
 801f47e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f480:	2b00      	cmp	r3, #0
 801f482:	f340 8124 	ble.w	801f6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f486:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f48a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f48e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f492:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f494:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f498:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f49c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4a0:	eef0 6a62 	vmov.f32	s13, s5
 801f4a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4b0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f4b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4b8:	eef0 6a43 	vmov.f32	s13, s6
 801f4bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4c0:	ee12 2a90 	vmov	r2, s5
 801f4c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4cc:	ee13 2a10 	vmov	r2, s6
 801f4d0:	9321      	str	r3, [sp, #132]	; 0x84
 801f4d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f4d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4d8:	9322      	str	r3, [sp, #136]	; 0x88
 801f4da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f4dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f4de:	3b01      	subs	r3, #1
 801f4e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4e4:	930e      	str	r3, [sp, #56]	; 0x38
 801f4e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f4e8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f4ec:	bf08      	it	eq
 801f4ee:	4613      	moveq	r3, r2
 801f4f0:	9309      	str	r3, [sp, #36]	; 0x24
 801f4f2:	eeb0 3a67 	vmov.f32	s6, s15
 801f4f6:	eef0 2a47 	vmov.f32	s5, s14
 801f4fa:	e68c      	b.n	801f216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f4fc:	b149      	cbz	r1, 801f512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f4fe:	5cb2      	ldrb	r2, [r6, r2]
 801f500:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f504:	4422      	add	r2, r4
 801f506:	4628      	mov	r0, r5
 801f508:	46ac      	mov	ip, r5
 801f50a:	e6f1      	b.n	801f2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f50c:	4628      	mov	r0, r5
 801f50e:	462a      	mov	r2, r5
 801f510:	e6ee      	b.n	801f2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f512:	4628      	mov	r0, r5
 801f514:	462a      	mov	r2, r5
 801f516:	e7f7      	b.n	801f508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f518:	1c47      	adds	r7, r0, #1
 801f51a:	f53f af69 	bmi.w	801f3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f51e:	42ba      	cmp	r2, r7
 801f520:	f6ff af66 	blt.w	801f3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f524:	1c6f      	adds	r7, r5, #1
 801f526:	f53f af63 	bmi.w	801f3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f52a:	42be      	cmp	r6, r7
 801f52c:	f6ff af60 	blt.w	801f3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f530:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f532:	9002      	str	r0, [sp, #8]
 801f534:	b236      	sxth	r6, r6
 801f536:	b212      	sxth	r2, r2
 801f538:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f53c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f540:	9200      	str	r2, [sp, #0]
 801f542:	9601      	str	r6, [sp, #4]
 801f544:	4623      	mov	r3, r4
 801f546:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f54a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f54c:	f7ff fd59 	bl	801f002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f550:	e74e      	b.n	801f3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f552:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f554:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f556:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f558:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f55a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f55e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f560:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f564:	142d      	asrs	r5, r5, #16
 801f566:	1400      	asrs	r0, r0, #16
 801f568:	fb02 5000 	mla	r0, r2, r0, r5
 801f56c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f56e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f572:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f576:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f57a:	182e      	adds	r6, r5, r0
 801f57c:	eb04 0509 	add.w	r5, r4, r9
 801f580:	2b00      	cmp	r3, #0
 801f582:	f000 8096 	beq.w	801f6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f586:	7877      	ldrb	r7, [r6, #1]
 801f588:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f58c:	4427      	add	r7, r4
 801f58e:	2900      	cmp	r1, #0
 801f590:	f000 8097 	beq.w	801f6c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f594:	18b0      	adds	r0, r6, r2
 801f596:	5cb2      	ldrb	r2, [r6, r2]
 801f598:	7840      	ldrb	r0, [r0, #1]
 801f59a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f59e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f5a2:	4422      	add	r2, r4
 801f5a4:	4420      	add	r0, r4
 801f5a6:	b29b      	uxth	r3, r3
 801f5a8:	b289      	uxth	r1, r1
 801f5aa:	fb03 f801 	mul.w	r8, r3, r1
 801f5ae:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f5b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f5b4:	f8b6 c000 	ldrh.w	ip, [r6]
 801f5b8:	78be      	ldrb	r6, [r7, #2]
 801f5ba:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f5be:	011b      	lsls	r3, r3, #4
 801f5c0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f5c4:	b289      	uxth	r1, r1
 801f5c6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f5ca:	eba3 0308 	sub.w	r3, r3, r8
 801f5ce:	b29b      	uxth	r3, r3
 801f5d0:	ebae 0e01 	sub.w	lr, lr, r1
 801f5d4:	fa1f fe8e 	uxth.w	lr, lr
 801f5d8:	435e      	muls	r6, r3
 801f5da:	fb0e 660b 	mla	r6, lr, fp, r6
 801f5de:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f5e2:	9310      	str	r3, [sp, #64]	; 0x40
 801f5e4:	fb01 660b 	mla	r6, r1, fp, r6
 801f5e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f5ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f5ee:	fb08 660b 	mla	r6, r8, fp, r6
 801f5f2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f5f6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f5fa:	fb1b fb03 	smulbb	fp, fp, r3
 801f5fe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f602:	fb06 b60a 	mla	r6, r6, sl, fp
 801f606:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f608:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f60c:	787d      	ldrb	r5, [r7, #1]
 801f60e:	783f      	ldrb	r7, [r7, #0]
 801f610:	435d      	muls	r5, r3
 801f612:	fb0e 550b 	mla	r5, lr, fp, r5
 801f616:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f61a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f61c:	fb01 550b 	mla	r5, r1, fp, r5
 801f620:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f624:	fb08 550b 	mla	r5, r8, fp, r5
 801f628:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f62c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f630:	fb1b fb03 	smulbb	fp, fp, r3
 801f634:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f636:	437b      	muls	r3, r7
 801f638:	7817      	ldrb	r7, [r2, #0]
 801f63a:	fb0e 3309 	mla	r3, lr, r9, r3
 801f63e:	fb01 3307 	mla	r3, r1, r7, r3
 801f642:	7807      	ldrb	r7, [r0, #0]
 801f644:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f648:	fb08 3707 	mla	r7, r8, r7, r3
 801f64c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f64e:	fa5f fc8c 	uxtb.w	ip, ip
 801f652:	fb1c fc03 	smulbb	ip, ip, r3
 801f656:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f65a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f65e:	fb05 b50a 	mla	r5, r5, sl, fp
 801f662:	fb07 c70a 	mla	r7, r7, sl, ip
 801f666:	b2b6      	uxth	r6, r6
 801f668:	b2ad      	uxth	r5, r5
 801f66a:	b2bf      	uxth	r7, r7
 801f66c:	1c73      	adds	r3, r6, #1
 801f66e:	1c7a      	adds	r2, r7, #1
 801f670:	f105 0b01 	add.w	fp, r5, #1
 801f674:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f678:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f67c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f680:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f684:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f688:	096d      	lsrs	r5, r5, #5
 801f68a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f68c:	4316      	orrs	r6, r2
 801f68e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f692:	432e      	orrs	r6, r5
 801f694:	f823 6b02 	strh.w	r6, [r3], #2
 801f698:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f69a:	930c      	str	r3, [sp, #48]	; 0x30
 801f69c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f69e:	4413      	add	r3, r2
 801f6a0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f6a2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f6a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6a6:	4413      	add	r3, r2
 801f6a8:	9320      	str	r3, [sp, #128]	; 0x80
 801f6aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f6ac:	3b01      	subs	r3, #1
 801f6ae:	9311      	str	r3, [sp, #68]	; 0x44
 801f6b0:	e6db      	b.n	801f46a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f6b2:	b149      	cbz	r1, 801f6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f6b4:	5cb2      	ldrb	r2, [r6, r2]
 801f6b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f6ba:	4422      	add	r2, r4
 801f6bc:	4628      	mov	r0, r5
 801f6be:	462f      	mov	r7, r5
 801f6c0:	e771      	b.n	801f5a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f6c2:	4628      	mov	r0, r5
 801f6c4:	462a      	mov	r2, r5
 801f6c6:	e76e      	b.n	801f5a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f6c8:	4628      	mov	r0, r5
 801f6ca:	462a      	mov	r2, r5
 801f6cc:	e7f7      	b.n	801f6be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f6ce:	b015      	add	sp, #84	; 0x54
 801f6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f6d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f6d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6d8:	880f      	ldrh	r7, [r1, #0]
 801f6da:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f6de:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f6e2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f6e6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f6ea:	023c      	lsls	r4, r7, #8
 801f6ec:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f6f0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f6f4:	017c      	lsls	r4, r7, #5
 801f6f6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f6fa:	00ff      	lsls	r7, r7, #3
 801f6fc:	ea4b 0404 	orr.w	r4, fp, r4
 801f700:	b2ff      	uxtb	r7, r7
 801f702:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f706:	4327      	orrs	r7, r4
 801f708:	2d00      	cmp	r5, #0
 801f70a:	eb02 080a 	add.w	r8, r2, sl
 801f70e:	9701      	str	r7, [sp, #4]
 801f710:	db7e      	blt.n	801f810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f712:	45a9      	cmp	r9, r5
 801f714:	dd7c      	ble.n	801f810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f716:	f1bc 0f00 	cmp.w	ip, #0
 801f71a:	db77      	blt.n	801f80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f71c:	45e6      	cmp	lr, ip
 801f71e:	dd75      	ble.n	801f80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f720:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f724:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f728:	441f      	add	r7, r3
 801f72a:	f11c 0201 	adds.w	r2, ip, #1
 801f72e:	d472      	bmi.n	801f816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f730:	4596      	cmp	lr, r2
 801f732:	dd70      	ble.n	801f816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f734:	2800      	cmp	r0, #0
 801f736:	d06e      	beq.n	801f816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f738:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f73c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f740:	441c      	add	r4, r3
 801f742:	3501      	adds	r5, #1
 801f744:	d46b      	bmi.n	801f81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f746:	45a9      	cmp	r9, r5
 801f748:	dd69      	ble.n	801f81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f74a:	2e00      	cmp	r6, #0
 801f74c:	d067      	beq.n	801f81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f74e:	f1bc 0f00 	cmp.w	ip, #0
 801f752:	db62      	blt.n	801f81a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f754:	45e6      	cmp	lr, ip
 801f756:	dd60      	ble.n	801f81a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f758:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f75c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f760:	441d      	add	r5, r3
 801f762:	f11c 0201 	adds.w	r2, ip, #1
 801f766:	d45d      	bmi.n	801f824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f768:	4596      	cmp	lr, r2
 801f76a:	dd5b      	ble.n	801f824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f76c:	2800      	cmp	r0, #0
 801f76e:	d059      	beq.n	801f824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f770:	44c6      	add	lr, r8
 801f772:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f776:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f77a:	4413      	add	r3, r2
 801f77c:	b280      	uxth	r0, r0
 801f77e:	b2b2      	uxth	r2, r6
 801f780:	fb00 f602 	mul.w	r6, r0, r2
 801f784:	0100      	lsls	r0, r0, #4
 801f786:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f78a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f78e:	1b80      	subs	r0, r0, r6
 801f790:	fa1f fc82 	uxth.w	ip, r2
 801f794:	b282      	uxth	r2, r0
 801f796:	78a0      	ldrb	r0, [r4, #2]
 801f798:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f79c:	f897 9000 	ldrb.w	r9, [r7]
 801f7a0:	787f      	ldrb	r7, [r7, #1]
 801f7a2:	eba8 080c 	sub.w	r8, r8, ip
 801f7a6:	fa1f f888 	uxth.w	r8, r8
 801f7aa:	4350      	muls	r0, r2
 801f7ac:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f7b0:	78a8      	ldrb	r0, [r5, #2]
 801f7b2:	fb0c e000 	mla	r0, ip, r0, lr
 801f7b6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f7ba:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f7be:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f7c2:	f894 e000 	ldrb.w	lr, [r4]
 801f7c6:	fb02 fe0e 	mul.w	lr, r2, lr
 801f7ca:	fb08 e909 	mla	r9, r8, r9, lr
 801f7ce:	f895 e000 	ldrb.w	lr, [r5]
 801f7d2:	fb0c 990e 	mla	r9, ip, lr, r9
 801f7d6:	f893 e000 	ldrb.w	lr, [r3]
 801f7da:	785b      	ldrb	r3, [r3, #1]
 801f7dc:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f7e0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f7e4:	ea4e 0e00 	orr.w	lr, lr, r0
 801f7e8:	7860      	ldrb	r0, [r4, #1]
 801f7ea:	4350      	muls	r0, r2
 801f7ec:	786a      	ldrb	r2, [r5, #1]
 801f7ee:	fb08 0007 	mla	r0, r8, r7, r0
 801f7f2:	fb0c 0202 	mla	r2, ip, r2, r0
 801f7f6:	fb06 2303 	mla	r3, r6, r3, r2
 801f7fa:	095b      	lsrs	r3, r3, #5
 801f7fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f800:	ea4e 0303 	orr.w	r3, lr, r3
 801f804:	800b      	strh	r3, [r1, #0]
 801f806:	b003      	add	sp, #12
 801f808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f80c:	af01      	add	r7, sp, #4
 801f80e:	e78c      	b.n	801f72a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f810:	ac01      	add	r4, sp, #4
 801f812:	4627      	mov	r7, r4
 801f814:	e795      	b.n	801f742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f816:	ac01      	add	r4, sp, #4
 801f818:	e793      	b.n	801f742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f81a:	ad01      	add	r5, sp, #4
 801f81c:	e7a1      	b.n	801f762 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f81e:	ab01      	add	r3, sp, #4
 801f820:	461d      	mov	r5, r3
 801f822:	e7ab      	b.n	801f77c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f824:	ab01      	add	r3, sp, #4
 801f826:	e7a9      	b.n	801f77c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f82c:	b08f      	sub	sp, #60	; 0x3c
 801f82e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f832:	920c      	str	r2, [sp, #48]	; 0x30
 801f834:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f836:	910a      	str	r1, [sp, #40]	; 0x28
 801f838:	9306      	str	r3, [sp, #24]
 801f83a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f83e:	900d      	str	r0, [sp, #52]	; 0x34
 801f840:	6850      	ldr	r0, [r2, #4]
 801f842:	6812      	ldr	r2, [r2, #0]
 801f844:	fb00 1303 	mla	r3, r0, r3, r1
 801f848:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f84c:	9307      	str	r3, [sp, #28]
 801f84e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f850:	681b      	ldr	r3, [r3, #0]
 801f852:	9308      	str	r3, [sp, #32]
 801f854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f856:	685c      	ldr	r4, [r3, #4]
 801f858:	3404      	adds	r4, #4
 801f85a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f85c:	2b00      	cmp	r3, #0
 801f85e:	dc03      	bgt.n	801f868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f860:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f862:	2b00      	cmp	r3, #0
 801f864:	f340 81d6 	ble.w	801fc14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f868:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f86a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f86e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f872:	1e48      	subs	r0, r1, #1
 801f874:	1e56      	subs	r6, r2, #1
 801f876:	9b06      	ldr	r3, [sp, #24]
 801f878:	2b00      	cmp	r3, #0
 801f87a:	f340 80b7 	ble.w	801f9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f87e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f882:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f886:	d406      	bmi.n	801f896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f888:	4287      	cmp	r7, r0
 801f88a:	da04      	bge.n	801f896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f88c:	2b00      	cmp	r3, #0
 801f88e:	db02      	blt.n	801f896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f890:	42b3      	cmp	r3, r6
 801f892:	f2c0 80ac 	blt.w	801f9ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f896:	3701      	adds	r7, #1
 801f898:	f100 809d 	bmi.w	801f9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f89c:	42b9      	cmp	r1, r7
 801f89e:	f2c0 809a 	blt.w	801f9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f8a2:	3301      	adds	r3, #1
 801f8a4:	f100 8097 	bmi.w	801f9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f8a8:	429a      	cmp	r2, r3
 801f8aa:	f2c0 8094 	blt.w	801f9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f8ae:	9b06      	ldr	r3, [sp, #24]
 801f8b0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f8b2:	9b07      	ldr	r3, [sp, #28]
 801f8b4:	9309      	str	r3, [sp, #36]	; 0x24
 801f8b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8b8:	2b00      	cmp	r3, #0
 801f8ba:	f340 80b5 	ble.w	801fa28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f8be:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f8c0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f8c2:	68c7      	ldr	r7, [r0, #12]
 801f8c4:	6892      	ldr	r2, [r2, #8]
 801f8c6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f8ca:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f8ce:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f8d2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f8d6:	f100 80fb 	bmi.w	801fad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f8da:	f102 3cff 	add.w	ip, r2, #4294967295
 801f8de:	4560      	cmp	r0, ip
 801f8e0:	f280 80f6 	bge.w	801fad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f8e4:	2e00      	cmp	r6, #0
 801f8e6:	f2c0 80f3 	blt.w	801fad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f8ea:	f107 3cff 	add.w	ip, r7, #4294967295
 801f8ee:	4566      	cmp	r6, ip
 801f8f0:	f280 80ee 	bge.w	801fad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f8f4:	b212      	sxth	r2, r2
 801f8f6:	fb06 0002 	mla	r0, r6, r2, r0
 801f8fa:	9e08      	ldr	r6, [sp, #32]
 801f8fc:	1837      	adds	r7, r6, r0
 801f8fe:	5c30      	ldrb	r0, [r6, r0]
 801f900:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f904:	eb04 0c08 	add.w	ip, r4, r8
 801f908:	2b00      	cmp	r3, #0
 801f90a:	f000 80d3 	beq.w	801fab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f90e:	787e      	ldrb	r6, [r7, #1]
 801f910:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f914:	4426      	add	r6, r4
 801f916:	2900      	cmp	r1, #0
 801f918:	f000 80d4 	beq.w	801fac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f91c:	18b8      	adds	r0, r7, r2
 801f91e:	5cba      	ldrb	r2, [r7, r2]
 801f920:	7840      	ldrb	r0, [r0, #1]
 801f922:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f926:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f92a:	4422      	add	r2, r4
 801f92c:	4420      	add	r0, r4
 801f92e:	b29b      	uxth	r3, r3
 801f930:	b289      	uxth	r1, r1
 801f932:	fb03 f901 	mul.w	r9, r3, r1
 801f936:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f93a:	011b      	lsls	r3, r3, #4
 801f93c:	b289      	uxth	r1, r1
 801f93e:	78b7      	ldrb	r7, [r6, #2]
 801f940:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f944:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f948:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f94c:	eba3 0309 	sub.w	r3, r3, r9
 801f950:	b29b      	uxth	r3, r3
 801f952:	ebae 0e01 	sub.w	lr, lr, r1
 801f956:	fa1f fe8e 	uxth.w	lr, lr
 801f95a:	435f      	muls	r7, r3
 801f95c:	fb0e 770a 	mla	r7, lr, sl, r7
 801f960:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f964:	fb01 770a 	mla	r7, r1, sl, r7
 801f968:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f96c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f970:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f974:	f896 8000 	ldrb.w	r8, [r6]
 801f978:	7876      	ldrb	r6, [r6, #1]
 801f97a:	fb03 f808 	mul.w	r8, r3, r8
 801f97e:	fb0e 8807 	mla	r8, lr, r7, r8
 801f982:	7817      	ldrb	r7, [r2, #0]
 801f984:	fb01 8807 	mla	r8, r1, r7, r8
 801f988:	7807      	ldrb	r7, [r0, #0]
 801f98a:	fb09 8707 	mla	r7, r9, r7, r8
 801f98e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f992:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f996:	ea47 070a 	orr.w	r7, r7, sl
 801f99a:	4373      	muls	r3, r6
 801f99c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f9a0:	fb0e 330c 	mla	r3, lr, ip, r3
 801f9a4:	fb01 310a 	mla	r1, r1, sl, r3
 801f9a8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f9ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9ae:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f9b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f9b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f9ba:	ea47 070a 	orr.w	r7, r7, sl
 801f9be:	801f      	strh	r7, [r3, #0]
 801f9c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9c2:	3302      	adds	r3, #2
 801f9c4:	9309      	str	r3, [sp, #36]	; 0x24
 801f9c6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f9c8:	449b      	add	fp, r3
 801f9ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f9cc:	441d      	add	r5, r3
 801f9ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f9d0:	3b01      	subs	r3, #1
 801f9d2:	930b      	str	r3, [sp, #44]	; 0x2c
 801f9d4:	e76f      	b.n	801f8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f9d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f9d8:	449b      	add	fp, r3
 801f9da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f9dc:	441d      	add	r5, r3
 801f9de:	9b06      	ldr	r3, [sp, #24]
 801f9e0:	3b01      	subs	r3, #1
 801f9e2:	9306      	str	r3, [sp, #24]
 801f9e4:	9b07      	ldr	r3, [sp, #28]
 801f9e6:	3302      	adds	r3, #2
 801f9e8:	9307      	str	r3, [sp, #28]
 801f9ea:	e744      	b.n	801f876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f9ec:	d023      	beq.n	801fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f9ee:	9b06      	ldr	r3, [sp, #24]
 801f9f0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f9f2:	3b01      	subs	r3, #1
 801f9f4:	fb00 b003 	mla	r0, r0, r3, fp
 801f9f8:	1400      	asrs	r0, r0, #16
 801f9fa:	f53f af58 	bmi.w	801f8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f9fe:	3901      	subs	r1, #1
 801fa00:	4288      	cmp	r0, r1
 801fa02:	f6bf af54 	bge.w	801f8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fa06:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fa08:	fb01 5303 	mla	r3, r1, r3, r5
 801fa0c:	141b      	asrs	r3, r3, #16
 801fa0e:	f53f af4e 	bmi.w	801f8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fa12:	3a01      	subs	r2, #1
 801fa14:	4293      	cmp	r3, r2
 801fa16:	f6bf af4a 	bge.w	801f8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fa1a:	9b06      	ldr	r3, [sp, #24]
 801fa1c:	9309      	str	r3, [sp, #36]	; 0x24
 801fa1e:	9b07      	ldr	r3, [sp, #28]
 801fa20:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa24:	2b00      	cmp	r3, #0
 801fa26:	dc70      	bgt.n	801fb0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fa28:	9b06      	ldr	r3, [sp, #24]
 801fa2a:	9a07      	ldr	r2, [sp, #28]
 801fa2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fa30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa34:	9307      	str	r3, [sp, #28]
 801fa36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa38:	2b00      	cmp	r3, #0
 801fa3a:	f340 80eb 	ble.w	801fc14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fa3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fa4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa50:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa58:	eef0 6a62 	vmov.f32	s13, s5
 801fa5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa64:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa68:	ee16 ba90 	vmov	fp, s13
 801fa6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa70:	eef0 6a43 	vmov.f32	s13, s6
 801fa74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa78:	ee12 2a90 	vmov	r2, s5
 801fa7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa80:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa84:	ee13 2a10 	vmov	r2, s6
 801fa88:	931b      	str	r3, [sp, #108]	; 0x6c
 801fa8a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fa8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa90:	931c      	str	r3, [sp, #112]	; 0x70
 801fa92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fa96:	3b01      	subs	r3, #1
 801fa98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa9c:	930a      	str	r3, [sp, #40]	; 0x28
 801fa9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801faa0:	bf08      	it	eq
 801faa2:	4613      	moveq	r3, r2
 801faa4:	ee16 5a90 	vmov	r5, s13
 801faa8:	9306      	str	r3, [sp, #24]
 801faaa:	eeb0 3a67 	vmov.f32	s6, s15
 801faae:	eef0 2a47 	vmov.f32	s5, s14
 801fab2:	e6d2      	b.n	801f85a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fab4:	b149      	cbz	r1, 801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fab6:	5cba      	ldrb	r2, [r7, r2]
 801fab8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fabc:	4422      	add	r2, r4
 801fabe:	4660      	mov	r0, ip
 801fac0:	4666      	mov	r6, ip
 801fac2:	e734      	b.n	801f92e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fac4:	4660      	mov	r0, ip
 801fac6:	4662      	mov	r2, ip
 801fac8:	e731      	b.n	801f92e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801faca:	4660      	mov	r0, ip
 801facc:	4662      	mov	r2, ip
 801face:	e7f7      	b.n	801fac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fad0:	f110 0c01 	adds.w	ip, r0, #1
 801fad4:	f53f af74 	bmi.w	801f9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fad8:	4562      	cmp	r2, ip
 801fada:	f6ff af71 	blt.w	801f9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fade:	f116 0c01 	adds.w	ip, r6, #1
 801fae2:	f53f af6d 	bmi.w	801f9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fae6:	4567      	cmp	r7, ip
 801fae8:	f6ff af6a 	blt.w	801f9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801faec:	b23f      	sxth	r7, r7
 801faee:	b212      	sxth	r2, r2
 801faf0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801faf4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801faf8:	9200      	str	r2, [sp, #0]
 801fafa:	9701      	str	r7, [sp, #4]
 801fafc:	4623      	mov	r3, r4
 801fafe:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fb02:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fb04:	f7ff fde6 	bl	801f6d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fb08:	e75a      	b.n	801f9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fb0a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fb0c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fb10:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fb14:	1428      	asrs	r0, r5, #16
 801fb16:	fb02 6000 	mla	r0, r2, r0, r6
 801fb1a:	9e08      	ldr	r6, [sp, #32]
 801fb1c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fb20:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fb24:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fb28:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fb2c:	1837      	adds	r7, r6, r0
 801fb2e:	eb04 0c08 	add.w	ip, r4, r8
 801fb32:	2b00      	cmp	r3, #0
 801fb34:	d060      	beq.n	801fbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fb36:	787e      	ldrb	r6, [r7, #1]
 801fb38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fb3c:	4426      	add	r6, r4
 801fb3e:	2900      	cmp	r1, #0
 801fb40:	d062      	beq.n	801fc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fb42:	18b8      	adds	r0, r7, r2
 801fb44:	5cba      	ldrb	r2, [r7, r2]
 801fb46:	7840      	ldrb	r0, [r0, #1]
 801fb48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb50:	4422      	add	r2, r4
 801fb52:	4420      	add	r0, r4
 801fb54:	b29b      	uxth	r3, r3
 801fb56:	b289      	uxth	r1, r1
 801fb58:	fb03 f901 	mul.w	r9, r3, r1
 801fb5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb60:	011b      	lsls	r3, r3, #4
 801fb62:	b289      	uxth	r1, r1
 801fb64:	78b7      	ldrb	r7, [r6, #2]
 801fb66:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fb6a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fb6e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fb72:	eba3 0309 	sub.w	r3, r3, r9
 801fb76:	b29b      	uxth	r3, r3
 801fb78:	ebae 0e01 	sub.w	lr, lr, r1
 801fb7c:	fa1f fe8e 	uxth.w	lr, lr
 801fb80:	435f      	muls	r7, r3
 801fb82:	fb0e 770a 	mla	r7, lr, sl, r7
 801fb86:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fb8a:	fb01 770a 	mla	r7, r1, sl, r7
 801fb8e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fb92:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fb96:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fb9a:	f896 8000 	ldrb.w	r8, [r6]
 801fb9e:	7876      	ldrb	r6, [r6, #1]
 801fba0:	fb03 f808 	mul.w	r8, r3, r8
 801fba4:	fb0e 8807 	mla	r8, lr, r7, r8
 801fba8:	7817      	ldrb	r7, [r2, #0]
 801fbaa:	fb01 8807 	mla	r8, r1, r7, r8
 801fbae:	7807      	ldrb	r7, [r0, #0]
 801fbb0:	fb09 8707 	mla	r7, r9, r7, r8
 801fbb4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fbb8:	4373      	muls	r3, r6
 801fbba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fbbe:	7856      	ldrb	r6, [r2, #1]
 801fbc0:	ea47 070a 	orr.w	r7, r7, sl
 801fbc4:	fb0e 330c 	mla	r3, lr, ip, r3
 801fbc8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fbcc:	fb01 3306 	mla	r3, r1, r6, r3
 801fbd0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fbd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fbd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fbda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fbde:	ea47 070a 	orr.w	r7, r7, sl
 801fbe2:	f823 7b02 	strh.w	r7, [r3], #2
 801fbe6:	930b      	str	r3, [sp, #44]	; 0x2c
 801fbe8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fbea:	449b      	add	fp, r3
 801fbec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbee:	441d      	add	r5, r3
 801fbf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbf2:	3b01      	subs	r3, #1
 801fbf4:	9309      	str	r3, [sp, #36]	; 0x24
 801fbf6:	e714      	b.n	801fa22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fbf8:	b149      	cbz	r1, 801fc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fbfa:	5cba      	ldrb	r2, [r7, r2]
 801fbfc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc00:	4422      	add	r2, r4
 801fc02:	4660      	mov	r0, ip
 801fc04:	4666      	mov	r6, ip
 801fc06:	e7a5      	b.n	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fc08:	4660      	mov	r0, ip
 801fc0a:	4662      	mov	r2, ip
 801fc0c:	e7a2      	b.n	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fc0e:	4660      	mov	r0, ip
 801fc10:	4662      	mov	r2, ip
 801fc12:	e7f7      	b.n	801fc04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fc14:	b00f      	add	sp, #60	; 0x3c
 801fc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fc1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc1e:	b085      	sub	sp, #20
 801fc20:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fc24:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fc28:	9102      	str	r1, [sp, #8]
 801fc2a:	2c00      	cmp	r4, #0
 801fc2c:	fb04 710c 	mla	r1, r4, ip, r7
 801fc30:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fc34:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fc38:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fc3c:	eb02 0e01 	add.w	lr, r2, r1
 801fc40:	f2c0 8122 	blt.w	801fe88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fc44:	45a0      	cmp	r8, r4
 801fc46:	f340 811f 	ble.w	801fe88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fc4a:	2f00      	cmp	r7, #0
 801fc4c:	f2c0 811a 	blt.w	801fe84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fc50:	45bc      	cmp	ip, r7
 801fc52:	f340 8117 	ble.w	801fe84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fc56:	5c52      	ldrb	r2, [r2, r1]
 801fc58:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fc5c:	1c7a      	adds	r2, r7, #1
 801fc5e:	f100 8116 	bmi.w	801fe8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fc62:	4594      	cmp	ip, r2
 801fc64:	f340 8113 	ble.w	801fe8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fc68:	2e00      	cmp	r6, #0
 801fc6a:	f000 8112 	beq.w	801fe92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fc6e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fc72:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fc76:	3401      	adds	r4, #1
 801fc78:	f100 810f 	bmi.w	801fe9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fc7c:	45a0      	cmp	r8, r4
 801fc7e:	f340 810c 	ble.w	801fe9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fc82:	2800      	cmp	r0, #0
 801fc84:	f000 810c 	beq.w	801fea0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fc88:	2f00      	cmp	r7, #0
 801fc8a:	f2c0 8104 	blt.w	801fe96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fc8e:	45bc      	cmp	ip, r7
 801fc90:	f340 8101 	ble.w	801fe96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fc94:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fc98:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fc9c:	3701      	adds	r7, #1
 801fc9e:	f100 8102 	bmi.w	801fea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fca2:	45bc      	cmp	ip, r7
 801fca4:	f340 80ff 	ble.w	801fea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fca8:	2e00      	cmp	r6, #0
 801fcaa:	f000 80fe 	beq.w	801feaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fcae:	44f4      	add	ip, lr
 801fcb0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fcb4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fcb8:	b2b6      	uxth	r6, r6
 801fcba:	b280      	uxth	r0, r0
 801fcbc:	fb00 fe06 	mul.w	lr, r0, r6
 801fcc0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fcc4:	0136      	lsls	r6, r6, #4
 801fcc6:	eba6 070e 	sub.w	r7, r6, lr
 801fcca:	b280      	uxth	r0, r0
 801fccc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fcd0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fcd4:	b2bf      	uxth	r7, r7
 801fcd6:	1a1b      	subs	r3, r3, r0
 801fcd8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fcdc:	b29b      	uxth	r3, r3
 801fcde:	fb0a f607 	mul.w	r6, sl, r7
 801fce2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fce6:	fb0b 6603 	mla	r6, fp, r3, r6
 801fcea:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fcee:	fb00 6609 	mla	r6, r0, r9, r6
 801fcf2:	fb0e 6608 	mla	r6, lr, r8, r6
 801fcf6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fcfa:	9600      	str	r6, [sp, #0]
 801fcfc:	2e00      	cmp	r6, #0
 801fcfe:	f000 80be 	beq.w	801fe7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fd02:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fd06:	fb0b fc0c 	mul.w	ip, fp, ip
 801fd0a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fd0e:	fb0b f505 	mul.w	r5, fp, r5
 801fd12:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fd16:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fd1a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fd1e:	44dc      	add	ip, fp
 801fd20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd24:	9501      	str	r5, [sp, #4]
 801fd26:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fd2a:	9503      	str	r5, [sp, #12]
 801fd2c:	9d01      	ldr	r5, [sp, #4]
 801fd2e:	9e02      	ldr	r6, [sp, #8]
 801fd30:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fd34:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fd38:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fd3c:	fb0a fc0c 	mul.w	ip, sl, ip
 801fd40:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fd44:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fd48:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fd4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fd50:	4465      	add	r5, ip
 801fd52:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fd56:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fd5a:	fb09 fc0c 	mul.w	ip, r9, ip
 801fd5e:	fb09 f904 	mul.w	r9, r9, r4
 801fd62:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fd66:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fd6a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fd6e:	fb08 f404 	mul.w	r4, r8, r4
 801fd72:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fd76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fd7a:	fb08 f802 	mul.w	r8, r8, r2
 801fd7e:	fb0a fa01 	mul.w	sl, sl, r1
 801fd82:	0a22      	lsrs	r2, r4, #8
 801fd84:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fd88:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fd8c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fd90:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fd94:	4414      	add	r4, r2
 801fd96:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fd9a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fd9e:	0a2d      	lsrs	r5, r5, #8
 801fda0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fda4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fda8:	9a03      	ldr	r2, [sp, #12]
 801fdaa:	8836      	ldrh	r6, [r6, #0]
 801fdac:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fdb0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fdb4:	437d      	muls	r5, r7
 801fdb6:	4461      	add	r1, ip
 801fdb8:	0a24      	lsrs	r4, r4, #8
 801fdba:	fb02 5503 	mla	r5, r2, r3, r5
 801fdbe:	0a09      	lsrs	r1, r1, #8
 801fdc0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fdc4:	fb04 540e 	mla	r4, r4, lr, r5
 801fdc8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fdcc:	fb01 4100 	mla	r1, r1, r0, r4
 801fdd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdd4:	0a09      	lsrs	r1, r1, #8
 801fdd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdda:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801fdde:	fb07 f70a 	mul.w	r7, r7, sl
 801fde2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fde6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fdea:	fb03 7101 	mla	r1, r3, r1, r7
 801fdee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fdf2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fdf6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fdfa:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801fdfe:	fb00 e101 	mla	r1, r0, r1, lr
 801fe02:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fe06:	9a00      	ldr	r2, [sp, #0]
 801fe08:	b287      	uxth	r7, r0
 801fe0a:	437a      	muls	r2, r7
 801fe0c:	0a09      	lsrs	r1, r1, #8
 801fe0e:	1c53      	adds	r3, r2, #1
 801fe10:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fe14:	4321      	orrs	r1, r4
 801fe16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fe1a:	1235      	asrs	r5, r6, #8
 801fe1c:	0c0a      	lsrs	r2, r1, #16
 801fe1e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fe22:	b2db      	uxtb	r3, r3
 801fe24:	fb12 f207 	smulbb	r2, r2, r7
 801fe28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fe2c:	fb05 2503 	mla	r5, r5, r3, r2
 801fe30:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fe34:	10f2      	asrs	r2, r6, #3
 801fe36:	b2c8      	uxtb	r0, r1
 801fe38:	00f6      	lsls	r6, r6, #3
 801fe3a:	fb14 f407 	smulbb	r4, r4, r7
 801fe3e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe42:	b2f6      	uxtb	r6, r6
 801fe44:	fb10 f007 	smulbb	r0, r0, r7
 801fe48:	fb02 4203 	mla	r2, r2, r3, r4
 801fe4c:	b2ad      	uxth	r5, r5
 801fe4e:	fb06 0303 	mla	r3, r6, r3, r0
 801fe52:	b299      	uxth	r1, r3
 801fe54:	b294      	uxth	r4, r2
 801fe56:	1c6b      	adds	r3, r5, #1
 801fe58:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fe5c:	1c62      	adds	r2, r4, #1
 801fe5e:	1c4b      	adds	r3, r1, #1
 801fe60:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fe64:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fe68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fe6c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe70:	0952      	lsrs	r2, r2, #5
 801fe72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe76:	432b      	orrs	r3, r5
 801fe78:	4313      	orrs	r3, r2
 801fe7a:	9a02      	ldr	r2, [sp, #8]
 801fe7c:	8013      	strh	r3, [r2, #0]
 801fe7e:	b005      	add	sp, #20
 801fe80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe84:	2500      	movs	r5, #0
 801fe86:	e6e9      	b.n	801fc5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fe88:	2100      	movs	r1, #0
 801fe8a:	460d      	mov	r5, r1
 801fe8c:	e6f3      	b.n	801fc76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe8e:	2100      	movs	r1, #0
 801fe90:	e6f1      	b.n	801fc76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe92:	4631      	mov	r1, r6
 801fe94:	e6ef      	b.n	801fc76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe96:	2400      	movs	r4, #0
 801fe98:	e700      	b.n	801fc9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fe9a:	2200      	movs	r2, #0
 801fe9c:	4614      	mov	r4, r2
 801fe9e:	e70b      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fea0:	4602      	mov	r2, r0
 801fea2:	4604      	mov	r4, r0
 801fea4:	e708      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fea6:	2200      	movs	r2, #0
 801fea8:	e706      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801feaa:	4632      	mov	r2, r6
 801feac:	e704      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801feae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801feae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801feb2:	b09f      	sub	sp, #124	; 0x7c
 801feb4:	921b      	str	r2, [sp, #108]	; 0x6c
 801feb6:	9309      	str	r3, [sp, #36]	; 0x24
 801feb8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801feba:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801febe:	931c      	str	r3, [sp, #112]	; 0x70
 801fec0:	9119      	str	r1, [sp, #100]	; 0x64
 801fec2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801fec6:	901d      	str	r0, [sp, #116]	; 0x74
 801fec8:	6850      	ldr	r0, [r2, #4]
 801feca:	6812      	ldr	r2, [r2, #0]
 801fecc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801fece:	fb00 1303 	mla	r3, r0, r3, r1
 801fed2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fed6:	930c      	str	r3, [sp, #48]	; 0x30
 801fed8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801feda:	681b      	ldr	r3, [r3, #0]
 801fedc:	9312      	str	r3, [sp, #72]	; 0x48
 801fede:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fee0:	685e      	ldr	r6, [r3, #4]
 801fee2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801fee6:	930d      	str	r3, [sp, #52]	; 0x34
 801fee8:	3604      	adds	r6, #4
 801feea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801feec:	2b00      	cmp	r3, #0
 801feee:	dc03      	bgt.n	801fef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fef0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fef2:	2b00      	cmp	r3, #0
 801fef4:	f340 8388 	ble.w	8020608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fef8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fefa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fefe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff02:	1e48      	subs	r0, r1, #1
 801ff04:	1e57      	subs	r7, r2, #1
 801ff06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff08:	2b00      	cmp	r3, #0
 801ff0a:	f340 8195 	ble.w	8020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ff0e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ff10:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ff14:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ff18:	d406      	bmi.n	801ff28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ff1a:	4584      	cmp	ip, r0
 801ff1c:	da04      	bge.n	801ff28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ff1e:	2b00      	cmp	r3, #0
 801ff20:	db02      	blt.n	801ff28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ff22:	42bb      	cmp	r3, r7
 801ff24:	f2c0 8189 	blt.w	802023a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ff28:	f11c 0c01 	adds.w	ip, ip, #1
 801ff2c:	f100 8177 	bmi.w	802021e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff30:	4561      	cmp	r1, ip
 801ff32:	f2c0 8174 	blt.w	802021e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff36:	3301      	adds	r3, #1
 801ff38:	f100 8171 	bmi.w	802021e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff3c:	429a      	cmp	r2, r3
 801ff3e:	f2c0 816e 	blt.w	802021e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff44:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ff46:	931a      	str	r3, [sp, #104]	; 0x68
 801ff48:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ff4a:	2b00      	cmp	r3, #0
 801ff4c:	f340 8193 	ble.w	8020276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ff50:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ff52:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ff56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ff58:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ff5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ff5e:	141b      	asrs	r3, r3, #16
 801ff60:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ff64:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ff68:	f100 81d6 	bmi.w	8020318 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff6c:	f100 38ff 	add.w	r8, r0, #4294967295
 801ff70:	4543      	cmp	r3, r8
 801ff72:	f280 81d1 	bge.w	8020318 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff76:	f1bc 0f00 	cmp.w	ip, #0
 801ff7a:	f2c0 81cd 	blt.w	8020318 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff7e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ff82:	45c4      	cmp	ip, r8
 801ff84:	f280 81c8 	bge.w	8020318 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff88:	b200      	sxth	r0, r0
 801ff8a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ff8e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ff90:	eb04 0803 	add.w	r8, r4, r3
 801ff94:	5ce3      	ldrb	r3, [r4, r3]
 801ff96:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ff9a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ff9e:	2a00      	cmp	r2, #0
 801ffa0:	f000 81af 	beq.w	8020302 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ffa4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ffa8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ffac:	940e      	str	r4, [sp, #56]	; 0x38
 801ffae:	0e24      	lsrs	r4, r4, #24
 801ffb0:	9415      	str	r4, [sp, #84]	; 0x54
 801ffb2:	b179      	cbz	r1, 801ffd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ffb4:	eb08 0c00 	add.w	ip, r8, r0
 801ffb8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ffbc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ffc0:	900a      	str	r0, [sp, #40]	; 0x28
 801ffc2:	0e00      	lsrs	r0, r0, #24
 801ffc4:	9013      	str	r0, [sp, #76]	; 0x4c
 801ffc6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ffca:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ffce:	900f      	str	r0, [sp, #60]	; 0x3c
 801ffd0:	0e00      	lsrs	r0, r0, #24
 801ffd2:	9016      	str	r0, [sp, #88]	; 0x58
 801ffd4:	b292      	uxth	r2, r2
 801ffd6:	b289      	uxth	r1, r1
 801ffd8:	fb02 f901 	mul.w	r9, r2, r1
 801ffdc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ffe0:	0112      	lsls	r2, r2, #4
 801ffe2:	eba2 0809 	sub.w	r8, r2, r9
 801ffe6:	b289      	uxth	r1, r1
 801ffe8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ffec:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ffee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fff0:	fa1f f888 	uxth.w	r8, r8
 801fff4:	1a52      	subs	r2, r2, r1
 801fff6:	b292      	uxth	r2, r2
 801fff8:	fb08 f000 	mul.w	r0, r8, r0
 801fffc:	fb02 000e 	mla	r0, r2, lr, r0
 8020000:	fb01 0004 	mla	r0, r1, r4, r0
 8020004:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020006:	fb09 0004 	mla	r0, r9, r4, r0
 802000a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802000e:	2800      	cmp	r0, #0
 8020010:	f000 80fa 	beq.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020014:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020018:	d01b      	beq.n	8020052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802001a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802001e:	fb0e fa0a 	mul.w	sl, lr, sl
 8020022:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020026:	fb0e fe03 	mul.w	lr, lr, r3
 802002a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802002e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020032:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020036:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802003a:	4453      	add	r3, sl
 802003c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020040:	0a1b      	lsrs	r3, r3, #8
 8020042:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020046:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802004a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802004e:	ea43 030c 	orr.w	r3, r3, ip
 8020052:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020054:	2cff      	cmp	r4, #255	; 0xff
 8020056:	d021      	beq.n	802009c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020058:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802005a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802005e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020060:	fb04 fb0b 	mul.w	fp, r4, fp
 8020064:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020066:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802006a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802006c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020070:	fb04 fa0a 	mul.w	sl, r4, sl
 8020074:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020078:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802007c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020080:	44de      	add	lr, fp
 8020082:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020086:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802008a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802008e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020092:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020096:	ea4e 040a 	orr.w	r4, lr, sl
 802009a:	940e      	str	r4, [sp, #56]	; 0x38
 802009c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802009e:	2cff      	cmp	r4, #255	; 0xff
 80200a0:	d021      	beq.n	80200e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80200a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80200a4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80200a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80200aa:	fb04 fb0b 	mul.w	fp, r4, fp
 80200ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80200b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80200b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80200b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80200ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80200be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80200c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80200c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80200ca:	44de      	add	lr, fp
 80200cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80200d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80200d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80200dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80200e0:	ea4e 040a 	orr.w	r4, lr, sl
 80200e4:	940a      	str	r4, [sp, #40]	; 0x28
 80200e6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80200e8:	2cff      	cmp	r4, #255	; 0xff
 80200ea:	d021      	beq.n	8020130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80200ec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80200ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80200f2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80200f4:	fb04 fb0b 	mul.w	fp, r4, fp
 80200f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80200fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80200fe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020100:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020104:	fb04 fa0a 	mul.w	sl, r4, sl
 8020108:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802010c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020110:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020114:	44de      	add	lr, fp
 8020116:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802011a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802011e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020122:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020126:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802012a:	ea4e 040a 	orr.w	r4, lr, sl
 802012e:	940f      	str	r4, [sp, #60]	; 0x3c
 8020130:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020132:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020136:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020138:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802013c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020140:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020144:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020148:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802014a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802014e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020152:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020154:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020158:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802015c:	fb08 f80e 	mul.w	r8, r8, lr
 8020160:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020164:	fb02 8303 	mla	r3, r2, r3, r8
 8020168:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802016a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802016c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020170:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020172:	fb01 330a 	mla	r3, r1, sl, r3
 8020176:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802017a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802017c:	fb09 3901 	mla	r9, r9, r1, r3
 8020180:	4342      	muls	r2, r0
 8020182:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020186:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802018a:	883b      	ldrh	r3, [r7, #0]
 802018c:	1c50      	adds	r0, r2, #1
 802018e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020192:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020196:	ea4c 0c09 	orr.w	ip, ip, r9
 802019a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802019e:	1219      	asrs	r1, r3, #8
 80201a0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80201a4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80201a8:	b2c0      	uxtb	r0, r0
 80201aa:	fb12 f204 	smulbb	r2, r2, r4
 80201ae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80201b2:	fb01 2100 	mla	r1, r1, r0, r2
 80201b6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80201ba:	10da      	asrs	r2, r3, #3
 80201bc:	fa5f fc8c 	uxtb.w	ip, ip
 80201c0:	00db      	lsls	r3, r3, #3
 80201c2:	fb1c fc04 	smulbb	ip, ip, r4
 80201c6:	b2db      	uxtb	r3, r3
 80201c8:	b289      	uxth	r1, r1
 80201ca:	fb03 c300 	mla	r3, r3, r0, ip
 80201ce:	fa1f fc83 	uxth.w	ip, r3
 80201d2:	1c4b      	adds	r3, r1, #1
 80201d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80201d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80201dc:	fb1e fe04 	smulbb	lr, lr, r4
 80201e0:	f10c 0301 	add.w	r3, ip, #1
 80201e4:	fb02 e200 	mla	r2, r2, r0, lr
 80201e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80201ec:	b292      	uxth	r2, r2
 80201ee:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80201f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80201f6:	430b      	orrs	r3, r1
 80201f8:	1c51      	adds	r1, r2, #1
 80201fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80201fe:	0952      	lsrs	r2, r2, #5
 8020200:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020204:	4313      	orrs	r3, r2
 8020206:	803b      	strh	r3, [r7, #0]
 8020208:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802020a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802020c:	441a      	add	r2, r3
 802020e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020210:	9229      	str	r2, [sp, #164]	; 0xa4
 8020212:	441d      	add	r5, r3
 8020214:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020216:	3b01      	subs	r3, #1
 8020218:	3702      	adds	r7, #2
 802021a:	931a      	str	r3, [sp, #104]	; 0x68
 802021c:	e694      	b.n	801ff48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802021e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020220:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020222:	441c      	add	r4, r3
 8020224:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020226:	9429      	str	r4, [sp, #164]	; 0xa4
 8020228:	441d      	add	r5, r3
 802022a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802022c:	3b01      	subs	r3, #1
 802022e:	9309      	str	r3, [sp, #36]	; 0x24
 8020230:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020232:	3302      	adds	r3, #2
 8020234:	930c      	str	r3, [sp, #48]	; 0x30
 8020236:	e666      	b.n	801ff06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020238:	d024      	beq.n	8020284 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802023a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802023c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802023e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020240:	3b01      	subs	r3, #1
 8020242:	fb00 4003 	mla	r0, r0, r3, r4
 8020246:	1400      	asrs	r0, r0, #16
 8020248:	f53f ae7b 	bmi.w	801ff42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802024c:	3901      	subs	r1, #1
 802024e:	4288      	cmp	r0, r1
 8020250:	f6bf ae77 	bge.w	801ff42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020254:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020256:	fb01 5303 	mla	r3, r1, r3, r5
 802025a:	141b      	asrs	r3, r3, #16
 802025c:	f53f ae71 	bmi.w	801ff42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020260:	3a01      	subs	r2, #1
 8020262:	4293      	cmp	r3, r2
 8020264:	f6bf ae6d 	bge.w	801ff42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020268:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802026c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020270:	f1bb 0f00 	cmp.w	fp, #0
 8020274:	dc70      	bgt.n	8020358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020276:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020278:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802027c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802027e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020282:	930c      	str	r3, [sp, #48]	; 0x30
 8020284:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020286:	2b00      	cmp	r3, #0
 8020288:	f340 81be 	ble.w	8020608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802028c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020290:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020294:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020298:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802029a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802029e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202a6:	eef0 6a62 	vmov.f32	s13, s5
 80202aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202b6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80202ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202be:	eef0 6a43 	vmov.f32	s13, s6
 80202c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202c6:	ee12 2a90 	vmov	r2, s5
 80202ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80202d2:	ee13 2a10 	vmov	r2, s6
 80202d6:	932b      	str	r3, [sp, #172]	; 0xac
 80202d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202da:	fb92 f3f3 	sdiv	r3, r2, r3
 80202de:	932c      	str	r3, [sp, #176]	; 0xb0
 80202e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80202e2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80202e4:	3b01      	subs	r3, #1
 80202e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202ea:	9319      	str	r3, [sp, #100]	; 0x64
 80202ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80202ee:	bf08      	it	eq
 80202f0:	4613      	moveq	r3, r2
 80202f2:	ee16 5a90 	vmov	r5, s13
 80202f6:	9309      	str	r3, [sp, #36]	; 0x24
 80202f8:	eeb0 3a67 	vmov.f32	s6, s15
 80202fc:	eef0 2a47 	vmov.f32	s5, s14
 8020300:	e5f3      	b.n	801feea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020302:	2900      	cmp	r1, #0
 8020304:	f43f ae66 	beq.w	801ffd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020308:	f818 0000 	ldrb.w	r0, [r8, r0]
 802030c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020310:	900a      	str	r0, [sp, #40]	; 0x28
 8020312:	0e00      	lsrs	r0, r0, #24
 8020314:	9013      	str	r0, [sp, #76]	; 0x4c
 8020316:	e65d      	b.n	801ffd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020318:	f113 0801 	adds.w	r8, r3, #1
 802031c:	f53f af74 	bmi.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020320:	4540      	cmp	r0, r8
 8020322:	f6ff af71 	blt.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020326:	f11c 0801 	adds.w	r8, ip, #1
 802032a:	f53f af6d 	bmi.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802032e:	45c6      	cmp	lr, r8
 8020330:	f6ff af6a 	blt.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020334:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020336:	9302      	str	r3, [sp, #8]
 8020338:	b200      	sxth	r0, r0
 802033a:	fa0f f38e 	sxth.w	r3, lr
 802033e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020342:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020346:	9301      	str	r3, [sp, #4]
 8020348:	9000      	str	r0, [sp, #0]
 802034a:	4633      	mov	r3, r6
 802034c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802034e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020350:	4639      	mov	r1, r7
 8020352:	f7ff fc62 	bl	801fc1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020356:	e757      	b.n	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020358:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802035a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802035c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020360:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020362:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020366:	1427      	asrs	r7, r4, #16
 8020368:	142b      	asrs	r3, r5, #16
 802036a:	fb01 7303 	mla	r3, r1, r3, r7
 802036e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020370:	18e7      	adds	r7, r4, r3
 8020372:	5ce3      	ldrb	r3, [r4, r3]
 8020374:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020378:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802037c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020380:	2a00      	cmp	r2, #0
 8020382:	f000 8137 	beq.w	80205f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020386:	f897 e001 	ldrb.w	lr, [r7, #1]
 802038a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802038e:	9410      	str	r4, [sp, #64]	; 0x40
 8020390:	0e24      	lsrs	r4, r4, #24
 8020392:	9417      	str	r4, [sp, #92]	; 0x5c
 8020394:	b170      	cbz	r0, 80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020396:	eb07 0e01 	add.w	lr, r7, r1
 802039a:	5c79      	ldrb	r1, [r7, r1]
 802039c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80203a0:	910b      	str	r1, [sp, #44]	; 0x2c
 80203a2:	0e09      	lsrs	r1, r1, #24
 80203a4:	9114      	str	r1, [sp, #80]	; 0x50
 80203a6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80203aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80203ae:	9111      	str	r1, [sp, #68]	; 0x44
 80203b0:	0e09      	lsrs	r1, r1, #24
 80203b2:	9118      	str	r1, [sp, #96]	; 0x60
 80203b4:	b292      	uxth	r2, r2
 80203b6:	b280      	uxth	r0, r0
 80203b8:	fb02 f800 	mul.w	r8, r2, r0
 80203bc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80203c0:	0112      	lsls	r2, r2, #4
 80203c2:	eba2 0e08 	sub.w	lr, r2, r8
 80203c6:	b280      	uxth	r0, r0
 80203c8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80203cc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80203ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80203d0:	fa1f fe8e 	uxth.w	lr, lr
 80203d4:	1a12      	subs	r2, r2, r0
 80203d6:	b292      	uxth	r2, r2
 80203d8:	fb0e f101 	mul.w	r1, lr, r1
 80203dc:	fb02 110c 	mla	r1, r2, ip, r1
 80203e0:	fb00 1104 	mla	r1, r0, r4, r1
 80203e4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80203e6:	fb08 1104 	mla	r1, r8, r4, r1
 80203ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80203ee:	2900      	cmp	r1, #0
 80203f0:	f000 80f5 	beq.w	80205de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80203f4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80203f8:	d019      	beq.n	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80203fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80203fe:	fb0c fa0a 	mul.w	sl, ip, sl
 8020402:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020406:	fb0c fc03 	mul.w	ip, ip, r3
 802040a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802040e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020412:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020416:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802041a:	4453      	add	r3, sl
 802041c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020420:	0a1b      	lsrs	r3, r3, #8
 8020422:	0a3f      	lsrs	r7, r7, #8
 8020424:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020428:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802042c:	433b      	orrs	r3, r7
 802042e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020430:	2cff      	cmp	r4, #255	; 0xff
 8020432:	d020      	beq.n	8020476 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020434:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020436:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802043a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802043c:	4367      	muls	r7, r4
 802043e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020440:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020444:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020446:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802044a:	fb04 fa0a 	mul.w	sl, r4, sl
 802044e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020452:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020456:	44bc      	add	ip, r7
 8020458:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802045c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020460:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020464:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020468:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802046c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020470:	ea4c 040a 	orr.w	r4, ip, sl
 8020474:	9410      	str	r4, [sp, #64]	; 0x40
 8020476:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020478:	2cff      	cmp	r4, #255	; 0xff
 802047a:	d020      	beq.n	80204be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802047c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802047e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020482:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020484:	4367      	muls	r7, r4
 8020486:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020488:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802048c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802048e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020492:	fb04 fa0a 	mul.w	sl, r4, sl
 8020496:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802049a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802049e:	44bc      	add	ip, r7
 80204a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80204b8:	ea4c 040a 	orr.w	r4, ip, sl
 80204bc:	940b      	str	r4, [sp, #44]	; 0x2c
 80204be:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80204c0:	2cff      	cmp	r4, #255	; 0xff
 80204c2:	d020      	beq.n	8020506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80204c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80204c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80204ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80204cc:	4367      	muls	r7, r4
 80204ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80204d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80204d4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80204d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80204da:	fb04 fa0a 	mul.w	sl, r4, sl
 80204de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80204e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204e6:	44bc      	add	ip, r7
 80204e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020500:	ea4c 040a 	orr.w	r4, ip, sl
 8020504:	9411      	str	r4, [sp, #68]	; 0x44
 8020506:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020508:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802050c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802050e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020512:	fb0e f707 	mul.w	r7, lr, r7
 8020516:	fb02 770c 	mla	r7, r2, ip, r7
 802051a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802051e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020520:	fb00 770c 	mla	r7, r0, ip, r7
 8020524:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020528:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802052a:	fb08 770c 	mla	r7, r8, ip, r7
 802052e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020532:	fb0e fe0c 	mul.w	lr, lr, ip
 8020536:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802053a:	fb02 e303 	mla	r3, r2, r3, lr
 802053e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020540:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020542:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020546:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020548:	fb00 330a 	mla	r3, r0, sl, r3
 802054c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020550:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020554:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020556:	f8b9 0000 	ldrh.w	r0, [r9]
 802055a:	434b      	muls	r3, r1
 802055c:	0a3f      	lsrs	r7, r7, #8
 802055e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020562:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020566:	1c59      	adds	r1, r3, #1
 8020568:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802056c:	ea47 070c 	orr.w	r7, r7, ip
 8020570:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020574:	1202      	asrs	r2, r0, #8
 8020576:	0c3b      	lsrs	r3, r7, #16
 8020578:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802057c:	b2c9      	uxtb	r1, r1
 802057e:	fb13 f304 	smulbb	r3, r3, r4
 8020582:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020586:	fb02 3201 	mla	r2, r2, r1, r3
 802058a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802058e:	10c3      	asrs	r3, r0, #3
 8020590:	b2ff      	uxtb	r7, r7
 8020592:	00c0      	lsls	r0, r0, #3
 8020594:	b292      	uxth	r2, r2
 8020596:	fb1c fc04 	smulbb	ip, ip, r4
 802059a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802059e:	b2c0      	uxtb	r0, r0
 80205a0:	fb17 f704 	smulbb	r7, r7, r4
 80205a4:	fb03 c301 	mla	r3, r3, r1, ip
 80205a8:	fb00 7001 	mla	r0, r0, r1, r7
 80205ac:	f102 0c01 	add.w	ip, r2, #1
 80205b0:	b280      	uxth	r0, r0
 80205b2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80205b6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80205ba:	1c42      	adds	r2, r0, #1
 80205bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80205c0:	b29b      	uxth	r3, r3
 80205c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80205c6:	ea42 020c 	orr.w	r2, r2, ip
 80205ca:	f103 0c01 	add.w	ip, r3, #1
 80205ce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80205d2:	095b      	lsrs	r3, r3, #5
 80205d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80205d8:	431a      	orrs	r2, r3
 80205da:	f8a9 2000 	strh.w	r2, [r9]
 80205de:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80205e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80205e2:	441a      	add	r2, r3
 80205e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80205e6:	9229      	str	r2, [sp, #164]	; 0xa4
 80205e8:	f109 0902 	add.w	r9, r9, #2
 80205ec:	441d      	add	r5, r3
 80205ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 80205f2:	e63d      	b.n	8020270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80205f4:	2800      	cmp	r0, #0
 80205f6:	f43f aedd 	beq.w	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80205fa:	5c79      	ldrb	r1, [r7, r1]
 80205fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020600:	910b      	str	r1, [sp, #44]	; 0x2c
 8020602:	0e09      	lsrs	r1, r1, #24
 8020604:	9114      	str	r1, [sp, #80]	; 0x50
 8020606:	e6d5      	b.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020608:	b01f      	add	sp, #124	; 0x7c
 802060a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802060e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802060e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020612:	b089      	sub	sp, #36	; 0x24
 8020614:	9101      	str	r1, [sp, #4]
 8020616:	9801      	ldr	r0, [sp, #4]
 8020618:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802061c:	8800      	ldrh	r0, [r0, #0]
 802061e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020622:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020626:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802062a:	1206      	asrs	r6, r0, #8
 802062c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020630:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020634:	9602      	str	r6, [sp, #8]
 8020636:	10c6      	asrs	r6, r0, #3
 8020638:	00c0      	lsls	r0, r0, #3
 802063a:	b2c0      	uxtb	r0, r0
 802063c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020640:	9004      	str	r0, [sp, #16]
 8020642:	2f00      	cmp	r7, #0
 8020644:	fb07 100c 	mla	r0, r7, ip, r1
 8020648:	9603      	str	r6, [sp, #12]
 802064a:	eb02 0e00 	add.w	lr, r2, r0
 802064e:	f2c0 810a 	blt.w	8020866 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020652:	45b8      	cmp	r8, r7
 8020654:	f340 8107 	ble.w	8020866 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020658:	2900      	cmp	r1, #0
 802065a:	f2c0 8102 	blt.w	8020862 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802065e:	458c      	cmp	ip, r1
 8020660:	f340 80ff 	ble.w	8020862 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020664:	5c12      	ldrb	r2, [r2, r0]
 8020666:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802066a:	1c4a      	adds	r2, r1, #1
 802066c:	f100 80fe 	bmi.w	802086c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020670:	4594      	cmp	ip, r2
 8020672:	f340 80fb 	ble.w	802086c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020676:	2d00      	cmp	r5, #0
 8020678:	f000 80fa 	beq.w	8020870 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802067c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020680:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020684:	3701      	adds	r7, #1
 8020686:	f100 80f7 	bmi.w	8020878 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802068a:	45b8      	cmp	r8, r7
 802068c:	f340 80f4 	ble.w	8020878 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020690:	2c00      	cmp	r4, #0
 8020692:	f000 80f4 	beq.w	802087e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020696:	2900      	cmp	r1, #0
 8020698:	eb0e 020c 	add.w	r2, lr, ip
 802069c:	f2c0 80ea 	blt.w	8020874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80206a0:	458c      	cmp	ip, r1
 80206a2:	f340 80e7 	ble.w	8020874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80206a6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80206aa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80206ae:	3101      	adds	r1, #1
 80206b0:	f100 80e8 	bmi.w	8020884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80206b4:	458c      	cmp	ip, r1
 80206b6:	f340 80e5 	ble.w	8020884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80206ba:	2d00      	cmp	r5, #0
 80206bc:	f000 80e4 	beq.w	8020888 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80206c0:	7852      	ldrb	r2, [r2, #1]
 80206c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80206c6:	0e0b      	lsrs	r3, r1, #24
 80206c8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80206cc:	9300      	str	r3, [sp, #0]
 80206ce:	b2a4      	uxth	r4, r4
 80206d0:	b2ab      	uxth	r3, r5
 80206d2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80206d6:	fb03 f904 	mul.w	r9, r3, r4
 80206da:	fb0a f505 	mul.w	r5, sl, r5
 80206de:	011b      	lsls	r3, r3, #4
 80206e0:	eba3 0e09 	sub.w	lr, r3, r9
 80206e4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80206e8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80206ec:	0a28      	lsrs	r0, r5, #8
 80206ee:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80206f2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80206f6:	4405      	add	r5, r0
 80206f8:	0a2d      	lsrs	r5, r5, #8
 80206fa:	fb0a f303 	mul.w	r3, sl, r3
 80206fe:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020702:	9005      	str	r0, [sp, #20]
 8020704:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020708:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802070c:	0a1b      	lsrs	r3, r3, #8
 802070e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020712:	9306      	str	r3, [sp, #24]
 8020714:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020718:	fb0b f303 	mul.w	r3, fp, r3
 802071c:	0a1d      	lsrs	r5, r3, #8
 802071e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020722:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020726:	fb0b f606 	mul.w	r6, fp, r6
 802072a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802072e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020732:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020736:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802073a:	fb08 f707 	mul.w	r7, r8, r7
 802073e:	441d      	add	r5, r3
 8020740:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020744:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020748:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802074c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020750:	fb08 fc0c 	mul.w	ip, r8, ip
 8020754:	0a1b      	lsrs	r3, r3, #8
 8020756:	9307      	str	r3, [sp, #28]
 8020758:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802075c:	0e0b      	lsrs	r3, r1, #24
 802075e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020762:	435f      	muls	r7, r3
 8020764:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020768:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802076c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020770:	4460      	add	r0, ip
 8020772:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020776:	b2a4      	uxth	r4, r4
 8020778:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802077c:	0a2d      	lsrs	r5, r5, #8
 802077e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020782:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020786:	fa1f fe8e 	uxth.w	lr, lr
 802078a:	4359      	muls	r1, r3
 802078c:	1b12      	subs	r2, r2, r4
 802078e:	9b05      	ldr	r3, [sp, #20]
 8020790:	44bc      	add	ip, r7
 8020792:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020796:	b292      	uxth	r2, r2
 8020798:	fb05 f50e 	mul.w	r5, r5, lr
 802079c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207a0:	fb03 5502 	mla	r5, r3, r2, r5
 80207a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207a8:	9b06      	ldr	r3, [sp, #24]
 80207aa:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80207ae:	0a36      	lsrs	r6, r6, #8
 80207b0:	0a00      	lsrs	r0, r0, #8
 80207b2:	fb0c 5509 	mla	r5, ip, r9, r5
 80207b6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80207ba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80207be:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80207c2:	fb00 5504 	mla	r5, r0, r4, r5
 80207c6:	fb0e f606 	mul.w	r6, lr, r6
 80207ca:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80207ce:	0a09      	lsrs	r1, r1, #8
 80207d0:	9b07      	ldr	r3, [sp, #28]
 80207d2:	fb02 6000 	mla	r0, r2, r0, r6
 80207d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80207da:	fb09 0001 	mla	r0, r9, r1, r0
 80207de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80207e2:	fb0e fe0b 	mul.w	lr, lr, fp
 80207e6:	fb04 0003 	mla	r0, r4, r3, r0
 80207ea:	fb02 e20a 	mla	r2, r2, sl, lr
 80207ee:	9b00      	ldr	r3, [sp, #0]
 80207f0:	fb04 2408 	mla	r4, r4, r8, r2
 80207f4:	fb09 4903 	mla	r9, r9, r3, r4
 80207f8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80207fc:	9b02      	ldr	r3, [sp, #8]
 80207fe:	9a04      	ldr	r2, [sp, #16]
 8020800:	fa5f f989 	uxtb.w	r9, r9
 8020804:	fb03 f109 	mul.w	r1, r3, r9
 8020808:	9b03      	ldr	r3, [sp, #12]
 802080a:	0a2d      	lsrs	r5, r5, #8
 802080c:	0a00      	lsrs	r0, r0, #8
 802080e:	fb03 f309 	mul.w	r3, r3, r9
 8020812:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020816:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802081a:	4305      	orrs	r5, r0
 802081c:	fb02 f909 	mul.w	r9, r2, r9
 8020820:	1c58      	adds	r0, r3, #1
 8020822:	1c4a      	adds	r2, r1, #1
 8020824:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020828:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802082c:	0a2b      	lsrs	r3, r5, #8
 802082e:	0c2a      	lsrs	r2, r5, #16
 8020830:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020834:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020838:	00db      	lsls	r3, r3, #3
 802083a:	0212      	lsls	r2, r2, #8
 802083c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020840:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020844:	4313      	orrs	r3, r2
 8020846:	f109 0201 	add.w	r2, r9, #1
 802084a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802084e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020852:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020856:	431d      	orrs	r5, r3
 8020858:	9b01      	ldr	r3, [sp, #4]
 802085a:	801d      	strh	r5, [r3, #0]
 802085c:	b009      	add	sp, #36	; 0x24
 802085e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020862:	2000      	movs	r0, #0
 8020864:	e701      	b.n	802066a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020866:	2600      	movs	r6, #0
 8020868:	4630      	mov	r0, r6
 802086a:	e70b      	b.n	8020684 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802086c:	2600      	movs	r6, #0
 802086e:	e709      	b.n	8020684 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020870:	462e      	mov	r6, r5
 8020872:	e707      	b.n	8020684 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020874:	2700      	movs	r7, #0
 8020876:	e71a      	b.n	80206ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020878:	2100      	movs	r1, #0
 802087a:	460f      	mov	r7, r1
 802087c:	e723      	b.n	80206c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802087e:	4621      	mov	r1, r4
 8020880:	4627      	mov	r7, r4
 8020882:	e720      	b.n	80206c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020884:	2100      	movs	r1, #0
 8020886:	e71e      	b.n	80206c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020888:	4629      	mov	r1, r5
 802088a:	e71c      	b.n	80206c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802088c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802088c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020890:	b09b      	sub	sp, #108	; 0x6c
 8020892:	9218      	str	r2, [sp, #96]	; 0x60
 8020894:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020896:	9116      	str	r1, [sp, #88]	; 0x58
 8020898:	9307      	str	r3, [sp, #28]
 802089a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802089e:	9019      	str	r0, [sp, #100]	; 0x64
 80208a0:	6850      	ldr	r0, [r2, #4]
 80208a2:	6812      	ldr	r2, [r2, #0]
 80208a4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80208a6:	fb00 1303 	mla	r3, r0, r3, r1
 80208aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80208ae:	930a      	str	r3, [sp, #40]	; 0x28
 80208b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80208b2:	681b      	ldr	r3, [r3, #0]
 80208b4:	930f      	str	r3, [sp, #60]	; 0x3c
 80208b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80208b8:	685e      	ldr	r6, [r3, #4]
 80208ba:	3604      	adds	r6, #4
 80208bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80208be:	2b00      	cmp	r3, #0
 80208c0:	dc03      	bgt.n	80208ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80208c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80208c4:	2b00      	cmp	r3, #0
 80208c6:	f340 8373 	ble.w	8020fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80208ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80208cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80208d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80208d4:	1e48      	subs	r0, r1, #1
 80208d6:	1e57      	subs	r7, r2, #1
 80208d8:	9b07      	ldr	r3, [sp, #28]
 80208da:	2b00      	cmp	r3, #0
 80208dc:	f340 8190 	ble.w	8020c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80208e0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80208e2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80208e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80208ea:	d406      	bmi.n	80208fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80208ec:	4584      	cmp	ip, r0
 80208ee:	da04      	bge.n	80208fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80208f0:	2b00      	cmp	r3, #0
 80208f2:	db02      	blt.n	80208fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80208f4:	42bb      	cmp	r3, r7
 80208f6:	f2c0 8184 	blt.w	8020c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80208fa:	f11c 0c01 	adds.w	ip, ip, #1
 80208fe:	f100 8172 	bmi.w	8020be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020902:	4561      	cmp	r1, ip
 8020904:	f2c0 816f 	blt.w	8020be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020908:	3301      	adds	r3, #1
 802090a:	f100 816c 	bmi.w	8020be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802090e:	429a      	cmp	r2, r3
 8020910:	f2c0 8169 	blt.w	8020be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020914:	9b07      	ldr	r3, [sp, #28]
 8020916:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020918:	9317      	str	r3, [sp, #92]	; 0x5c
 802091a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802091c:	2b00      	cmp	r3, #0
 802091e:	f340 818e 	ble.w	8020c3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020922:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020924:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020928:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802092a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802092e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020930:	141b      	asrs	r3, r3, #16
 8020932:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020936:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802093a:	f100 81d1 	bmi.w	8020ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802093e:	f101 38ff 	add.w	r8, r1, #4294967295
 8020942:	4543      	cmp	r3, r8
 8020944:	f280 81cc 	bge.w	8020ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020948:	f1bc 0f00 	cmp.w	ip, #0
 802094c:	f2c0 81c8 	blt.w	8020ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020950:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020954:	45c4      	cmp	ip, r8
 8020956:	f280 81c3 	bge.w	8020ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802095a:	b209      	sxth	r1, r1
 802095c:	fb0c 3301 	mla	r3, ip, r1, r3
 8020960:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020962:	eb04 0803 	add.w	r8, r4, r3
 8020966:	5ce3      	ldrb	r3, [r4, r3]
 8020968:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802096c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020970:	2a00      	cmp	r2, #0
 8020972:	f000 81aa 	beq.w	8020cca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020976:	f898 c001 	ldrb.w	ip, [r8, #1]
 802097a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802097e:	940b      	str	r4, [sp, #44]	; 0x2c
 8020980:	0e24      	lsrs	r4, r4, #24
 8020982:	9412      	str	r4, [sp, #72]	; 0x48
 8020984:	b178      	cbz	r0, 80209a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020986:	eb08 0c01 	add.w	ip, r8, r1
 802098a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802098e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020992:	9108      	str	r1, [sp, #32]
 8020994:	0e09      	lsrs	r1, r1, #24
 8020996:	9110      	str	r1, [sp, #64]	; 0x40
 8020998:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802099c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80209a0:	910c      	str	r1, [sp, #48]	; 0x30
 80209a2:	0e09      	lsrs	r1, r1, #24
 80209a4:	9113      	str	r1, [sp, #76]	; 0x4c
 80209a6:	b292      	uxth	r2, r2
 80209a8:	b280      	uxth	r0, r0
 80209aa:	fb02 f900 	mul.w	r9, r2, r0
 80209ae:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80209b2:	0112      	lsls	r2, r2, #4
 80209b4:	eba2 0809 	sub.w	r8, r2, r9
 80209b8:	b280      	uxth	r0, r0
 80209ba:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80209be:	9912      	ldr	r1, [sp, #72]	; 0x48
 80209c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80209c2:	fa1f f888 	uxth.w	r8, r8
 80209c6:	1a12      	subs	r2, r2, r0
 80209c8:	b292      	uxth	r2, r2
 80209ca:	fb08 f101 	mul.w	r1, r8, r1
 80209ce:	fb02 110e 	mla	r1, r2, lr, r1
 80209d2:	fb00 1104 	mla	r1, r0, r4, r1
 80209d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80209d8:	fb09 1104 	mla	r1, r9, r4, r1
 80209dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80209e0:	2900      	cmp	r1, #0
 80209e2:	f000 80f5 	beq.w	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209e6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80209ea:	d01b      	beq.n	8020a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80209ec:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80209f0:	fb0e fa0a 	mul.w	sl, lr, sl
 80209f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209f8:	fb0e fe03 	mul.w	lr, lr, r3
 80209fc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020a00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a04:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020a08:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020a0c:	4453      	add	r3, sl
 8020a0e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020a12:	0a1b      	lsrs	r3, r3, #8
 8020a14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a1c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020a20:	ea43 030c 	orr.w	r3, r3, ip
 8020a24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020a26:	2cff      	cmp	r4, #255	; 0xff
 8020a28:	d021      	beq.n	8020a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020a2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020a2c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020a30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020a32:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020a38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020a3e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a42:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a4a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020a4e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020a52:	44de      	add	lr, fp
 8020a54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a68:	ea4e 040a 	orr.w	r4, lr, sl
 8020a6c:	940b      	str	r4, [sp, #44]	; 0x2c
 8020a6e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a70:	2cff      	cmp	r4, #255	; 0xff
 8020a72:	d021      	beq.n	8020ab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020a74:	9c08      	ldr	r4, [sp, #32]
 8020a76:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020a7a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a7c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a80:	9c08      	ldr	r4, [sp, #32]
 8020a82:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a8c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020a94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020a98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020a9c:	44de      	add	lr, fp
 8020a9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020aa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020aa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020aaa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020aae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ab2:	ea4e 040a 	orr.w	r4, lr, sl
 8020ab6:	9408      	str	r4, [sp, #32]
 8020ab8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020aba:	2cff      	cmp	r4, #255	; 0xff
 8020abc:	d021      	beq.n	8020b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020abe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020ac0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ac4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020ac6:	fb04 fb0b 	mul.w	fp, r4, fp
 8020aca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020acc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ad0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020ad2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ad6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ada:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ade:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020ae2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020ae6:	44de      	add	lr, fp
 8020ae8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020aec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020af0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020af4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020af8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020afc:	ea4e 040a 	orr.w	r4, lr, sl
 8020b00:	940c      	str	r4, [sp, #48]	; 0x30
 8020b02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020b08:	9c08      	ldr	r4, [sp, #32]
 8020b0a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020b0e:	fb08 fc0c 	mul.w	ip, r8, ip
 8020b12:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020b16:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020b1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020b1c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020b20:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020b24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b26:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020b2a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020b2e:	fb08 f80e 	mul.w	r8, r8, lr
 8020b32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b36:	fb02 8303 	mla	r3, r2, r3, r8
 8020b3a:	9a08      	ldr	r2, [sp, #32]
 8020b3c:	f8b7 8000 	ldrh.w	r8, [r7]
 8020b40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020b44:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020b46:	fb00 330a 	mla	r3, r0, sl, r3
 8020b4a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020b4e:	fb09 3900 	mla	r9, r9, r0, r3
 8020b52:	43c9      	mvns	r1, r1
 8020b54:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020b58:	fa5f fe81 	uxtb.w	lr, r1
 8020b5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020b64:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020b68:	fb02 f20e 	mul.w	r2, r2, lr
 8020b6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b70:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020b74:	ea4c 0c09 	orr.w	ip, ip, r9
 8020b78:	1c53      	adds	r3, r2, #1
 8020b7a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020b7e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020b82:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020b86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020b8e:	4a63      	ldr	r2, [pc, #396]	; (8020d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020b90:	fb00 f00e 	mul.w	r0, r0, lr
 8020b94:	b2db      	uxtb	r3, r3
 8020b96:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020b9a:	1c43      	adds	r3, r0, #1
 8020b9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020ba0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020ba4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020ba8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020bac:	b2c9      	uxtb	r1, r1
 8020bae:	00db      	lsls	r3, r3, #3
 8020bb0:	fb01 f10e 	mul.w	r1, r1, lr
 8020bb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020bb8:	4313      	orrs	r3, r2
 8020bba:	1c4a      	adds	r2, r1, #1
 8020bbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020bc0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020bc4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020bc8:	ea4c 0c03 	orr.w	ip, ip, r3
 8020bcc:	f8a7 c000 	strh.w	ip, [r7]
 8020bd0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020bd2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020bd4:	441a      	add	r2, r3
 8020bd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bd8:	9225      	str	r2, [sp, #148]	; 0x94
 8020bda:	441d      	add	r5, r3
 8020bdc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020bde:	3b01      	subs	r3, #1
 8020be0:	3702      	adds	r7, #2
 8020be2:	9317      	str	r3, [sp, #92]	; 0x5c
 8020be4:	e699      	b.n	802091a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020be6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020be8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020bea:	441c      	add	r4, r3
 8020bec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bee:	9425      	str	r4, [sp, #148]	; 0x94
 8020bf0:	441d      	add	r5, r3
 8020bf2:	9b07      	ldr	r3, [sp, #28]
 8020bf4:	3b01      	subs	r3, #1
 8020bf6:	9307      	str	r3, [sp, #28]
 8020bf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020bfa:	3302      	adds	r3, #2
 8020bfc:	930a      	str	r3, [sp, #40]	; 0x28
 8020bfe:	e66b      	b.n	80208d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020c00:	d024      	beq.n	8020c4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020c02:	9b07      	ldr	r3, [sp, #28]
 8020c04:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020c06:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020c08:	3b01      	subs	r3, #1
 8020c0a:	fb00 4003 	mla	r0, r0, r3, r4
 8020c0e:	1400      	asrs	r0, r0, #16
 8020c10:	f53f ae80 	bmi.w	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020c14:	3901      	subs	r1, #1
 8020c16:	4288      	cmp	r0, r1
 8020c18:	f6bf ae7c 	bge.w	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020c1c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020c1e:	fb01 5303 	mla	r3, r1, r3, r5
 8020c22:	141b      	asrs	r3, r3, #16
 8020c24:	f53f ae76 	bmi.w	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020c28:	3a01      	subs	r2, #1
 8020c2a:	4293      	cmp	r3, r2
 8020c2c:	f6bf ae72 	bge.w	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020c30:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020c34:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020c38:	f1bb 0f00 	cmp.w	fp, #0
 8020c3c:	dc70      	bgt.n	8020d20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020c3e:	9b07      	ldr	r3, [sp, #28]
 8020c40:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c46:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020c4a:	930a      	str	r3, [sp, #40]	; 0x28
 8020c4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020c4e:	2b00      	cmp	r3, #0
 8020c50:	f340 81ae 	ble.w	8020fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020c54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020c62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c6e:	eef0 6a62 	vmov.f32	s13, s5
 8020c72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c7e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020c82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c86:	eef0 6a43 	vmov.f32	s13, s6
 8020c8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c8e:	ee12 2a90 	vmov	r2, s5
 8020c92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c9a:	ee13 2a10 	vmov	r2, s6
 8020c9e:	9327      	str	r3, [sp, #156]	; 0x9c
 8020ca0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ca6:	9328      	str	r3, [sp, #160]	; 0xa0
 8020ca8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020caa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020cac:	3b01      	subs	r3, #1
 8020cae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cb2:	9316      	str	r3, [sp, #88]	; 0x58
 8020cb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cb6:	bf08      	it	eq
 8020cb8:	4613      	moveq	r3, r2
 8020cba:	ee16 5a90 	vmov	r5, s13
 8020cbe:	9307      	str	r3, [sp, #28]
 8020cc0:	eeb0 3a67 	vmov.f32	s6, s15
 8020cc4:	eef0 2a47 	vmov.f32	s5, s14
 8020cc8:	e5f8      	b.n	80208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020cca:	2800      	cmp	r0, #0
 8020ccc:	f43f ae6b 	beq.w	80209a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020cd0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020cd4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cd8:	9108      	str	r1, [sp, #32]
 8020cda:	0e09      	lsrs	r1, r1, #24
 8020cdc:	9110      	str	r1, [sp, #64]	; 0x40
 8020cde:	e662      	b.n	80209a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ce0:	f113 0801 	adds.w	r8, r3, #1
 8020ce4:	f53f af74 	bmi.w	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ce8:	4541      	cmp	r1, r8
 8020cea:	f6ff af71 	blt.w	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020cee:	f11c 0801 	adds.w	r8, ip, #1
 8020cf2:	f53f af6d 	bmi.w	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020cf6:	45c6      	cmp	lr, r8
 8020cf8:	f6ff af6a 	blt.w	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020cfc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020d00:	b209      	sxth	r1, r1
 8020d02:	fa0f f38e 	sxth.w	r3, lr
 8020d06:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020d0a:	9301      	str	r3, [sp, #4]
 8020d0c:	9100      	str	r1, [sp, #0]
 8020d0e:	4633      	mov	r3, r6
 8020d10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020d12:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020d14:	4639      	mov	r1, r7
 8020d16:	f7ff fc7a 	bl	802060e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020d1a:	e759      	b.n	8020bd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020d1c:	fffff800 	.word	0xfffff800
 8020d20:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020d22:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020d28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d2e:	1427      	asrs	r7, r4, #16
 8020d30:	142b      	asrs	r3, r5, #16
 8020d32:	fb01 7303 	mla	r3, r1, r3, r7
 8020d36:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020d38:	18e7      	adds	r7, r4, r3
 8020d3a:	5ce3      	ldrb	r3, [r4, r3]
 8020d3c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020d40:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d44:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020d48:	2a00      	cmp	r2, #0
 8020d4a:	f000 8127 	beq.w	8020f9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020d4e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020d52:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020d56:	940d      	str	r4, [sp, #52]	; 0x34
 8020d58:	0e24      	lsrs	r4, r4, #24
 8020d5a:	9414      	str	r4, [sp, #80]	; 0x50
 8020d5c:	b170      	cbz	r0, 8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020d5e:	eb07 0e01 	add.w	lr, r7, r1
 8020d62:	5c79      	ldrb	r1, [r7, r1]
 8020d64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d68:	9109      	str	r1, [sp, #36]	; 0x24
 8020d6a:	0e09      	lsrs	r1, r1, #24
 8020d6c:	9111      	str	r1, [sp, #68]	; 0x44
 8020d6e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020d72:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d76:	910e      	str	r1, [sp, #56]	; 0x38
 8020d78:	0e09      	lsrs	r1, r1, #24
 8020d7a:	9115      	str	r1, [sp, #84]	; 0x54
 8020d7c:	b292      	uxth	r2, r2
 8020d7e:	b280      	uxth	r0, r0
 8020d80:	fb02 f800 	mul.w	r8, r2, r0
 8020d84:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020d88:	0112      	lsls	r2, r2, #4
 8020d8a:	eba2 0e08 	sub.w	lr, r2, r8
 8020d8e:	b280      	uxth	r0, r0
 8020d90:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020d94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020d96:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020d98:	fa1f fe8e 	uxth.w	lr, lr
 8020d9c:	1a09      	subs	r1, r1, r0
 8020d9e:	b289      	uxth	r1, r1
 8020da0:	fb0e f202 	mul.w	r2, lr, r2
 8020da4:	fb01 220c 	mla	r2, r1, ip, r2
 8020da8:	fb00 2204 	mla	r2, r0, r4, r2
 8020dac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020dae:	fb08 2204 	mla	r2, r8, r4, r2
 8020db2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020db6:	2a00      	cmp	r2, #0
 8020db8:	f000 80e5 	beq.w	8020f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020dbc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020dc0:	d019      	beq.n	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020dc2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020dc6:	fb0c fa0a 	mul.w	sl, ip, sl
 8020dca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020dce:	fb0c fc03 	mul.w	ip, ip, r3
 8020dd2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020dd6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020dda:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020dde:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020de2:	4453      	add	r3, sl
 8020de4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020de8:	0a1b      	lsrs	r3, r3, #8
 8020dea:	0a3f      	lsrs	r7, r7, #8
 8020dec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020df0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020df4:	433b      	orrs	r3, r7
 8020df6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020df8:	2cff      	cmp	r4, #255	; 0xff
 8020dfa:	d020      	beq.n	8020e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020dfc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020dfe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e02:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e04:	4367      	muls	r7, r4
 8020e06:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020e08:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e0e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e12:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e16:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e1e:	44bc      	add	ip, r7
 8020e20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e38:	ea4c 040a 	orr.w	r4, ip, sl
 8020e3c:	940d      	str	r4, [sp, #52]	; 0x34
 8020e3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e40:	2cff      	cmp	r4, #255	; 0xff
 8020e42:	d020      	beq.n	8020e86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020e44:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020e46:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e4a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e4c:	4367      	muls	r7, r4
 8020e4e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020e50:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e54:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e5a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e5e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e66:	44bc      	add	ip, r7
 8020e68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e80:	ea4c 040a 	orr.w	r4, ip, sl
 8020e84:	9409      	str	r4, [sp, #36]	; 0x24
 8020e86:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020e88:	2cff      	cmp	r4, #255	; 0xff
 8020e8a:	d020      	beq.n	8020ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020e8c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020e8e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e92:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020e94:	4367      	muls	r7, r4
 8020e96:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020e98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020e9e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ea2:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ea6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020eaa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eae:	44bc      	add	ip, r7
 8020eb0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020eb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020eb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ebc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ec0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ec4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ec8:	ea4c 040a 	orr.w	r4, ip, sl
 8020ecc:	940e      	str	r4, [sp, #56]	; 0x38
 8020ece:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ed0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ed4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020ed6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020eda:	fb0e f707 	mul.w	r7, lr, r7
 8020ede:	fb01 770c 	mla	r7, r1, ip, r7
 8020ee2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020ee6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020ee8:	fb00 770c 	mla	r7, r0, ip, r7
 8020eec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020ef0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ef2:	fb08 770c 	mla	r7, r8, ip, r7
 8020ef6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020efa:	fb0e fe0c 	mul.w	lr, lr, ip
 8020efe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f02:	fb01 e303 	mla	r3, r1, r3, lr
 8020f06:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020f08:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020f0c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020f0e:	fb00 330a 	mla	r3, r0, sl, r3
 8020f12:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020f16:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020f1a:	f8b9 3000 	ldrh.w	r3, [r9]
 8020f1e:	43d2      	mvns	r2, r2
 8020f20:	1218      	asrs	r0, r3, #8
 8020f22:	b2d2      	uxtb	r2, r2
 8020f24:	10d9      	asrs	r1, r3, #3
 8020f26:	0a3f      	lsrs	r7, r7, #8
 8020f28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020f30:	00db      	lsls	r3, r3, #3
 8020f32:	4350      	muls	r0, r2
 8020f34:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020f38:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020f3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020f40:	b2db      	uxtb	r3, r3
 8020f42:	ea47 070c 	orr.w	r7, r7, ip
 8020f46:	4351      	muls	r1, r2
 8020f48:	4353      	muls	r3, r2
 8020f4a:	1c42      	adds	r2, r0, #1
 8020f4c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020f50:	0c3a      	lsrs	r2, r7, #16
 8020f52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020f56:	4a18      	ldr	r2, [pc, #96]	; (8020fb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020f58:	b2c0      	uxtb	r0, r0
 8020f5a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020f5e:	1c4a      	adds	r2, r1, #1
 8020f60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f64:	0a3a      	lsrs	r2, r7, #8
 8020f66:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f6a:	00c9      	lsls	r1, r1, #3
 8020f6c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020f70:	4301      	orrs	r1, r0
 8020f72:	1c58      	adds	r0, r3, #1
 8020f74:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020f78:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020f7c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020f80:	4308      	orrs	r0, r1
 8020f82:	f8a9 0000 	strh.w	r0, [r9]
 8020f86:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020f88:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020f8a:	441a      	add	r2, r3
 8020f8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f8e:	9225      	str	r2, [sp, #148]	; 0x94
 8020f90:	f109 0902 	add.w	r9, r9, #2
 8020f94:	441d      	add	r5, r3
 8020f96:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020f9a:	e64d      	b.n	8020c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8020f9c:	2800      	cmp	r0, #0
 8020f9e:	f43f aeed 	beq.w	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020fa2:	5c79      	ldrb	r1, [r7, r1]
 8020fa4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020fa8:	9109      	str	r1, [sp, #36]	; 0x24
 8020faa:	0e09      	lsrs	r1, r1, #24
 8020fac:	9111      	str	r1, [sp, #68]	; 0x44
 8020fae:	e6e5      	b.n	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020fb0:	b01b      	add	sp, #108	; 0x6c
 8020fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fb6:	bf00      	nop
 8020fb8:	fffff800 	.word	0xfffff800

08020fbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fc0:	b085      	sub	sp, #20
 8020fc2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020fc6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020fca:	9103      	str	r1, [sp, #12]
 8020fcc:	fb00 7406 	mla	r4, r0, r6, r7
 8020fd0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020fd4:	2800      	cmp	r0, #0
 8020fd6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020fda:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020fde:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020fe2:	9501      	str	r5, [sp, #4]
 8020fe4:	eb03 0904 	add.w	r9, r3, r4
 8020fe8:	f2c0 8150 	blt.w	802128c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020fec:	4583      	cmp	fp, r0
 8020fee:	f340 814d 	ble.w	802128c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020ff2:	2f00      	cmp	r7, #0
 8020ff4:	f2c0 8146 	blt.w	8021284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020ff8:	42be      	cmp	r6, r7
 8020ffa:	f340 8143 	ble.w	8021284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020ffe:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021002:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021006:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802100a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802100e:	4355      	muls	r5, r2
 8021010:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021014:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021018:	fb0c f203 	mul.w	r2, ip, r3
 802101c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021020:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021024:	441d      	add	r5, r3
 8021026:	f102 0320 	add.w	r3, r2, #32
 802102a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802102e:	0a1b      	lsrs	r3, r3, #8
 8021030:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021034:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021038:	431c      	orrs	r4, r3
 802103a:	1c7b      	adds	r3, r7, #1
 802103c:	f100 812b 	bmi.w	8021296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021040:	429e      	cmp	r6, r3
 8021042:	f340 8128 	ble.w	8021296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021046:	2900      	cmp	r1, #0
 8021048:	f000 8128 	beq.w	802129c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802104c:	9a01      	ldr	r2, [sp, #4]
 802104e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021052:	8855      	ldrh	r5, [r2, #2]
 8021054:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021058:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802105c:	fb08 f802 	mul.w	r8, r8, r2
 8021060:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021064:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021068:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802106c:	435d      	muls	r5, r3
 802106e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021072:	44d0      	add	r8, sl
 8021074:	f105 0a20 	add.w	sl, r5, #32
 8021078:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802107c:	0a2d      	lsrs	r5, r5, #8
 802107e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021082:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021086:	432a      	orrs	r2, r5
 8021088:	3001      	adds	r0, #1
 802108a:	f100 810d 	bmi.w	80212a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802108e:	4583      	cmp	fp, r0
 8021090:	f340 810a 	ble.w	80212a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021094:	f1be 0f00 	cmp.w	lr, #0
 8021098:	f000 810b 	beq.w	80212b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802109c:	2f00      	cmp	r7, #0
 802109e:	f2c0 8100 	blt.w	80212a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80210a2:	42be      	cmp	r6, r7
 80210a4:	f340 80fd 	ble.w	80212a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80210a8:	9801      	ldr	r0, [sp, #4]
 80210aa:	f819 5006 	ldrb.w	r5, [r9, r6]
 80210ae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80210b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80210b6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80210ba:	fb0a fa00 	mul.w	sl, sl, r0
 80210be:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80210c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80210c6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80210ca:	fb05 f808 	mul.w	r8, r5, r8
 80210ce:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80210d2:	4482      	add	sl, r0
 80210d4:	f108 0020 	add.w	r0, r8, #32
 80210d8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80210dc:	0a00      	lsrs	r0, r0, #8
 80210de:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80210e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80210e6:	ea4b 0b00 	orr.w	fp, fp, r0
 80210ea:	3701      	adds	r7, #1
 80210ec:	f100 80e6 	bmi.w	80212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80210f0:	42be      	cmp	r6, r7
 80210f2:	f340 80e3 	ble.w	80212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80210f6:	2900      	cmp	r1, #0
 80210f8:	f000 80e3 	beq.w	80212c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80210fc:	3601      	adds	r6, #1
 80210fe:	9801      	ldr	r0, [sp, #4]
 8021100:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021104:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021108:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802110c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021110:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021114:	fb09 f906 	mul.w	r9, r9, r6
 8021118:	fb07 f800 	mul.w	r8, r7, r0
 802111c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021120:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021124:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021128:	44d1      	add	r9, sl
 802112a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802112e:	f108 0020 	add.w	r0, r8, #32
 8021132:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021136:	0a00      	lsrs	r0, r0, #8
 8021138:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802113c:	4330      	orrs	r0, r6
 802113e:	b28e      	uxth	r6, r1
 8021140:	fa1f f98e 	uxth.w	r9, lr
 8021144:	fb06 f809 	mul.w	r8, r6, r9
 8021148:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802114c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021150:	0136      	lsls	r6, r6, #4
 8021152:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021156:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802115a:	9601      	str	r6, [sp, #4]
 802115c:	ea4a 0404 	orr.w	r4, sl, r4
 8021160:	fa1f f689 	uxth.w	r6, r9
 8021164:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021168:	fb11 f90e 	smulbb	r9, r1, lr
 802116c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021170:	9602      	str	r6, [sp, #8]
 8021172:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021176:	4626      	mov	r6, r4
 8021178:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802117c:	f1ce 0410 	rsb	r4, lr, #16
 8021180:	1a64      	subs	r4, r4, r1
 8021182:	ea4a 0202 	orr.w	r2, sl, r2
 8021186:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802118a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802118e:	434a      	muls	r2, r1
 8021190:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021194:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021198:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802119c:	fb04 2406 	mla	r4, r4, r6, r2
 80211a0:	ea4a 0000 	orr.w	r0, sl, r0
 80211a4:	fb09 4200 	mla	r2, r9, r0, r4
 80211a8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80211ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80211b0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80211b4:	ea44 0b0b 	orr.w	fp, r4, fp
 80211b8:	9c01      	ldr	r4, [sp, #4]
 80211ba:	9e02      	ldr	r6, [sp, #8]
 80211bc:	9903      	ldr	r1, [sp, #12]
 80211be:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80211c2:	1ba4      	subs	r4, r4, r6
 80211c4:	9e01      	ldr	r6, [sp, #4]
 80211c6:	8808      	ldrh	r0, [r1, #0]
 80211c8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80211cc:	eba6 0608 	sub.w	r6, r6, r8
 80211d0:	b2b6      	uxth	r6, r6
 80211d2:	b2a4      	uxth	r4, r4
 80211d4:	4373      	muls	r3, r6
 80211d6:	fb0c 3304 	mla	r3, ip, r4, r3
 80211da:	9c02      	ldr	r4, [sp, #8]
 80211dc:	fb04 3505 	mla	r5, r4, r5, r3
 80211e0:	fb08 5707 	mla	r7, r8, r7, r5
 80211e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80211e8:	b289      	uxth	r1, r1
 80211ea:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80211ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80211f2:	434f      	muls	r7, r1
 80211f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80211f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80211fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021200:	1c7b      	adds	r3, r7, #1
 8021202:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021206:	ea42 0e0e 	orr.w	lr, r2, lr
 802120a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802120e:	fa1f f28e 	uxth.w	r2, lr
 8021212:	1203      	asrs	r3, r0, #8
 8021214:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021218:	b2ff      	uxtb	r7, r7
 802121a:	1215      	asrs	r5, r2, #8
 802121c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021220:	fb13 f307 	smulbb	r3, r3, r7
 8021224:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021228:	fb05 3501 	mla	r5, r5, r1, r3
 802122c:	10c3      	asrs	r3, r0, #3
 802122e:	10d4      	asrs	r4, r2, #3
 8021230:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021234:	fb13 f307 	smulbb	r3, r3, r7
 8021238:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802123c:	fb04 3401 	mla	r4, r4, r1, r3
 8021240:	00c3      	lsls	r3, r0, #3
 8021242:	00d2      	lsls	r2, r2, #3
 8021244:	b2db      	uxtb	r3, r3
 8021246:	fb13 f307 	smulbb	r3, r3, r7
 802124a:	b2d2      	uxtb	r2, r2
 802124c:	fb02 3101 	mla	r1, r2, r1, r3
 8021250:	b2ad      	uxth	r5, r5
 8021252:	b289      	uxth	r1, r1
 8021254:	b2a4      	uxth	r4, r4
 8021256:	1c6b      	adds	r3, r5, #1
 8021258:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802125c:	1c62      	adds	r2, r4, #1
 802125e:	1c4b      	adds	r3, r1, #1
 8021260:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021264:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021268:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802126c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021270:	0964      	lsrs	r4, r4, #5
 8021272:	432b      	orrs	r3, r5
 8021274:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021278:	9a03      	ldr	r2, [sp, #12]
 802127a:	4323      	orrs	r3, r4
 802127c:	8013      	strh	r3, [r2, #0]
 802127e:	b005      	add	sp, #20
 8021280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021284:	f04f 0c00 	mov.w	ip, #0
 8021288:	4664      	mov	r4, ip
 802128a:	e6d6      	b.n	802103a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802128c:	2300      	movs	r3, #0
 802128e:	469c      	mov	ip, r3
 8021290:	461a      	mov	r2, r3
 8021292:	461c      	mov	r4, r3
 8021294:	e6f8      	b.n	8021088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021296:	2300      	movs	r3, #0
 8021298:	461a      	mov	r2, r3
 802129a:	e6f5      	b.n	8021088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802129c:	460b      	mov	r3, r1
 802129e:	460a      	mov	r2, r1
 80212a0:	e6f2      	b.n	8021088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80212a2:	2500      	movs	r5, #0
 80212a4:	46ab      	mov	fp, r5
 80212a6:	e720      	b.n	80210ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80212a8:	2700      	movs	r7, #0
 80212aa:	463d      	mov	r5, r7
 80212ac:	4638      	mov	r0, r7
 80212ae:	46bb      	mov	fp, r7
 80212b0:	e745      	b.n	802113e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80212b2:	4677      	mov	r7, lr
 80212b4:	4675      	mov	r5, lr
 80212b6:	4670      	mov	r0, lr
 80212b8:	46f3      	mov	fp, lr
 80212ba:	e740      	b.n	802113e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80212bc:	2700      	movs	r7, #0
 80212be:	4638      	mov	r0, r7
 80212c0:	e73d      	b.n	802113e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80212c2:	460f      	mov	r7, r1
 80212c4:	4608      	mov	r0, r1
 80212c6:	e73a      	b.n	802113e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080212c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80212c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212cc:	b097      	sub	sp, #92	; 0x5c
 80212ce:	9214      	str	r2, [sp, #80]	; 0x50
 80212d0:	9308      	str	r3, [sp, #32]
 80212d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80212d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80212d8:	9312      	str	r3, [sp, #72]	; 0x48
 80212da:	9111      	str	r1, [sp, #68]	; 0x44
 80212dc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80212e0:	9015      	str	r0, [sp, #84]	; 0x54
 80212e2:	6850      	ldr	r0, [r2, #4]
 80212e4:	6812      	ldr	r2, [r2, #0]
 80212e6:	fb00 1303 	mla	r3, r0, r3, r1
 80212ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80212ee:	9309      	str	r3, [sp, #36]	; 0x24
 80212f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80212f2:	681b      	ldr	r3, [r3, #0]
 80212f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80212f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80212f8:	685b      	ldr	r3, [r3, #4]
 80212fa:	930c      	str	r3, [sp, #48]	; 0x30
 80212fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021300:	930a      	str	r3, [sp, #40]	; 0x28
 8021302:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021304:	2b00      	cmp	r3, #0
 8021306:	dc03      	bgt.n	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021308:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802130a:	2b00      	cmp	r3, #0
 802130c:	f340 83cb 	ble.w	8021aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021310:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021312:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021316:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802131a:	1e48      	subs	r0, r1, #1
 802131c:	1e55      	subs	r5, r2, #1
 802131e:	9b08      	ldr	r3, [sp, #32]
 8021320:	2b00      	cmp	r3, #0
 8021322:	f340 81a3 	ble.w	802166c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021326:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021328:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802132a:	1436      	asrs	r6, r6, #16
 802132c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021330:	d406      	bmi.n	8021340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021332:	4286      	cmp	r6, r0
 8021334:	da04      	bge.n	8021340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021336:	2b00      	cmp	r3, #0
 8021338:	db02      	blt.n	8021340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802133a:	42ab      	cmp	r3, r5
 802133c:	f2c0 8197 	blt.w	802166e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021340:	3601      	adds	r6, #1
 8021342:	f100 8184 	bmi.w	802164e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021346:	42b1      	cmp	r1, r6
 8021348:	f2c0 8181 	blt.w	802164e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802134c:	3301      	adds	r3, #1
 802134e:	f100 817e 	bmi.w	802164e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021352:	429a      	cmp	r2, r3
 8021354:	f2c0 817b 	blt.w	802164e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021358:	9b08      	ldr	r3, [sp, #32]
 802135a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802135c:	9313      	str	r3, [sp, #76]	; 0x4c
 802135e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021362:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021364:	2b00      	cmp	r3, #0
 8021366:	f340 81a4 	ble.w	80216b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802136a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802136c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802136e:	1418      	asrs	r0, r3, #16
 8021370:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021372:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021376:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021378:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802137c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802137e:	142d      	asrs	r5, r5, #16
 8021380:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021384:	f100 81f8 	bmi.w	8021778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021388:	f102 3eff 	add.w	lr, r2, #4294967295
 802138c:	4575      	cmp	r5, lr
 802138e:	f280 81f3 	bge.w	8021778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021392:	2800      	cmp	r0, #0
 8021394:	f2c0 81f0 	blt.w	8021778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021398:	f103 3eff 	add.w	lr, r3, #4294967295
 802139c:	4570      	cmp	r0, lr
 802139e:	f280 81eb 	bge.w	8021778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80213a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80213a4:	b212      	sxth	r2, r2
 80213a6:	fb00 5002 	mla	r0, r0, r2, r5
 80213aa:	fa1f fe81 	uxth.w	lr, r1
 80213ae:	eb03 0a00 	add.w	sl, r3, r0
 80213b2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80213b6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80213ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80213be:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80213c2:	b29b      	uxth	r3, r3
 80213c4:	f1bc 0f00 	cmp.w	ip, #0
 80213c8:	f000 81b9 	beq.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80213cc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80213d0:	940d      	str	r4, [sp, #52]	; 0x34
 80213d2:	eb0a 0b02 	add.w	fp, sl, r2
 80213d6:	fa1f fa8c 	uxth.w	sl, ip
 80213da:	fb0a fe0e 	mul.w	lr, sl, lr
 80213de:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80213e2:	fa1f fa8a 	uxth.w	sl, sl
 80213e6:	eba5 050e 	sub.w	r5, r5, lr
 80213ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80213ee:	940e      	str	r4, [sp, #56]	; 0x38
 80213f0:	eba3 030a 	sub.w	r3, r3, sl
 80213f4:	b2ad      	uxth	r5, r5
 80213f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80213f8:	b29b      	uxth	r3, r3
 80213fa:	fb08 f505 	mul.w	r5, r8, r5
 80213fe:	fb09 5303 	mla	r3, r9, r3, r5
 8021402:	fb0a 3304 	mla	r3, sl, r4, r3
 8021406:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021408:	fb0e 3304 	mla	r3, lr, r4, r3
 802140c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021410:	2b00      	cmp	r3, #0
 8021412:	f000 810f 	beq.w	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021416:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021418:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802141c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021420:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021424:	f000 8190 	beq.w	8021748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021428:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802142c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021430:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021434:	fb09 f000 	mul.w	r0, r9, r0
 8021438:	fb0a fe0e 	mul.w	lr, sl, lr
 802143c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021440:	f100 0b20 	add.w	fp, r0, #32
 8021444:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021448:	44ce      	add	lr, r9
 802144a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802144e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021452:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021456:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802145a:	ea4e 0909 	orr.w	r9, lr, r9
 802145e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021462:	8868      	ldrh	r0, [r5, #2]
 8021464:	d019      	beq.n	802149a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021466:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802146a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802146e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021472:	fb08 f800 	mul.w	r8, r8, r0
 8021476:	fb0a fe0e 	mul.w	lr, sl, lr
 802147a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802147e:	f108 0b20 	add.w	fp, r8, #32
 8021482:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021486:	4486      	add	lr, r0
 8021488:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802148c:	0a00      	lsrs	r0, r0, #8
 802148e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021492:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021496:	ea4e 0000 	orr.w	r0, lr, r0
 802149a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802149e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80214a2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80214a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80214aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80214ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80214b2:	ea4e 0909 	orr.w	r9, lr, r9
 80214b6:	ea4a 0000 	orr.w	r0, sl, r0
 80214ba:	f1bc 0f00 	cmp.w	ip, #0
 80214be:	f000 8145 	beq.w	802174c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80214c2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80214c6:	3a01      	subs	r2, #1
 80214c8:	0052      	lsls	r2, r2, #1
 80214ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80214cc:	3202      	adds	r2, #2
 80214ce:	2cff      	cmp	r4, #255	; 0xff
 80214d0:	eb05 0e02 	add.w	lr, r5, r2
 80214d4:	5aaa      	ldrh	r2, [r5, r2]
 80214d6:	d018      	beq.n	802150a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80214d8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80214dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80214e0:	fb04 fa02 	mul.w	sl, r4, r2
 80214e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80214e8:	fb08 f805 	mul.w	r8, r8, r5
 80214ec:	f10a 0520 	add.w	r5, sl, #32
 80214f0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80214f4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80214f8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80214fc:	4442      	add	r2, r8
 80214fe:	0a2d      	lsrs	r5, r5, #8
 8021500:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021504:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021508:	432a      	orrs	r2, r5
 802150a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802150c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021510:	2cff      	cmp	r4, #255	; 0xff
 8021512:	d01a      	beq.n	802154a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021514:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021518:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802151c:	fb04 fa05 	mul.w	sl, r4, r5
 8021520:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021524:	fb08 f80e 	mul.w	r8, r8, lr
 8021528:	f10a 0e20 	add.w	lr, sl, #32
 802152c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021530:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021534:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021538:	4445      	add	r5, r8
 802153a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802153e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021542:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021546:	ea45 050e 	orr.w	r5, r5, lr
 802154a:	fb1c fe01 	smulbb	lr, ip, r1
 802154e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021552:	f1cc 0810 	rsb	r8, ip, #16
 8021556:	eba8 0801 	sub.w	r8, r8, r1
 802155a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802155e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021562:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021566:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802156a:	4341      	muls	r1, r0
 802156c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021570:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021574:	ea4a 0202 	orr.w	r2, sl, r2
 8021578:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802157c:	fb09 1108 	mla	r1, r9, r8, r1
 8021580:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021584:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021588:	fb0c 1102 	mla	r1, ip, r2, r1
 802158c:	ea4b 0505 	orr.w	r5, fp, r5
 8021590:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021594:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021598:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802159c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80215a0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80215a4:	ea42 0e0e 	orr.w	lr, r2, lr
 80215a8:	fa1f f28e 	uxth.w	r2, lr
 80215ac:	2bff      	cmp	r3, #255	; 0xff
 80215ae:	d103      	bne.n	80215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80215b0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80215b2:	29ff      	cmp	r1, #255	; 0xff
 80215b4:	f000 80de 	beq.w	8021774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80215b8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80215ba:	8838      	ldrh	r0, [r7, #0]
 80215bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80215be:	434b      	muls	r3, r1
 80215c0:	f103 0c01 	add.w	ip, r3, #1
 80215c4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80215c8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80215cc:	fa5f fc83 	uxtb.w	ip, r3
 80215d0:	1203      	asrs	r3, r0, #8
 80215d2:	1215      	asrs	r5, r2, #8
 80215d4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80215d8:	fb13 f30c 	smulbb	r3, r3, ip
 80215dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80215e0:	fb05 3501 	mla	r5, r5, r1, r3
 80215e4:	10c3      	asrs	r3, r0, #3
 80215e6:	10d1      	asrs	r1, r2, #3
 80215e8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80215ec:	fb13 f30c 	smulbb	r3, r3, ip
 80215f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80215f4:	fb01 3104 	mla	r1, r1, r4, r3
 80215f8:	00c3      	lsls	r3, r0, #3
 80215fa:	00d2      	lsls	r2, r2, #3
 80215fc:	b2db      	uxtb	r3, r3
 80215fe:	b2d2      	uxtb	r2, r2
 8021600:	fb13 f30c 	smulbb	r3, r3, ip
 8021604:	b2ad      	uxth	r5, r5
 8021606:	fb02 3304 	mla	r3, r2, r4, r3
 802160a:	b29a      	uxth	r2, r3
 802160c:	1c6b      	adds	r3, r5, #1
 802160e:	b289      	uxth	r1, r1
 8021610:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021614:	1c53      	adds	r3, r2, #1
 8021616:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802161a:	1c4a      	adds	r2, r1, #1
 802161c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021620:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021624:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021628:	0949      	lsrs	r1, r1, #5
 802162a:	432b      	orrs	r3, r5
 802162c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021630:	430b      	orrs	r3, r1
 8021632:	803b      	strh	r3, [r7, #0]
 8021634:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021636:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021638:	4413      	add	r3, r2
 802163a:	9321      	str	r3, [sp, #132]	; 0x84
 802163c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802163e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021640:	441a      	add	r2, r3
 8021642:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021644:	9222      	str	r2, [sp, #136]	; 0x88
 8021646:	3b01      	subs	r3, #1
 8021648:	3702      	adds	r7, #2
 802164a:	9313      	str	r3, [sp, #76]	; 0x4c
 802164c:	e689      	b.n	8021362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802164e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021650:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021652:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021654:	4433      	add	r3, r6
 8021656:	9321      	str	r3, [sp, #132]	; 0x84
 8021658:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802165a:	441c      	add	r4, r3
 802165c:	9b08      	ldr	r3, [sp, #32]
 802165e:	9422      	str	r4, [sp, #136]	; 0x88
 8021660:	3b01      	subs	r3, #1
 8021662:	9308      	str	r3, [sp, #32]
 8021664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021666:	3302      	adds	r3, #2
 8021668:	9309      	str	r3, [sp, #36]	; 0x24
 802166a:	e658      	b.n	802131e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802166c:	d028      	beq.n	80216c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802166e:	9b08      	ldr	r3, [sp, #32]
 8021670:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021672:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021674:	3b01      	subs	r3, #1
 8021676:	fb00 5003 	mla	r0, r0, r3, r5
 802167a:	1400      	asrs	r0, r0, #16
 802167c:	f53f ae6c 	bmi.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021680:	3901      	subs	r1, #1
 8021682:	4288      	cmp	r0, r1
 8021684:	f6bf ae68 	bge.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021688:	9924      	ldr	r1, [sp, #144]	; 0x90
 802168a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802168c:	fb01 0303 	mla	r3, r1, r3, r0
 8021690:	141b      	asrs	r3, r3, #16
 8021692:	f53f ae61 	bmi.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021696:	3a01      	subs	r2, #1
 8021698:	4293      	cmp	r3, r2
 802169a:	f6bf ae5d 	bge.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802169e:	9b08      	ldr	r3, [sp, #32]
 80216a0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80216a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80216a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80216aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80216ac:	2b00      	cmp	r3, #0
 80216ae:	f300 8082 	bgt.w	80217b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80216b2:	9b08      	ldr	r3, [sp, #32]
 80216b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80216b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80216be:	9309      	str	r3, [sp, #36]	; 0x24
 80216c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80216c2:	2b00      	cmp	r3, #0
 80216c4:	f340 81ef 	ble.w	8021aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80216c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80216cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80216d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80216d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80216d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80216da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80216de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80216e2:	eef0 6a62 	vmov.f32	s13, s5
 80216e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80216ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80216f2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80216f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80216fa:	eef0 6a43 	vmov.f32	s13, s6
 80216fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021702:	ee12 2a90 	vmov	r2, s5
 8021706:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802170a:	fb92 f3f3 	sdiv	r3, r2, r3
 802170e:	ee13 2a10 	vmov	r2, s6
 8021712:	9323      	str	r3, [sp, #140]	; 0x8c
 8021714:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021716:	fb92 f3f3 	sdiv	r3, r2, r3
 802171a:	9324      	str	r3, [sp, #144]	; 0x90
 802171c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802171e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021720:	3b01      	subs	r3, #1
 8021722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021726:	9311      	str	r3, [sp, #68]	; 0x44
 8021728:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802172a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802172e:	bf08      	it	eq
 8021730:	4613      	moveq	r3, r2
 8021732:	9308      	str	r3, [sp, #32]
 8021734:	eeb0 3a67 	vmov.f32	s6, s15
 8021738:	eef0 2a47 	vmov.f32	s5, s14
 802173c:	e5e1      	b.n	8021302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802173e:	fb08 f505 	mul.w	r5, r8, r5
 8021742:	fb09 5303 	mla	r3, r9, r3, r5
 8021746:	e661      	b.n	802140c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021748:	4681      	mov	r9, r0
 802174a:	e688      	b.n	802145e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802174c:	f1c1 0210 	rsb	r2, r1, #16
 8021750:	4341      	muls	r1, r0
 8021752:	fb09 1902 	mla	r9, r9, r2, r1
 8021756:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802175a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802175e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021762:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021766:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802176a:	ea42 0909 	orr.w	r9, r2, r9
 802176e:	fa1f f289 	uxth.w	r2, r9
 8021772:	e71b      	b.n	80215ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021774:	803a      	strh	r2, [r7, #0]
 8021776:	e75d      	b.n	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021778:	f115 0e01 	adds.w	lr, r5, #1
 802177c:	f53f af5a 	bmi.w	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021780:	4572      	cmp	r2, lr
 8021782:	f6ff af57 	blt.w	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021786:	f110 0e01 	adds.w	lr, r0, #1
 802178a:	f53f af53 	bmi.w	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802178e:	4573      	cmp	r3, lr
 8021790:	f6ff af50 	blt.w	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021794:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021796:	9502      	str	r5, [sp, #8]
 8021798:	b21b      	sxth	r3, r3
 802179a:	b212      	sxth	r2, r2
 802179c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80217a0:	9301      	str	r3, [sp, #4]
 80217a2:	9200      	str	r2, [sp, #0]
 80217a4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80217a8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80217ac:	4639      	mov	r1, r7
 80217ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 80217b0:	f7ff fc04 	bl	8020fbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80217b4:	e73e      	b.n	8021634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80217b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80217bc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217be:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80217c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80217c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217ca:	141f      	asrs	r7, r3, #16
 80217cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217ce:	141b      	asrs	r3, r3, #16
 80217d0:	fb01 3707 	mla	r7, r1, r7, r3
 80217d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80217d6:	fa1f fc82 	uxth.w	ip, r2
 80217da:	eb03 0a07 	add.w	sl, r3, r7
 80217de:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80217e2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80217e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80217ea:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80217ee:	b29b      	uxth	r3, r3
 80217f0:	2d00      	cmp	r5, #0
 80217f2:	f000 813d 	beq.w	8021a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80217f6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80217fa:	940f      	str	r4, [sp, #60]	; 0x3c
 80217fc:	eb0a 0b01 	add.w	fp, sl, r1
 8021800:	fa1f fa85 	uxth.w	sl, r5
 8021804:	fb0a fc0c 	mul.w	ip, sl, ip
 8021808:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802180c:	fa1f fa8a 	uxth.w	sl, sl
 8021810:	eba0 000c 	sub.w	r0, r0, ip
 8021814:	eba3 030a 	sub.w	r3, r3, sl
 8021818:	b280      	uxth	r0, r0
 802181a:	fb08 f000 	mul.w	r0, r8, r0
 802181e:	b29b      	uxth	r3, r3
 8021820:	fb09 0303 	mla	r3, r9, r3, r0
 8021824:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021826:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802182a:	9410      	str	r4, [sp, #64]	; 0x40
 802182c:	fb0a 3300 	mla	r3, sl, r0, r3
 8021830:	fb0c 3304 	mla	r3, ip, r4, r3
 8021834:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021838:	2b00      	cmp	r3, #0
 802183a:	f000 810b 	beq.w	8021a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802183e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021840:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021842:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021846:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802184a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802184e:	f000 8114 	beq.w	8021a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021852:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021856:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802185a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802185e:	fb09 f707 	mul.w	r7, r9, r7
 8021862:	fb0a fc0c 	mul.w	ip, sl, ip
 8021866:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802186a:	f107 0b20 	add.w	fp, r7, #32
 802186e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021872:	44cc      	add	ip, r9
 8021874:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021878:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802187c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021880:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021884:	ea4c 0909 	orr.w	r9, ip, r9
 8021888:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802188c:	8847      	ldrh	r7, [r0, #2]
 802188e:	d019      	beq.n	80218c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021890:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021894:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021898:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802189c:	fb08 f807 	mul.w	r8, r8, r7
 80218a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80218a4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80218a8:	f108 0b20 	add.w	fp, r8, #32
 80218ac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80218b0:	44bc      	add	ip, r7
 80218b2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80218b6:	0a3f      	lsrs	r7, r7, #8
 80218b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80218bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80218c0:	ea4c 0707 	orr.w	r7, ip, r7
 80218c4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80218c8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80218cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80218d0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80218d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80218dc:	ea4c 0909 	orr.w	r9, ip, r9
 80218e0:	ea4a 0707 	orr.w	r7, sl, r7
 80218e4:	2d00      	cmp	r5, #0
 80218e6:	f000 80ca 	beq.w	8021a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80218ea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80218ee:	3901      	subs	r1, #1
 80218f0:	0049      	lsls	r1, r1, #1
 80218f2:	3102      	adds	r1, #2
 80218f4:	eb00 0c01 	add.w	ip, r0, r1
 80218f8:	5a41      	ldrh	r1, [r0, r1]
 80218fa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80218fc:	28ff      	cmp	r0, #255	; 0xff
 80218fe:	d019      	beq.n	8021934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021900:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021902:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021906:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802190a:	fb04 fa01 	mul.w	sl, r4, r1
 802190e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021912:	fb08 f800 	mul.w	r8, r8, r0
 8021916:	f10a 0020 	add.w	r0, sl, #32
 802191a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802191e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021922:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021926:	4441      	add	r1, r8
 8021928:	0a00      	lsrs	r0, r0, #8
 802192a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802192e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021932:	4301      	orrs	r1, r0
 8021934:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021936:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802193a:	2cff      	cmp	r4, #255	; 0xff
 802193c:	d01a      	beq.n	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802193e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021946:	fb04 fa00 	mul.w	sl, r4, r0
 802194a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802194e:	fb08 f80c 	mul.w	r8, r8, ip
 8021952:	f10a 0c20 	add.w	ip, sl, #32
 8021956:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802195a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802195e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021962:	4440      	add	r0, r8
 8021964:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021968:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802196c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021970:	ea40 000c 	orr.w	r0, r0, ip
 8021974:	fb15 fc02 	smulbb	ip, r5, r2
 8021978:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802197c:	f1c5 0810 	rsb	r8, r5, #16
 8021980:	eba8 0802 	sub.w	r8, r8, r2
 8021984:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021988:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802198c:	437a      	muls	r2, r7
 802198e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021992:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021996:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802199a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802199e:	fb09 2208 	mla	r2, r9, r8, r2
 80219a2:	ea4a 0101 	orr.w	r1, sl, r1
 80219a6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80219aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80219ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219b2:	fb05 2201 	mla	r2, r5, r1, r2
 80219b6:	ea4b 0000 	orr.w	r0, fp, r0
 80219ba:	fb0c 2200 	mla	r2, ip, r0, r2
 80219be:	0d57      	lsrs	r7, r2, #21
 80219c0:	0952      	lsrs	r2, r2, #5
 80219c2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80219c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80219ca:	433a      	orrs	r2, r7
 80219cc:	2bff      	cmp	r3, #255	; 0xff
 80219ce:	b292      	uxth	r2, r2
 80219d0:	d102      	bne.n	80219d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80219d2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80219d4:	29ff      	cmp	r1, #255	; 0xff
 80219d6:	d063      	beq.n	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80219d8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80219da:	f8be 1000 	ldrh.w	r1, [lr]
 80219de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80219e0:	4343      	muls	r3, r0
 80219e2:	1c58      	adds	r0, r3, #1
 80219e4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80219e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80219ec:	1208      	asrs	r0, r1, #8
 80219ee:	b2db      	uxtb	r3, r3
 80219f0:	1215      	asrs	r5, r2, #8
 80219f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80219f6:	fb10 f003 	smulbb	r0, r0, r3
 80219fa:	10cf      	asrs	r7, r1, #3
 80219fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a00:	00c9      	lsls	r1, r1, #3
 8021a02:	fb05 0504 	mla	r5, r5, r4, r0
 8021a06:	b2c9      	uxtb	r1, r1
 8021a08:	10d0      	asrs	r0, r2, #3
 8021a0a:	00d2      	lsls	r2, r2, #3
 8021a0c:	fb11 f103 	smulbb	r1, r1, r3
 8021a10:	b2d2      	uxtb	r2, r2
 8021a12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021a16:	fb02 1204 	mla	r2, r2, r4, r1
 8021a1a:	fb17 f703 	smulbb	r7, r7, r3
 8021a1e:	b2ad      	uxth	r5, r5
 8021a20:	b292      	uxth	r2, r2
 8021a22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021a26:	fb00 7004 	mla	r0, r0, r4, r7
 8021a2a:	1c6b      	adds	r3, r5, #1
 8021a2c:	1c57      	adds	r7, r2, #1
 8021a2e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021a32:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021a36:	b280      	uxth	r0, r0
 8021a38:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021a3c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021a40:	433d      	orrs	r5, r7
 8021a42:	1c47      	adds	r7, r0, #1
 8021a44:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021a48:	097f      	lsrs	r7, r7, #5
 8021a4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a4e:	433d      	orrs	r5, r7
 8021a50:	f8ae 5000 	strh.w	r5, [lr]
 8021a54:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021a56:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021a58:	4413      	add	r3, r2
 8021a5a:	9321      	str	r3, [sp, #132]	; 0x84
 8021a5c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021a5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a60:	441a      	add	r2, r3
 8021a62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021a64:	9222      	str	r2, [sp, #136]	; 0x88
 8021a66:	3b01      	subs	r3, #1
 8021a68:	f10e 0e02 	add.w	lr, lr, #2
 8021a6c:	9313      	str	r3, [sp, #76]	; 0x4c
 8021a6e:	e61c      	b.n	80216aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021a70:	fb08 f000 	mul.w	r0, r8, r0
 8021a74:	fb09 0303 	mla	r3, r9, r3, r0
 8021a78:	e6dc      	b.n	8021834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021a7a:	46b9      	mov	r9, r7
 8021a7c:	e704      	b.n	8021888 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021a7e:	f1c2 0110 	rsb	r1, r2, #16
 8021a82:	437a      	muls	r2, r7
 8021a84:	fb09 2901 	mla	r9, r9, r1, r2
 8021a88:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021a8c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021a90:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021a94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a9c:	4302      	orrs	r2, r0
 8021a9e:	e795      	b.n	80219cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021aa0:	f8ae 2000 	strh.w	r2, [lr]
 8021aa4:	e7d6      	b.n	8021a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021aa6:	b017      	add	sp, #92	; 0x5c
 8021aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ab0:	b085      	sub	sp, #20
 8021ab2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021ab6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021aba:	9103      	str	r1, [sp, #12]
 8021abc:	fb00 7406 	mla	r4, r0, r6, r7
 8021ac0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021ac4:	2800      	cmp	r0, #0
 8021ac6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021aca:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021ace:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021ad2:	9501      	str	r5, [sp, #4]
 8021ad4:	eb02 0904 	add.w	r9, r2, r4
 8021ad8:	f2c0 8141 	blt.w	8021d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021adc:	4583      	cmp	fp, r0
 8021ade:	f340 813e 	ble.w	8021d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021ae2:	2f00      	cmp	r7, #0
 8021ae4:	f2c0 8137 	blt.w	8021d56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021ae8:	42be      	cmp	r6, r7
 8021aea:	f340 8134 	ble.w	8021d56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021aee:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021af2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021af6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021afa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021afe:	4355      	muls	r5, r2
 8021b00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b04:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021b08:	fb0c f203 	mul.w	r2, ip, r3
 8021b0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021b10:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021b14:	441d      	add	r5, r3
 8021b16:	f102 0320 	add.w	r3, r2, #32
 8021b1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021b1e:	0a1b      	lsrs	r3, r3, #8
 8021b20:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021b24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b28:	431c      	orrs	r4, r3
 8021b2a:	1c7b      	adds	r3, r7, #1
 8021b2c:	f100 811c 	bmi.w	8021d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021b30:	429e      	cmp	r6, r3
 8021b32:	f340 8119 	ble.w	8021d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021b36:	2900      	cmp	r1, #0
 8021b38:	f000 8119 	beq.w	8021d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021b3c:	9a01      	ldr	r2, [sp, #4]
 8021b3e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021b42:	8855      	ldrh	r5, [r2, #2]
 8021b44:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021b48:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021b4c:	fb08 f802 	mul.w	r8, r8, r2
 8021b50:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021b54:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021b58:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021b5c:	435d      	muls	r5, r3
 8021b5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b62:	44d0      	add	r8, sl
 8021b64:	f105 0a20 	add.w	sl, r5, #32
 8021b68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021b6c:	0a2d      	lsrs	r5, r5, #8
 8021b6e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021b72:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021b76:	432a      	orrs	r2, r5
 8021b78:	3001      	adds	r0, #1
 8021b7a:	f100 80fe 	bmi.w	8021d7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021b7e:	4583      	cmp	fp, r0
 8021b80:	f340 80fb 	ble.w	8021d7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021b84:	f1be 0f00 	cmp.w	lr, #0
 8021b88:	f000 80fc 	beq.w	8021d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021b8c:	2f00      	cmp	r7, #0
 8021b8e:	f2c0 80f1 	blt.w	8021d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021b92:	42be      	cmp	r6, r7
 8021b94:	f340 80ee 	ble.w	8021d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021b98:	9801      	ldr	r0, [sp, #4]
 8021b9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021b9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021ba2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021ba6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021baa:	fb0a fa00 	mul.w	sl, sl, r0
 8021bae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021bb2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021bb6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021bba:	fb05 f808 	mul.w	r8, r5, r8
 8021bbe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021bc2:	4482      	add	sl, r0
 8021bc4:	f108 0020 	add.w	r0, r8, #32
 8021bc8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021bcc:	0a00      	lsrs	r0, r0, #8
 8021bce:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021bd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bd6:	ea4b 0b00 	orr.w	fp, fp, r0
 8021bda:	3701      	adds	r7, #1
 8021bdc:	f100 80d7 	bmi.w	8021d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021be0:	42be      	cmp	r6, r7
 8021be2:	f340 80d4 	ble.w	8021d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021be6:	2900      	cmp	r1, #0
 8021be8:	f000 80d4 	beq.w	8021d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021bec:	3601      	adds	r6, #1
 8021bee:	9801      	ldr	r0, [sp, #4]
 8021bf0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021bf4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021bf8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021bfc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021c00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c04:	fb09 f906 	mul.w	r9, r9, r6
 8021c08:	fb07 f800 	mul.w	r8, r7, r0
 8021c0c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021c10:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021c14:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021c18:	44d1      	add	r9, sl
 8021c1a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021c1e:	f108 0020 	add.w	r0, r8, #32
 8021c22:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021c26:	0a00      	lsrs	r0, r0, #8
 8021c28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c2c:	4330      	orrs	r0, r6
 8021c2e:	b28e      	uxth	r6, r1
 8021c30:	fa1f f98e 	uxth.w	r9, lr
 8021c34:	fb06 f809 	mul.w	r8, r6, r9
 8021c38:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021c3c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021c40:	0136      	lsls	r6, r6, #4
 8021c42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c46:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021c4a:	9601      	str	r6, [sp, #4]
 8021c4c:	ea4a 0404 	orr.w	r4, sl, r4
 8021c50:	fa1f f689 	uxth.w	r6, r9
 8021c54:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021c58:	fb11 f90e 	smulbb	r9, r1, lr
 8021c5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021c60:	9602      	str	r6, [sp, #8]
 8021c62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c66:	4626      	mov	r6, r4
 8021c68:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c6c:	f1ce 0410 	rsb	r4, lr, #16
 8021c70:	1a64      	subs	r4, r4, r1
 8021c72:	ea4a 0202 	orr.w	r2, sl, r2
 8021c76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021c7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c7e:	434a      	muls	r2, r1
 8021c80:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021c84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c8c:	fb04 2406 	mla	r4, r4, r6, r2
 8021c90:	ea4a 0000 	orr.w	r0, sl, r0
 8021c94:	fb09 4200 	mla	r2, r9, r0, r4
 8021c98:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021c9c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021ca0:	9801      	ldr	r0, [sp, #4]
 8021ca2:	9903      	ldr	r1, [sp, #12]
 8021ca4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021ca8:	ea44 0b0b 	orr.w	fp, r4, fp
 8021cac:	9c02      	ldr	r4, [sp, #8]
 8021cae:	8809      	ldrh	r1, [r1, #0]
 8021cb0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021cb4:	1b00      	subs	r0, r0, r4
 8021cb6:	9c01      	ldr	r4, [sp, #4]
 8021cb8:	eba4 0608 	sub.w	r6, r4, r8
 8021cbc:	b2b6      	uxth	r6, r6
 8021cbe:	b280      	uxth	r0, r0
 8021cc0:	4373      	muls	r3, r6
 8021cc2:	fb0c 3300 	mla	r3, ip, r0, r3
 8021cc6:	9802      	ldr	r0, [sp, #8]
 8021cc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021ccc:	fb00 3505 	mla	r5, r0, r5, r3
 8021cd0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021cd4:	fb08 5707 	mla	r7, r8, r7, r5
 8021cd8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021cdc:	120b      	asrs	r3, r1, #8
 8021cde:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021ce2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021ce6:	b2ff      	uxtb	r7, r7
 8021ce8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021cec:	10c8      	asrs	r0, r1, #3
 8021cee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021cf2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021cf6:	00c9      	lsls	r1, r1, #3
 8021cf8:	437b      	muls	r3, r7
 8021cfa:	ea42 0e0e 	orr.w	lr, r2, lr
 8021cfe:	b2c9      	uxtb	r1, r1
 8021d00:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d04:	fa1f f28e 	uxth.w	r2, lr
 8021d08:	4378      	muls	r0, r7
 8021d0a:	434f      	muls	r7, r1
 8021d0c:	1c59      	adds	r1, r3, #1
 8021d0e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021d12:	1213      	asrs	r3, r2, #8
 8021d14:	f023 0307 	bic.w	r3, r3, #7
 8021d18:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021d1c:	1c41      	adds	r1, r0, #1
 8021d1e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021d22:	10d1      	asrs	r1, r2, #3
 8021d24:	f021 0103 	bic.w	r1, r1, #3
 8021d28:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021d2c:	021b      	lsls	r3, r3, #8
 8021d2e:	00c9      	lsls	r1, r1, #3
 8021d30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d34:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021d38:	430b      	orrs	r3, r1
 8021d3a:	1c79      	adds	r1, r7, #1
 8021d3c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021d40:	00d2      	lsls	r2, r2, #3
 8021d42:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021d46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021d4a:	431a      	orrs	r2, r3
 8021d4c:	9b03      	ldr	r3, [sp, #12]
 8021d4e:	801a      	strh	r2, [r3, #0]
 8021d50:	b005      	add	sp, #20
 8021d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d56:	f04f 0c00 	mov.w	ip, #0
 8021d5a:	4664      	mov	r4, ip
 8021d5c:	e6e5      	b.n	8021b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021d5e:	2300      	movs	r3, #0
 8021d60:	469c      	mov	ip, r3
 8021d62:	461a      	mov	r2, r3
 8021d64:	461c      	mov	r4, r3
 8021d66:	e707      	b.n	8021b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d68:	2300      	movs	r3, #0
 8021d6a:	461a      	mov	r2, r3
 8021d6c:	e704      	b.n	8021b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d6e:	460b      	mov	r3, r1
 8021d70:	460a      	mov	r2, r1
 8021d72:	e701      	b.n	8021b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d74:	2500      	movs	r5, #0
 8021d76:	46ab      	mov	fp, r5
 8021d78:	e72f      	b.n	8021bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021d7a:	2700      	movs	r7, #0
 8021d7c:	463d      	mov	r5, r7
 8021d7e:	4638      	mov	r0, r7
 8021d80:	46bb      	mov	fp, r7
 8021d82:	e754      	b.n	8021c2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d84:	4677      	mov	r7, lr
 8021d86:	4675      	mov	r5, lr
 8021d88:	4670      	mov	r0, lr
 8021d8a:	46f3      	mov	fp, lr
 8021d8c:	e74f      	b.n	8021c2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d8e:	2700      	movs	r7, #0
 8021d90:	4638      	mov	r0, r7
 8021d92:	e74c      	b.n	8021c2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d94:	460f      	mov	r7, r1
 8021d96:	4608      	mov	r0, r1
 8021d98:	e749      	b.n	8021c2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021da0:	b093      	sub	sp, #76	; 0x4c
 8021da2:	9210      	str	r2, [sp, #64]	; 0x40
 8021da4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021da6:	910e      	str	r1, [sp, #56]	; 0x38
 8021da8:	9306      	str	r3, [sp, #24]
 8021daa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021dae:	9011      	str	r0, [sp, #68]	; 0x44
 8021db0:	6850      	ldr	r0, [r2, #4]
 8021db2:	6812      	ldr	r2, [r2, #0]
 8021db4:	fb00 1303 	mla	r3, r0, r3, r1
 8021db8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021dbc:	9307      	str	r3, [sp, #28]
 8021dbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dc0:	681b      	ldr	r3, [r3, #0]
 8021dc2:	9308      	str	r3, [sp, #32]
 8021dc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dc6:	685b      	ldr	r3, [r3, #4]
 8021dc8:	9309      	str	r3, [sp, #36]	; 0x24
 8021dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021dcc:	2b00      	cmp	r3, #0
 8021dce:	dc03      	bgt.n	8021dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021dd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021dd2:	2b00      	cmp	r3, #0
 8021dd4:	f340 83b4 	ble.w	8022540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021dd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021dde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021de2:	1e48      	subs	r0, r1, #1
 8021de4:	1e55      	subs	r5, r2, #1
 8021de6:	9b06      	ldr	r3, [sp, #24]
 8021de8:	2b00      	cmp	r3, #0
 8021dea:	f340 8163 	ble.w	80220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021dee:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021df0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021df2:	1436      	asrs	r6, r6, #16
 8021df4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021df8:	d406      	bmi.n	8021e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021dfa:	4286      	cmp	r6, r0
 8021dfc:	da04      	bge.n	8021e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021dfe:	2b00      	cmp	r3, #0
 8021e00:	db02      	blt.n	8021e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021e02:	42ab      	cmp	r3, r5
 8021e04:	f2c0 8157 	blt.w	80220b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021e08:	3601      	adds	r6, #1
 8021e0a:	f100 8144 	bmi.w	8022096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021e0e:	42b1      	cmp	r1, r6
 8021e10:	f2c0 8141 	blt.w	8022096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021e14:	3301      	adds	r3, #1
 8021e16:	f100 813e 	bmi.w	8022096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021e1a:	429a      	cmp	r2, r3
 8021e1c:	f2c0 813b 	blt.w	8022096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021e20:	9b06      	ldr	r3, [sp, #24]
 8021e22:	9f07      	ldr	r7, [sp, #28]
 8021e24:	930f      	str	r3, [sp, #60]	; 0x3c
 8021e26:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021e2a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021e2c:	2b00      	cmp	r3, #0
 8021e2e:	f340 8164 	ble.w	80220fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021e32:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021e34:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021e36:	1418      	asrs	r0, r3, #16
 8021e38:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021e3a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021e3e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021e40:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021e44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e46:	142d      	asrs	r5, r5, #16
 8021e48:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021e4c:	f100 81ee 	bmi.w	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e50:	f102 3eff 	add.w	lr, r2, #4294967295
 8021e54:	4575      	cmp	r5, lr
 8021e56:	f280 81e9 	bge.w	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e5a:	2800      	cmp	r0, #0
 8021e5c:	f2c0 81e6 	blt.w	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e60:	f103 3eff 	add.w	lr, r3, #4294967295
 8021e64:	4570      	cmp	r0, lr
 8021e66:	f280 81e1 	bge.w	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e6c:	b212      	sxth	r2, r2
 8021e6e:	fb00 5002 	mla	r0, r0, r2, r5
 8021e72:	fa1f fe81 	uxth.w	lr, r1
 8021e76:	eb03 0a00 	add.w	sl, r3, r0
 8021e7a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021e7e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021e82:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021e86:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021e8a:	b29b      	uxth	r3, r3
 8021e8c:	f1bc 0f00 	cmp.w	ip, #0
 8021e90:	f000 8179 	beq.w	8022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021e94:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021e98:	940a      	str	r4, [sp, #40]	; 0x28
 8021e9a:	eb0a 0b02 	add.w	fp, sl, r2
 8021e9e:	fa1f fa8c 	uxth.w	sl, ip
 8021ea2:	fb0a fe0e 	mul.w	lr, sl, lr
 8021ea6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021eaa:	fa1f fa8a 	uxth.w	sl, sl
 8021eae:	eba5 050e 	sub.w	r5, r5, lr
 8021eb2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021eb6:	940b      	str	r4, [sp, #44]	; 0x2c
 8021eb8:	eba3 030a 	sub.w	r3, r3, sl
 8021ebc:	b2ad      	uxth	r5, r5
 8021ebe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021ec0:	b29b      	uxth	r3, r3
 8021ec2:	fb08 f505 	mul.w	r5, r8, r5
 8021ec6:	fb09 5303 	mla	r3, r9, r3, r5
 8021eca:	fb0a 3304 	mla	r3, sl, r4, r3
 8021ece:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ed0:	fb0e 3304 	mla	r3, lr, r4, r3
 8021ed4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021ed8:	2b00      	cmp	r3, #0
 8021eda:	f000 80cf 	beq.w	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021ede:	9c08      	ldr	r4, [sp, #32]
 8021ee0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021ee4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021ee8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021eec:	f000 8150 	beq.w	8022190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021ef0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021ef4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ef8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021efc:	fb09 f000 	mul.w	r0, r9, r0
 8021f00:	fb0a fe0e 	mul.w	lr, sl, lr
 8021f04:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021f08:	f100 0b20 	add.w	fp, r0, #32
 8021f0c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021f10:	44ce      	add	lr, r9
 8021f12:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021f16:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021f1a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021f1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021f22:	ea4e 0909 	orr.w	r9, lr, r9
 8021f26:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021f2a:	8868      	ldrh	r0, [r5, #2]
 8021f2c:	d019      	beq.n	8021f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021f2e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021f32:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021f36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f3a:	fb08 f800 	mul.w	r8, r8, r0
 8021f3e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021f42:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021f46:	f108 0b20 	add.w	fp, r8, #32
 8021f4a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021f4e:	4486      	add	lr, r0
 8021f50:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021f54:	0a00      	lsrs	r0, r0, #8
 8021f56:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021f5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f5e:	ea4e 0000 	orr.w	r0, lr, r0
 8021f62:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021f66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021f6a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021f6e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021f7a:	ea4e 0909 	orr.w	r9, lr, r9
 8021f7e:	ea4a 0000 	orr.w	r0, sl, r0
 8021f82:	f1bc 0f00 	cmp.w	ip, #0
 8021f86:	f000 8105 	beq.w	8022194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021f8a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021f8e:	3a01      	subs	r2, #1
 8021f90:	0052      	lsls	r2, r2, #1
 8021f92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021f94:	3202      	adds	r2, #2
 8021f96:	2cff      	cmp	r4, #255	; 0xff
 8021f98:	eb05 0e02 	add.w	lr, r5, r2
 8021f9c:	5aaa      	ldrh	r2, [r5, r2]
 8021f9e:	d018      	beq.n	8021fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021fa0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021fa4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021fa8:	fb04 fa02 	mul.w	sl, r4, r2
 8021fac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021fb0:	fb08 f805 	mul.w	r8, r8, r5
 8021fb4:	f10a 0520 	add.w	r5, sl, #32
 8021fb8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021fbc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021fc0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021fc4:	4442      	add	r2, r8
 8021fc6:	0a2d      	lsrs	r5, r5, #8
 8021fc8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021fcc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021fd0:	432a      	orrs	r2, r5
 8021fd2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fd4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021fd8:	2cff      	cmp	r4, #255	; 0xff
 8021fda:	d01a      	beq.n	8022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021fdc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021fe0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021fe4:	fb04 fa05 	mul.w	sl, r4, r5
 8021fe8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021fec:	fb08 f80e 	mul.w	r8, r8, lr
 8021ff0:	f10a 0e20 	add.w	lr, sl, #32
 8021ff4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021ff8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021ffc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022000:	4445      	add	r5, r8
 8022002:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022006:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802200a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802200e:	ea45 050e 	orr.w	r5, r5, lr
 8022012:	fb1c fe01 	smulbb	lr, ip, r1
 8022016:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802201a:	f1cc 0810 	rsb	r8, ip, #16
 802201e:	eba8 0801 	sub.w	r8, r8, r1
 8022022:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022026:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802202a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802202e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022032:	4341      	muls	r1, r0
 8022034:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022038:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802203c:	ea4a 0202 	orr.w	r2, sl, r2
 8022040:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022044:	fb09 1108 	mla	r1, r9, r8, r1
 8022048:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802204c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022050:	fb0c 1102 	mla	r1, ip, r2, r1
 8022054:	ea4b 0505 	orr.w	r5, fp, r5
 8022058:	fb0e 1e05 	mla	lr, lr, r5, r1
 802205c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022060:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022064:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022068:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802206c:	ea42 0e0e 	orr.w	lr, r2, lr
 8022070:	fa1f f28e 	uxth.w	r2, lr
 8022074:	2bff      	cmp	r3, #255	; 0xff
 8022076:	f040 80a1 	bne.w	80221bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802207a:	803a      	strh	r2, [r7, #0]
 802207c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802207e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022080:	4413      	add	r3, r2
 8022082:	931d      	str	r3, [sp, #116]	; 0x74
 8022084:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022086:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022088:	441a      	add	r2, r3
 802208a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802208c:	921e      	str	r2, [sp, #120]	; 0x78
 802208e:	3b01      	subs	r3, #1
 8022090:	3702      	adds	r7, #2
 8022092:	930f      	str	r3, [sp, #60]	; 0x3c
 8022094:	e6c9      	b.n	8021e2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022096:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022098:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802209a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802209c:	4433      	add	r3, r6
 802209e:	931d      	str	r3, [sp, #116]	; 0x74
 80220a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80220a2:	441c      	add	r4, r3
 80220a4:	9b06      	ldr	r3, [sp, #24]
 80220a6:	941e      	str	r4, [sp, #120]	; 0x78
 80220a8:	3b01      	subs	r3, #1
 80220aa:	9306      	str	r3, [sp, #24]
 80220ac:	9b07      	ldr	r3, [sp, #28]
 80220ae:	3302      	adds	r3, #2
 80220b0:	9307      	str	r3, [sp, #28]
 80220b2:	e698      	b.n	8021de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80220b4:	d028      	beq.n	8022108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80220b6:	9b06      	ldr	r3, [sp, #24]
 80220b8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80220ba:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80220bc:	3b01      	subs	r3, #1
 80220be:	fb00 5003 	mla	r0, r0, r3, r5
 80220c2:	1400      	asrs	r0, r0, #16
 80220c4:	f53f aeac 	bmi.w	8021e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80220c8:	3901      	subs	r1, #1
 80220ca:	4288      	cmp	r0, r1
 80220cc:	f6bf aea8 	bge.w	8021e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80220d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80220d2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80220d4:	fb01 0303 	mla	r3, r1, r3, r0
 80220d8:	141b      	asrs	r3, r3, #16
 80220da:	f53f aea1 	bmi.w	8021e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80220de:	3a01      	subs	r2, #1
 80220e0:	4293      	cmp	r3, r2
 80220e2:	f6bf ae9d 	bge.w	8021e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80220e6:	9b06      	ldr	r3, [sp, #24]
 80220e8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80220ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80220ee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80220f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80220f4:	2b00      	cmp	r3, #0
 80220f6:	f300 80b6 	bgt.w	8022266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80220fa:	9b06      	ldr	r3, [sp, #24]
 80220fc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022100:	9b07      	ldr	r3, [sp, #28]
 8022102:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022106:	9307      	str	r3, [sp, #28]
 8022108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802210a:	2b00      	cmp	r3, #0
 802210c:	f340 8218 	ble.w	8022540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022110:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022114:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022118:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802211c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802211e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022122:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022126:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802212a:	eef0 6a62 	vmov.f32	s13, s5
 802212e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022136:	ee77 2a62 	vsub.f32	s5, s14, s5
 802213a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802213e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022142:	eef0 6a43 	vmov.f32	s13, s6
 8022146:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802214a:	ee12 2a90 	vmov	r2, s5
 802214e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022152:	fb92 f3f3 	sdiv	r3, r2, r3
 8022156:	ee13 2a10 	vmov	r2, s6
 802215a:	931f      	str	r3, [sp, #124]	; 0x7c
 802215c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802215e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022162:	9320      	str	r3, [sp, #128]	; 0x80
 8022164:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022166:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022168:	3b01      	subs	r3, #1
 802216a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802216e:	930e      	str	r3, [sp, #56]	; 0x38
 8022170:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022172:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022176:	bf08      	it	eq
 8022178:	4613      	moveq	r3, r2
 802217a:	9306      	str	r3, [sp, #24]
 802217c:	eeb0 3a67 	vmov.f32	s6, s15
 8022180:	eef0 2a47 	vmov.f32	s5, s14
 8022184:	e621      	b.n	8021dca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022186:	fb08 f505 	mul.w	r5, r8, r5
 802218a:	fb09 5303 	mla	r3, r9, r3, r5
 802218e:	e6a1      	b.n	8021ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022190:	4681      	mov	r9, r0
 8022192:	e6c8      	b.n	8021f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022194:	f1c1 0210 	rsb	r2, r1, #16
 8022198:	4341      	muls	r1, r0
 802219a:	fb09 1902 	mla	r9, r9, r2, r1
 802219e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80221a2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80221a6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80221aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221b2:	ea42 0909 	orr.w	r9, r2, r9
 80221b6:	fa1f f289 	uxth.w	r2, r9
 80221ba:	e75b      	b.n	8022074 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80221bc:	f8b7 c000 	ldrh.w	ip, [r7]
 80221c0:	43db      	mvns	r3, r3
 80221c2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80221c6:	fa5f fe83 	uxtb.w	lr, r3
 80221ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80221ce:	fb00 f00e 	mul.w	r0, r0, lr
 80221d2:	1c41      	adds	r1, r0, #1
 80221d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80221d8:	1211      	asrs	r1, r2, #8
 80221da:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80221de:	f021 0107 	bic.w	r1, r1, #7
 80221e2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80221e6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80221ea:	48d7      	ldr	r0, [pc, #860]	; (8022548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80221ec:	fb05 f50e 	mul.w	r5, r5, lr
 80221f0:	b2c9      	uxtb	r1, r1
 80221f2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80221f6:	1c69      	adds	r1, r5, #1
 80221f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80221fc:	10d1      	asrs	r1, r2, #3
 80221fe:	f021 0103 	bic.w	r1, r1, #3
 8022202:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022206:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802220a:	b2db      	uxtb	r3, r3
 802220c:	00c9      	lsls	r1, r1, #3
 802220e:	fb03 f30e 	mul.w	r3, r3, lr
 8022212:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022216:	4301      	orrs	r1, r0
 8022218:	1c58      	adds	r0, r3, #1
 802221a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802221e:	00d2      	lsls	r2, r2, #3
 8022220:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022224:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022228:	430a      	orrs	r2, r1
 802222a:	e726      	b.n	802207a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802222c:	f115 0e01 	adds.w	lr, r5, #1
 8022230:	f53f af24 	bmi.w	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022234:	4572      	cmp	r2, lr
 8022236:	f6ff af21 	blt.w	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802223a:	f110 0e01 	adds.w	lr, r0, #1
 802223e:	f53f af1d 	bmi.w	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022242:	4573      	cmp	r3, lr
 8022244:	f6ff af1a 	blt.w	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022248:	b21b      	sxth	r3, r3
 802224a:	b212      	sxth	r2, r2
 802224c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022250:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022254:	9301      	str	r3, [sp, #4]
 8022256:	9200      	str	r2, [sp, #0]
 8022258:	4639      	mov	r1, r7
 802225a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802225e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022260:	f7ff fc24 	bl	8021aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022264:	e70a      	b.n	802207c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022266:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022268:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802226c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802226e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022272:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022274:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022278:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802227a:	141f      	asrs	r7, r3, #16
 802227c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802227e:	141b      	asrs	r3, r3, #16
 8022280:	fb01 3707 	mla	r7, r1, r7, r3
 8022284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022286:	fa1f fc82 	uxth.w	ip, r2
 802228a:	eb03 0a07 	add.w	sl, r3, r7
 802228e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022292:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022296:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802229a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802229e:	b29b      	uxth	r3, r3
 80222a0:	2d00      	cmp	r5, #0
 80222a2:	f000 80fe 	beq.w	80224a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80222a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80222aa:	940c      	str	r4, [sp, #48]	; 0x30
 80222ac:	eb0a 0b01 	add.w	fp, sl, r1
 80222b0:	fa1f fa85 	uxth.w	sl, r5
 80222b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80222b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80222bc:	fa1f fa8a 	uxth.w	sl, sl
 80222c0:	eba0 000c 	sub.w	r0, r0, ip
 80222c4:	eba3 030a 	sub.w	r3, r3, sl
 80222c8:	b280      	uxth	r0, r0
 80222ca:	fb08 f000 	mul.w	r0, r8, r0
 80222ce:	b29b      	uxth	r3, r3
 80222d0:	fb09 0303 	mla	r3, r9, r3, r0
 80222d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80222d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80222da:	940d      	str	r4, [sp, #52]	; 0x34
 80222dc:	fb0a 3300 	mla	r3, sl, r0, r3
 80222e0:	fb0c 3304 	mla	r3, ip, r4, r3
 80222e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80222e8:	2b00      	cmp	r3, #0
 80222ea:	f000 80cc 	beq.w	8022486 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80222ee:	9808      	ldr	r0, [sp, #32]
 80222f0:	9c08      	ldr	r4, [sp, #32]
 80222f2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80222f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80222fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80222fe:	f000 80d5 	beq.w	80224ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022302:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022306:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802230a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802230e:	fb09 f707 	mul.w	r7, r9, r7
 8022312:	fb0a fc0c 	mul.w	ip, sl, ip
 8022316:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802231a:	f107 0b20 	add.w	fp, r7, #32
 802231e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022322:	44cc      	add	ip, r9
 8022324:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022328:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802232c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022330:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022334:	ea4c 0909 	orr.w	r9, ip, r9
 8022338:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802233c:	8847      	ldrh	r7, [r0, #2]
 802233e:	d019      	beq.n	8022374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022340:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022344:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022348:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802234c:	fb08 f807 	mul.w	r8, r8, r7
 8022350:	fb0a fc0c 	mul.w	ip, sl, ip
 8022354:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022358:	f108 0b20 	add.w	fp, r8, #32
 802235c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022360:	44bc      	add	ip, r7
 8022362:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022366:	0a3f      	lsrs	r7, r7, #8
 8022368:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802236c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022370:	ea4c 0707 	orr.w	r7, ip, r7
 8022374:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022378:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802237c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022380:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022384:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022388:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802238c:	ea4c 0909 	orr.w	r9, ip, r9
 8022390:	ea4a 0707 	orr.w	r7, sl, r7
 8022394:	2d00      	cmp	r5, #0
 8022396:	f000 808b 	beq.w	80224b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802239a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802239e:	3901      	subs	r1, #1
 80223a0:	0049      	lsls	r1, r1, #1
 80223a2:	3102      	adds	r1, #2
 80223a4:	eb00 0c01 	add.w	ip, r0, r1
 80223a8:	5a41      	ldrh	r1, [r0, r1]
 80223aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80223ac:	28ff      	cmp	r0, #255	; 0xff
 80223ae:	d019      	beq.n	80223e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80223b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80223b2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80223b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80223ba:	fb04 fa01 	mul.w	sl, r4, r1
 80223be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80223c2:	fb08 f800 	mul.w	r8, r8, r0
 80223c6:	f10a 0020 	add.w	r0, sl, #32
 80223ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80223ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80223d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80223d6:	4441      	add	r1, r8
 80223d8:	0a00      	lsrs	r0, r0, #8
 80223da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80223de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223e2:	4301      	orrs	r1, r0
 80223e4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80223e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80223ea:	2cff      	cmp	r4, #255	; 0xff
 80223ec:	d01a      	beq.n	8022424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80223ee:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80223f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223f6:	fb04 fa00 	mul.w	sl, r4, r0
 80223fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80223fe:	fb08 f80c 	mul.w	r8, r8, ip
 8022402:	f10a 0c20 	add.w	ip, sl, #32
 8022406:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802240a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802240e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022412:	4440      	add	r0, r8
 8022414:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022418:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802241c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022420:	ea40 000c 	orr.w	r0, r0, ip
 8022424:	fb15 fc02 	smulbb	ip, r5, r2
 8022428:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802242c:	f1c5 0810 	rsb	r8, r5, #16
 8022430:	eba8 0802 	sub.w	r8, r8, r2
 8022434:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022438:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802243c:	437a      	muls	r2, r7
 802243e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022442:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022446:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802244a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802244e:	fb09 2208 	mla	r2, r9, r8, r2
 8022452:	ea4a 0101 	orr.w	r1, sl, r1
 8022456:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802245a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802245e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022462:	fb05 2201 	mla	r2, r5, r1, r2
 8022466:	ea4b 0000 	orr.w	r0, fp, r0
 802246a:	fb0c 2200 	mla	r2, ip, r0, r2
 802246e:	0d57      	lsrs	r7, r2, #21
 8022470:	0952      	lsrs	r2, r2, #5
 8022472:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022476:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802247a:	433a      	orrs	r2, r7
 802247c:	2bff      	cmp	r3, #255	; 0xff
 802247e:	b292      	uxth	r2, r2
 8022480:	d127      	bne.n	80224d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022482:	f8ae 2000 	strh.w	r2, [lr]
 8022486:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022488:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802248a:	4413      	add	r3, r2
 802248c:	931d      	str	r3, [sp, #116]	; 0x74
 802248e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022490:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022492:	441a      	add	r2, r3
 8022494:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022496:	921e      	str	r2, [sp, #120]	; 0x78
 8022498:	3b01      	subs	r3, #1
 802249a:	f10e 0e02 	add.w	lr, lr, #2
 802249e:	930f      	str	r3, [sp, #60]	; 0x3c
 80224a0:	e627      	b.n	80220f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80224a2:	fb08 f000 	mul.w	r0, r8, r0
 80224a6:	fb09 0303 	mla	r3, r9, r3, r0
 80224aa:	e71b      	b.n	80222e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80224ac:	46b9      	mov	r9, r7
 80224ae:	e743      	b.n	8022338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80224b0:	f1c2 0110 	rsb	r1, r2, #16
 80224b4:	437a      	muls	r2, r7
 80224b6:	fb09 2901 	mla	r9, r9, r1, r2
 80224ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80224be:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80224c2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80224c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224ce:	4302      	orrs	r2, r0
 80224d0:	e7d4      	b.n	802247c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80224d2:	f8be 7000 	ldrh.w	r7, [lr]
 80224d6:	4c1c      	ldr	r4, [pc, #112]	; (8022548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80224d8:	43db      	mvns	r3, r3
 80224da:	1238      	asrs	r0, r7, #8
 80224dc:	fa5f fc83 	uxtb.w	ip, r3
 80224e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80224e4:	10fd      	asrs	r5, r7, #3
 80224e6:	fb00 f00c 	mul.w	r0, r0, ip
 80224ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80224ee:	fb05 f10c 	mul.w	r1, r5, ip
 80224f2:	1c45      	adds	r5, r0, #1
 80224f4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80224f8:	1215      	asrs	r5, r2, #8
 80224fa:	f025 0507 	bic.w	r5, r5, #7
 80224fe:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022502:	1c4d      	adds	r5, r1, #1
 8022504:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022508:	10d1      	asrs	r1, r2, #3
 802250a:	f021 0103 	bic.w	r1, r1, #3
 802250e:	00fb      	lsls	r3, r7, #3
 8022510:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022514:	b2db      	uxtb	r3, r3
 8022516:	b2c0      	uxtb	r0, r0
 8022518:	00c9      	lsls	r1, r1, #3
 802251a:	fb03 f30c 	mul.w	r3, r3, ip
 802251e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022522:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022526:	4308      	orrs	r0, r1
 8022528:	1c59      	adds	r1, r3, #1
 802252a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802252e:	00d2      	lsls	r2, r2, #3
 8022530:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022534:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022538:	4318      	orrs	r0, r3
 802253a:	f8ae 0000 	strh.w	r0, [lr]
 802253e:	e7a2      	b.n	8022486 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022540:	b013      	add	sp, #76	; 0x4c
 8022542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022546:	bf00      	nop
 8022548:	fffff800 	.word	0xfffff800

0802254c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802254c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022550:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022554:	fb05 4c03 	mla	ip, r5, r3, r4
 8022558:	2d00      	cmp	r5, #0
 802255a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802255e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022562:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022566:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802256a:	8808      	ldrh	r0, [r1, #0]
 802256c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022570:	f2c0 80a7 	blt.w	80226c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022574:	45aa      	cmp	sl, r5
 8022576:	f340 80a4 	ble.w	80226c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802257a:	2c00      	cmp	r4, #0
 802257c:	f2c0 809f 	blt.w	80226be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022580:	42a3      	cmp	r3, r4
 8022582:	f340 809c 	ble.w	80226be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022586:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802258a:	1c62      	adds	r2, r4, #1
 802258c:	f100 809c 	bmi.w	80226c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022590:	4293      	cmp	r3, r2
 8022592:	f340 8099 	ble.w	80226c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022596:	f1b9 0f00 	cmp.w	r9, #0
 802259a:	f000 8095 	beq.w	80226c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802259e:	f8be c002 	ldrh.w	ip, [lr, #2]
 80225a2:	3501      	adds	r5, #1
 80225a4:	f100 8094 	bmi.w	80226d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80225a8:	45aa      	cmp	sl, r5
 80225aa:	f340 8091 	ble.w	80226d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80225ae:	2f00      	cmp	r7, #0
 80225b0:	f000 808e 	beq.w	80226d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80225b4:	2c00      	cmp	r4, #0
 80225b6:	f2c0 8089 	blt.w	80226cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80225ba:	42a3      	cmp	r3, r4
 80225bc:	f340 8086 	ble.w	80226cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80225c0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80225c4:	3401      	adds	r4, #1
 80225c6:	f100 8086 	bmi.w	80226d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80225ca:	42a3      	cmp	r3, r4
 80225cc:	f340 8083 	ble.w	80226d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80225d0:	f1b9 0f00 	cmp.w	r9, #0
 80225d4:	d07f      	beq.n	80226d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80225d6:	3301      	adds	r3, #1
 80225d8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80225dc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80225e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225e4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80225e8:	fb19 fe07 	smulbb	lr, r9, r7
 80225ec:	ea44 0808 	orr.w	r8, r4, r8
 80225f0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225f4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225f8:	f1c7 0210 	rsb	r2, r7, #16
 80225fc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022600:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022604:	ea44 0c0c 	orr.w	ip, r4, ip
 8022608:	eba2 0209 	sub.w	r2, r2, r9
 802260c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022610:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022614:	fb04 f40c 	mul.w	r4, r4, ip
 8022618:	fb02 4808 	mla	r8, r2, r8, r4
 802261c:	041a      	lsls	r2, r3, #16
 802261e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022622:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022626:	4313      	orrs	r3, r2
 8022628:	042a      	lsls	r2, r5, #16
 802262a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802262e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022632:	fb0e 8303 	mla	r3, lr, r3, r8
 8022636:	432a      	orrs	r2, r5
 8022638:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802263c:	fb07 3202 	mla	r2, r7, r2, r3
 8022640:	0d53      	lsrs	r3, r2, #21
 8022642:	0952      	lsrs	r2, r2, #5
 8022644:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022648:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802264c:	431a      	orrs	r2, r3
 802264e:	b293      	uxth	r3, r2
 8022650:	b2b4      	uxth	r4, r6
 8022652:	1202      	asrs	r2, r0, #8
 8022654:	43f6      	mvns	r6, r6
 8022656:	b2f6      	uxtb	r6, r6
 8022658:	121d      	asrs	r5, r3, #8
 802265a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802265e:	fb12 f206 	smulbb	r2, r2, r6
 8022662:	10c7      	asrs	r7, r0, #3
 8022664:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022668:	00c0      	lsls	r0, r0, #3
 802266a:	fb05 2504 	mla	r5, r5, r4, r2
 802266e:	b2c0      	uxtb	r0, r0
 8022670:	10da      	asrs	r2, r3, #3
 8022672:	00db      	lsls	r3, r3, #3
 8022674:	b2db      	uxtb	r3, r3
 8022676:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802267a:	fb10 f006 	smulbb	r0, r0, r6
 802267e:	b2ad      	uxth	r5, r5
 8022680:	fb03 0004 	mla	r0, r3, r4, r0
 8022684:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022688:	fb17 f706 	smulbb	r7, r7, r6
 802268c:	b280      	uxth	r0, r0
 802268e:	1c6b      	adds	r3, r5, #1
 8022690:	fb02 7204 	mla	r2, r2, r4, r7
 8022694:	b292      	uxth	r2, r2
 8022696:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802269a:	1c43      	adds	r3, r0, #1
 802269c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80226a0:	1c50      	adds	r0, r2, #1
 80226a2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80226a6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80226aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226ae:	0952      	lsrs	r2, r2, #5
 80226b0:	432b      	orrs	r3, r5
 80226b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226b6:	4313      	orrs	r3, r2
 80226b8:	800b      	strh	r3, [r1, #0]
 80226ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80226be:	4680      	mov	r8, r0
 80226c0:	e763      	b.n	802258a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80226c2:	4684      	mov	ip, r0
 80226c4:	4680      	mov	r8, r0
 80226c6:	e76c      	b.n	80225a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80226c8:	4684      	mov	ip, r0
 80226ca:	e76a      	b.n	80225a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80226cc:	4605      	mov	r5, r0
 80226ce:	e779      	b.n	80225c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80226d0:	4603      	mov	r3, r0
 80226d2:	4605      	mov	r5, r0
 80226d4:	e782      	b.n	80225dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80226d6:	4603      	mov	r3, r0
 80226d8:	e780      	b.n	80225dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080226da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226de:	b093      	sub	sp, #76	; 0x4c
 80226e0:	461d      	mov	r5, r3
 80226e2:	9210      	str	r2, [sp, #64]	; 0x40
 80226e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80226e6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80226ea:	920b      	str	r2, [sp, #44]	; 0x2c
 80226ec:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80226f0:	910a      	str	r1, [sp, #40]	; 0x28
 80226f2:	6859      	ldr	r1, [r3, #4]
 80226f4:	681b      	ldr	r3, [r3, #0]
 80226f6:	9011      	str	r0, [sp, #68]	; 0x44
 80226f8:	fb01 2707 	mla	r7, r1, r7, r2
 80226fc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022700:	9307      	str	r3, [sp, #28]
 8022702:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022704:	681b      	ldr	r3, [r3, #0]
 8022706:	9309      	str	r3, [sp, #36]	; 0x24
 8022708:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802270a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802270e:	43db      	mvns	r3, r3
 8022710:	b2db      	uxtb	r3, r3
 8022712:	9308      	str	r3, [sp, #32]
 8022714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022716:	2b00      	cmp	r3, #0
 8022718:	dc03      	bgt.n	8022722 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802271a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802271c:	2b00      	cmp	r3, #0
 802271e:	f340 8203 	ble.w	8022b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022722:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022724:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022728:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802272c:	1e48      	subs	r0, r1, #1
 802272e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022732:	2d00      	cmp	r5, #0
 8022734:	f340 80da 	ble.w	80228ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022738:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802273c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022740:	d406      	bmi.n	8022750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022742:	4586      	cmp	lr, r0
 8022744:	da04      	bge.n	8022750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022746:	2b00      	cmp	r3, #0
 8022748:	db02      	blt.n	8022750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802274a:	4563      	cmp	r3, ip
 802274c:	f2c0 80cf 	blt.w	80228ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022750:	f11e 0e01 	adds.w	lr, lr, #1
 8022754:	f100 80c1 	bmi.w	80228da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022758:	4571      	cmp	r1, lr
 802275a:	f2c0 80be 	blt.w	80228da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802275e:	3301      	adds	r3, #1
 8022760:	f100 80bb 	bmi.w	80228da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022764:	429a      	cmp	r2, r3
 8022766:	f2c0 80b8 	blt.w	80228da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802276a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802276e:	46a9      	mov	r9, r5
 8022770:	f1b9 0f00 	cmp.w	r9, #0
 8022774:	f340 80d8 	ble.w	8022928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022778:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802277a:	1421      	asrs	r1, r4, #16
 802277c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022780:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022784:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022788:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802278c:	f100 8111 	bmi.w	80229b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022790:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022794:	4551      	cmp	r1, sl
 8022796:	f280 810c 	bge.w	80229b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802279a:	2800      	cmp	r0, #0
 802279c:	f2c0 8109 	blt.w	80229b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80227a0:	f103 3aff 	add.w	sl, r3, #4294967295
 80227a4:	4550      	cmp	r0, sl
 80227a6:	f280 8104 	bge.w	80229b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80227aa:	fa0f f38e 	sxth.w	r3, lr
 80227ae:	fb00 1103 	mla	r1, r0, r3, r1
 80227b2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80227b4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80227b8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80227bc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80227c0:	f1bc 0f00 	cmp.w	ip, #0
 80227c4:	d007      	beq.n	80227d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80227c6:	005b      	lsls	r3, r3, #1
 80227c8:	eb0a 0003 	add.w	r0, sl, r3
 80227cc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80227d0:	930c      	str	r3, [sp, #48]	; 0x30
 80227d2:	8843      	ldrh	r3, [r0, #2]
 80227d4:	930d      	str	r3, [sp, #52]	; 0x34
 80227d6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80227da:	fb12 f30c 	smulbb	r3, r2, ip
 80227de:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80227e2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80227e6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80227ea:	10db      	asrs	r3, r3, #3
 80227ec:	ea40 000e 	orr.w	r0, r0, lr
 80227f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80227f4:	f1cc 0e10 	rsb	lr, ip, #16
 80227f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80227fc:	ebae 0e02 	sub.w	lr, lr, r2
 8022800:	ea4a 0101 	orr.w	r1, sl, r1
 8022804:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022808:	4351      	muls	r1, r2
 802280a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802280c:	9f08      	ldr	r7, [sp, #32]
 802280e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022812:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022816:	0410      	lsls	r0, r2, #16
 8022818:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802281c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022820:	4310      	orrs	r0, r2
 8022822:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022824:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022826:	0412      	lsls	r2, r2, #16
 8022828:	fb03 e000 	mla	r0, r3, r0, lr
 802282c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022830:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022834:	ea42 020e 	orr.w	r2, r2, lr
 8022838:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802283c:	fb03 0302 	mla	r3, r3, r2, r0
 8022840:	0d5a      	lsrs	r2, r3, #21
 8022842:	095b      	lsrs	r3, r3, #5
 8022844:	f8b8 0000 	ldrh.w	r0, [r8]
 8022848:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802284c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022850:	4313      	orrs	r3, r2
 8022852:	b29b      	uxth	r3, r3
 8022854:	1201      	asrs	r1, r0, #8
 8022856:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802285a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802285e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022862:	fb11 f107 	smulbb	r1, r1, r7
 8022866:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802286a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802286e:	00c0      	lsls	r0, r0, #3
 8022870:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022874:	b2c0      	uxtb	r0, r0
 8022876:	10d9      	asrs	r1, r3, #3
 8022878:	00db      	lsls	r3, r3, #3
 802287a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802287e:	b2db      	uxtb	r3, r3
 8022880:	fb10 f007 	smulbb	r0, r0, r7
 8022884:	fa1f fc8c 	uxth.w	ip, ip
 8022888:	fb03 0302 	mla	r3, r3, r2, r0
 802288c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022890:	fb1e fe07 	smulbb	lr, lr, r7
 8022894:	fb01 e102 	mla	r1, r1, r2, lr
 8022898:	b29a      	uxth	r2, r3
 802289a:	f10c 0301 	add.w	r3, ip, #1
 802289e:	b289      	uxth	r1, r1
 80228a0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80228a4:	1c53      	adds	r3, r2, #1
 80228a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80228aa:	1c4a      	adds	r2, r1, #1
 80228ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80228b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80228b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228b8:	0949      	lsrs	r1, r1, #5
 80228ba:	ea43 030c 	orr.w	r3, r3, ip
 80228be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228c2:	430b      	orrs	r3, r1
 80228c4:	f8a8 3000 	strh.w	r3, [r8]
 80228c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80228ca:	441c      	add	r4, r3
 80228cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80228ce:	f108 0802 	add.w	r8, r8, #2
 80228d2:	441e      	add	r6, r3
 80228d4:	f109 39ff 	add.w	r9, r9, #4294967295
 80228d8:	e74a      	b.n	8022770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80228da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80228dc:	441c      	add	r4, r3
 80228de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80228e0:	441e      	add	r6, r3
 80228e2:	9b07      	ldr	r3, [sp, #28]
 80228e4:	3302      	adds	r3, #2
 80228e6:	3d01      	subs	r5, #1
 80228e8:	9307      	str	r3, [sp, #28]
 80228ea:	e722      	b.n	8022732 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80228ec:	d022      	beq.n	8022934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80228ee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80228f0:	1e6b      	subs	r3, r5, #1
 80228f2:	fb00 4003 	mla	r0, r0, r3, r4
 80228f6:	1400      	asrs	r0, r0, #16
 80228f8:	f53f af37 	bmi.w	802276a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228fc:	3901      	subs	r1, #1
 80228fe:	4288      	cmp	r0, r1
 8022900:	f6bf af33 	bge.w	802276a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022904:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022906:	fb01 6303 	mla	r3, r1, r3, r6
 802290a:	141b      	asrs	r3, r3, #16
 802290c:	f53f af2d 	bmi.w	802276a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022910:	3a01      	subs	r2, #1
 8022912:	4293      	cmp	r3, r2
 8022914:	f6bf af29 	bge.w	802276a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022918:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802291c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022920:	46a8      	mov	r8, r5
 8022922:	f1b8 0f00 	cmp.w	r8, #0
 8022926:	dc5e      	bgt.n	80229e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022928:	9b07      	ldr	r3, [sp, #28]
 802292a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802292e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022932:	9307      	str	r3, [sp, #28]
 8022934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022936:	2b00      	cmp	r3, #0
 8022938:	f340 80f6 	ble.w	8022b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802293c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022940:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022944:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022948:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802294a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802294e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022952:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022956:	eef0 6a62 	vmov.f32	s13, s5
 802295a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802295e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022962:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022966:	ee16 4a90 	vmov	r4, s13
 802296a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802296e:	eef0 6a43 	vmov.f32	s13, s6
 8022972:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022976:	ee12 2a90 	vmov	r2, s5
 802297a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802297e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022982:	ee13 2a10 	vmov	r2, s6
 8022986:	931f      	str	r3, [sp, #124]	; 0x7c
 8022988:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802298a:	fb92 f3f3 	sdiv	r3, r2, r3
 802298e:	9320      	str	r3, [sp, #128]	; 0x80
 8022990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022992:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022994:	3b01      	subs	r3, #1
 8022996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802299a:	930a      	str	r3, [sp, #40]	; 0x28
 802299c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802299e:	ee16 6a90 	vmov	r6, s13
 80229a2:	bf14      	ite	ne
 80229a4:	461d      	movne	r5, r3
 80229a6:	4615      	moveq	r5, r2
 80229a8:	eeb0 3a67 	vmov.f32	s6, s15
 80229ac:	eef0 2a47 	vmov.f32	s5, s14
 80229b0:	e6b0      	b.n	8022714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80229b2:	f111 0a01 	adds.w	sl, r1, #1
 80229b6:	d487      	bmi.n	80228c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80229b8:	45d6      	cmp	lr, sl
 80229ba:	db85      	blt.n	80228c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80229bc:	f110 0a01 	adds.w	sl, r0, #1
 80229c0:	d482      	bmi.n	80228c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80229c2:	4553      	cmp	r3, sl
 80229c4:	db80      	blt.n	80228c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80229c6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80229c8:	9101      	str	r1, [sp, #4]
 80229ca:	b21b      	sxth	r3, r3
 80229cc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80229d0:	9300      	str	r3, [sp, #0]
 80229d2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80229d6:	fa0f f38e 	sxth.w	r3, lr
 80229da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80229dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80229de:	4641      	mov	r1, r8
 80229e0:	f7ff fdb4 	bl	802254c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80229e4:	e770      	b.n	80228c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80229e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229e8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80229ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229ee:	1430      	asrs	r0, r6, #16
 80229f0:	1423      	asrs	r3, r4, #16
 80229f2:	fb01 3000 	mla	r0, r1, r0, r3
 80229f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229f8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80229fc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022a00:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022a04:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022a08:	8858      	ldrh	r0, [r3, #2]
 8022a0a:	f1be 0f00 	cmp.w	lr, #0
 8022a0e:	d00b      	beq.n	8022a28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022a10:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022a14:	3901      	subs	r1, #1
 8022a16:	0049      	lsls	r1, r1, #1
 8022a18:	3102      	adds	r1, #2
 8022a1a:	eb03 0b01 	add.w	fp, r3, r1
 8022a1e:	5a5b      	ldrh	r3, [r3, r1]
 8022a20:	930e      	str	r3, [sp, #56]	; 0x38
 8022a22:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022a26:	930f      	str	r3, [sp, #60]	; 0x3c
 8022a28:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022a2c:	fb12 f30e 	smulbb	r3, r2, lr
 8022a30:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022a34:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022a38:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022a3c:	10db      	asrs	r3, r3, #3
 8022a3e:	ea41 010c 	orr.w	r1, r1, ip
 8022a42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022a46:	f1ce 0c10 	rsb	ip, lr, #16
 8022a4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a4e:	ebac 0c02 	sub.w	ip, ip, r2
 8022a52:	ea4b 0000 	orr.w	r0, fp, r0
 8022a56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a5a:	4350      	muls	r0, r2
 8022a5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022a5e:	9f08      	ldr	r7, [sp, #32]
 8022a60:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022a64:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022a68:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022a6c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022a70:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022a72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022a74:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022a78:	0412      	lsls	r2, r2, #16
 8022a7a:	ea4b 0101 	orr.w	r1, fp, r1
 8022a7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a82:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022a86:	fb03 c101 	mla	r1, r3, r1, ip
 8022a8a:	4302      	orrs	r2, r0
 8022a8c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022a90:	fb03 1202 	mla	r2, r3, r2, r1
 8022a94:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022a98:	0952      	lsrs	r2, r2, #5
 8022a9a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022a9e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022aa2:	f8b9 2000 	ldrh.w	r2, [r9]
 8022aa6:	ea4b 0303 	orr.w	r3, fp, r3
 8022aaa:	b29b      	uxth	r3, r3
 8022aac:	1211      	asrs	r1, r2, #8
 8022aae:	1218      	asrs	r0, r3, #8
 8022ab0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ab4:	fb11 f107 	smulbb	r1, r1, r7
 8022ab8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022abc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022ac0:	00d2      	lsls	r2, r2, #3
 8022ac2:	fb00 100a 	mla	r0, r0, sl, r1
 8022ac6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022aca:	10d9      	asrs	r1, r3, #3
 8022acc:	b2d2      	uxtb	r2, r2
 8022ace:	00db      	lsls	r3, r3, #3
 8022ad0:	fb1c fc07 	smulbb	ip, ip, r7
 8022ad4:	fb12 f207 	smulbb	r2, r2, r7
 8022ad8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022adc:	b2db      	uxtb	r3, r3
 8022ade:	b280      	uxth	r0, r0
 8022ae0:	fb01 c10a 	mla	r1, r1, sl, ip
 8022ae4:	fb03 230a 	mla	r3, r3, sl, r2
 8022ae8:	b29b      	uxth	r3, r3
 8022aea:	b289      	uxth	r1, r1
 8022aec:	1c42      	adds	r2, r0, #1
 8022aee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022af2:	f101 0c01 	add.w	ip, r1, #1
 8022af6:	1c5a      	adds	r2, r3, #1
 8022af8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022afc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022b00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022b02:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022b06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022b0a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022b0e:	4310      	orrs	r0, r2
 8022b10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022b14:	441c      	add	r4, r3
 8022b16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b18:	ea40 000c 	orr.w	r0, r0, ip
 8022b1c:	f829 0b02 	strh.w	r0, [r9], #2
 8022b20:	441e      	add	r6, r3
 8022b22:	f108 38ff 	add.w	r8, r8, #4294967295
 8022b26:	e6fc      	b.n	8022922 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022b28:	b013      	add	sp, #76	; 0x4c
 8022b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022b2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022b32:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022b36:	fb0e 4703 	mla	r7, lr, r3, r4
 8022b3a:	f1be 0f00 	cmp.w	lr, #0
 8022b3e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022b42:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022b46:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022b4a:	8808      	ldrh	r0, [r1, #0]
 8022b4c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022b50:	db60      	blt.n	8022c14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022b52:	45f1      	cmp	r9, lr
 8022b54:	dd5e      	ble.n	8022c14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022b56:	2c00      	cmp	r4, #0
 8022b58:	db5a      	blt.n	8022c10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022b5a:	42a3      	cmp	r3, r4
 8022b5c:	dd58      	ble.n	8022c10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022b5e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022b62:	1c62      	adds	r2, r4, #1
 8022b64:	d459      	bmi.n	8022c1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b66:	4293      	cmp	r3, r2
 8022b68:	dd57      	ble.n	8022c1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b6a:	2d00      	cmp	r5, #0
 8022b6c:	d055      	beq.n	8022c1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b6e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022b72:	f11e 0e01 	adds.w	lr, lr, #1
 8022b76:	d454      	bmi.n	8022c22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b78:	45f1      	cmp	r9, lr
 8022b7a:	dd52      	ble.n	8022c22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b7c:	2e00      	cmp	r6, #0
 8022b7e:	d050      	beq.n	8022c22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b80:	2c00      	cmp	r4, #0
 8022b82:	db4c      	blt.n	8022c1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022b84:	42a3      	cmp	r3, r4
 8022b86:	dd4a      	ble.n	8022c1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022b88:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022b8c:	3401      	adds	r4, #1
 8022b8e:	d405      	bmi.n	8022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b90:	42a3      	cmp	r3, r4
 8022b92:	dd03      	ble.n	8022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b94:	b115      	cbz	r5, 8022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b96:	3301      	adds	r3, #1
 8022b98:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022b9c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022ba0:	fb15 f406 	smulbb	r4, r5, r6
 8022ba4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ba8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022bac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022bb0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022bb4:	ea43 0c0c 	orr.w	ip, r3, ip
 8022bb8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022bbc:	f1c6 0310 	rsb	r3, r6, #16
 8022bc0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022bc4:	1b5b      	subs	r3, r3, r5
 8022bc6:	ea4e 0707 	orr.w	r7, lr, r7
 8022bca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022bce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022bd2:	437d      	muls	r5, r7
 8022bd4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022bd8:	0403      	lsls	r3, r0, #16
 8022bda:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bde:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022be2:	4318      	orrs	r0, r3
 8022be4:	0413      	lsls	r3, r2, #16
 8022be6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022bee:	4313      	orrs	r3, r2
 8022bf0:	fb04 c000 	mla	r0, r4, r0, ip
 8022bf4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022bf8:	fb06 0003 	mla	r0, r6, r3, r0
 8022bfc:	0d43      	lsrs	r3, r0, #21
 8022bfe:	0940      	lsrs	r0, r0, #5
 8022c00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c04:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c08:	4318      	orrs	r0, r3
 8022c0a:	8008      	strh	r0, [r1, #0]
 8022c0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022c10:	4684      	mov	ip, r0
 8022c12:	e7a6      	b.n	8022b62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022c14:	4607      	mov	r7, r0
 8022c16:	4684      	mov	ip, r0
 8022c18:	e7ab      	b.n	8022b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022c1a:	4607      	mov	r7, r0
 8022c1c:	e7a9      	b.n	8022b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022c1e:	4602      	mov	r2, r0
 8022c20:	e7b4      	b.n	8022b8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022c22:	4602      	mov	r2, r0
 8022c24:	e7ba      	b.n	8022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022c26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c2a:	b08f      	sub	sp, #60	; 0x3c
 8022c2c:	461d      	mov	r5, r3
 8022c2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022c30:	920c      	str	r2, [sp, #48]	; 0x30
 8022c32:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022c36:	9107      	str	r1, [sp, #28]
 8022c38:	6859      	ldr	r1, [r3, #4]
 8022c3a:	681b      	ldr	r3, [r3, #0]
 8022c3c:	900d      	str	r0, [sp, #52]	; 0x34
 8022c3e:	fb01 2707 	mla	r7, r1, r7, r2
 8022c42:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022c46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c48:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022c4c:	f8d3 8000 	ldr.w	r8, [r3]
 8022c50:	9b07      	ldr	r3, [sp, #28]
 8022c52:	2b00      	cmp	r3, #0
 8022c54:	dc03      	bgt.n	8022c5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022c58:	2b00      	cmp	r3, #0
 8022c5a:	f340 8181 	ble.w	8022f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022c5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c68:	1e48      	subs	r0, r1, #1
 8022c6a:	f102 3cff 	add.w	ip, r2, #4294967295
 8022c6e:	2d00      	cmp	r5, #0
 8022c70:	f340 809b 	ble.w	8022daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022c74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022c78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022c7c:	d406      	bmi.n	8022c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c7e:	4586      	cmp	lr, r0
 8022c80:	da04      	bge.n	8022c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c82:	2b00      	cmp	r3, #0
 8022c84:	db02      	blt.n	8022c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c86:	4563      	cmp	r3, ip
 8022c88:	f2c0 8090 	blt.w	8022dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022c8c:	f11e 0e01 	adds.w	lr, lr, #1
 8022c90:	f100 8084 	bmi.w	8022d9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c94:	4571      	cmp	r1, lr
 8022c96:	f2c0 8081 	blt.w	8022d9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c9a:	3301      	adds	r3, #1
 8022c9c:	d47e      	bmi.n	8022d9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c9e:	429a      	cmp	r2, r3
 8022ca0:	db7c      	blt.n	8022d9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ca2:	46aa      	mov	sl, r5
 8022ca4:	46b9      	mov	r9, r7
 8022ca6:	f1ba 0f00 	cmp.w	sl, #0
 8022caa:	f340 8099 	ble.w	8022de0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022cae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cb0:	1421      	asrs	r1, r4, #16
 8022cb2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022cb6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022cba:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022cbe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022cc2:	f100 80d0 	bmi.w	8022e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022cc6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022cca:	4559      	cmp	r1, fp
 8022ccc:	f280 80cb 	bge.w	8022e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022cd0:	2800      	cmp	r0, #0
 8022cd2:	f2c0 80c8 	blt.w	8022e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022cd6:	f103 3bff 	add.w	fp, r3, #4294967295
 8022cda:	4558      	cmp	r0, fp
 8022cdc:	f280 80c3 	bge.w	8022e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ce0:	fa0f fe8e 	sxth.w	lr, lr
 8022ce4:	fb00 110e 	mla	r1, r0, lr, r1
 8022ce8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022cec:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022cf0:	8841      	ldrh	r1, [r0, #2]
 8022cf2:	f1bc 0f00 	cmp.w	ip, #0
 8022cf6:	d00b      	beq.n	8022d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022cf8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022cfc:	3b01      	subs	r3, #1
 8022cfe:	005b      	lsls	r3, r3, #1
 8022d00:	3302      	adds	r3, #2
 8022d02:	eb00 0e03 	add.w	lr, r0, r3
 8022d06:	5ac3      	ldrh	r3, [r0, r3]
 8022d08:	9308      	str	r3, [sp, #32]
 8022d0a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022d0e:	9309      	str	r3, [sp, #36]	; 0x24
 8022d10:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022d14:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022d18:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022d1c:	ea40 000b 	orr.w	r0, r0, fp
 8022d20:	fb12 f30c 	smulbb	r3, r2, ip
 8022d24:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022d28:	10db      	asrs	r3, r3, #3
 8022d2a:	f1cc 0e10 	rsb	lr, ip, #16
 8022d2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022d32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d36:	ebae 0e02 	sub.w	lr, lr, r2
 8022d3a:	ea4b 0101 	orr.w	r1, fp, r1
 8022d3e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022d42:	4351      	muls	r1, r2
 8022d44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022d46:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022d4a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022d4e:	0410      	lsls	r0, r2, #16
 8022d50:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022d54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d58:	4310      	orrs	r0, r2
 8022d5a:	9a08      	ldr	r2, [sp, #32]
 8022d5c:	9908      	ldr	r1, [sp, #32]
 8022d5e:	0412      	lsls	r2, r2, #16
 8022d60:	fb03 e000 	mla	r0, r3, r0, lr
 8022d64:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d68:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022d6c:	ea42 020e 	orr.w	r2, r2, lr
 8022d70:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022d74:	fb03 0302 	mla	r3, r3, r2, r0
 8022d78:	0d5a      	lsrs	r2, r3, #21
 8022d7a:	095b      	lsrs	r3, r3, #5
 8022d7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022d80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d84:	4313      	orrs	r3, r2
 8022d86:	f8a9 3000 	strh.w	r3, [r9]
 8022d8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022d8c:	441c      	add	r4, r3
 8022d8e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022d90:	f109 0902 	add.w	r9, r9, #2
 8022d94:	441e      	add	r6, r3
 8022d96:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022d9a:	e784      	b.n	8022ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022d9c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022d9e:	441c      	add	r4, r3
 8022da0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022da2:	3d01      	subs	r5, #1
 8022da4:	441e      	add	r6, r3
 8022da6:	3702      	adds	r7, #2
 8022da8:	e761      	b.n	8022c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022daa:	d01d      	beq.n	8022de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022dac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022dae:	1e6b      	subs	r3, r5, #1
 8022db0:	fb00 4003 	mla	r0, r0, r3, r4
 8022db4:	1400      	asrs	r0, r0, #16
 8022db6:	f53f af74 	bmi.w	8022ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022dba:	3901      	subs	r1, #1
 8022dbc:	4288      	cmp	r0, r1
 8022dbe:	f6bf af70 	bge.w	8022ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022dc2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022dc4:	fb01 6303 	mla	r3, r1, r3, r6
 8022dc8:	141b      	asrs	r3, r3, #16
 8022dca:	f53f af6a 	bmi.w	8022ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022dce:	3a01      	subs	r2, #1
 8022dd0:	4293      	cmp	r3, r2
 8022dd2:	f6bf af66 	bge.w	8022ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022dd6:	46a9      	mov	r9, r5
 8022dd8:	46ba      	mov	sl, r7
 8022dda:	f1b9 0f00 	cmp.w	r9, #0
 8022dde:	dc5a      	bgt.n	8022e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022de0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022de4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022de8:	9b07      	ldr	r3, [sp, #28]
 8022dea:	2b00      	cmp	r3, #0
 8022dec:	f340 80b8 	ble.w	8022f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022df0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022df4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022df8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022dfc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022dfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e0a:	eef0 6a62 	vmov.f32	s13, s5
 8022e0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e1a:	ee16 4a90 	vmov	r4, s13
 8022e1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e22:	eef0 6a43 	vmov.f32	s13, s6
 8022e26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e2a:	ee12 2a90 	vmov	r2, s5
 8022e2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e32:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e36:	ee13 2a10 	vmov	r2, s6
 8022e3a:	931b      	str	r3, [sp, #108]	; 0x6c
 8022e3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022e3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e42:	931c      	str	r3, [sp, #112]	; 0x70
 8022e44:	9b07      	ldr	r3, [sp, #28]
 8022e46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022e48:	3b01      	subs	r3, #1
 8022e4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e4e:	9307      	str	r3, [sp, #28]
 8022e50:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022e52:	ee16 6a90 	vmov	r6, s13
 8022e56:	bf14      	ite	ne
 8022e58:	461d      	movne	r5, r3
 8022e5a:	4615      	moveq	r5, r2
 8022e5c:	eeb0 3a67 	vmov.f32	s6, s15
 8022e60:	eef0 2a47 	vmov.f32	s5, s14
 8022e64:	e6f4      	b.n	8022c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022e66:	f111 0b01 	adds.w	fp, r1, #1
 8022e6a:	d48e      	bmi.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e6c:	45de      	cmp	lr, fp
 8022e6e:	db8c      	blt.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e70:	f110 0b01 	adds.w	fp, r0, #1
 8022e74:	d489      	bmi.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e76:	455b      	cmp	r3, fp
 8022e78:	db87      	blt.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e7a:	b21b      	sxth	r3, r3
 8022e7c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022e80:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022e84:	9300      	str	r3, [sp, #0]
 8022e86:	4642      	mov	r2, r8
 8022e88:	fa0f f38e 	sxth.w	r3, lr
 8022e8c:	4649      	mov	r1, r9
 8022e8e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022e90:	f7ff fe4d 	bl	8022b2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022e94:	e779      	b.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022e9c:	1420      	asrs	r0, r4, #16
 8022e9e:	1431      	asrs	r1, r6, #16
 8022ea0:	fb03 0101 	mla	r1, r3, r1, r0
 8022ea4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022ea8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022eac:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022eb0:	8841      	ldrh	r1, [r0, #2]
 8022eb2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022eb6:	f1be 0f00 	cmp.w	lr, #0
 8022eba:	d00b      	beq.n	8022ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022ebc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022ec0:	3b01      	subs	r3, #1
 8022ec2:	005b      	lsls	r3, r3, #1
 8022ec4:	3302      	adds	r3, #2
 8022ec6:	eb00 0b03 	add.w	fp, r0, r3
 8022eca:	5ac3      	ldrh	r3, [r0, r3]
 8022ecc:	930a      	str	r3, [sp, #40]	; 0x28
 8022ece:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022ed2:	930b      	str	r3, [sp, #44]	; 0x2c
 8022ed4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022ed8:	fb12 f30e 	smulbb	r3, r2, lr
 8022edc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ee0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022ee4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ee8:	10db      	asrs	r3, r3, #3
 8022eea:	ea40 000c 	orr.w	r0, r0, ip
 8022eee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ef2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ef6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022efa:	ebac 0c02 	sub.w	ip, ip, r2
 8022efe:	ea4b 0101 	orr.w	r1, fp, r1
 8022f02:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f06:	4351      	muls	r1, r2
 8022f08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022f0a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022f0e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022f12:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022f16:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022f1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022f1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022f1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f22:	0412      	lsls	r2, r2, #16
 8022f24:	ea4b 0000 	orr.w	r0, fp, r0
 8022f28:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f2c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8022f30:	fb03 c000 	mla	r0, r3, r0, ip
 8022f34:	ea42 0b0b 	orr.w	fp, r2, fp
 8022f38:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022f3c:	fb03 000b 	mla	r0, r3, fp, r0
 8022f40:	0d43      	lsrs	r3, r0, #21
 8022f42:	0940      	lsrs	r0, r0, #5
 8022f44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f4c:	4318      	orrs	r0, r3
 8022f4e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022f50:	f82a 0b02 	strh.w	r0, [sl], #2
 8022f54:	441c      	add	r4, r3
 8022f56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f58:	f109 39ff 	add.w	r9, r9, #4294967295
 8022f5c:	441e      	add	r6, r3
 8022f5e:	e73c      	b.n	8022dda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022f60:	b00f      	add	sp, #60	; 0x3c
 8022f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022f66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f6a:	b085      	sub	sp, #20
 8022f6c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022f70:	9102      	str	r1, [sp, #8]
 8022f72:	2c00      	cmp	r4, #0
 8022f74:	fb04 7103 	mla	r1, r4, r3, r7
 8022f78:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022f7c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022f80:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022f84:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022f88:	f2c0 811b 	blt.w	80231c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022f8c:	45a6      	cmp	lr, r4
 8022f8e:	f340 8118 	ble.w	80231c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022f92:	2f00      	cmp	r7, #0
 8022f94:	f2c0 8113 	blt.w	80231be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022f98:	42bb      	cmp	r3, r7
 8022f9a:	f340 8110 	ble.w	80231be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022f9e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022fa2:	1c7a      	adds	r2, r7, #1
 8022fa4:	f100 8110 	bmi.w	80231c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022fa8:	4293      	cmp	r3, r2
 8022faa:	f340 810d 	ble.w	80231c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022fae:	2e00      	cmp	r6, #0
 8022fb0:	f000 810c 	beq.w	80231cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022fb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022fb8:	3401      	adds	r4, #1
 8022fba:	f100 810b 	bmi.w	80231d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022fbe:	45a6      	cmp	lr, r4
 8022fc0:	f340 8108 	ble.w	80231d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022fc4:	2800      	cmp	r0, #0
 8022fc6:	f000 8108 	beq.w	80231da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022fca:	2f00      	cmp	r7, #0
 8022fcc:	f2c0 8100 	blt.w	80231d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022fd0:	42bb      	cmp	r3, r7
 8022fd2:	f340 80fd 	ble.w	80231d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022fd6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022fda:	3701      	adds	r7, #1
 8022fdc:	f100 8100 	bmi.w	80231e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022fe0:	42bb      	cmp	r3, r7
 8022fe2:	f340 80fd 	ble.w	80231e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022fe6:	2e00      	cmp	r6, #0
 8022fe8:	f000 80fc 	beq.w	80231e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022fec:	3301      	adds	r3, #1
 8022fee:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022ff2:	b2b6      	uxth	r6, r6
 8022ff4:	b280      	uxth	r0, r0
 8022ff6:	fb00 fe06 	mul.w	lr, r0, r6
 8022ffa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022ffe:	0136      	lsls	r6, r6, #4
 8023000:	eba6 070e 	sub.w	r7, r6, lr
 8023004:	b280      	uxth	r0, r0
 8023006:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802300a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802300e:	b2bf      	uxth	r7, r7
 8023010:	1a1b      	subs	r3, r3, r0
 8023012:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023016:	b29b      	uxth	r3, r3
 8023018:	fb0a f607 	mul.w	r6, sl, r7
 802301c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023020:	fb0b 6603 	mla	r6, fp, r3, r6
 8023024:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023028:	fb00 6609 	mla	r6, r0, r9, r6
 802302c:	fb0e 6608 	mla	r6, lr, r8, r6
 8023030:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023034:	9600      	str	r6, [sp, #0]
 8023036:	2e00      	cmp	r6, #0
 8023038:	f000 80be 	beq.w	80231b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802303c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023040:	fb0b fc0c 	mul.w	ip, fp, ip
 8023044:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023048:	fb0b f505 	mul.w	r5, fp, r5
 802304c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023050:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023054:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023058:	44dc      	add	ip, fp
 802305a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802305e:	9501      	str	r5, [sp, #4]
 8023060:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023064:	9503      	str	r5, [sp, #12]
 8023066:	9d01      	ldr	r5, [sp, #4]
 8023068:	9e02      	ldr	r6, [sp, #8]
 802306a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802306e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023072:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023076:	fb0a fc0c 	mul.w	ip, sl, ip
 802307a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802307e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023082:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023086:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802308a:	4465      	add	r5, ip
 802308c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023090:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023094:	fb09 fc0c 	mul.w	ip, r9, ip
 8023098:	fb09 f904 	mul.w	r9, r9, r4
 802309c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80230a0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80230a4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80230a8:	fb08 f404 	mul.w	r4, r8, r4
 80230ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80230b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80230b4:	fb08 f802 	mul.w	r8, r8, r2
 80230b8:	fb0a fa01 	mul.w	sl, sl, r1
 80230bc:	0a22      	lsrs	r2, r4, #8
 80230be:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80230c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80230c6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80230ca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80230ce:	4414      	add	r4, r2
 80230d0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80230d4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80230d8:	0a2d      	lsrs	r5, r5, #8
 80230da:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80230de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80230e2:	9a03      	ldr	r2, [sp, #12]
 80230e4:	8836      	ldrh	r6, [r6, #0]
 80230e6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80230ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80230ee:	437d      	muls	r5, r7
 80230f0:	4461      	add	r1, ip
 80230f2:	0a24      	lsrs	r4, r4, #8
 80230f4:	fb02 5503 	mla	r5, r2, r3, r5
 80230f8:	0a09      	lsrs	r1, r1, #8
 80230fa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80230fe:	fb04 540e 	mla	r4, r4, lr, r5
 8023102:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023106:	fb01 4100 	mla	r1, r1, r0, r4
 802310a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802310e:	0a09      	lsrs	r1, r1, #8
 8023110:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023114:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023118:	fb07 f70a 	mul.w	r7, r7, sl
 802311c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023120:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023124:	fb03 7101 	mla	r1, r3, r1, r7
 8023128:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802312c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023130:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023134:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023138:	fb00 e101 	mla	r1, r0, r1, lr
 802313c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023140:	9a00      	ldr	r2, [sp, #0]
 8023142:	b287      	uxth	r7, r0
 8023144:	437a      	muls	r2, r7
 8023146:	0a09      	lsrs	r1, r1, #8
 8023148:	1c53      	adds	r3, r2, #1
 802314a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802314e:	4321      	orrs	r1, r4
 8023150:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023154:	1235      	asrs	r5, r6, #8
 8023156:	0c0a      	lsrs	r2, r1, #16
 8023158:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802315c:	b2db      	uxtb	r3, r3
 802315e:	fb12 f207 	smulbb	r2, r2, r7
 8023162:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023166:	fb05 2503 	mla	r5, r5, r3, r2
 802316a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802316e:	10f2      	asrs	r2, r6, #3
 8023170:	b2c8      	uxtb	r0, r1
 8023172:	00f6      	lsls	r6, r6, #3
 8023174:	fb14 f407 	smulbb	r4, r4, r7
 8023178:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802317c:	b2f6      	uxtb	r6, r6
 802317e:	fb10 f007 	smulbb	r0, r0, r7
 8023182:	fb02 4203 	mla	r2, r2, r3, r4
 8023186:	b2ad      	uxth	r5, r5
 8023188:	fb06 0303 	mla	r3, r6, r3, r0
 802318c:	b299      	uxth	r1, r3
 802318e:	b294      	uxth	r4, r2
 8023190:	1c6b      	adds	r3, r5, #1
 8023192:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023196:	1c62      	adds	r2, r4, #1
 8023198:	1c4b      	adds	r3, r1, #1
 802319a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802319e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80231a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80231a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80231aa:	0952      	lsrs	r2, r2, #5
 80231ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231b0:	432b      	orrs	r3, r5
 80231b2:	4313      	orrs	r3, r2
 80231b4:	9a02      	ldr	r2, [sp, #8]
 80231b6:	8013      	strh	r3, [r2, #0]
 80231b8:	b005      	add	sp, #20
 80231ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231be:	2500      	movs	r5, #0
 80231c0:	e6ef      	b.n	8022fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80231c2:	2100      	movs	r1, #0
 80231c4:	460d      	mov	r5, r1
 80231c6:	e6f7      	b.n	8022fb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80231c8:	2100      	movs	r1, #0
 80231ca:	e6f5      	b.n	8022fb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80231cc:	4631      	mov	r1, r6
 80231ce:	e6f3      	b.n	8022fb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80231d0:	2400      	movs	r4, #0
 80231d2:	e702      	b.n	8022fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80231d4:	2200      	movs	r2, #0
 80231d6:	4614      	mov	r4, r2
 80231d8:	e70b      	b.n	8022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80231da:	4602      	mov	r2, r0
 80231dc:	4604      	mov	r4, r0
 80231de:	e708      	b.n	8022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80231e0:	2200      	movs	r2, #0
 80231e2:	e706      	b.n	8022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80231e4:	4632      	mov	r2, r6
 80231e6:	e704      	b.n	8022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080231e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231ec:	b09d      	sub	sp, #116	; 0x74
 80231ee:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80231f2:	9219      	str	r2, [sp, #100]	; 0x64
 80231f4:	9307      	str	r3, [sp, #28]
 80231f6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80231f8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80231fc:	931a      	str	r3, [sp, #104]	; 0x68
 80231fe:	9117      	str	r1, [sp, #92]	; 0x5c
 8023200:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023204:	901b      	str	r0, [sp, #108]	; 0x6c
 8023206:	6850      	ldr	r0, [r2, #4]
 8023208:	6812      	ldr	r2, [r2, #0]
 802320a:	fb00 1303 	mla	r3, r0, r3, r1
 802320e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023212:	930a      	str	r3, [sp, #40]	; 0x28
 8023214:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023216:	681b      	ldr	r3, [r3, #0]
 8023218:	9310      	str	r3, [sp, #64]	; 0x40
 802321a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802321e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023220:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023222:	2b00      	cmp	r3, #0
 8023224:	dc03      	bgt.n	802322e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023226:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023228:	2b00      	cmp	r3, #0
 802322a:	f340 8375 	ble.w	8023918 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802322e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023230:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023234:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023238:	1e48      	subs	r0, r1, #1
 802323a:	1e57      	subs	r7, r2, #1
 802323c:	9b07      	ldr	r3, [sp, #28]
 802323e:	2b00      	cmp	r3, #0
 8023240:	f340 818e 	ble.w	8023560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023244:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023248:	ea4f 4326 	mov.w	r3, r6, asr #16
 802324c:	d406      	bmi.n	802325c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802324e:	4584      	cmp	ip, r0
 8023250:	da04      	bge.n	802325c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023252:	2b00      	cmp	r3, #0
 8023254:	db02      	blt.n	802325c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023256:	42bb      	cmp	r3, r7
 8023258:	f2c0 8183 	blt.w	8023562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802325c:	f11c 0c01 	adds.w	ip, ip, #1
 8023260:	f100 8173 	bmi.w	802354a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023264:	4561      	cmp	r1, ip
 8023266:	f2c0 8170 	blt.w	802354a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802326a:	3301      	adds	r3, #1
 802326c:	f100 816d 	bmi.w	802354a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023270:	429a      	cmp	r2, r3
 8023272:	f2c0 816a 	blt.w	802354a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023276:	9b07      	ldr	r3, [sp, #28]
 8023278:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802327a:	9318      	str	r3, [sp, #96]	; 0x60
 802327c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802327e:	2b00      	cmp	r3, #0
 8023280:	f340 818c 	ble.w	802359c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023284:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023286:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023288:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802328c:	689b      	ldr	r3, [r3, #8]
 802328e:	1422      	asrs	r2, r4, #16
 8023290:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023294:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023298:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802329c:	f100 81cd 	bmi.w	802363a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80232a0:	f103 38ff 	add.w	r8, r3, #4294967295
 80232a4:	4542      	cmp	r2, r8
 80232a6:	f280 81c8 	bge.w	802363a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80232aa:	f1bc 0f00 	cmp.w	ip, #0
 80232ae:	f2c0 81c4 	blt.w	802363a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80232b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80232b6:	45c4      	cmp	ip, r8
 80232b8:	f280 81bf 	bge.w	802363a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80232bc:	b21b      	sxth	r3, r3
 80232be:	fb0c 2203 	mla	r2, ip, r3, r2
 80232c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80232c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80232c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80232cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80232d0:	2800      	cmp	r0, #0
 80232d2:	f000 81a9 	beq.w	8023628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80232d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80232da:	950c      	str	r5, [sp, #48]	; 0x30
 80232dc:	0e2d      	lsrs	r5, r5, #24
 80232de:	9513      	str	r5, [sp, #76]	; 0x4c
 80232e0:	b181      	cbz	r1, 8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80232e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80232e6:	3b01      	subs	r3, #1
 80232e8:	009b      	lsls	r3, r3, #2
 80232ea:	3304      	adds	r3, #4
 80232ec:	eb08 0c03 	add.w	ip, r8, r3
 80232f0:	f858 3003 	ldr.w	r3, [r8, r3]
 80232f4:	9308      	str	r3, [sp, #32]
 80232f6:	0e1b      	lsrs	r3, r3, #24
 80232f8:	9311      	str	r3, [sp, #68]	; 0x44
 80232fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80232fe:	930d      	str	r3, [sp, #52]	; 0x34
 8023300:	0e1b      	lsrs	r3, r3, #24
 8023302:	9314      	str	r3, [sp, #80]	; 0x50
 8023304:	b280      	uxth	r0, r0
 8023306:	b289      	uxth	r1, r1
 8023308:	fb00 f901 	mul.w	r9, r0, r1
 802330c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023310:	0100      	lsls	r0, r0, #4
 8023312:	eba0 0809 	sub.w	r8, r0, r9
 8023316:	b289      	uxth	r1, r1
 8023318:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802331c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802331e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023320:	fa1f f888 	uxth.w	r8, r8
 8023324:	1a5b      	subs	r3, r3, r1
 8023326:	b29b      	uxth	r3, r3
 8023328:	fb08 f000 	mul.w	r0, r8, r0
 802332c:	fb03 000e 	mla	r0, r3, lr, r0
 8023330:	fb01 0005 	mla	r0, r1, r5, r0
 8023334:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023336:	fb09 0005 	mla	r0, r9, r5, r0
 802333a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802333e:	2800      	cmp	r0, #0
 8023340:	f000 80fa 	beq.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023344:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023348:	d01b      	beq.n	8023382 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802334a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802334e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023352:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023356:	fb0e fe02 	mul.w	lr, lr, r2
 802335a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802335e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023362:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023366:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802336a:	4452      	add	r2, sl
 802336c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023370:	0a12      	lsrs	r2, r2, #8
 8023372:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023376:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802337a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802337e:	ea42 020c 	orr.w	r2, r2, ip
 8023382:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023384:	2dff      	cmp	r5, #255	; 0xff
 8023386:	d021      	beq.n	80233cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023388:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802338a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802338e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023390:	fb05 fb0b 	mul.w	fp, r5, fp
 8023394:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023396:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802339a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802339c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80233a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80233a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80233ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80233b0:	44de      	add	lr, fp
 80233b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80233c6:	ea4e 050a 	orr.w	r5, lr, sl
 80233ca:	950c      	str	r5, [sp, #48]	; 0x30
 80233cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80233ce:	2dff      	cmp	r5, #255	; 0xff
 80233d0:	d021      	beq.n	8023416 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80233d2:	9d08      	ldr	r5, [sp, #32]
 80233d4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80233d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80233da:	fb05 fb0b 	mul.w	fp, r5, fp
 80233de:	9d08      	ldr	r5, [sp, #32]
 80233e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80233e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80233e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80233ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80233ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80233f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80233fa:	44de      	add	lr, fp
 80233fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023400:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023404:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023408:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802340c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023410:	ea4e 050a 	orr.w	r5, lr, sl
 8023414:	9508      	str	r5, [sp, #32]
 8023416:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023418:	2dff      	cmp	r5, #255	; 0xff
 802341a:	d021      	beq.n	8023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802341c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802341e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023422:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023424:	fb05 fb0b 	mul.w	fp, r5, fp
 8023428:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802342a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802342e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023430:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023434:	fb05 fa0a 	mul.w	sl, r5, sl
 8023438:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802343c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023440:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023444:	44de      	add	lr, fp
 8023446:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802344a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802344e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023452:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023456:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802345a:	ea4e 050a 	orr.w	r5, lr, sl
 802345e:	950d      	str	r5, [sp, #52]	; 0x34
 8023460:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023462:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023466:	9d08      	ldr	r5, [sp, #32]
 8023468:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802346c:	fb08 fc0c 	mul.w	ip, r8, ip
 8023470:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023474:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023478:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802347a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802347e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023482:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023484:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023488:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802348c:	fb08 f80e 	mul.w	r8, r8, lr
 8023490:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023494:	fb03 8202 	mla	r2, r3, r2, r8
 8023498:	9b08      	ldr	r3, [sp, #32]
 802349a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802349c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80234a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80234a2:	fb01 220a 	mla	r2, r1, sl, r2
 80234a6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80234aa:	fb09 2901 	mla	r9, r9, r1, r2
 80234ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80234b0:	883b      	ldrh	r3, [r7, #0]
 80234b2:	4342      	muls	r2, r0
 80234b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80234bc:	1c50      	adds	r0, r2, #1
 80234be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234c2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80234c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80234ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80234ce:	1219      	asrs	r1, r3, #8
 80234d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80234d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80234d8:	b2c0      	uxtb	r0, r0
 80234da:	fb12 f205 	smulbb	r2, r2, r5
 80234de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80234e2:	fb01 2100 	mla	r1, r1, r0, r2
 80234e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80234ea:	10da      	asrs	r2, r3, #3
 80234ec:	fa5f fc8c 	uxtb.w	ip, ip
 80234f0:	00db      	lsls	r3, r3, #3
 80234f2:	fb1c fc05 	smulbb	ip, ip, r5
 80234f6:	b2db      	uxtb	r3, r3
 80234f8:	b289      	uxth	r1, r1
 80234fa:	fb03 c300 	mla	r3, r3, r0, ip
 80234fe:	fa1f fc83 	uxth.w	ip, r3
 8023502:	1c4b      	adds	r3, r1, #1
 8023504:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023508:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802350c:	fb1e fe05 	smulbb	lr, lr, r5
 8023510:	f10c 0301 	add.w	r3, ip, #1
 8023514:	fb02 e200 	mla	r2, r2, r0, lr
 8023518:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802351c:	b292      	uxth	r2, r2
 802351e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023522:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023526:	430b      	orrs	r3, r1
 8023528:	1c51      	adds	r1, r2, #1
 802352a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802352e:	0952      	lsrs	r2, r2, #5
 8023530:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023534:	4313      	orrs	r3, r2
 8023536:	803b      	strh	r3, [r7, #0]
 8023538:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802353a:	441c      	add	r4, r3
 802353c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802353e:	441e      	add	r6, r3
 8023540:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023542:	3b01      	subs	r3, #1
 8023544:	3702      	adds	r7, #2
 8023546:	9318      	str	r3, [sp, #96]	; 0x60
 8023548:	e698      	b.n	802327c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802354a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802354c:	441c      	add	r4, r3
 802354e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023550:	441e      	add	r6, r3
 8023552:	9b07      	ldr	r3, [sp, #28]
 8023554:	3b01      	subs	r3, #1
 8023556:	9307      	str	r3, [sp, #28]
 8023558:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802355a:	3302      	adds	r3, #2
 802355c:	930a      	str	r3, [sp, #40]	; 0x28
 802355e:	e66d      	b.n	802323c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023560:	d023      	beq.n	80235aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023562:	9b07      	ldr	r3, [sp, #28]
 8023564:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023566:	3b01      	subs	r3, #1
 8023568:	fb00 4003 	mla	r0, r0, r3, r4
 802356c:	1400      	asrs	r0, r0, #16
 802356e:	f53f ae82 	bmi.w	8023276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023572:	3901      	subs	r1, #1
 8023574:	4288      	cmp	r0, r1
 8023576:	f6bf ae7e 	bge.w	8023276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802357a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802357c:	fb01 6303 	mla	r3, r1, r3, r6
 8023580:	141b      	asrs	r3, r3, #16
 8023582:	f53f ae78 	bmi.w	8023276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023586:	3a01      	subs	r2, #1
 8023588:	4293      	cmp	r3, r2
 802358a:	f6bf ae74 	bge.w	8023276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802358e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023592:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023596:	f1bb 0f00 	cmp.w	fp, #0
 802359a:	dc6c      	bgt.n	8023676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802359c:	9b07      	ldr	r3, [sp, #28]
 802359e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80235a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80235a4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80235a8:	930a      	str	r3, [sp, #40]	; 0x28
 80235aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80235ac:	2b00      	cmp	r3, #0
 80235ae:	f340 81b3 	ble.w	8023918 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80235b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80235b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80235be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80235c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80235c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80235c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80235cc:	eef0 6a62 	vmov.f32	s13, s5
 80235d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80235d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80235dc:	ee16 4a90 	vmov	r4, s13
 80235e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80235e4:	eef0 6a43 	vmov.f32	s13, s6
 80235e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80235ec:	ee12 2a90 	vmov	r2, s5
 80235f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80235f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80235f8:	ee13 2a10 	vmov	r2, s6
 80235fc:	9329      	str	r3, [sp, #164]	; 0xa4
 80235fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023600:	fb92 f3f3 	sdiv	r3, r2, r3
 8023604:	932a      	str	r3, [sp, #168]	; 0xa8
 8023606:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023608:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802360a:	3b01      	subs	r3, #1
 802360c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023610:	9317      	str	r3, [sp, #92]	; 0x5c
 8023612:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023614:	bf08      	it	eq
 8023616:	4613      	moveq	r3, r2
 8023618:	ee16 6a90 	vmov	r6, s13
 802361c:	9307      	str	r3, [sp, #28]
 802361e:	eeb0 3a67 	vmov.f32	s6, s15
 8023622:	eef0 2a47 	vmov.f32	s5, s14
 8023626:	e5fb      	b.n	8023220 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023628:	2900      	cmp	r1, #0
 802362a:	f43f ae6b 	beq.w	8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802362e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023632:	9308      	str	r3, [sp, #32]
 8023634:	0e1b      	lsrs	r3, r3, #24
 8023636:	9311      	str	r3, [sp, #68]	; 0x44
 8023638:	e664      	b.n	8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802363a:	f112 0801 	adds.w	r8, r2, #1
 802363e:	f53f af7b 	bmi.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023642:	4543      	cmp	r3, r8
 8023644:	f6ff af78 	blt.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023648:	f11c 0801 	adds.w	r8, ip, #1
 802364c:	f53f af74 	bmi.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023650:	45c6      	cmp	lr, r8
 8023652:	f6ff af71 	blt.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023656:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023658:	9201      	str	r2, [sp, #4]
 802365a:	fa0f f28e 	sxth.w	r2, lr
 802365e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023662:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023666:	9200      	str	r2, [sp, #0]
 8023668:	b21b      	sxth	r3, r3
 802366a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802366c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802366e:	4639      	mov	r1, r7
 8023670:	f7ff fc79 	bl	8022f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023674:	e760      	b.n	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023676:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023678:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802367a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802367e:	1427      	asrs	r7, r4, #16
 8023680:	1433      	asrs	r3, r6, #16
 8023682:	fb01 7303 	mla	r3, r1, r3, r7
 8023686:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802368a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802368e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023692:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023696:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802369a:	2a00      	cmp	r2, #0
 802369c:	f000 8133 	beq.w	8023906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80236a0:	687d      	ldr	r5, [r7, #4]
 80236a2:	950e      	str	r5, [sp, #56]	; 0x38
 80236a4:	0e2d      	lsrs	r5, r5, #24
 80236a6:	9515      	str	r5, [sp, #84]	; 0x54
 80236a8:	b178      	cbz	r0, 80236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80236aa:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80236ae:	3901      	subs	r1, #1
 80236b0:	0089      	lsls	r1, r1, #2
 80236b2:	3104      	adds	r1, #4
 80236b4:	eb07 0e01 	add.w	lr, r7, r1
 80236b8:	5879      	ldr	r1, [r7, r1]
 80236ba:	9109      	str	r1, [sp, #36]	; 0x24
 80236bc:	0e09      	lsrs	r1, r1, #24
 80236be:	9112      	str	r1, [sp, #72]	; 0x48
 80236c0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80236c4:	910f      	str	r1, [sp, #60]	; 0x3c
 80236c6:	0e09      	lsrs	r1, r1, #24
 80236c8:	9116      	str	r1, [sp, #88]	; 0x58
 80236ca:	b292      	uxth	r2, r2
 80236cc:	b280      	uxth	r0, r0
 80236ce:	fb02 f800 	mul.w	r8, r2, r0
 80236d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80236d6:	0112      	lsls	r2, r2, #4
 80236d8:	eba2 0e08 	sub.w	lr, r2, r8
 80236dc:	b280      	uxth	r0, r0
 80236de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80236e2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80236e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80236e6:	fa1f fe8e 	uxth.w	lr, lr
 80236ea:	1a12      	subs	r2, r2, r0
 80236ec:	b292      	uxth	r2, r2
 80236ee:	fb0e f101 	mul.w	r1, lr, r1
 80236f2:	fb02 110c 	mla	r1, r2, ip, r1
 80236f6:	fb00 1105 	mla	r1, r0, r5, r1
 80236fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80236fc:	fb08 1105 	mla	r1, r8, r5, r1
 8023700:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023704:	2900      	cmp	r1, #0
 8023706:	f000 80f5 	beq.w	80238f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802370a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802370e:	d019      	beq.n	8023744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023710:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023714:	fb0c fa0a 	mul.w	sl, ip, sl
 8023718:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802371c:	fb0c fc03 	mul.w	ip, ip, r3
 8023720:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023724:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023728:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802372c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023730:	4453      	add	r3, sl
 8023732:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023736:	0a1b      	lsrs	r3, r3, #8
 8023738:	0a3f      	lsrs	r7, r7, #8
 802373a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802373e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023742:	433b      	orrs	r3, r7
 8023744:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023746:	2dff      	cmp	r5, #255	; 0xff
 8023748:	d020      	beq.n	802378c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802374a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802374c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023750:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023752:	436f      	muls	r7, r5
 8023754:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023756:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802375a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802375c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023760:	fb05 fa0a 	mul.w	sl, r5, sl
 8023764:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023768:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802376c:	44bc      	add	ip, r7
 802376e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023772:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023776:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802377a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802377e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023782:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023786:	ea4c 050a 	orr.w	r5, ip, sl
 802378a:	950e      	str	r5, [sp, #56]	; 0x38
 802378c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802378e:	2dff      	cmp	r5, #255	; 0xff
 8023790:	d020      	beq.n	80237d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023792:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023794:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023798:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802379a:	436f      	muls	r7, r5
 802379c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802379e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80237a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80237a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237a8:	fb05 fa0a 	mul.w	sl, r5, sl
 80237ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80237b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237b4:	44bc      	add	ip, r7
 80237b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80237ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80237be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237ce:	ea4c 050a 	orr.w	r5, ip, sl
 80237d2:	9509      	str	r5, [sp, #36]	; 0x24
 80237d4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80237d6:	2dff      	cmp	r5, #255	; 0xff
 80237d8:	d020      	beq.n	802381c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80237da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80237dc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80237e0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80237e2:	436f      	muls	r7, r5
 80237e4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80237e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80237ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80237ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237f0:	fb05 fa0a 	mul.w	sl, r5, sl
 80237f4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80237f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237fc:	44bc      	add	ip, r7
 80237fe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023802:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023806:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802380a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802380e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023812:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023816:	ea4c 050a 	orr.w	r5, ip, sl
 802381a:	950f      	str	r5, [sp, #60]	; 0x3c
 802381c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802381e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023822:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023824:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023828:	fb0e f707 	mul.w	r7, lr, r7
 802382c:	fb02 770c 	mla	r7, r2, ip, r7
 8023830:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023834:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023836:	fb00 770c 	mla	r7, r0, ip, r7
 802383a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802383e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023840:	fb08 770c 	mla	r7, r8, ip, r7
 8023844:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023848:	fb0e fe0c 	mul.w	lr, lr, ip
 802384c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023850:	fb02 e303 	mla	r3, r2, r3, lr
 8023854:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023856:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023858:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802385c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802385e:	fb00 330a 	mla	r3, r0, sl, r3
 8023862:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023866:	fb08 3c0c 	mla	ip, r8, ip, r3
 802386a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802386c:	f8b9 0000 	ldrh.w	r0, [r9]
 8023870:	4359      	muls	r1, r3
 8023872:	0a3f      	lsrs	r7, r7, #8
 8023874:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023878:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802387c:	1c4b      	adds	r3, r1, #1
 802387e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023882:	ea47 070c 	orr.w	r7, r7, ip
 8023886:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802388a:	1202      	asrs	r2, r0, #8
 802388c:	0c3b      	lsrs	r3, r7, #16
 802388e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023892:	b2c9      	uxtb	r1, r1
 8023894:	fb13 f305 	smulbb	r3, r3, r5
 8023898:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802389c:	fb02 3201 	mla	r2, r2, r1, r3
 80238a0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80238a4:	10c3      	asrs	r3, r0, #3
 80238a6:	b2ff      	uxtb	r7, r7
 80238a8:	00c0      	lsls	r0, r0, #3
 80238aa:	b2c0      	uxtb	r0, r0
 80238ac:	fb17 f705 	smulbb	r7, r7, r5
 80238b0:	fb00 7001 	mla	r0, r0, r1, r7
 80238b4:	b292      	uxth	r2, r2
 80238b6:	fb1c fc05 	smulbb	ip, ip, r5
 80238ba:	b280      	uxth	r0, r0
 80238bc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80238c0:	fb03 c301 	mla	r3, r3, r1, ip
 80238c4:	1c51      	adds	r1, r2, #1
 80238c6:	f100 0c01 	add.w	ip, r0, #1
 80238ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80238ce:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80238d2:	b29b      	uxth	r3, r3
 80238d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80238d8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80238dc:	ea4c 0202 	orr.w	r2, ip, r2
 80238e0:	f103 0c01 	add.w	ip, r3, #1
 80238e4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80238e8:	095b      	lsrs	r3, r3, #5
 80238ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238ee:	431a      	orrs	r2, r3
 80238f0:	f8a9 2000 	strh.w	r2, [r9]
 80238f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80238f6:	441c      	add	r4, r3
 80238f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80238fa:	f109 0902 	add.w	r9, r9, #2
 80238fe:	441e      	add	r6, r3
 8023900:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023904:	e647      	b.n	8023596 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023906:	2800      	cmp	r0, #0
 8023908:	f43f aedf 	beq.w	80236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802390c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023910:	9109      	str	r1, [sp, #36]	; 0x24
 8023912:	0e09      	lsrs	r1, r1, #24
 8023914:	9112      	str	r1, [sp, #72]	; 0x48
 8023916:	e6d8      	b.n	80236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023918:	b01d      	add	sp, #116	; 0x74
 802391a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802391e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802391e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023922:	b085      	sub	sp, #20
 8023924:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023928:	9102      	str	r1, [sp, #8]
 802392a:	2c00      	cmp	r4, #0
 802392c:	fb04 7103 	mla	r1, r4, r3, r7
 8023930:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023934:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023938:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802393c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023940:	f2c0 810c 	blt.w	8023b5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023944:	45a6      	cmp	lr, r4
 8023946:	f340 8109 	ble.w	8023b5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802394a:	2f00      	cmp	r7, #0
 802394c:	f2c0 8104 	blt.w	8023b58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023950:	42bb      	cmp	r3, r7
 8023952:	f340 8101 	ble.w	8023b58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023956:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802395a:	1c7a      	adds	r2, r7, #1
 802395c:	f100 8101 	bmi.w	8023b62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023960:	4293      	cmp	r3, r2
 8023962:	f340 80fe 	ble.w	8023b62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023966:	2e00      	cmp	r6, #0
 8023968:	f000 80fd 	beq.w	8023b66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802396c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023970:	3401      	adds	r4, #1
 8023972:	f100 80fc 	bmi.w	8023b6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023976:	45a6      	cmp	lr, r4
 8023978:	f340 80f9 	ble.w	8023b6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802397c:	2800      	cmp	r0, #0
 802397e:	f000 80f9 	beq.w	8023b74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023982:	2f00      	cmp	r7, #0
 8023984:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023988:	f2c0 80ef 	blt.w	8023b6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802398c:	42bb      	cmp	r3, r7
 802398e:	f340 80ec 	ble.w	8023b6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023992:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023996:	3701      	adds	r7, #1
 8023998:	f100 80ef 	bmi.w	8023b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802399c:	42bb      	cmp	r3, r7
 802399e:	f340 80ec 	ble.w	8023b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80239a2:	2e00      	cmp	r6, #0
 80239a4:	f000 80eb 	beq.w	8023b7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80239a8:	6852      	ldr	r2, [r2, #4]
 80239aa:	b2b6      	uxth	r6, r6
 80239ac:	b280      	uxth	r0, r0
 80239ae:	fb00 fe06 	mul.w	lr, r0, r6
 80239b2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80239b6:	0136      	lsls	r6, r6, #4
 80239b8:	eba6 070e 	sub.w	r7, r6, lr
 80239bc:	b280      	uxth	r0, r0
 80239be:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80239c2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80239c6:	b2bf      	uxth	r7, r7
 80239c8:	1a1b      	subs	r3, r3, r0
 80239ca:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80239ce:	b29b      	uxth	r3, r3
 80239d0:	fb07 f60a 	mul.w	r6, r7, sl
 80239d4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80239d8:	fb0b 6603 	mla	r6, fp, r3, r6
 80239dc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80239e0:	fb00 6609 	mla	r6, r0, r9, r6
 80239e4:	fb0e 6608 	mla	r6, lr, r8, r6
 80239e8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80239ec:	9600      	str	r6, [sp, #0]
 80239ee:	2e00      	cmp	r6, #0
 80239f0:	f000 80af 	beq.w	8023b52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80239f4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80239f8:	fb0b fc0c 	mul.w	ip, fp, ip
 80239fc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023a00:	fb0b f505 	mul.w	r5, fp, r5
 8023a04:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023a08:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023a0c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023a10:	44dc      	add	ip, fp
 8023a12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a16:	9501      	str	r5, [sp, #4]
 8023a18:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023a1c:	9503      	str	r5, [sp, #12]
 8023a1e:	9d01      	ldr	r5, [sp, #4]
 8023a20:	9e02      	ldr	r6, [sp, #8]
 8023a22:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023a26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023a2a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023a2e:	fb0a fc0c 	mul.w	ip, sl, ip
 8023a32:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023a36:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023a3a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023a3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023a42:	4465      	add	r5, ip
 8023a44:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023a48:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023a4c:	fb09 fc0c 	mul.w	ip, r9, ip
 8023a50:	fb09 f904 	mul.w	r9, r9, r4
 8023a54:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023a58:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023a5c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023a60:	fb08 f404 	mul.w	r4, r8, r4
 8023a64:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023a68:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023a6c:	fb08 f802 	mul.w	r8, r8, r2
 8023a70:	fb0a fa01 	mul.w	sl, sl, r1
 8023a74:	0a22      	lsrs	r2, r4, #8
 8023a76:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023a7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a7e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023a82:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023a86:	4414      	add	r4, r2
 8023a88:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023a8c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023a90:	0a2d      	lsrs	r5, r5, #8
 8023a92:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023a96:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023a9a:	9a03      	ldr	r2, [sp, #12]
 8023a9c:	8836      	ldrh	r6, [r6, #0]
 8023a9e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023aa2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023aa6:	437d      	muls	r5, r7
 8023aa8:	4461      	add	r1, ip
 8023aaa:	0a24      	lsrs	r4, r4, #8
 8023aac:	fb02 5503 	mla	r5, r2, r3, r5
 8023ab0:	0a09      	lsrs	r1, r1, #8
 8023ab2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ab6:	fb04 540e 	mla	r4, r4, lr, r5
 8023aba:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023abe:	fb01 4100 	mla	r1, r1, r0, r4
 8023ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ac6:	0a09      	lsrs	r1, r1, #8
 8023ac8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023acc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023ad0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023ad4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023ad8:	fb07 f70a 	mul.w	r7, r7, sl
 8023adc:	fb03 7101 	mla	r1, r3, r1, r7
 8023ae0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ae4:	9b00      	ldr	r3, [sp, #0]
 8023ae6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023aea:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023aee:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023af2:	fb00 e101 	mla	r1, r0, r1, lr
 8023af6:	43da      	mvns	r2, r3
 8023af8:	1233      	asrs	r3, r6, #8
 8023afa:	b2d2      	uxtb	r2, r2
 8023afc:	10f0      	asrs	r0, r6, #3
 8023afe:	0a09      	lsrs	r1, r1, #8
 8023b00:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023b04:	00f6      	lsls	r6, r6, #3
 8023b06:	4353      	muls	r3, r2
 8023b08:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023b0c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023b10:	b2f6      	uxtb	r6, r6
 8023b12:	4321      	orrs	r1, r4
 8023b14:	4350      	muls	r0, r2
 8023b16:	4356      	muls	r6, r2
 8023b18:	1c5a      	adds	r2, r3, #1
 8023b1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023b1e:	0c0b      	lsrs	r3, r1, #16
 8023b20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b24:	1c42      	adds	r2, r0, #1
 8023b26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023b2a:	0a0a      	lsrs	r2, r1, #8
 8023b2c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023b30:	021b      	lsls	r3, r3, #8
 8023b32:	00d2      	lsls	r2, r2, #3
 8023b34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b38:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023b3c:	4313      	orrs	r3, r2
 8023b3e:	1c72      	adds	r2, r6, #1
 8023b40:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023b44:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023b48:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023b4c:	4319      	orrs	r1, r3
 8023b4e:	9b02      	ldr	r3, [sp, #8]
 8023b50:	8019      	strh	r1, [r3, #0]
 8023b52:	b005      	add	sp, #20
 8023b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b58:	2500      	movs	r5, #0
 8023b5a:	e6fe      	b.n	802395a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023b5c:	2100      	movs	r1, #0
 8023b5e:	460d      	mov	r5, r1
 8023b60:	e706      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b62:	2100      	movs	r1, #0
 8023b64:	e704      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b66:	4631      	mov	r1, r6
 8023b68:	e702      	b.n	8023970 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b6a:	2400      	movs	r4, #0
 8023b6c:	e713      	b.n	8023996 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023b6e:	2200      	movs	r2, #0
 8023b70:	4614      	mov	r4, r2
 8023b72:	e71a      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b74:	4602      	mov	r2, r0
 8023b76:	4604      	mov	r4, r0
 8023b78:	e717      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b7a:	2200      	movs	r2, #0
 8023b7c:	e715      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b7e:	4632      	mov	r2, r6
 8023b80:	e713      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b88:	b09b      	sub	sp, #108	; 0x6c
 8023b8a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023b8e:	9218      	str	r2, [sp, #96]	; 0x60
 8023b90:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023b92:	9116      	str	r1, [sp, #88]	; 0x58
 8023b94:	9307      	str	r3, [sp, #28]
 8023b96:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023b9a:	9019      	str	r0, [sp, #100]	; 0x64
 8023b9c:	6850      	ldr	r0, [r2, #4]
 8023b9e:	6812      	ldr	r2, [r2, #0]
 8023ba0:	fb00 1303 	mla	r3, r0, r3, r1
 8023ba4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ba8:	930a      	str	r3, [sp, #40]	; 0x28
 8023baa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023bac:	681b      	ldr	r3, [r3, #0]
 8023bae:	930f      	str	r3, [sp, #60]	; 0x3c
 8023bb0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023bb2:	2b00      	cmp	r3, #0
 8023bb4:	dc03      	bgt.n	8023bbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023bb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023bb8:	2b00      	cmp	r3, #0
 8023bba:	f340 8386 	ble.w	80242ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023bbe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023bc0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023bc4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023bc8:	1e48      	subs	r0, r1, #1
 8023bca:	1e57      	subs	r7, r2, #1
 8023bcc:	9b07      	ldr	r3, [sp, #28]
 8023bce:	2b00      	cmp	r3, #0
 8023bd0:	f340 8166 	ble.w	8023ea0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023bd4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023bd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023bdc:	d406      	bmi.n	8023bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023bde:	4584      	cmp	ip, r0
 8023be0:	da04      	bge.n	8023bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023be2:	2b00      	cmp	r3, #0
 8023be4:	db02      	blt.n	8023bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023be6:	42bb      	cmp	r3, r7
 8023be8:	f2c0 815b 	blt.w	8023ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023bec:	f11c 0c01 	adds.w	ip, ip, #1
 8023bf0:	f100 814b 	bmi.w	8023e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023bf4:	4561      	cmp	r1, ip
 8023bf6:	f2c0 8148 	blt.w	8023e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023bfa:	3301      	adds	r3, #1
 8023bfc:	f100 8145 	bmi.w	8023e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023c00:	429a      	cmp	r2, r3
 8023c02:	f2c0 8142 	blt.w	8023e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023c06:	9b07      	ldr	r3, [sp, #28]
 8023c08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023c0a:	9317      	str	r3, [sp, #92]	; 0x5c
 8023c0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023c0e:	2b00      	cmp	r3, #0
 8023c10:	f340 8165 	ble.w	8023ede <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023c14:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023c16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023c18:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023c1c:	689b      	ldr	r3, [r3, #8]
 8023c1e:	1422      	asrs	r2, r4, #16
 8023c20:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023c24:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023c28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023c2c:	f100 81d5 	bmi.w	8023fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023c30:	f103 38ff 	add.w	r8, r3, #4294967295
 8023c34:	4542      	cmp	r2, r8
 8023c36:	f280 81d0 	bge.w	8023fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023c3a:	f1bc 0f00 	cmp.w	ip, #0
 8023c3e:	f2c0 81cc 	blt.w	8023fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023c42:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023c46:	45c4      	cmp	ip, r8
 8023c48:	f280 81c7 	bge.w	8023fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023c4c:	b21b      	sxth	r3, r3
 8023c4e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023c52:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c54:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023c58:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023c5c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023c60:	2900      	cmp	r1, #0
 8023c62:	f000 8182 	beq.w	8023f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023c66:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023c6a:	950b      	str	r5, [sp, #44]	; 0x2c
 8023c6c:	0e2d      	lsrs	r5, r5, #24
 8023c6e:	9512      	str	r5, [sp, #72]	; 0x48
 8023c70:	b180      	cbz	r0, 8023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c72:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023c76:	3b01      	subs	r3, #1
 8023c78:	009b      	lsls	r3, r3, #2
 8023c7a:	3304      	adds	r3, #4
 8023c7c:	eb08 0c03 	add.w	ip, r8, r3
 8023c80:	f858 3003 	ldr.w	r3, [r8, r3]
 8023c84:	9308      	str	r3, [sp, #32]
 8023c86:	0e1b      	lsrs	r3, r3, #24
 8023c88:	9310      	str	r3, [sp, #64]	; 0x40
 8023c8a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023c8e:	930c      	str	r3, [sp, #48]	; 0x30
 8023c90:	0e1b      	lsrs	r3, r3, #24
 8023c92:	9313      	str	r3, [sp, #76]	; 0x4c
 8023c94:	b289      	uxth	r1, r1
 8023c96:	b280      	uxth	r0, r0
 8023c98:	fb01 f900 	mul.w	r9, r1, r0
 8023c9c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023ca0:	0109      	lsls	r1, r1, #4
 8023ca2:	eba1 0809 	sub.w	r8, r1, r9
 8023ca6:	b280      	uxth	r0, r0
 8023ca8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023cac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023cae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023cb0:	fa1f f888 	uxth.w	r8, r8
 8023cb4:	1a09      	subs	r1, r1, r0
 8023cb6:	b289      	uxth	r1, r1
 8023cb8:	fb08 f303 	mul.w	r3, r8, r3
 8023cbc:	fb01 330e 	mla	r3, r1, lr, r3
 8023cc0:	fb00 3305 	mla	r3, r0, r5, r3
 8023cc4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023cc6:	fb09 3305 	mla	r3, r9, r5, r3
 8023cca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023cce:	2b00      	cmp	r3, #0
 8023cd0:	f000 80d2 	beq.w	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cd4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023cd8:	d01b      	beq.n	8023d12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023cda:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023cde:	fb0e fa0a 	mul.w	sl, lr, sl
 8023ce2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ce6:	fb0e fe02 	mul.w	lr, lr, r2
 8023cea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023cee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023cf2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023cf6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023cfa:	4452      	add	r2, sl
 8023cfc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d00:	0a12      	lsrs	r2, r2, #8
 8023d02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d0a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d0e:	ea42 020c 	orr.w	r2, r2, ip
 8023d12:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023d14:	2dff      	cmp	r5, #255	; 0xff
 8023d16:	d021      	beq.n	8023d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023d18:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023d1a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023d1e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023d20:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d24:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023d26:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023d2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d30:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d38:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023d3c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023d40:	44de      	add	lr, fp
 8023d42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d56:	ea4e 050a 	orr.w	r5, lr, sl
 8023d5a:	950b      	str	r5, [sp, #44]	; 0x2c
 8023d5c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d5e:	2dff      	cmp	r5, #255	; 0xff
 8023d60:	d021      	beq.n	8023da6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023d62:	9d08      	ldr	r5, [sp, #32]
 8023d64:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023d68:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d6a:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d6e:	9d08      	ldr	r5, [sp, #32]
 8023d70:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023d74:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d76:	fb05 fa0e 	mul.w	sl, r5, lr
 8023d7a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d82:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023d86:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023d8a:	44de      	add	lr, fp
 8023d8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023d9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023da0:	ea4e 050a 	orr.w	r5, lr, sl
 8023da4:	9508      	str	r5, [sp, #32]
 8023da6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023da8:	2dff      	cmp	r5, #255	; 0xff
 8023daa:	d021      	beq.n	8023df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023dac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023dae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023db2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023db4:	fb05 fb0b 	mul.w	fp, r5, fp
 8023db8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023dba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023dbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023dc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023dc4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dcc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023dd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023dd4:	44de      	add	lr, fp
 8023dd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023dda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023dde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023de2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023de6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dea:	ea4e 050a 	orr.w	r5, lr, sl
 8023dee:	950c      	str	r5, [sp, #48]	; 0x30
 8023df0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023df2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023df6:	9d08      	ldr	r5, [sp, #32]
 8023df8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023dfc:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e00:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023e04:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023e08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e0a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023e0e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023e12:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023e14:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023e18:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023e1c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e20:	fb08 f80e 	mul.w	r8, r8, lr
 8023e24:	fb01 8202 	mla	r2, r1, r2, r8
 8023e28:	9908      	ldr	r1, [sp, #32]
 8023e2a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023e2e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023e30:	fb00 220a 	mla	r2, r0, sl, r2
 8023e34:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023e38:	fb09 2900 	mla	r9, r9, r0, r2
 8023e3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e40:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e48:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023e4c:	ea4c 0c09 	orr.w	ip, ip, r9
 8023e50:	2bff      	cmp	r3, #255	; 0xff
 8023e52:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023e56:	f040 8091 	bne.w	8023f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023e5a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023e5e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023e62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e66:	f022 0207 	bic.w	r2, r2, #7
 8023e6a:	431a      	orrs	r2, r3
 8023e6c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023e70:	ea4c 0c02 	orr.w	ip, ip, r2
 8023e74:	f8a7 c000 	strh.w	ip, [r7]
 8023e78:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023e7a:	441c      	add	r4, r3
 8023e7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e7e:	441e      	add	r6, r3
 8023e80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023e82:	3b01      	subs	r3, #1
 8023e84:	3702      	adds	r7, #2
 8023e86:	9317      	str	r3, [sp, #92]	; 0x5c
 8023e88:	e6c0      	b.n	8023c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023e8a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023e8c:	441c      	add	r4, r3
 8023e8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e90:	441e      	add	r6, r3
 8023e92:	9b07      	ldr	r3, [sp, #28]
 8023e94:	3b01      	subs	r3, #1
 8023e96:	9307      	str	r3, [sp, #28]
 8023e98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023e9a:	3302      	adds	r3, #2
 8023e9c:	930a      	str	r3, [sp, #40]	; 0x28
 8023e9e:	e695      	b.n	8023bcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023ea0:	d024      	beq.n	8023eec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023ea2:	9b07      	ldr	r3, [sp, #28]
 8023ea4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023ea6:	3b01      	subs	r3, #1
 8023ea8:	fb00 4003 	mla	r0, r0, r3, r4
 8023eac:	1400      	asrs	r0, r0, #16
 8023eae:	f53f aeaa 	bmi.w	8023c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023eb2:	3901      	subs	r1, #1
 8023eb4:	4288      	cmp	r0, r1
 8023eb6:	f6bf aea6 	bge.w	8023c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023eba:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023ebc:	fb01 6303 	mla	r3, r1, r3, r6
 8023ec0:	141b      	asrs	r3, r3, #16
 8023ec2:	f53f aea0 	bmi.w	8023c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023ec6:	3a01      	subs	r2, #1
 8023ec8:	4293      	cmp	r3, r2
 8023eca:	f6bf ae9c 	bge.w	8023c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023ece:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023ed2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023ed6:	f1bb 0f00 	cmp.w	fp, #0
 8023eda:	f300 809a 	bgt.w	8024012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023ede:	9b07      	ldr	r3, [sp, #28]
 8023ee0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023ee4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ee6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023eea:	930a      	str	r3, [sp, #40]	; 0x28
 8023eec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023eee:	2b00      	cmp	r3, #0
 8023ef0:	f340 81eb 	ble.w	80242ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023ef4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ef8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023efc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f0e:	eef0 6a62 	vmov.f32	s13, s5
 8023f12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f1e:	ee16 4a90 	vmov	r4, s13
 8023f22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f26:	eef0 6a43 	vmov.f32	s13, s6
 8023f2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f2e:	ee12 2a90 	vmov	r2, s5
 8023f32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f3a:	ee13 2a10 	vmov	r2, s6
 8023f3e:	9327      	str	r3, [sp, #156]	; 0x9c
 8023f40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f46:	9328      	str	r3, [sp, #160]	; 0xa0
 8023f48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023f4a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023f4c:	3b01      	subs	r3, #1
 8023f4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f52:	9316      	str	r3, [sp, #88]	; 0x58
 8023f54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f56:	bf08      	it	eq
 8023f58:	4613      	moveq	r3, r2
 8023f5a:	ee16 6a90 	vmov	r6, s13
 8023f5e:	9307      	str	r3, [sp, #28]
 8023f60:	eeb0 3a67 	vmov.f32	s6, s15
 8023f64:	eef0 2a47 	vmov.f32	s5, s14
 8023f68:	e622      	b.n	8023bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023f6a:	2800      	cmp	r0, #0
 8023f6c:	f43f ae92 	beq.w	8023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023f70:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023f74:	9308      	str	r3, [sp, #32]
 8023f76:	0e1b      	lsrs	r3, r3, #24
 8023f78:	9310      	str	r3, [sp, #64]	; 0x40
 8023f7a:	e68b      	b.n	8023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023f7c:	8839      	ldrh	r1, [r7, #0]
 8023f7e:	4dd4      	ldr	r5, [pc, #848]	; (80242d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023f80:	43db      	mvns	r3, r3
 8023f82:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023f86:	fa5f f883 	uxtb.w	r8, r3
 8023f8a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8023f8e:	fb0e fe08 	mul.w	lr, lr, r8
 8023f92:	10c8      	asrs	r0, r1, #3
 8023f94:	00cb      	lsls	r3, r1, #3
 8023f96:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f9a:	f10e 0101 	add.w	r1, lr, #1
 8023f9e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023fa2:	fb00 f008 	mul.w	r0, r0, r8
 8023fa6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023faa:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023fae:	f100 0e01 	add.w	lr, r0, #1
 8023fb2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023fb6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023fba:	b2db      	uxtb	r3, r3
 8023fbc:	b2c9      	uxtb	r1, r1
 8023fbe:	00d2      	lsls	r2, r2, #3
 8023fc0:	fb03 f308 	mul.w	r3, r3, r8
 8023fc4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023fc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fcc:	430a      	orrs	r2, r1
 8023fce:	1c59      	adds	r1, r3, #1
 8023fd0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023fd4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023fd8:	e748      	b.n	8023e6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023fda:	f112 0801 	adds.w	r8, r2, #1
 8023fde:	f53f af4b 	bmi.w	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023fe2:	4543      	cmp	r3, r8
 8023fe4:	f6ff af48 	blt.w	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023fe8:	f11c 0801 	adds.w	r8, ip, #1
 8023fec:	f53f af44 	bmi.w	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ff0:	45c6      	cmp	lr, r8
 8023ff2:	f6ff af41 	blt.w	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ff6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023ffa:	fa0f f28e 	sxth.w	r2, lr
 8023ffe:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024002:	9200      	str	r2, [sp, #0]
 8024004:	b21b      	sxth	r3, r3
 8024006:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024008:	9819      	ldr	r0, [sp, #100]	; 0x64
 802400a:	4639      	mov	r1, r7
 802400c:	f7ff fc87 	bl	802391e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024010:	e732      	b.n	8023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024012:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024014:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024016:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802401a:	1421      	asrs	r1, r4, #16
 802401c:	1433      	asrs	r3, r6, #16
 802401e:	fb07 1303 	mla	r3, r7, r3, r1
 8024022:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024024:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024028:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802402c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024030:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024034:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024038:	2a00      	cmp	r2, #0
 802403a:	f000 8107 	beq.w	802424c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802403e:	684d      	ldr	r5, [r1, #4]
 8024040:	950d      	str	r5, [sp, #52]	; 0x34
 8024042:	0e2d      	lsrs	r5, r5, #24
 8024044:	9514      	str	r5, [sp, #80]	; 0x50
 8024046:	b178      	cbz	r0, 8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024048:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802404c:	3f01      	subs	r7, #1
 802404e:	00bf      	lsls	r7, r7, #2
 8024050:	3704      	adds	r7, #4
 8024052:	eb01 0e07 	add.w	lr, r1, r7
 8024056:	59c9      	ldr	r1, [r1, r7]
 8024058:	9109      	str	r1, [sp, #36]	; 0x24
 802405a:	0e09      	lsrs	r1, r1, #24
 802405c:	9111      	str	r1, [sp, #68]	; 0x44
 802405e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024062:	910e      	str	r1, [sp, #56]	; 0x38
 8024064:	0e09      	lsrs	r1, r1, #24
 8024066:	9115      	str	r1, [sp, #84]	; 0x54
 8024068:	b292      	uxth	r2, r2
 802406a:	b280      	uxth	r0, r0
 802406c:	fb02 f900 	mul.w	r9, r2, r0
 8024070:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024074:	0112      	lsls	r2, r2, #4
 8024076:	eba2 0e09 	sub.w	lr, r2, r9
 802407a:	b280      	uxth	r0, r0
 802407c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024080:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024082:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024084:	fa1f fe8e 	uxth.w	lr, lr
 8024088:	1a09      	subs	r1, r1, r0
 802408a:	b289      	uxth	r1, r1
 802408c:	fb0e f202 	mul.w	r2, lr, r2
 8024090:	fb01 220c 	mla	r2, r1, ip, r2
 8024094:	fb00 2205 	mla	r2, r0, r5, r2
 8024098:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802409a:	fb09 2205 	mla	r2, r9, r5, r2
 802409e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80240a2:	2a00      	cmp	r2, #0
 80240a4:	f000 80c9 	beq.w	802423a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80240a8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80240ac:	d019      	beq.n	80240e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80240ae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80240b2:	fb0c fa0a 	mul.w	sl, ip, sl
 80240b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80240ba:	fb0c fc03 	mul.w	ip, ip, r3
 80240be:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80240c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80240c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80240ca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80240ce:	4453      	add	r3, sl
 80240d0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80240d4:	0a1b      	lsrs	r3, r3, #8
 80240d6:	0a3f      	lsrs	r7, r7, #8
 80240d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80240dc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80240e0:	433b      	orrs	r3, r7
 80240e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80240e4:	2dff      	cmp	r5, #255	; 0xff
 80240e6:	d020      	beq.n	802412a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80240e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80240ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80240ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80240f0:	436f      	muls	r7, r5
 80240f2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80240f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80240f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80240fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80240fe:	fb05 fa0a 	mul.w	sl, r5, sl
 8024102:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024106:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802410a:	44bc      	add	ip, r7
 802410c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024110:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024114:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024118:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802411c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024120:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024124:	ea4c 050a 	orr.w	r5, ip, sl
 8024128:	950d      	str	r5, [sp, #52]	; 0x34
 802412a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802412c:	2dff      	cmp	r5, #255	; 0xff
 802412e:	d020      	beq.n	8024172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024130:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024132:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024136:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024138:	436f      	muls	r7, r5
 802413a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802413c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024140:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024142:	fb05 fa0c 	mul.w	sl, r5, ip
 8024146:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802414a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802414e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024152:	44bc      	add	ip, r7
 8024154:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024158:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802415c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024160:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024164:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024168:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802416c:	ea4c 050a 	orr.w	r5, ip, sl
 8024170:	9509      	str	r5, [sp, #36]	; 0x24
 8024172:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024174:	2dff      	cmp	r5, #255	; 0xff
 8024176:	d020      	beq.n	80241ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024178:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802417a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802417e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024180:	436f      	muls	r7, r5
 8024182:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024184:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024188:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802418a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802418e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024192:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024196:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802419a:	44bc      	add	ip, r7
 802419c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241b4:	ea4c 050a 	orr.w	r5, ip, sl
 80241b8:	950e      	str	r5, [sp, #56]	; 0x38
 80241ba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80241bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80241c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80241c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80241c6:	fb0e f707 	mul.w	r7, lr, r7
 80241ca:	fb01 770c 	mla	r7, r1, ip, r7
 80241ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241d2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80241d4:	fb00 770c 	mla	r7, r0, ip, r7
 80241d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80241de:	fb09 770c 	mla	r7, r9, ip, r7
 80241e2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80241e6:	fb0e fe0c 	mul.w	lr, lr, ip
 80241ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80241ee:	fb01 e303 	mla	r3, r1, r3, lr
 80241f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80241f4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80241f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80241fa:	fb00 330a 	mla	r3, r0, sl, r3
 80241fe:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024202:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024206:	0a3f      	lsrs	r7, r7, #8
 8024208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802420c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024210:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024214:	ea47 070c 	orr.w	r7, r7, ip
 8024218:	2aff      	cmp	r2, #255	; 0xff
 802421a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802421e:	d11e      	bne.n	802425e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024220:	097a      	lsrs	r2, r7, #5
 8024222:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024226:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802422a:	f023 0307 	bic.w	r3, r3, #7
 802422e:	4313      	orrs	r3, r2
 8024230:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024234:	431f      	orrs	r7, r3
 8024236:	f8a8 7000 	strh.w	r7, [r8]
 802423a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802423c:	441c      	add	r4, r3
 802423e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024240:	f108 0802 	add.w	r8, r8, #2
 8024244:	441e      	add	r6, r3
 8024246:	f10b 3bff 	add.w	fp, fp, #4294967295
 802424a:	e644      	b.n	8023ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802424c:	2800      	cmp	r0, #0
 802424e:	f43f af0b 	beq.w	8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024252:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024256:	9109      	str	r1, [sp, #36]	; 0x24
 8024258:	0e09      	lsrs	r1, r1, #24
 802425a:	9111      	str	r1, [sp, #68]	; 0x44
 802425c:	e704      	b.n	8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802425e:	f8b8 1000 	ldrh.w	r1, [r8]
 8024262:	43d2      	mvns	r2, r2
 8024264:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024268:	fa5f fe82 	uxtb.w	lr, r2
 802426c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024270:	fb0c fc0e 	mul.w	ip, ip, lr
 8024274:	10c8      	asrs	r0, r1, #3
 8024276:	00ca      	lsls	r2, r1, #3
 8024278:	f10c 0101 	add.w	r1, ip, #1
 802427c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024280:	0c39      	lsrs	r1, r7, #16
 8024282:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024286:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802428a:	4911      	ldr	r1, [pc, #68]	; (80242d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802428c:	fb00 f00e 	mul.w	r0, r0, lr
 8024290:	fa5f fc8c 	uxtb.w	ip, ip
 8024294:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024298:	b2d2      	uxtb	r2, r2
 802429a:	1c41      	adds	r1, r0, #1
 802429c:	fb02 f20e 	mul.w	r2, r2, lr
 80242a0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80242a4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80242a8:	1c51      	adds	r1, r2, #1
 80242aa:	00c0      	lsls	r0, r0, #3
 80242ac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80242b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80242b4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80242b8:	ea4c 0c00 	orr.w	ip, ip, r0
 80242bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80242c0:	ea47 0c0c 	orr.w	ip, r7, ip
 80242c4:	f8a8 c000 	strh.w	ip, [r8]
 80242c8:	e7b7      	b.n	802423a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80242ca:	b01b      	add	sp, #108	; 0x6c
 80242cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242d0:	fffff800 	.word	0xfffff800

080242d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80242d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80242d8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80242dc:	2d00      	cmp	r5, #0
 80242de:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80242e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80242e6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80242ea:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80242ee:	fb05 0e03 	mla	lr, r5, r3, r0
 80242f2:	f2c0 808c 	blt.w	802440e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80242f6:	45a9      	cmp	r9, r5
 80242f8:	f340 8089 	ble.w	802440e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80242fc:	2800      	cmp	r0, #0
 80242fe:	f2c0 8084 	blt.w	802440a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024302:	4580      	cmp	r8, r0
 8024304:	f340 8081 	ble.w	802440a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024308:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802430c:	f01e 0f01 	tst.w	lr, #1
 8024310:	5d16      	ldrb	r6, [r2, r4]
 8024312:	bf0c      	ite	eq
 8024314:	f006 060f 	andeq.w	r6, r6, #15
 8024318:	1136      	asrne	r6, r6, #4
 802431a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802431e:	b2f6      	uxtb	r6, r6
 8024320:	1c44      	adds	r4, r0, #1
 8024322:	d477      	bmi.n	8024414 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024324:	45a0      	cmp	r8, r4
 8024326:	dd75      	ble.n	8024414 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024328:	2f00      	cmp	r7, #0
 802432a:	d075      	beq.n	8024418 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802432c:	f10e 0a01 	add.w	sl, lr, #1
 8024330:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024334:	f01a 0f01 	tst.w	sl, #1
 8024338:	5d14      	ldrb	r4, [r2, r4]
 802433a:	bf0c      	ite	eq
 802433c:	f004 040f 	andeq.w	r4, r4, #15
 8024340:	1124      	asrne	r4, r4, #4
 8024342:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024346:	b2e4      	uxtb	r4, r4
 8024348:	3501      	adds	r5, #1
 802434a:	d469      	bmi.n	8024420 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802434c:	45a9      	cmp	r9, r5
 802434e:	dd67      	ble.n	8024420 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024350:	f1bc 0f00 	cmp.w	ip, #0
 8024354:	d067      	beq.n	8024426 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024356:	2800      	cmp	r0, #0
 8024358:	db60      	blt.n	802441c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802435a:	4580      	cmp	r8, r0
 802435c:	dd5e      	ble.n	802441c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802435e:	eb03 090e 	add.w	r9, r3, lr
 8024362:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024366:	f019 0f01 	tst.w	r9, #1
 802436a:	5d55      	ldrb	r5, [r2, r5]
 802436c:	bf0c      	ite	eq
 802436e:	f005 050f 	andeq.w	r5, r5, #15
 8024372:	112d      	asrne	r5, r5, #4
 8024374:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024378:	b2ed      	uxtb	r5, r5
 802437a:	3001      	adds	r0, #1
 802437c:	d456      	bmi.n	802442c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802437e:	4580      	cmp	r8, r0
 8024380:	dd54      	ble.n	802442c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024382:	2f00      	cmp	r7, #0
 8024384:	d054      	beq.n	8024430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024386:	3301      	adds	r3, #1
 8024388:	449e      	add	lr, r3
 802438a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802438e:	f01e 0f01 	tst.w	lr, #1
 8024392:	5cd0      	ldrb	r0, [r2, r3]
 8024394:	bf0c      	ite	eq
 8024396:	f000 000f 	andeq.w	r0, r0, #15
 802439a:	1100      	asrne	r0, r0, #4
 802439c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80243a0:	b2c3      	uxtb	r3, r0
 80243a2:	b2ba      	uxth	r2, r7
 80243a4:	fa1f fc8c 	uxth.w	ip, ip
 80243a8:	fb02 f00c 	mul.w	r0, r2, ip
 80243ac:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80243b0:	0112      	lsls	r2, r2, #4
 80243b2:	fa1f fc8c 	uxth.w	ip, ip
 80243b6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80243ba:	1a12      	subs	r2, r2, r0
 80243bc:	eba7 070c 	sub.w	r7, r7, ip
 80243c0:	b292      	uxth	r2, r2
 80243c2:	b2bf      	uxth	r7, r7
 80243c4:	4362      	muls	r2, r4
 80243c6:	fb06 2207 	mla	r2, r6, r7, r2
 80243ca:	fb0c 2505 	mla	r5, ip, r5, r2
 80243ce:	fb00 5303 	mla	r3, r0, r3, r5
 80243d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80243d6:	b1b3      	cbz	r3, 8024406 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80243d8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80243dc:	435a      	muls	r2, r3
 80243de:	1c53      	adds	r3, r2, #1
 80243e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80243e4:	4a2d      	ldr	r2, [pc, #180]	; (802449c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80243e6:	121b      	asrs	r3, r3, #8
 80243e8:	6812      	ldr	r2, [r2, #0]
 80243ea:	2bff      	cmp	r3, #255	; 0xff
 80243ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80243f0:	d120      	bne.n	8024434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80243f2:	4b2b      	ldr	r3, [pc, #172]	; (80244a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80243f4:	0950      	lsrs	r0, r2, #5
 80243f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80243fa:	4033      	ands	r3, r6
 80243fc:	4318      	orrs	r0, r3
 80243fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024402:	4302      	orrs	r2, r0
 8024404:	800a      	strh	r2, [r1, #0]
 8024406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802440a:	2600      	movs	r6, #0
 802440c:	e788      	b.n	8024320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802440e:	2400      	movs	r4, #0
 8024410:	4626      	mov	r6, r4
 8024412:	e799      	b.n	8024348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024414:	2400      	movs	r4, #0
 8024416:	e797      	b.n	8024348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024418:	463c      	mov	r4, r7
 802441a:	e795      	b.n	8024348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802441c:	2500      	movs	r5, #0
 802441e:	e7ac      	b.n	802437a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024420:	2300      	movs	r3, #0
 8024422:	461d      	mov	r5, r3
 8024424:	e7bd      	b.n	80243a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024426:	4663      	mov	r3, ip
 8024428:	4665      	mov	r5, ip
 802442a:	e7ba      	b.n	80243a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802442c:	2300      	movs	r3, #0
 802442e:	e7b8      	b.n	80243a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024430:	463b      	mov	r3, r7
 8024432:	e7b6      	b.n	80243a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024434:	880d      	ldrh	r5, [r1, #0]
 8024436:	b29f      	uxth	r7, r3
 8024438:	122c      	asrs	r4, r5, #8
 802443a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802443e:	43db      	mvns	r3, r3
 8024440:	b2db      	uxtb	r3, r3
 8024442:	fb10 f007 	smulbb	r0, r0, r7
 8024446:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802444a:	fb04 0403 	mla	r4, r4, r3, r0
 802444e:	b2f6      	uxtb	r6, r6
 8024450:	10e8      	asrs	r0, r5, #3
 8024452:	b2d2      	uxtb	r2, r2
 8024454:	00ed      	lsls	r5, r5, #3
 8024456:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802445a:	fb12 f207 	smulbb	r2, r2, r7
 802445e:	fb16 f607 	smulbb	r6, r6, r7
 8024462:	b2ed      	uxtb	r5, r5
 8024464:	b2a4      	uxth	r4, r4
 8024466:	fb00 6603 	mla	r6, r0, r3, r6
 802446a:	fb05 2303 	mla	r3, r5, r3, r2
 802446e:	b29a      	uxth	r2, r3
 8024470:	1c63      	adds	r3, r4, #1
 8024472:	b2b0      	uxth	r0, r6
 8024474:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024478:	1c53      	adds	r3, r2, #1
 802447a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802447e:	1c42      	adds	r2, r0, #1
 8024480:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024484:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024488:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802448c:	0940      	lsrs	r0, r0, #5
 802448e:	4323      	orrs	r3, r4
 8024490:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024494:	4303      	orrs	r3, r0
 8024496:	800b      	strh	r3, [r1, #0]
 8024498:	e7b5      	b.n	8024406 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802449a:	bf00      	nop
 802449c:	2000dc84 	.word	0x2000dc84
 80244a0:	00fff800 	.word	0x00fff800

080244a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80244a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244a8:	b097      	sub	sp, #92	; 0x5c
 80244aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80244ae:	9214      	str	r2, [sp, #80]	; 0x50
 80244b0:	9309      	str	r3, [sp, #36]	; 0x24
 80244b2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80244b4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80244b8:	910d      	str	r1, [sp, #52]	; 0x34
 80244ba:	930f      	str	r3, [sp, #60]	; 0x3c
 80244bc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80244c0:	9015      	str	r0, [sp, #84]	; 0x54
 80244c2:	6850      	ldr	r0, [r2, #4]
 80244c4:	6812      	ldr	r2, [r2, #0]
 80244c6:	fb00 1303 	mla	r3, r0, r3, r1
 80244ca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80244ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80244d0:	689b      	ldr	r3, [r3, #8]
 80244d2:	3301      	adds	r3, #1
 80244d4:	f023 0301 	bic.w	r3, r3, #1
 80244d8:	930a      	str	r3, [sp, #40]	; 0x28
 80244da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80244dc:	681f      	ldr	r7, [r3, #0]
 80244de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80244e0:	2b00      	cmp	r3, #0
 80244e2:	dc03      	bgt.n	80244ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80244e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80244e6:	2b00      	cmp	r3, #0
 80244e8:	f340 8287 	ble.w	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80244ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80244ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244f6:	1e48      	subs	r0, r1, #1
 80244f8:	f102 3cff 	add.w	ip, r2, #4294967295
 80244fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244fe:	2b00      	cmp	r3, #0
 8024500:	f340 80c4 	ble.w	802468c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024504:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024508:	ea4f 4326 	mov.w	r3, r6, asr #16
 802450c:	d406      	bmi.n	802451c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802450e:	4586      	cmp	lr, r0
 8024510:	da04      	bge.n	802451c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024512:	2b00      	cmp	r3, #0
 8024514:	db02      	blt.n	802451c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024516:	4563      	cmp	r3, ip
 8024518:	f2c0 80b9 	blt.w	802468e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802451c:	f11e 0e01 	adds.w	lr, lr, #1
 8024520:	f100 80aa 	bmi.w	8024678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024524:	4571      	cmp	r1, lr
 8024526:	f2c0 80a7 	blt.w	8024678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802452a:	3301      	adds	r3, #1
 802452c:	f100 80a4 	bmi.w	8024678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024530:	429a      	cmp	r2, r3
 8024532:	f2c0 80a1 	blt.w	8024678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024538:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802453c:	930e      	str	r3, [sp, #56]	; 0x38
 802453e:	46c8      	mov	r8, r9
 8024540:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024542:	2b00      	cmp	r3, #0
 8024544:	f340 80c3 	ble.w	80246ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024548:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802454a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802454e:	1423      	asrs	r3, r4, #16
 8024550:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024554:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024558:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802455c:	f100 814d 	bmi.w	80247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024560:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024564:	455b      	cmp	r3, fp
 8024566:	f280 8148 	bge.w	80247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802456a:	2800      	cmp	r0, #0
 802456c:	f2c0 8145 	blt.w	80247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024570:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024574:	4558      	cmp	r0, fp
 8024576:	f280 8140 	bge.w	80247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802457a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802457c:	fb00 3305 	mla	r3, r0, r5, r3
 8024580:	0858      	lsrs	r0, r3, #1
 8024582:	07dd      	lsls	r5, r3, #31
 8024584:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024588:	bf54      	ite	pl
 802458a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802458e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024592:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024596:	fa5f fc8c 	uxtb.w	ip, ip
 802459a:	2a00      	cmp	r2, #0
 802459c:	f000 80db 	beq.w	8024756 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80245a0:	1c58      	adds	r0, r3, #1
 80245a2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80245a6:	07c0      	lsls	r0, r0, #31
 80245a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80245ac:	bf54      	ite	pl
 80245ae:	f00e 0e0f 	andpl.w	lr, lr, #15
 80245b2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80245b6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80245ba:	fa5f f08e 	uxtb.w	r0, lr
 80245be:	9010      	str	r0, [sp, #64]	; 0x40
 80245c0:	b1c9      	cbz	r1, 80245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80245c2:	4453      	add	r3, sl
 80245c4:	0858      	lsrs	r0, r3, #1
 80245c6:	07dd      	lsls	r5, r3, #31
 80245c8:	5c38      	ldrb	r0, [r7, r0]
 80245ca:	bf54      	ite	pl
 80245cc:	f000 000f 	andpl.w	r0, r0, #15
 80245d0:	1100      	asrmi	r0, r0, #4
 80245d2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80245d6:	3301      	adds	r3, #1
 80245d8:	b2c0      	uxtb	r0, r0
 80245da:	900b      	str	r0, [sp, #44]	; 0x2c
 80245dc:	0858      	lsrs	r0, r3, #1
 80245de:	07dd      	lsls	r5, r3, #31
 80245e0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80245e4:	bf54      	ite	pl
 80245e6:	f00e 030f 	andpl.w	r3, lr, #15
 80245ea:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80245ee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80245f2:	b2db      	uxtb	r3, r3
 80245f4:	9311      	str	r3, [sp, #68]	; 0x44
 80245f6:	b292      	uxth	r2, r2
 80245f8:	b289      	uxth	r1, r1
 80245fa:	fb02 f301 	mul.w	r3, r2, r1
 80245fe:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024602:	0112      	lsls	r2, r2, #4
 8024604:	b289      	uxth	r1, r1
 8024606:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802460a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802460c:	1ad2      	subs	r2, r2, r3
 802460e:	1a40      	subs	r0, r0, r1
 8024610:	b292      	uxth	r2, r2
 8024612:	436a      	muls	r2, r5
 8024614:	b280      	uxth	r0, r0
 8024616:	fb0c 2c00 	mla	ip, ip, r0, r2
 802461a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802461c:	fb01 c102 	mla	r1, r1, r2, ip
 8024620:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024622:	fb03 1302 	mla	r3, r3, r2, r1
 8024626:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802462a:	b1db      	cbz	r3, 8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802462c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802462e:	4353      	muls	r3, r2
 8024630:	1c5a      	adds	r2, r3, #1
 8024632:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024636:	4ac6      	ldr	r2, [pc, #792]	; (8024950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024638:	121b      	asrs	r3, r3, #8
 802463a:	6812      	ldr	r2, [r2, #0]
 802463c:	2bff      	cmp	r3, #255	; 0xff
 802463e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024642:	f040 8099 	bne.w	8024778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024646:	0953      	lsrs	r3, r2, #5
 8024648:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802464c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024650:	f02c 0c07 	bic.w	ip, ip, #7
 8024654:	ea43 0c0c 	orr.w	ip, r3, ip
 8024658:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802465c:	ea4c 0202 	orr.w	r2, ip, r2
 8024660:	f8a8 2000 	strh.w	r2, [r8]
 8024664:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024666:	441c      	add	r4, r3
 8024668:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802466a:	441e      	add	r6, r3
 802466c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802466e:	3b01      	subs	r3, #1
 8024670:	f108 0802 	add.w	r8, r8, #2
 8024674:	930e      	str	r3, [sp, #56]	; 0x38
 8024676:	e763      	b.n	8024540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024678:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802467a:	441c      	add	r4, r3
 802467c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802467e:	441e      	add	r6, r3
 8024680:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024682:	3b01      	subs	r3, #1
 8024684:	9309      	str	r3, [sp, #36]	; 0x24
 8024686:	f109 0902 	add.w	r9, r9, #2
 802468a:	e737      	b.n	80244fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802468c:	d024      	beq.n	80246d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802468e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024690:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024692:	3b01      	subs	r3, #1
 8024694:	fb00 4003 	mla	r0, r0, r3, r4
 8024698:	1400      	asrs	r0, r0, #16
 802469a:	f53f af4c 	bmi.w	8024536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802469e:	3901      	subs	r1, #1
 80246a0:	4288      	cmp	r0, r1
 80246a2:	f6bf af48 	bge.w	8024536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80246a6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80246a8:	fb01 6303 	mla	r3, r1, r3, r6
 80246ac:	141b      	asrs	r3, r3, #16
 80246ae:	f53f af42 	bmi.w	8024536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80246b2:	3a01      	subs	r2, #1
 80246b4:	4293      	cmp	r3, r2
 80246b6:	f6bf af3e 	bge.w	8024536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80246ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80246be:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80246c2:	930e      	str	r3, [sp, #56]	; 0x38
 80246c4:	46c8      	mov	r8, r9
 80246c6:	f1bb 0f00 	cmp.w	fp, #0
 80246ca:	f300 80b7 	bgt.w	802483c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80246ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80246d0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80246d4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80246d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80246da:	2b00      	cmp	r3, #0
 80246dc:	f340 818d 	ble.w	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80246e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80246e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80246e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80246ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80246ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80246f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80246f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80246fa:	eef0 6a62 	vmov.f32	s13, s5
 80246fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024702:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024706:	ee77 2a62 	vsub.f32	s5, s14, s5
 802470a:	ee16 4a90 	vmov	r4, s13
 802470e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024712:	eef0 6a43 	vmov.f32	s13, s6
 8024716:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802471a:	ee12 2a90 	vmov	r2, s5
 802471e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024722:	fb92 f3f3 	sdiv	r3, r2, r3
 8024726:	ee13 2a10 	vmov	r2, s6
 802472a:	9323      	str	r3, [sp, #140]	; 0x8c
 802472c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802472e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024732:	9324      	str	r3, [sp, #144]	; 0x90
 8024734:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024736:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024738:	3b01      	subs	r3, #1
 802473a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802473e:	930d      	str	r3, [sp, #52]	; 0x34
 8024740:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024742:	bf08      	it	eq
 8024744:	4613      	moveq	r3, r2
 8024746:	ee16 6a90 	vmov	r6, s13
 802474a:	9309      	str	r3, [sp, #36]	; 0x24
 802474c:	eeb0 3a67 	vmov.f32	s6, s15
 8024750:	eef0 2a47 	vmov.f32	s5, s14
 8024754:	e6c3      	b.n	80244de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024756:	2900      	cmp	r1, #0
 8024758:	f43f af4d 	beq.w	80245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802475c:	eb0a 0003 	add.w	r0, sl, r3
 8024760:	0843      	lsrs	r3, r0, #1
 8024762:	07c0      	lsls	r0, r0, #31
 8024764:	5cfb      	ldrb	r3, [r7, r3]
 8024766:	bf54      	ite	pl
 8024768:	f003 030f 	andpl.w	r3, r3, #15
 802476c:	111b      	asrmi	r3, r3, #4
 802476e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024772:	b2db      	uxtb	r3, r3
 8024774:	930b      	str	r3, [sp, #44]	; 0x2c
 8024776:	e73e      	b.n	80245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024778:	f8b8 e000 	ldrh.w	lr, [r8]
 802477c:	fa1f fb83 	uxth.w	fp, r3
 8024780:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024784:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024788:	43db      	mvns	r3, r3
 802478a:	b2db      	uxtb	r3, r3
 802478c:	fb11 f10b 	smulbb	r1, r1, fp
 8024790:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024794:	fb00 1003 	mla	r0, r0, r3, r1
 8024798:	fa5f fc8c 	uxtb.w	ip, ip
 802479c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80247a0:	b2d2      	uxtb	r2, r2
 80247a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80247a6:	b280      	uxth	r0, r0
 80247a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80247ac:	fb1c fc0b 	smulbb	ip, ip, fp
 80247b0:	fa5f fe8e 	uxtb.w	lr, lr
 80247b4:	fb12 fb0b 	smulbb	fp, r2, fp
 80247b8:	fb01 cc03 	mla	ip, r1, r3, ip
 80247bc:	fb0e bb03 	mla	fp, lr, r3, fp
 80247c0:	1c43      	adds	r3, r0, #1
 80247c2:	fa1f fc8c 	uxth.w	ip, ip
 80247c6:	fa1f fb8b 	uxth.w	fp, fp
 80247ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80247ce:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80247d2:	f10c 0101 	add.w	r1, ip, #1
 80247d6:	f10b 0001 	add.w	r0, fp, #1
 80247da:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80247de:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80247e2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80247e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80247ea:	4318      	orrs	r0, r3
 80247ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80247f0:	ea40 000c 	orr.w	r0, r0, ip
 80247f4:	f8a8 0000 	strh.w	r0, [r8]
 80247f8:	e734      	b.n	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247fa:	f113 0b01 	adds.w	fp, r3, #1
 80247fe:	f53f af31 	bmi.w	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024802:	45dc      	cmp	ip, fp
 8024804:	f6ff af2e 	blt.w	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024808:	f110 0b01 	adds.w	fp, r0, #1
 802480c:	f53f af2a 	bmi.w	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024810:	45de      	cmp	lr, fp
 8024812:	f6ff af27 	blt.w	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024816:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024818:	9302      	str	r3, [sp, #8]
 802481a:	fa0f f38e 	sxth.w	r3, lr
 802481e:	9301      	str	r3, [sp, #4]
 8024820:	fa0f f38c 	sxth.w	r3, ip
 8024824:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024828:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802482c:	9300      	str	r3, [sp, #0]
 802482e:	463a      	mov	r2, r7
 8024830:	4653      	mov	r3, sl
 8024832:	4641      	mov	r1, r8
 8024834:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024836:	f7ff fd4d 	bl	80242d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802483a:	e713      	b.n	8024664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802483c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802483e:	1422      	asrs	r2, r4, #16
 8024840:	1433      	asrs	r3, r6, #16
 8024842:	fb05 2303 	mla	r3, r5, r3, r2
 8024846:	085a      	lsrs	r2, r3, #1
 8024848:	07dd      	lsls	r5, r3, #31
 802484a:	5cba      	ldrb	r2, [r7, r2]
 802484c:	bf54      	ite	pl
 802484e:	f002 020f 	andpl.w	r2, r2, #15
 8024852:	1112      	asrmi	r2, r2, #4
 8024854:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024858:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802485c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024860:	b2d2      	uxtb	r2, r2
 8024862:	2900      	cmp	r1, #0
 8024864:	d076      	beq.n	8024954 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024866:	f103 0e01 	add.w	lr, r3, #1
 802486a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802486e:	f01e 0f01 	tst.w	lr, #1
 8024872:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024876:	bf0c      	ite	eq
 8024878:	f00c 0c0f 	andeq.w	ip, ip, #15
 802487c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024880:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024884:	fa5f f58c 	uxtb.w	r5, ip
 8024888:	9512      	str	r5, [sp, #72]	; 0x48
 802488a:	b300      	cbz	r0, 80248ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802488c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802488e:	442b      	add	r3, r5
 8024890:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024894:	07dd      	lsls	r5, r3, #31
 8024896:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802489a:	bf54      	ite	pl
 802489c:	f00c 0c0f 	andpl.w	ip, ip, #15
 80248a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80248a4:	3301      	adds	r3, #1
 80248a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80248aa:	fa5f f58c 	uxtb.w	r5, ip
 80248ae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80248b2:	950c      	str	r5, [sp, #48]	; 0x30
 80248b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80248b8:	07dd      	lsls	r5, r3, #31
 80248ba:	bf54      	ite	pl
 80248bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80248c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80248c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80248c8:	fa5f f38c 	uxtb.w	r3, ip
 80248cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80248ce:	b289      	uxth	r1, r1
 80248d0:	b280      	uxth	r0, r0
 80248d2:	fb01 f300 	mul.w	r3, r1, r0
 80248d6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80248da:	0109      	lsls	r1, r1, #4
 80248dc:	b280      	uxth	r0, r0
 80248de:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80248e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80248e4:	1ac9      	subs	r1, r1, r3
 80248e6:	ebac 0c00 	sub.w	ip, ip, r0
 80248ea:	b289      	uxth	r1, r1
 80248ec:	4369      	muls	r1, r5
 80248ee:	fa1f fc8c 	uxth.w	ip, ip
 80248f2:	fb02 120c 	mla	r2, r2, ip, r1
 80248f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80248f8:	fb00 2001 	mla	r0, r0, r1, r2
 80248fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80248fe:	fb03 0302 	mla	r3, r3, r2, r0
 8024902:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024906:	b1d3      	cbz	r3, 802493e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024908:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802490a:	4353      	muls	r3, r2
 802490c:	1c5a      	adds	r2, r3, #1
 802490e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024912:	4a0f      	ldr	r2, [pc, #60]	; (8024950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024914:	121b      	asrs	r3, r3, #8
 8024916:	6812      	ldr	r2, [r2, #0]
 8024918:	2bff      	cmp	r3, #255	; 0xff
 802491a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802491e:	d12d      	bne.n	802497c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024920:	0953      	lsrs	r3, r2, #5
 8024922:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024926:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802492a:	f02c 0c07 	bic.w	ip, ip, #7
 802492e:	ea43 0c0c 	orr.w	ip, r3, ip
 8024932:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024936:	ea4c 0202 	orr.w	r2, ip, r2
 802493a:	f8a8 2000 	strh.w	r2, [r8]
 802493e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024940:	441c      	add	r4, r3
 8024942:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024944:	f108 0802 	add.w	r8, r8, #2
 8024948:	441e      	add	r6, r3
 802494a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802494e:	e6ba      	b.n	80246c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024950:	2000dc84 	.word	0x2000dc84
 8024954:	2800      	cmp	r0, #0
 8024956:	d0ba      	beq.n	80248ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024958:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802495a:	442b      	add	r3, r5
 802495c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024960:	07db      	lsls	r3, r3, #31
 8024962:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024966:	bf54      	ite	pl
 8024968:	f00c 0c0f 	andpl.w	ip, ip, #15
 802496c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024970:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024974:	fa5f f38c 	uxtb.w	r3, ip
 8024978:	930c      	str	r3, [sp, #48]	; 0x30
 802497a:	e7a8      	b.n	80248ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802497c:	f8b8 e000 	ldrh.w	lr, [r8]
 8024980:	fa1f fa83 	uxth.w	sl, r3
 8024984:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024988:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802498c:	43db      	mvns	r3, r3
 802498e:	b2db      	uxtb	r3, r3
 8024990:	fb11 f10a 	smulbb	r1, r1, sl
 8024994:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024998:	fb00 1003 	mla	r0, r0, r3, r1
 802499c:	b2d2      	uxtb	r2, r2
 802499e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80249a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80249a6:	fa5f fe8e 	uxtb.w	lr, lr
 80249aa:	fb12 f20a 	smulbb	r2, r2, sl
 80249ae:	fb0e 2203 	mla	r2, lr, r3, r2
 80249b2:	fa5f fc8c 	uxtb.w	ip, ip
 80249b6:	b280      	uxth	r0, r0
 80249b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80249bc:	b292      	uxth	r2, r2
 80249be:	fb1c fc0a 	smulbb	ip, ip, sl
 80249c2:	fb01 cc03 	mla	ip, r1, r3, ip
 80249c6:	1c43      	adds	r3, r0, #1
 80249c8:	1c51      	adds	r1, r2, #1
 80249ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80249ce:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80249d2:	fa1f fc8c 	uxth.w	ip, ip
 80249d6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80249da:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80249de:	4308      	orrs	r0, r1
 80249e0:	f10c 0101 	add.w	r1, ip, #1
 80249e4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80249e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80249ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80249f0:	ea40 000c 	orr.w	r0, r0, ip
 80249f4:	f8a8 0000 	strh.w	r0, [r8]
 80249f8:	e7a1      	b.n	802493e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80249fa:	b017      	add	sp, #92	; 0x5c
 80249fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024a00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024a04:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024a08:	2d00      	cmp	r5, #0
 8024a0a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024a0e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024a12:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024a16:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024a1a:	fb05 0e03 	mla	lr, r5, r3, r0
 8024a1e:	f2c0 80b0 	blt.w	8024b82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024a22:	45a9      	cmp	r9, r5
 8024a24:	f340 80ad 	ble.w	8024b82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024a28:	2800      	cmp	r0, #0
 8024a2a:	f2c0 80a8 	blt.w	8024b7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024a2e:	4580      	cmp	r8, r0
 8024a30:	f340 80a5 	ble.w	8024b7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024a34:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024a38:	f01e 0f01 	tst.w	lr, #1
 8024a3c:	5d16      	ldrb	r6, [r2, r4]
 8024a3e:	bf0c      	ite	eq
 8024a40:	f006 060f 	andeq.w	r6, r6, #15
 8024a44:	1136      	asrne	r6, r6, #4
 8024a46:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024a4a:	b2f6      	uxtb	r6, r6
 8024a4c:	1c44      	adds	r4, r0, #1
 8024a4e:	f100 809b 	bmi.w	8024b88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024a52:	45a0      	cmp	r8, r4
 8024a54:	f340 8098 	ble.w	8024b88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024a58:	2f00      	cmp	r7, #0
 8024a5a:	f000 8097 	beq.w	8024b8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024a5e:	f10e 0a01 	add.w	sl, lr, #1
 8024a62:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024a66:	f01a 0f01 	tst.w	sl, #1
 8024a6a:	5d14      	ldrb	r4, [r2, r4]
 8024a6c:	bf0c      	ite	eq
 8024a6e:	f004 040f 	andeq.w	r4, r4, #15
 8024a72:	1124      	asrne	r4, r4, #4
 8024a74:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024a78:	b2e4      	uxtb	r4, r4
 8024a7a:	3501      	adds	r5, #1
 8024a7c:	f100 808a 	bmi.w	8024b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024a80:	45a9      	cmp	r9, r5
 8024a82:	f340 8087 	ble.w	8024b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024a86:	f1bc 0f00 	cmp.w	ip, #0
 8024a8a:	f000 8086 	beq.w	8024b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024a8e:	2800      	cmp	r0, #0
 8024a90:	db7e      	blt.n	8024b90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024a92:	4580      	cmp	r8, r0
 8024a94:	dd7c      	ble.n	8024b90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024a96:	eb03 090e 	add.w	r9, r3, lr
 8024a9a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024a9e:	f019 0f01 	tst.w	r9, #1
 8024aa2:	5d55      	ldrb	r5, [r2, r5]
 8024aa4:	bf0c      	ite	eq
 8024aa6:	f005 050f 	andeq.w	r5, r5, #15
 8024aaa:	112d      	asrne	r5, r5, #4
 8024aac:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024ab0:	b2ed      	uxtb	r5, r5
 8024ab2:	3001      	adds	r0, #1
 8024ab4:	d474      	bmi.n	8024ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024ab6:	4580      	cmp	r8, r0
 8024ab8:	dd72      	ble.n	8024ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024aba:	2f00      	cmp	r7, #0
 8024abc:	d072      	beq.n	8024ba4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024abe:	3301      	adds	r3, #1
 8024ac0:	449e      	add	lr, r3
 8024ac2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024ac6:	f01e 0f01 	tst.w	lr, #1
 8024aca:	5cd0      	ldrb	r0, [r2, r3]
 8024acc:	bf0c      	ite	eq
 8024ace:	f000 000f 	andeq.w	r0, r0, #15
 8024ad2:	1100      	asrne	r0, r0, #4
 8024ad4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024ad8:	b2c3      	uxtb	r3, r0
 8024ada:	b2ba      	uxth	r2, r7
 8024adc:	fa1f fc8c 	uxth.w	ip, ip
 8024ae0:	fb02 f00c 	mul.w	r0, r2, ip
 8024ae4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024ae8:	0112      	lsls	r2, r2, #4
 8024aea:	fa1f fc8c 	uxth.w	ip, ip
 8024aee:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024af2:	1a12      	subs	r2, r2, r0
 8024af4:	eba7 070c 	sub.w	r7, r7, ip
 8024af8:	b292      	uxth	r2, r2
 8024afa:	b2bf      	uxth	r7, r7
 8024afc:	4362      	muls	r2, r4
 8024afe:	fb06 2207 	mla	r2, r6, r7, r2
 8024b02:	fb0c 2505 	mla	r5, ip, r5, r2
 8024b06:	fb00 5303 	mla	r3, r0, r3, r5
 8024b0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b0e:	b3a3      	cbz	r3, 8024b7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024b10:	4a25      	ldr	r2, [pc, #148]	; (8024ba8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024b12:	880e      	ldrh	r6, [r1, #0]
 8024b14:	6815      	ldr	r5, [r2, #0]
 8024b16:	1234      	asrs	r4, r6, #8
 8024b18:	b29a      	uxth	r2, r3
 8024b1a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024b1e:	43db      	mvns	r3, r3
 8024b20:	b2db      	uxtb	r3, r3
 8024b22:	fb10 f002 	smulbb	r0, r0, r2
 8024b26:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024b2a:	fb04 0403 	mla	r4, r4, r3, r0
 8024b2e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024b32:	10f0      	asrs	r0, r6, #3
 8024b34:	b2ed      	uxtb	r5, r5
 8024b36:	00f6      	lsls	r6, r6, #3
 8024b38:	fb17 f702 	smulbb	r7, r7, r2
 8024b3c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024b40:	fb15 f202 	smulbb	r2, r5, r2
 8024b44:	b2f6      	uxtb	r6, r6
 8024b46:	b2a4      	uxth	r4, r4
 8024b48:	fb00 7003 	mla	r0, r0, r3, r7
 8024b4c:	fb06 2303 	mla	r3, r6, r3, r2
 8024b50:	b29a      	uxth	r2, r3
 8024b52:	1c63      	adds	r3, r4, #1
 8024b54:	b280      	uxth	r0, r0
 8024b56:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024b5a:	1c53      	adds	r3, r2, #1
 8024b5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b60:	1c42      	adds	r2, r0, #1
 8024b62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024b66:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024b6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b6e:	0940      	lsrs	r0, r0, #5
 8024b70:	4323      	orrs	r3, r4
 8024b72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024b76:	4303      	orrs	r3, r0
 8024b78:	800b      	strh	r3, [r1, #0]
 8024b7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024b7e:	2600      	movs	r6, #0
 8024b80:	e764      	b.n	8024a4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024b82:	2400      	movs	r4, #0
 8024b84:	4626      	mov	r6, r4
 8024b86:	e778      	b.n	8024a7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b88:	2400      	movs	r4, #0
 8024b8a:	e776      	b.n	8024a7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b8c:	463c      	mov	r4, r7
 8024b8e:	e774      	b.n	8024a7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b90:	2500      	movs	r5, #0
 8024b92:	e78e      	b.n	8024ab2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024b94:	2300      	movs	r3, #0
 8024b96:	461d      	mov	r5, r3
 8024b98:	e79f      	b.n	8024ada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024b9a:	4663      	mov	r3, ip
 8024b9c:	4665      	mov	r5, ip
 8024b9e:	e79c      	b.n	8024ada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024ba0:	2300      	movs	r3, #0
 8024ba2:	e79a      	b.n	8024ada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024ba4:	463b      	mov	r3, r7
 8024ba6:	e798      	b.n	8024ada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024ba8:	2000dc84 	.word	0x2000dc84

08024bac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024bb0:	b093      	sub	sp, #76	; 0x4c
 8024bb2:	461d      	mov	r5, r3
 8024bb4:	920c      	str	r2, [sp, #48]	; 0x30
 8024bb6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024bb8:	9107      	str	r1, [sp, #28]
 8024bba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024bbe:	9011      	str	r0, [sp, #68]	; 0x44
 8024bc0:	6850      	ldr	r0, [r2, #4]
 8024bc2:	6812      	ldr	r2, [r2, #0]
 8024bc4:	fb00 1303 	mla	r3, r0, r3, r1
 8024bc8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024bcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bce:	689b      	ldr	r3, [r3, #8]
 8024bd0:	3301      	adds	r3, #1
 8024bd2:	f023 0301 	bic.w	r3, r3, #1
 8024bd6:	9306      	str	r3, [sp, #24]
 8024bd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bda:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024bde:	681f      	ldr	r7, [r3, #0]
 8024be0:	9b07      	ldr	r3, [sp, #28]
 8024be2:	2b00      	cmp	r3, #0
 8024be4:	dc03      	bgt.n	8024bee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024be6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024be8:	2b00      	cmp	r3, #0
 8024bea:	f340 8267 	ble.w	80250bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024bee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bf4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024bf8:	1e48      	subs	r0, r1, #1
 8024bfa:	f102 3cff 	add.w	ip, r2, #4294967295
 8024bfe:	2d00      	cmp	r5, #0
 8024c00:	f340 80b8 	ble.w	8024d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024c04:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024c08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024c0c:	d406      	bmi.n	8024c1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024c0e:	4586      	cmp	lr, r0
 8024c10:	da04      	bge.n	8024c1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024c12:	2b00      	cmp	r3, #0
 8024c14:	db02      	blt.n	8024c1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024c16:	4563      	cmp	r3, ip
 8024c18:	f2c0 80ad 	blt.w	8024d76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024c1c:	f11e 0e01 	adds.w	lr, lr, #1
 8024c20:	f100 80a0 	bmi.w	8024d64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024c24:	4571      	cmp	r1, lr
 8024c26:	f2c0 809d 	blt.w	8024d64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024c2a:	3301      	adds	r3, #1
 8024c2c:	f100 809a 	bmi.w	8024d64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024c30:	429a      	cmp	r2, r3
 8024c32:	f2c0 8097 	blt.w	8024d64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024c36:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024c3a:	9509      	str	r5, [sp, #36]	; 0x24
 8024c3c:	46c8      	mov	r8, r9
 8024c3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c40:	2b00      	cmp	r3, #0
 8024c42:	f340 80b6 	ble.w	8024db2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024c46:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024c4a:	9308      	str	r3, [sp, #32]
 8024c4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c4e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024c52:	1423      	asrs	r3, r4, #16
 8024c54:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024c58:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024c5c:	f100 813e 	bmi.w	8024edc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c60:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024c64:	455b      	cmp	r3, fp
 8024c66:	f280 8139 	bge.w	8024edc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c6a:	2800      	cmp	r0, #0
 8024c6c:	f2c0 8136 	blt.w	8024edc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c70:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024c74:	4558      	cmp	r0, fp
 8024c76:	f280 8131 	bge.w	8024edc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c7a:	9a06      	ldr	r2, [sp, #24]
 8024c7c:	fb00 3302 	mla	r3, r0, r2, r3
 8024c80:	0858      	lsrs	r0, r3, #1
 8024c82:	07da      	lsls	r2, r3, #31
 8024c84:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024c88:	9a08      	ldr	r2, [sp, #32]
 8024c8a:	bf54      	ite	pl
 8024c8c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024c90:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024c94:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024c98:	fa5f fc8c 	uxtb.w	ip, ip
 8024c9c:	2a00      	cmp	r2, #0
 8024c9e:	f000 80cb 	beq.w	8024e38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024ca2:	1c58      	adds	r0, r3, #1
 8024ca4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024ca8:	07c0      	lsls	r0, r0, #31
 8024caa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024cae:	bf54      	ite	pl
 8024cb0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024cb4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024cb8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024cbc:	fa5f fe8e 	uxtb.w	lr, lr
 8024cc0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024cc4:	b1b9      	cbz	r1, 8024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024cc6:	4453      	add	r3, sl
 8024cc8:	0858      	lsrs	r0, r3, #1
 8024cca:	07da      	lsls	r2, r3, #31
 8024ccc:	5c38      	ldrb	r0, [r7, r0]
 8024cce:	bf54      	ite	pl
 8024cd0:	f000 000f 	andpl.w	r0, r0, #15
 8024cd4:	1100      	asrmi	r0, r0, #4
 8024cd6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024cda:	b2c0      	uxtb	r0, r0
 8024cdc:	900a      	str	r0, [sp, #40]	; 0x28
 8024cde:	1c58      	adds	r0, r3, #1
 8024ce0:	0843      	lsrs	r3, r0, #1
 8024ce2:	07c2      	lsls	r2, r0, #31
 8024ce4:	5cfb      	ldrb	r3, [r7, r3]
 8024ce6:	bf54      	ite	pl
 8024ce8:	f003 030f 	andpl.w	r3, r3, #15
 8024cec:	111b      	asrmi	r3, r3, #4
 8024cee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024cf2:	b2db      	uxtb	r3, r3
 8024cf4:	930e      	str	r3, [sp, #56]	; 0x38
 8024cf6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024cfa:	b289      	uxth	r1, r1
 8024cfc:	fb02 f301 	mul.w	r3, r2, r1
 8024d00:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024d04:	0112      	lsls	r2, r2, #4
 8024d06:	b289      	uxth	r1, r1
 8024d08:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024d0c:	1a40      	subs	r0, r0, r1
 8024d0e:	fa1f fe80 	uxth.w	lr, r0
 8024d12:	1ad2      	subs	r2, r2, r3
 8024d14:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024d16:	b292      	uxth	r2, r2
 8024d18:	4342      	muls	r2, r0
 8024d1a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024d1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024d20:	fb01 c102 	mla	r1, r1, r2, ip
 8024d24:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024d26:	fb03 1302 	mla	r3, r3, r2, r1
 8024d2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d2e:	2bff      	cmp	r3, #255	; 0xff
 8024d30:	f040 8093 	bne.w	8024e5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024d34:	4bbe      	ldr	r3, [pc, #760]	; (8025030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024d36:	681a      	ldr	r2, [r3, #0]
 8024d38:	4bbe      	ldr	r3, [pc, #760]	; (8025034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024d3a:	0951      	lsrs	r1, r2, #5
 8024d3c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024d40:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024d44:	430b      	orrs	r3, r1
 8024d46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024d4a:	4313      	orrs	r3, r2
 8024d4c:	f8a8 3000 	strh.w	r3, [r8]
 8024d50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024d52:	441c      	add	r4, r3
 8024d54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024d56:	441e      	add	r6, r3
 8024d58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024d5a:	3b01      	subs	r3, #1
 8024d5c:	f108 0802 	add.w	r8, r8, #2
 8024d60:	9309      	str	r3, [sp, #36]	; 0x24
 8024d62:	e76c      	b.n	8024c3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024d64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024d66:	441c      	add	r4, r3
 8024d68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024d6a:	3d01      	subs	r5, #1
 8024d6c:	441e      	add	r6, r3
 8024d6e:	f109 0902 	add.w	r9, r9, #2
 8024d72:	e744      	b.n	8024bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024d74:	d021      	beq.n	8024dba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024d76:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024d78:	1e6b      	subs	r3, r5, #1
 8024d7a:	fb00 4003 	mla	r0, r0, r3, r4
 8024d7e:	1400      	asrs	r0, r0, #16
 8024d80:	f53f af59 	bmi.w	8024c36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d84:	3901      	subs	r1, #1
 8024d86:	4288      	cmp	r0, r1
 8024d88:	f6bf af55 	bge.w	8024c36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d8c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024d8e:	fb01 6303 	mla	r3, r1, r3, r6
 8024d92:	141b      	asrs	r3, r3, #16
 8024d94:	f53f af4f 	bmi.w	8024c36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d98:	3a01      	subs	r2, #1
 8024d9a:	4293      	cmp	r3, r2
 8024d9c:	f6bf af4b 	bge.w	8024c36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024da0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024da4:	9308      	str	r3, [sp, #32]
 8024da6:	46a8      	mov	r8, r5
 8024da8:	46ce      	mov	lr, r9
 8024daa:	f1b8 0f00 	cmp.w	r8, #0
 8024dae:	f300 80b5 	bgt.w	8024f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024db2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024db6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024dba:	9b07      	ldr	r3, [sp, #28]
 8024dbc:	2b00      	cmp	r3, #0
 8024dbe:	f340 817d 	ble.w	80250bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024dc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024dc6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024dca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024dce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024dd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024dd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024dd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024ddc:	eef0 6a62 	vmov.f32	s13, s5
 8024de0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024de4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024de8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024dec:	ee16 4a90 	vmov	r4, s13
 8024df0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024df4:	eef0 6a43 	vmov.f32	s13, s6
 8024df8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024dfc:	ee12 2a90 	vmov	r2, s5
 8024e00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024e04:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e08:	ee13 2a10 	vmov	r2, s6
 8024e0c:	931f      	str	r3, [sp, #124]	; 0x7c
 8024e0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e10:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e14:	9320      	str	r3, [sp, #128]	; 0x80
 8024e16:	9b07      	ldr	r3, [sp, #28]
 8024e18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024e1a:	3b01      	subs	r3, #1
 8024e1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e20:	9307      	str	r3, [sp, #28]
 8024e22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e24:	ee16 6a90 	vmov	r6, s13
 8024e28:	bf14      	ite	ne
 8024e2a:	461d      	movne	r5, r3
 8024e2c:	4615      	moveq	r5, r2
 8024e2e:	eeb0 3a67 	vmov.f32	s6, s15
 8024e32:	eef0 2a47 	vmov.f32	s5, s14
 8024e36:	e6d3      	b.n	8024be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024e38:	2900      	cmp	r1, #0
 8024e3a:	f43f af5c 	beq.w	8024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024e3e:	eb0a 0003 	add.w	r0, sl, r3
 8024e42:	0843      	lsrs	r3, r0, #1
 8024e44:	07c0      	lsls	r0, r0, #31
 8024e46:	5cfb      	ldrb	r3, [r7, r3]
 8024e48:	bf54      	ite	pl
 8024e4a:	f003 030f 	andpl.w	r3, r3, #15
 8024e4e:	111b      	asrmi	r3, r3, #4
 8024e50:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024e54:	b2db      	uxtb	r3, r3
 8024e56:	930a      	str	r3, [sp, #40]	; 0x28
 8024e58:	e74d      	b.n	8024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024e5a:	2b00      	cmp	r3, #0
 8024e5c:	f43f af78 	beq.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e60:	4a73      	ldr	r2, [pc, #460]	; (8025030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024e62:	f8b8 c000 	ldrh.w	ip, [r8]
 8024e66:	6810      	ldr	r0, [r2, #0]
 8024e68:	fa1f fe83 	uxth.w	lr, r3
 8024e6c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024e70:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024e74:	43db      	mvns	r3, r3
 8024e76:	b2db      	uxtb	r3, r3
 8024e78:	fb12 f20e 	smulbb	r2, r2, lr
 8024e7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024e80:	fb01 2103 	mla	r1, r1, r3, r2
 8024e84:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024e88:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024e8c:	b2c0      	uxtb	r0, r0
 8024e8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024e92:	fb1b fb0e 	smulbb	fp, fp, lr
 8024e96:	b289      	uxth	r1, r1
 8024e98:	fb10 fe0e 	smulbb	lr, r0, lr
 8024e9c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024ea0:	fa5f fc8c 	uxtb.w	ip, ip
 8024ea4:	fb02 b203 	mla	r2, r2, r3, fp
 8024ea8:	1c48      	adds	r0, r1, #1
 8024eaa:	fb0c e303 	mla	r3, ip, r3, lr
 8024eae:	b292      	uxth	r2, r2
 8024eb0:	b29b      	uxth	r3, r3
 8024eb2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024eb6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024eba:	f102 0b01 	add.w	fp, r2, #1
 8024ebe:	1c59      	adds	r1, r3, #1
 8024ec0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024ec4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024ec8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024ecc:	0952      	lsrs	r2, r2, #5
 8024ece:	4301      	orrs	r1, r0
 8024ed0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ed4:	4311      	orrs	r1, r2
 8024ed6:	f8a8 1000 	strh.w	r1, [r8]
 8024eda:	e739      	b.n	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024edc:	f113 0b01 	adds.w	fp, r3, #1
 8024ee0:	f53f af36 	bmi.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ee4:	45dc      	cmp	ip, fp
 8024ee6:	f6ff af33 	blt.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024eea:	f110 0b01 	adds.w	fp, r0, #1
 8024eee:	f53f af2f 	bmi.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ef2:	45de      	cmp	lr, fp
 8024ef4:	f6ff af2c 	blt.w	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ef8:	9a08      	ldr	r2, [sp, #32]
 8024efa:	9302      	str	r3, [sp, #8]
 8024efc:	fa0f f38e 	sxth.w	r3, lr
 8024f00:	9301      	str	r3, [sp, #4]
 8024f02:	fa0f f38c 	sxth.w	r3, ip
 8024f06:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024f0a:	9105      	str	r1, [sp, #20]
 8024f0c:	9300      	str	r3, [sp, #0]
 8024f0e:	463a      	mov	r2, r7
 8024f10:	4653      	mov	r3, sl
 8024f12:	4641      	mov	r1, r8
 8024f14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024f16:	f7ff fd73 	bl	8024a00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024f1a:	e719      	b.n	8024d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f1c:	9906      	ldr	r1, [sp, #24]
 8024f1e:	1422      	asrs	r2, r4, #16
 8024f20:	1433      	asrs	r3, r6, #16
 8024f22:	fb01 2303 	mla	r3, r1, r3, r2
 8024f26:	085a      	lsrs	r2, r3, #1
 8024f28:	07d9      	lsls	r1, r3, #31
 8024f2a:	5cba      	ldrb	r2, [r7, r2]
 8024f2c:	bf54      	ite	pl
 8024f2e:	f002 020f 	andpl.w	r2, r2, #15
 8024f32:	1112      	asrmi	r2, r2, #4
 8024f34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024f38:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024f3c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024f40:	b2d2      	uxtb	r2, r2
 8024f42:	2800      	cmp	r0, #0
 8024f44:	d062      	beq.n	802500c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024f46:	f103 0a01 	add.w	sl, r3, #1
 8024f4a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024f4e:	f01a 0f01 	tst.w	sl, #1
 8024f52:	5c79      	ldrb	r1, [r7, r1]
 8024f54:	bf0c      	ite	eq
 8024f56:	f001 010f 	andeq.w	r1, r1, #15
 8024f5a:	1109      	asrne	r1, r1, #4
 8024f5c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f60:	b2c9      	uxtb	r1, r1
 8024f62:	910f      	str	r1, [sp, #60]	; 0x3c
 8024f64:	f1bc 0f00 	cmp.w	ip, #0
 8024f68:	d019      	beq.n	8024f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024f6a:	9908      	ldr	r1, [sp, #32]
 8024f6c:	440b      	add	r3, r1
 8024f6e:	0859      	lsrs	r1, r3, #1
 8024f70:	f013 0f01 	tst.w	r3, #1
 8024f74:	5c79      	ldrb	r1, [r7, r1]
 8024f76:	bf0c      	ite	eq
 8024f78:	f001 010f 	andeq.w	r1, r1, #15
 8024f7c:	1109      	asrne	r1, r1, #4
 8024f7e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f82:	b2c9      	uxtb	r1, r1
 8024f84:	3301      	adds	r3, #1
 8024f86:	910b      	str	r1, [sp, #44]	; 0x2c
 8024f88:	0859      	lsrs	r1, r3, #1
 8024f8a:	07db      	lsls	r3, r3, #31
 8024f8c:	5c79      	ldrb	r1, [r7, r1]
 8024f8e:	bf54      	ite	pl
 8024f90:	f001 010f 	andpl.w	r1, r1, #15
 8024f94:	1109      	asrmi	r1, r1, #4
 8024f96:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f9a:	b2c9      	uxtb	r1, r1
 8024f9c:	9110      	str	r1, [sp, #64]	; 0x40
 8024f9e:	b280      	uxth	r0, r0
 8024fa0:	fa1f fc8c 	uxth.w	ip, ip
 8024fa4:	fb00 f30c 	mul.w	r3, r0, ip
 8024fa8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024fac:	0100      	lsls	r0, r0, #4
 8024fae:	fa1f fc8c 	uxth.w	ip, ip
 8024fb2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8024fb6:	eba1 010c 	sub.w	r1, r1, ip
 8024fba:	fa1f fa81 	uxth.w	sl, r1
 8024fbe:	1ac0      	subs	r0, r0, r3
 8024fc0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024fc2:	b280      	uxth	r0, r0
 8024fc4:	4348      	muls	r0, r1
 8024fc6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8024fc8:	fb02 020a 	mla	r2, r2, sl, r0
 8024fcc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024fd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024fd2:	fb03 c302 	mla	r3, r3, r2, ip
 8024fd6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024fda:	2bff      	cmp	r3, #255	; 0xff
 8024fdc:	d12c      	bne.n	8025038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024fde:	4b14      	ldr	r3, [pc, #80]	; (8025030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024fe0:	681a      	ldr	r2, [r3, #0]
 8024fe2:	4b14      	ldr	r3, [pc, #80]	; (8025034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024fe4:	0951      	lsrs	r1, r2, #5
 8024fe6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024fea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024fee:	430b      	orrs	r3, r1
 8024ff0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ff4:	4313      	orrs	r3, r2
 8024ff6:	f8ae 3000 	strh.w	r3, [lr]
 8024ffa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024ffc:	441c      	add	r4, r3
 8024ffe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025000:	f10e 0e02 	add.w	lr, lr, #2
 8025004:	441e      	add	r6, r3
 8025006:	f108 38ff 	add.w	r8, r8, #4294967295
 802500a:	e6ce      	b.n	8024daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802500c:	f1bc 0f00 	cmp.w	ip, #0
 8025010:	d0c5      	beq.n	8024f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025012:	9908      	ldr	r1, [sp, #32]
 8025014:	440b      	add	r3, r1
 8025016:	0859      	lsrs	r1, r3, #1
 8025018:	07db      	lsls	r3, r3, #31
 802501a:	5c79      	ldrb	r1, [r7, r1]
 802501c:	bf54      	ite	pl
 802501e:	f001 010f 	andpl.w	r1, r1, #15
 8025022:	1109      	asrmi	r1, r1, #4
 8025024:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025028:	b2c9      	uxtb	r1, r1
 802502a:	910b      	str	r1, [sp, #44]	; 0x2c
 802502c:	e7b7      	b.n	8024f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802502e:	bf00      	nop
 8025030:	2000dc84 	.word	0x2000dc84
 8025034:	fffff800 	.word	0xfffff800
 8025038:	2b00      	cmp	r3, #0
 802503a:	d0de      	beq.n	8024ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802503c:	4a21      	ldr	r2, [pc, #132]	; (80250c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802503e:	f8be c000 	ldrh.w	ip, [lr]
 8025042:	6810      	ldr	r0, [r2, #0]
 8025044:	fa1f fa83 	uxth.w	sl, r3
 8025048:	ea4f 212c 	mov.w	r1, ip, asr #8
 802504c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025050:	43db      	mvns	r3, r3
 8025052:	b2db      	uxtb	r3, r3
 8025054:	fb12 f20a 	smulbb	r2, r2, sl
 8025058:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802505c:	fb01 2103 	mla	r1, r1, r3, r2
 8025060:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025064:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025068:	b2c0      	uxtb	r0, r0
 802506a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802506e:	fa5f fc8c 	uxtb.w	ip, ip
 8025072:	fb10 f00a 	smulbb	r0, r0, sl
 8025076:	fb0c 0003 	mla	r0, ip, r3, r0
 802507a:	b289      	uxth	r1, r1
 802507c:	fb1b fb0a 	smulbb	fp, fp, sl
 8025080:	b280      	uxth	r0, r0
 8025082:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025086:	fb02 b203 	mla	r2, r2, r3, fp
 802508a:	1c4b      	adds	r3, r1, #1
 802508c:	f100 0b01 	add.w	fp, r0, #1
 8025090:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025094:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025098:	b292      	uxth	r2, r2
 802509a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802509e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80250a2:	ea4b 0101 	orr.w	r1, fp, r1
 80250a6:	f102 0b01 	add.w	fp, r2, #1
 80250aa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80250ae:	0952      	lsrs	r2, r2, #5
 80250b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250b4:	4311      	orrs	r1, r2
 80250b6:	f8ae 1000 	strh.w	r1, [lr]
 80250ba:	e79e      	b.n	8024ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80250bc:	b013      	add	sp, #76	; 0x4c
 80250be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250c2:	bf00      	nop
 80250c4:	2000dc84 	.word	0x2000dc84

080250c8 <CRC_Lock>:
 80250c8:	b530      	push	{r4, r5, lr}
 80250ca:	4a20      	ldr	r2, [pc, #128]	; (802514c <CRC_Lock+0x84>)
 80250cc:	6813      	ldr	r3, [r2, #0]
 80250ce:	f023 0301 	bic.w	r3, r3, #1
 80250d2:	6013      	str	r3, [r2, #0]
 80250d4:	4b1e      	ldr	r3, [pc, #120]	; (8025150 <CRC_Lock+0x88>)
 80250d6:	681a      	ldr	r2, [r3, #0]
 80250d8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80250dc:	4022      	ands	r2, r4
 80250de:	f24c 2540 	movw	r5, #49728	; 0xc240
 80250e2:	42aa      	cmp	r2, r5
 80250e4:	d005      	beq.n	80250f2 <CRC_Lock+0x2a>
 80250e6:	681b      	ldr	r3, [r3, #0]
 80250e8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80250ec:	4023      	ands	r3, r4
 80250ee:	4293      	cmp	r3, r2
 80250f0:	d124      	bne.n	802513c <CRC_Lock+0x74>
 80250f2:	4b18      	ldr	r3, [pc, #96]	; (8025154 <CRC_Lock+0x8c>)
 80250f4:	681b      	ldr	r3, [r3, #0]
 80250f6:	bb0b      	cbnz	r3, 802513c <CRC_Lock+0x74>
 80250f8:	4b17      	ldr	r3, [pc, #92]	; (8025158 <CRC_Lock+0x90>)
 80250fa:	681a      	ldr	r2, [r3, #0]
 80250fc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025100:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025104:	d00d      	beq.n	8025122 <CRC_Lock+0x5a>
 8025106:	681a      	ldr	r2, [r3, #0]
 8025108:	f240 4483 	movw	r4, #1155	; 0x483
 802510c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025110:	42a2      	cmp	r2, r4
 8025112:	d006      	beq.n	8025122 <CRC_Lock+0x5a>
 8025114:	681b      	ldr	r3, [r3, #0]
 8025116:	f240 4285 	movw	r2, #1157	; 0x485
 802511a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802511e:	4293      	cmp	r3, r2
 8025120:	d10c      	bne.n	802513c <CRC_Lock+0x74>
 8025122:	4b0e      	ldr	r3, [pc, #56]	; (802515c <CRC_Lock+0x94>)
 8025124:	2201      	movs	r2, #1
 8025126:	601a      	str	r2, [r3, #0]
 8025128:	681a      	ldr	r2, [r3, #0]
 802512a:	2a00      	cmp	r2, #0
 802512c:	d1fc      	bne.n	8025128 <CRC_Lock+0x60>
 802512e:	4b0c      	ldr	r3, [pc, #48]	; (8025160 <CRC_Lock+0x98>)
 8025130:	6018      	str	r0, [r3, #0]
 8025132:	6818      	ldr	r0, [r3, #0]
 8025134:	1a43      	subs	r3, r0, r1
 8025136:	4258      	negs	r0, r3
 8025138:	4158      	adcs	r0, r3
 802513a:	bd30      	pop	{r4, r5, pc}
 802513c:	4b09      	ldr	r3, [pc, #36]	; (8025164 <CRC_Lock+0x9c>)
 802513e:	2201      	movs	r2, #1
 8025140:	601a      	str	r2, [r3, #0]
 8025142:	681a      	ldr	r2, [r3, #0]
 8025144:	2a00      	cmp	r2, #0
 8025146:	d1fc      	bne.n	8025142 <CRC_Lock+0x7a>
 8025148:	4b07      	ldr	r3, [pc, #28]	; (8025168 <CRC_Lock+0xa0>)
 802514a:	e7f1      	b.n	8025130 <CRC_Lock+0x68>
 802514c:	e0002000 	.word	0xe0002000
 8025150:	e000ed00 	.word	0xe000ed00
 8025154:	e0042000 	.word	0xe0042000
 8025158:	5c001000 	.word	0x5c001000
 802515c:	58024c08 	.word	0x58024c08
 8025160:	58024c00 	.word	0x58024c00
 8025164:	40023008 	.word	0x40023008
 8025168:	40023000 	.word	0x40023000

0802516c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802516c:	6101      	str	r1, [r0, #16]
 802516e:	4770      	bx	lr

08025170 <_ZN8touchgfx8Gestures4tickEv>:
 8025170:	7b83      	ldrb	r3, [r0, #14]
 8025172:	b14b      	cbz	r3, 8025188 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025174:	8903      	ldrh	r3, [r0, #8]
 8025176:	3301      	adds	r3, #1
 8025178:	b29b      	uxth	r3, r3
 802517a:	2b07      	cmp	r3, #7
 802517c:	8103      	strh	r3, [r0, #8]
 802517e:	bf81      	itttt	hi
 8025180:	2300      	movhi	r3, #0
 8025182:	8143      	strhhi	r3, [r0, #10]
 8025184:	8183      	strhhi	r3, [r0, #12]
 8025186:	7383      	strbhi	r3, [r0, #14]
 8025188:	4770      	bx	lr
	...

0802518c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802518c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025190:	4698      	mov	r8, r3
 8025192:	8883      	ldrh	r3, [r0, #4]
 8025194:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025198:	eba8 0303 	sub.w	r3, r8, r3
 802519c:	b21b      	sxth	r3, r3
 802519e:	4604      	mov	r4, r0
 80251a0:	2b00      	cmp	r3, #0
 80251a2:	4617      	mov	r7, r2
 80251a4:	4a18      	ldr	r2, [pc, #96]	; (8025208 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80251a6:	9200      	str	r2, [sp, #0]
 80251a8:	bfb8      	it	lt
 80251aa:	425b      	neglt	r3, r3
 80251ac:	8aa2      	ldrh	r2, [r4, #20]
 80251ae:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80251b2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80251b6:	b21b      	sxth	r3, r3
 80251b8:	460e      	mov	r6, r1
 80251ba:	4293      	cmp	r3, r2
 80251bc:	88c1      	ldrh	r1, [r0, #6]
 80251be:	f8ad 1008 	strh.w	r1, [sp, #8]
 80251c2:	f04f 0000 	mov.w	r0, #0
 80251c6:	f88d 0004 	strb.w	r0, [sp, #4]
 80251ca:	f8ad 500c 	strh.w	r5, [sp, #12]
 80251ce:	dc07      	bgt.n	80251e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80251d0:	1a69      	subs	r1, r5, r1
 80251d2:	b209      	sxth	r1, r1
 80251d4:	2900      	cmp	r1, #0
 80251d6:	bfb8      	it	lt
 80251d8:	4249      	neglt	r1, r1
 80251da:	b209      	sxth	r1, r1
 80251dc:	428a      	cmp	r2, r1
 80251de:	da10      	bge.n	8025202 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80251e0:	6920      	ldr	r0, [r4, #16]
 80251e2:	6803      	ldr	r3, [r0, #0]
 80251e4:	4669      	mov	r1, sp
 80251e6:	685b      	ldr	r3, [r3, #4]
 80251e8:	4798      	blx	r3
 80251ea:	eba8 0606 	sub.w	r6, r8, r6
 80251ee:	2300      	movs	r3, #0
 80251f0:	1bef      	subs	r7, r5, r7
 80251f2:	2001      	movs	r0, #1
 80251f4:	8123      	strh	r3, [r4, #8]
 80251f6:	8166      	strh	r6, [r4, #10]
 80251f8:	81a7      	strh	r7, [r4, #12]
 80251fa:	f8a4 8004 	strh.w	r8, [r4, #4]
 80251fe:	80e5      	strh	r5, [r4, #6]
 8025200:	73a0      	strb	r0, [r4, #14]
 8025202:	b004      	add	sp, #16
 8025204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025208:	08028dec 	.word	0x08028dec

0802520c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802520c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802520e:	461e      	mov	r6, r3
 8025210:	1e4b      	subs	r3, r1, #1
 8025212:	2b01      	cmp	r3, #1
 8025214:	b085      	sub	sp, #20
 8025216:	4604      	mov	r4, r0
 8025218:	460d      	mov	r5, r1
 802521a:	4617      	mov	r7, r2
 802521c:	d84b      	bhi.n	80252b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802521e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025222:	1cd3      	adds	r3, r2, #3
 8025224:	b29b      	uxth	r3, r3
 8025226:	2b06      	cmp	r3, #6
 8025228:	d916      	bls.n	8025258 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802522a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80252cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802522e:	f8cd c004 	str.w	ip, [sp, #4]
 8025232:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025236:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802523a:	6900      	ldr	r0, [r0, #16]
 802523c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025240:	f04f 0c00 	mov.w	ip, #0
 8025244:	f88d c008 	strb.w	ip, [sp, #8]
 8025248:	f8ad 200a 	strh.w	r2, [sp, #10]
 802524c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025250:	6803      	ldr	r3, [r0, #0]
 8025252:	a901      	add	r1, sp, #4
 8025254:	689b      	ldr	r3, [r3, #8]
 8025256:	4798      	blx	r3
 8025258:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802525c:	1cd3      	adds	r3, r2, #3
 802525e:	b29b      	uxth	r3, r3
 8025260:	2b06      	cmp	r3, #6
 8025262:	d916      	bls.n	8025292 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025264:	f8df c064 	ldr.w	ip, [pc, #100]	; 80252cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025268:	f8cd c004 	str.w	ip, [sp, #4]
 802526c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025270:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025274:	6920      	ldr	r0, [r4, #16]
 8025276:	f8ad 100c 	strh.w	r1, [sp, #12]
 802527a:	f04f 0c01 	mov.w	ip, #1
 802527e:	f88d c008 	strb.w	ip, [sp, #8]
 8025282:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025286:	f8ad 300e 	strh.w	r3, [sp, #14]
 802528a:	6803      	ldr	r3, [r0, #0]
 802528c:	a901      	add	r1, sp, #4
 802528e:	689b      	ldr	r3, [r3, #8]
 8025290:	4798      	blx	r3
 8025292:	4b0d      	ldr	r3, [pc, #52]	; (80252c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025294:	9301      	str	r3, [sp, #4]
 8025296:	6920      	ldr	r0, [r4, #16]
 8025298:	f88d 5008 	strb.w	r5, [sp, #8]
 802529c:	2300      	movs	r3, #0
 802529e:	f8ad 700a 	strh.w	r7, [sp, #10]
 80252a2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80252a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80252aa:	6803      	ldr	r3, [r0, #0]
 80252ac:	a901      	add	r1, sp, #4
 80252ae:	681b      	ldr	r3, [r3, #0]
 80252b0:	4798      	blx	r3
 80252b2:	b005      	add	sp, #20
 80252b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80252b6:	2900      	cmp	r1, #0
 80252b8:	d1eb      	bne.n	8025292 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80252ba:	80a2      	strh	r2, [r4, #4]
 80252bc:	80c6      	strh	r6, [r0, #6]
 80252be:	60a1      	str	r1, [r4, #8]
 80252c0:	81a1      	strh	r1, [r4, #12]
 80252c2:	73a1      	strb	r1, [r4, #14]
 80252c4:	e7e5      	b.n	8025292 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80252c6:	bf00      	nop
 80252c8:	08028dd8 	.word	0x08028dd8
 80252cc:	08028e00 	.word	0x08028e00

080252d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80252d0:	10c9      	asrs	r1, r1, #3
 80252d2:	2900      	cmp	r1, #0
 80252d4:	bfb8      	it	lt
 80252d6:	4249      	neglt	r1, r1
 80252d8:	2801      	cmp	r0, #1
 80252da:	d108      	bne.n	80252ee <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80252dc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80252e0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80252e4:	4601      	mov	r1, r0
 80252e6:	dd02      	ble.n	80252ee <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80252e8:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80252ec:	4770      	bx	lr
 80252ee:	29ff      	cmp	r1, #255	; 0xff
 80252f0:	bfa8      	it	ge
 80252f2:	21ff      	movge	r1, #255	; 0xff
 80252f4:	4608      	mov	r0, r1
 80252f6:	4770      	bx	lr

080252f8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80252f8:	b410      	push	{r4}
 80252fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80252fe:	429c      	cmp	r4, r3
 8025300:	d803      	bhi.n	802530a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025302:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025306:	f7ef bb29 	b.w	801495c <_ZN8touchgfx7Outline6lineToEii>
 802530a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802530e:	4770      	bx	lr

08025310 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025314:	b08b      	sub	sp, #44	; 0x2c
 8025316:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802531a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802531e:	9308      	str	r3, [sp, #32]
 8025320:	4606      	mov	r6, r0
 8025322:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025326:	9309      	str	r3, [sp, #36]	; 0x24
 8025328:	468a      	mov	sl, r1
 802532a:	f7ef fc84 	bl	8014c36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802532e:	68b5      	ldr	r5, [r6, #8]
 8025330:	4604      	mov	r4, r0
 8025332:	2d00      	cmp	r5, #0
 8025334:	d044      	beq.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025336:	6873      	ldr	r3, [r6, #4]
 8025338:	42ab      	cmp	r3, r5
 802533a:	d33d      	bcc.n	80253b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802533c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025340:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025344:	eb02 0b03 	add.w	fp, r2, r3
 8025348:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802534c:	fb02 1203 	mla	r2, r2, r3, r1
 8025350:	9205      	str	r2, [sp, #20]
 8025352:	1e6a      	subs	r2, r5, #1
 8025354:	9204      	str	r2, [sp, #16]
 8025356:	f04f 0800 	mov.w	r8, #0
 802535a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802535e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025362:	454b      	cmp	r3, r9
 8025364:	463a      	mov	r2, r7
 8025366:	d008      	beq.n	802537a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025368:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802536c:	eb03 0b09 	add.w	fp, r3, r9
 8025370:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025374:	fb03 1309 	mla	r3, r3, r9, r1
 8025378:	9305      	str	r3, [sp, #20]
 802537a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802537e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025382:	4498      	add	r8, r3
 8025384:	9b04      	ldr	r3, [sp, #16]
 8025386:	3b01      	subs	r3, #1
 8025388:	9304      	str	r3, [sp, #16]
 802538a:	9b04      	ldr	r3, [sp, #16]
 802538c:	3301      	adds	r3, #1
 802538e:	d015      	beq.n	80253bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025390:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025394:	42bb      	cmp	r3, r7
 8025396:	d117      	bne.n	80253c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025398:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802539c:	9b04      	ldr	r3, [sp, #16]
 802539e:	4548      	cmp	r0, r9
 80253a0:	f103 33ff 	add.w	r3, r3, #4294967295
 80253a4:	d17f      	bne.n	80254a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80253a6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80253aa:	4401      	add	r1, r0
 80253ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80253b0:	4480      	add	r8, r0
 80253b2:	e7e9      	b.n	8025388 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80253b4:	461f      	mov	r7, r3
 80253b6:	e044      	b.n	8025442 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80253b8:	2000      	movs	r0, #0
 80253ba:	e002      	b.n	80253c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80253bc:	2900      	cmp	r1, #0
 80253be:	d16f      	bne.n	80254a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80253c0:	2001      	movs	r0, #1
 80253c2:	b00b      	add	sp, #44	; 0x2c
 80253c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80253c8:	2900      	cmp	r1, #0
 80253ca:	d030      	beq.n	802542e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80253cc:	2f00      	cmp	r7, #0
 80253ce:	db29      	blt.n	8025424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80253d0:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80253d4:	42bb      	cmp	r3, r7
 80253d6:	dd25      	ble.n	8025424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80253d8:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80253dc:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80253e0:	f7ff ff76 	bl	80252d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80253e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253e6:	fb10 f003 	smulbb	r0, r0, r3
 80253ea:	b280      	uxth	r0, r0
 80253ec:	1c41      	adds	r1, r0, #1
 80253ee:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80253f2:	1209      	asrs	r1, r1, #8
 80253f4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80253f8:	d014      	beq.n	8025424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80253fa:	9808      	ldr	r0, [sp, #32]
 80253fc:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80253fe:	b2c9      	uxtb	r1, r1
 8025400:	b2ba      	uxth	r2, r7
 8025402:	9102      	str	r1, [sp, #8]
 8025404:	2101      	movs	r1, #1
 8025406:	4413      	add	r3, r2
 8025408:	9101      	str	r1, [sp, #4]
 802540a:	4402      	add	r2, r0
 802540c:	fa0f f18b 	sxth.w	r1, fp
 8025410:	f8da 0000 	ldr.w	r0, [sl]
 8025414:	9100      	str	r1, [sp, #0]
 8025416:	6941      	ldr	r1, [r0, #20]
 8025418:	b21b      	sxth	r3, r3
 802541a:	460d      	mov	r5, r1
 802541c:	b212      	sxth	r2, r2
 802541e:	9905      	ldr	r1, [sp, #20]
 8025420:	4650      	mov	r0, sl
 8025422:	47a8      	blx	r5
 8025424:	9b04      	ldr	r3, [sp, #16]
 8025426:	3301      	adds	r3, #1
 8025428:	f107 0201 	add.w	r2, r7, #1
 802542c:	d0c8      	beq.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802542e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025432:	1abb      	subs	r3, r7, r2
 8025434:	2b00      	cmp	r3, #0
 8025436:	dd31      	ble.n	802549c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025438:	2a00      	cmp	r2, #0
 802543a:	dabb      	bge.n	80253b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802543c:	2f00      	cmp	r7, #0
 802543e:	dd2d      	ble.n	802549c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025440:	2200      	movs	r2, #0
 8025442:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025446:	19d1      	adds	r1, r2, r7
 8025448:	4299      	cmp	r1, r3
 802544a:	db02      	blt.n	8025452 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802544c:	1a9f      	subs	r7, r3, r2
 802544e:	2f00      	cmp	r7, #0
 8025450:	dd24      	ble.n	802549c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025452:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025456:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802545a:	f7ff ff39 	bl	80252d0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802545e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025460:	fb10 f003 	smulbb	r0, r0, r3
 8025464:	b280      	uxth	r0, r0
 8025466:	1c41      	adds	r1, r0, #1
 8025468:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802546c:	1209      	asrs	r1, r1, #8
 802546e:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025472:	d013      	beq.n	802549c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025474:	9808      	ldr	r0, [sp, #32]
 8025476:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025478:	b292      	uxth	r2, r2
 802547a:	b2c9      	uxtb	r1, r1
 802547c:	4413      	add	r3, r2
 802547e:	9102      	str	r1, [sp, #8]
 8025480:	4402      	add	r2, r0
 8025482:	b23f      	sxth	r7, r7
 8025484:	f8da 0000 	ldr.w	r0, [sl]
 8025488:	9701      	str	r7, [sp, #4]
 802548a:	fa0f f18b 	sxth.w	r1, fp
 802548e:	9100      	str	r1, [sp, #0]
 8025490:	6947      	ldr	r7, [r0, #20]
 8025492:	9905      	ldr	r1, [sp, #20]
 8025494:	b21b      	sxth	r3, r3
 8025496:	b212      	sxth	r2, r2
 8025498:	4650      	mov	r0, sl
 802549a:	47b8      	blx	r7
 802549c:	464b      	mov	r3, r9
 802549e:	e75c      	b.n	802535a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80254a0:	2f00      	cmp	r7, #0
 80254a2:	da95      	bge.n	80253d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80254a4:	e78c      	b.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80254a6:	2900      	cmp	r1, #0
 80254a8:	d0f8      	beq.n	802549c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80254aa:	e78f      	b.n	80253cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080254ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80254ac:	4b4c      	ldr	r3, [pc, #304]	; (80255e0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 80254ae:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80254b2:	2500      	movs	r5, #0
 80254b4:	f100 0620 	add.w	r6, r0, #32
 80254b8:	4604      	mov	r4, r0
 80254ba:	e9c0 3100 	strd	r3, r1, [r0]
 80254be:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80254c2:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80254c6:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80254ca:	f100 0718 	add.w	r7, r0, #24
 80254ce:	4630      	mov	r0, r6
 80254d0:	4690      	mov	r8, r2
 80254d2:	f7ee fd7b 	bl	8013fcc <_ZN8touchgfx7OutlineC1Ev>
 80254d6:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80254da:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80254de:	2301      	movs	r3, #1
 80254e0:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80254e4:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80254e8:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80254ec:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80254f0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80254f4:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80254f8:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80254fc:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025500:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025504:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025508:	9500      	str	r5, [sp, #0]
 802550a:	4410      	add	r0, r2
 802550c:	b280      	uxth	r0, r0
 802550e:	fa0f fa80 	sxth.w	sl, r0
 8025512:	45aa      	cmp	sl, r5
 8025514:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025518:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802551c:	dd5c      	ble.n	80255d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802551e:	4591      	cmp	r9, r2
 8025520:	dd5a      	ble.n	80255d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8025522:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025526:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802552a:	440b      	add	r3, r1
 802552c:	b29b      	uxth	r3, r3
 802552e:	b21d      	sxth	r5, r3
 8025530:	2d00      	cmp	r5, #0
 8025532:	dd51      	ble.n	80255d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8025534:	458e      	cmp	lr, r1
 8025536:	dd4f      	ble.n	80255d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8025538:	45d1      	cmp	r9, sl
 802553a:	bfb8      	it	lt
 802553c:	fa1f f089 	uxthlt.w	r0, r9
 8025540:	45ae      	cmp	lr, r5
 8025542:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025546:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802554a:	bfb8      	it	lt
 802554c:	fa1f f38e 	uxthlt.w	r3, lr
 8025550:	1a80      	subs	r0, r0, r2
 8025552:	1a5b      	subs	r3, r3, r1
 8025554:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025558:	f8ad 3006 	strh.w	r3, [sp, #6]
 802555c:	f8ad 2000 	strh.w	r2, [sp]
 8025560:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025564:	466d      	mov	r5, sp
 8025566:	e895 0003 	ldmia.w	r5, {r0, r1}
 802556a:	e887 0003 	stmia.w	r7, {r0, r1}
 802556e:	f8dc 3000 	ldr.w	r3, [ip]
 8025572:	4660      	mov	r0, ip
 8025574:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025576:	4639      	mov	r1, r7
 8025578:	4798      	blx	r3
 802557a:	6861      	ldr	r1, [r4, #4]
 802557c:	4628      	mov	r0, r5
 802557e:	3104      	adds	r1, #4
 8025580:	f7f0 fed4 	bl	801632c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025584:	4638      	mov	r0, r7
 8025586:	f7f0 fe8d 	bl	80162a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802558a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802558e:	f8bd 2000 	ldrh.w	r2, [sp]
 8025592:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025596:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802559a:	4630      	mov	r0, r6
 802559c:	f7ee fcfa 	bl	8013f94 <_ZN8touchgfx7Outline5resetEv>
 80255a0:	f9bd 3000 	ldrsh.w	r3, [sp]
 80255a4:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80255a8:	015b      	lsls	r3, r3, #5
 80255aa:	60a3      	str	r3, [r4, #8]
 80255ac:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80255b0:	015b      	lsls	r3, r3, #5
 80255b2:	60e3      	str	r3, [r4, #12]
 80255b4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80255b8:	015b      	lsls	r3, r3, #5
 80255ba:	6123      	str	r3, [r4, #16]
 80255bc:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80255c0:	015b      	lsls	r3, r3, #5
 80255c2:	6163      	str	r3, [r4, #20]
 80255c4:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80255c8:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80255cc:	4620      	mov	r0, r4
 80255ce:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80255d2:	b002      	add	sp, #8
 80255d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80255d8:	2300      	movs	r3, #0
 80255da:	9301      	str	r3, [sp, #4]
 80255dc:	e7c2      	b.n	8025564 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80255de:	bf00      	nop
 80255e0:	08028934 	.word	0x08028934

080255e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80255e4:	b510      	push	{r4, lr}
 80255e6:	4b07      	ldr	r3, [pc, #28]	; (8025604 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80255e8:	781b      	ldrb	r3, [r3, #0]
 80255ea:	2b01      	cmp	r3, #1
 80255ec:	d108      	bne.n	8025600 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80255ee:	6843      	ldr	r3, [r0, #4]
 80255f0:	6814      	ldr	r4, [r2, #0]
 80255f2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80255f6:	680b      	ldr	r3, [r1, #0]
 80255f8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80255fc:	6013      	str	r3, [r2, #0]
 80255fe:	600c      	str	r4, [r1, #0]
 8025600:	bd10      	pop	{r4, pc}
 8025602:	bf00      	nop
 8025604:	2000dc6c 	.word	0x2000dc6c

08025608 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8025608:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802560a:	ab02      	add	r3, sp, #8
 802560c:	4604      	mov	r4, r0
 802560e:	f843 2d08 	str.w	r2, [r3, #-8]!
 8025612:	9101      	str	r1, [sp, #4]
 8025614:	461a      	mov	r2, r3
 8025616:	a901      	add	r1, sp, #4
 8025618:	f7ff ffe4 	bl	80255e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802561c:	68a3      	ldr	r3, [r4, #8]
 802561e:	9901      	ldr	r1, [sp, #4]
 8025620:	9a00      	ldr	r2, [sp, #0]
 8025622:	1ac9      	subs	r1, r1, r3
 8025624:	68e3      	ldr	r3, [r4, #12]
 8025626:	9101      	str	r1, [sp, #4]
 8025628:	1ad2      	subs	r2, r2, r3
 802562a:	2a00      	cmp	r2, #0
 802562c:	9200      	str	r2, [sp, #0]
 802562e:	db1c      	blt.n	802566a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8025630:	6963      	ldr	r3, [r4, #20]
 8025632:	429a      	cmp	r2, r3
 8025634:	bfac      	ite	ge
 8025636:	2002      	movge	r0, #2
 8025638:	2000      	movlt	r0, #0
 802563a:	2900      	cmp	r1, #0
 802563c:	db17      	blt.n	802566e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802563e:	6923      	ldr	r3, [r4, #16]
 8025640:	4299      	cmp	r1, r3
 8025642:	bfac      	ite	ge
 8025644:	2308      	movge	r3, #8
 8025646:	2300      	movlt	r3, #0
 8025648:	4303      	orrs	r3, r0
 802564a:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802564e:	b2dd      	uxtb	r5, r3
 8025650:	b978      	cbnz	r0, 8025672 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8025652:	f104 0020 	add.w	r0, r4, #32
 8025656:	f7ff fe4f 	bl	80252f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802565a:	9b01      	ldr	r3, [sp, #4]
 802565c:	65e3      	str	r3, [r4, #92]	; 0x5c
 802565e:	9b00      	ldr	r3, [sp, #0]
 8025660:	6623      	str	r3, [r4, #96]	; 0x60
 8025662:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8025666:	b002      	add	sp, #8
 8025668:	bd70      	pop	{r4, r5, r6, pc}
 802566a:	2001      	movs	r0, #1
 802566c:	e7e5      	b.n	802563a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802566e:	2304      	movs	r3, #4
 8025670:	e7ea      	b.n	8025648 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8025672:	b113      	cbz	r3, 802567a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8025674:	ea10 0305 	ands.w	r3, r0, r5
 8025678:	d11d      	bne.n	80256b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 802567a:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802567e:	f104 0620 	add.w	r6, r4, #32
 8025682:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8025686:	b193      	cbz	r3, 80256ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8025688:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802568c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025690:	4298      	cmp	r0, r3
 8025692:	d802      	bhi.n	802569a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8025694:	4630      	mov	r0, r6
 8025696:	f7ef f97b 	bl	8014990 <_ZN8touchgfx7Outline6moveToEii>
 802569a:	2300      	movs	r3, #0
 802569c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80256a0:	2301      	movs	r3, #1
 80256a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80256a6:	e9dd 2100 	ldrd	r2, r1, [sp]
 80256aa:	4630      	mov	r0, r6
 80256ac:	e7d3      	b.n	8025656 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80256ae:	4630      	mov	r0, r6
 80256b0:	f7ff fe22 	bl	80252f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80256b4:	e7f7      	b.n	80256a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 80256b6:	461d      	mov	r5, r3
 80256b8:	e7cf      	b.n	802565a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

080256ba <_ZN8touchgfx6Canvas5closeEv>:
 80256ba:	b538      	push	{r3, r4, r5, lr}
 80256bc:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80256c0:	4604      	mov	r4, r0
 80256c2:	b993      	cbnz	r3, 80256ea <_ZN8touchgfx6Canvas5closeEv+0x30>
 80256c4:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80256c8:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80256cc:	4213      	tst	r3, r2
 80256ce:	d10c      	bne.n	80256ea <_ZN8touchgfx6Canvas5closeEv+0x30>
 80256d0:	f100 0520 	add.w	r5, r0, #32
 80256d4:	b123      	cbz	r3, 80256e0 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80256d6:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80256da:	4628      	mov	r0, r5
 80256dc:	f7ff fe0c 	bl	80252f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80256e0:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80256e4:	4628      	mov	r0, r5
 80256e6:	f7ff fe07 	bl	80252f8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80256ea:	2300      	movs	r3, #0
 80256ec:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80256f0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80256f4:	4298      	cmp	r0, r3
 80256f6:	bf34      	ite	cc
 80256f8:	2000      	movcc	r0, #0
 80256fa:	2001      	movcs	r0, #1
 80256fc:	bd38      	pop	{r3, r4, r5, pc}
	...

08025700 <_ZN8touchgfx6Canvas6renderEh>:
 8025700:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025704:	4604      	mov	r4, r0
 8025706:	6840      	ldr	r0, [r0, #4]
 8025708:	6803      	ldr	r3, [r0, #0]
 802570a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802570c:	460d      	mov	r5, r1
 802570e:	4798      	blx	r3
 8025710:	fb10 f105 	smulbb	r1, r0, r5
 8025714:	b289      	uxth	r1, r1
 8025716:	1c4d      	adds	r5, r1, #1
 8025718:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802571c:	122d      	asrs	r5, r5, #8
 802571e:	f000 8098 	beq.w	8025852 <_ZN8touchgfx6Canvas6renderEh+0x152>
 8025722:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025726:	2b00      	cmp	r3, #0
 8025728:	f000 8093 	beq.w	8025852 <_ZN8touchgfx6Canvas6renderEh+0x152>
 802572c:	4620      	mov	r0, r4
 802572e:	f7ff ffc4 	bl	80256ba <_ZN8touchgfx6Canvas5closeEv>
 8025732:	4607      	mov	r7, r0
 8025734:	2800      	cmp	r0, #0
 8025736:	d043      	beq.n	80257c0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8025738:	6863      	ldr	r3, [r4, #4]
 802573a:	4e47      	ldr	r6, [pc, #284]	; (8025858 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 802573c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802573e:	6837      	ldr	r7, [r6, #0]
 8025740:	6803      	ldr	r3, [r0, #0]
 8025742:	689b      	ldr	r3, [r3, #8]
 8025744:	4798      	blx	r3
 8025746:	4601      	mov	r1, r0
 8025748:	4638      	mov	r0, r7
 802574a:	f7eb fdab 	bl	80112a4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802574e:	4607      	mov	r7, r0
 8025750:	f7eb f96c 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8025754:	6803      	ldr	r3, [r0, #0]
 8025756:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025758:	4798      	blx	r3
 802575a:	4680      	mov	r8, r0
 802575c:	f7eb f966 	bl	8010a2c <_ZN8touchgfx3HAL3lcdEv>
 8025760:	6803      	ldr	r3, [r0, #0]
 8025762:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025764:	4798      	blx	r3
 8025766:	280b      	cmp	r0, #11
 8025768:	d858      	bhi.n	802581c <_ZN8touchgfx6Canvas6renderEh+0x11c>
 802576a:	e8df f000 	tbb	[pc, r0]
 802576e:	594e      	.short	0x594e
 8025770:	2d570669 	.word	0x2d570669
 8025774:	6262623d 	.word	0x6262623d
 8025778:	6262      	.short	0x6262
 802577a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802577e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025782:	2208      	movs	r2, #8
 8025784:	fb91 f2f2 	sdiv	r2, r1, r2
 8025788:	fb08 2303 	mla	r3, r8, r3, r2
 802578c:	441f      	add	r7, r3
 802578e:	424b      	negs	r3, r1
 8025790:	f003 0307 	and.w	r3, r3, #7
 8025794:	f001 0107 	and.w	r1, r1, #7
 8025798:	bf58      	it	pl
 802579a:	4259      	negpl	r1, r3
 802579c:	b2c9      	uxtb	r1, r1
 802579e:	b2ed      	uxtb	r5, r5
 80257a0:	e9cd 1500 	strd	r1, r5, [sp]
 80257a4:	6860      	ldr	r0, [r4, #4]
 80257a6:	fa0f f388 	sxth.w	r3, r8
 80257aa:	463a      	mov	r2, r7
 80257ac:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80257ae:	f104 0020 	add.w	r0, r4, #32
 80257b2:	f7ff fdad 	bl	8025310 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80257b6:	4607      	mov	r7, r0
 80257b8:	6830      	ldr	r0, [r6, #0]
 80257ba:	6803      	ldr	r3, [r0, #0]
 80257bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80257be:	4798      	blx	r3
 80257c0:	4638      	mov	r0, r7
 80257c2:	b002      	add	sp, #8
 80257c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80257c8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80257cc:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80257d0:	2204      	movs	r2, #4
 80257d2:	fb91 f2f2 	sdiv	r2, r1, r2
 80257d6:	fb08 2303 	mla	r3, r8, r3, r2
 80257da:	441f      	add	r7, r3
 80257dc:	424b      	negs	r3, r1
 80257de:	f003 0303 	and.w	r3, r3, #3
 80257e2:	f001 0103 	and.w	r1, r1, #3
 80257e6:	e7d7      	b.n	8025798 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80257e8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80257ec:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80257f0:	2900      	cmp	r1, #0
 80257f2:	f04f 0202 	mov.w	r2, #2
 80257f6:	fb91 f2f2 	sdiv	r2, r1, r2
 80257fa:	f001 0101 	and.w	r1, r1, #1
 80257fe:	fb08 2303 	mla	r3, r8, r3, r2
 8025802:	441f      	add	r7, r3
 8025804:	bfb8      	it	lt
 8025806:	4249      	neglt	r1, r1
 8025808:	e7c8      	b.n	802579c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802580a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802580e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025812:	fb08 f303 	mul.w	r3, r8, r3
 8025816:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802581a:	441f      	add	r7, r3
 802581c:	2100      	movs	r1, #0
 802581e:	e7be      	b.n	802579e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8025820:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025824:	fb08 f203 	mul.w	r2, r8, r3
 8025828:	8b23      	ldrh	r3, [r4, #24]
 802582a:	2103      	movs	r1, #3
 802582c:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025830:	e7f3      	b.n	802581a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8025832:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025836:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802583a:	fb08 2303 	mla	r3, r8, r3, r2
 802583e:	e7ec      	b.n	802581a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8025840:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025844:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025848:	fb08 f303 	mul.w	r3, r8, r3
 802584c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8025850:	e7e3      	b.n	802581a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8025852:	2701      	movs	r7, #1
 8025854:	e7b4      	b.n	80257c0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8025856:	bf00      	nop
 8025858:	2000dc74 	.word	0x2000dc74

0802585c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802585c:	b513      	push	{r0, r1, r4, lr}
 802585e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025862:	4604      	mov	r4, r0
 8025864:	e9cd 2100 	strd	r2, r1, [sp]
 8025868:	b1a3      	cbz	r3, 8025894 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802586a:	466a      	mov	r2, sp
 802586c:	a901      	add	r1, sp, #4
 802586e:	4620      	mov	r0, r4
 8025870:	f7ff feb8 	bl	80255e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025874:	68a3      	ldr	r3, [r4, #8]
 8025876:	9901      	ldr	r1, [sp, #4]
 8025878:	9a00      	ldr	r2, [sp, #0]
 802587a:	1ac9      	subs	r1, r1, r3
 802587c:	68e3      	ldr	r3, [r4, #12]
 802587e:	9101      	str	r1, [sp, #4]
 8025880:	1ad2      	subs	r2, r2, r3
 8025882:	2a00      	cmp	r2, #0
 8025884:	9200      	str	r2, [sp, #0]
 8025886:	da0b      	bge.n	80258a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8025888:	2301      	movs	r3, #1
 802588a:	2900      	cmp	r1, #0
 802588c:	da0e      	bge.n	80258ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802588e:	f043 0304 	orr.w	r3, r3, #4
 8025892:	e013      	b.n	80258bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8025894:	f7ff ff11 	bl	80256ba <_ZN8touchgfx6Canvas5closeEv>
 8025898:	2800      	cmp	r0, #0
 802589a:	d1e6      	bne.n	802586a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802589c:	b002      	add	sp, #8
 802589e:	bd10      	pop	{r4, pc}
 80258a0:	6963      	ldr	r3, [r4, #20]
 80258a2:	429a      	cmp	r2, r3
 80258a4:	bfac      	ite	ge
 80258a6:	2302      	movge	r3, #2
 80258a8:	2300      	movlt	r3, #0
 80258aa:	e7ee      	b.n	802588a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80258ac:	6920      	ldr	r0, [r4, #16]
 80258ae:	4281      	cmp	r1, r0
 80258b0:	bfac      	ite	ge
 80258b2:	2008      	movge	r0, #8
 80258b4:	2000      	movlt	r0, #0
 80258b6:	4318      	orrs	r0, r3
 80258b8:	b2c3      	uxtb	r3, r0
 80258ba:	b158      	cbz	r0, 80258d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80258bc:	2201      	movs	r2, #1
 80258be:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80258c2:	9901      	ldr	r1, [sp, #4]
 80258c4:	9a00      	ldr	r2, [sp, #0]
 80258c6:	66a1      	str	r1, [r4, #104]	; 0x68
 80258c8:	66e2      	str	r2, [r4, #108]	; 0x6c
 80258ca:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80258ce:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80258d2:	e7e3      	b.n	802589c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80258d4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80258d8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80258dc:	4298      	cmp	r0, r3
 80258de:	d803      	bhi.n	80258e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80258e0:	f104 0020 	add.w	r0, r4, #32
 80258e4:	f7ef f854 	bl	8014990 <_ZN8touchgfx7Outline6moveToEii>
 80258e8:	2300      	movs	r3, #0
 80258ea:	2201      	movs	r2, #1
 80258ec:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80258f0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80258f4:	e7e5      	b.n	80258c2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080258f6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80258f6:	b570      	push	{r4, r5, r6, lr}
 80258f8:	790b      	ldrb	r3, [r1, #4]
 80258fa:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80258fe:	2b00      	cmp	r3, #0
 8025900:	bf0c      	ite	eq
 8025902:	2301      	moveq	r3, #1
 8025904:	2300      	movne	r3, #0
 8025906:	4604      	mov	r4, r0
 8025908:	460e      	mov	r6, r1
 802590a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802590e:	d109      	bne.n	8025924 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8025910:	b14d      	cbz	r5, 8025926 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8025912:	7933      	ldrb	r3, [r6, #4]
 8025914:	2b01      	cmp	r3, #1
 8025916:	d10c      	bne.n	8025932 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025918:	6823      	ldr	r3, [r4, #0]
 802591a:	4620      	mov	r0, r4
 802591c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802591e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8025922:	4718      	bx	r3
 8025924:	b12d      	cbz	r5, 8025932 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025926:	6823      	ldr	r3, [r4, #0]
 8025928:	4620      	mov	r0, r4
 802592a:	695b      	ldr	r3, [r3, #20]
 802592c:	4798      	blx	r3
 802592e:	2d00      	cmp	r5, #0
 8025930:	d1ef      	bne.n	8025912 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8025932:	bd70      	pop	{r4, r5, r6, pc}

08025934 <__aeabi_atexit>:
 8025934:	460b      	mov	r3, r1
 8025936:	4601      	mov	r1, r0
 8025938:	4618      	mov	r0, r3
 802593a:	f000 b853 	b.w	80259e4 <__cxa_atexit>

0802593e <_ZdlPvj>:
 802593e:	f000 b812 	b.w	8025966 <_ZdlPv>

08025942 <__cxa_guard_acquire>:
 8025942:	6803      	ldr	r3, [r0, #0]
 8025944:	07db      	lsls	r3, r3, #31
 8025946:	d406      	bmi.n	8025956 <__cxa_guard_acquire+0x14>
 8025948:	7843      	ldrb	r3, [r0, #1]
 802594a:	b103      	cbz	r3, 802594e <__cxa_guard_acquire+0xc>
 802594c:	deff      	udf	#255	; 0xff
 802594e:	2301      	movs	r3, #1
 8025950:	7043      	strb	r3, [r0, #1]
 8025952:	4618      	mov	r0, r3
 8025954:	4770      	bx	lr
 8025956:	2000      	movs	r0, #0
 8025958:	4770      	bx	lr

0802595a <__cxa_guard_release>:
 802595a:	2301      	movs	r3, #1
 802595c:	6003      	str	r3, [r0, #0]
 802595e:	4770      	bx	lr

08025960 <__cxa_pure_virtual>:
 8025960:	b508      	push	{r3, lr}
 8025962:	f000 f80f 	bl	8025984 <_ZSt9terminatev>

08025966 <_ZdlPv>:
 8025966:	f000 b88f 	b.w	8025a88 <free>

0802596a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802596a:	b508      	push	{r3, lr}
 802596c:	4780      	blx	r0
 802596e:	f000 f80e 	bl	802598e <abort>
	...

08025974 <_ZSt13get_terminatev>:
 8025974:	4b02      	ldr	r3, [pc, #8]	; (8025980 <_ZSt13get_terminatev+0xc>)
 8025976:	6818      	ldr	r0, [r3, #0]
 8025978:	f3bf 8f5b 	dmb	ish
 802597c:	4770      	bx	lr
 802597e:	bf00      	nop
 8025980:	200000d4 	.word	0x200000d4

08025984 <_ZSt9terminatev>:
 8025984:	b508      	push	{r3, lr}
 8025986:	f7ff fff5 	bl	8025974 <_ZSt13get_terminatev>
 802598a:	f7ff ffee 	bl	802596a <_ZN10__cxxabiv111__terminateEPFvvE>

0802598e <abort>:
 802598e:	b508      	push	{r3, lr}
 8025990:	2006      	movs	r0, #6
 8025992:	f000 fc9d 	bl	80262d0 <raise>
 8025996:	2001      	movs	r0, #1
 8025998:	f7dc ff66 	bl	8002868 <_exit>

0802599c <__assert_func>:
 802599c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802599e:	4614      	mov	r4, r2
 80259a0:	461a      	mov	r2, r3
 80259a2:	4b09      	ldr	r3, [pc, #36]	; (80259c8 <__assert_func+0x2c>)
 80259a4:	681b      	ldr	r3, [r3, #0]
 80259a6:	4605      	mov	r5, r0
 80259a8:	68d8      	ldr	r0, [r3, #12]
 80259aa:	b14c      	cbz	r4, 80259c0 <__assert_func+0x24>
 80259ac:	4b07      	ldr	r3, [pc, #28]	; (80259cc <__assert_func+0x30>)
 80259ae:	9100      	str	r1, [sp, #0]
 80259b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80259b4:	4906      	ldr	r1, [pc, #24]	; (80259d0 <__assert_func+0x34>)
 80259b6:	462b      	mov	r3, r5
 80259b8:	f000 f828 	bl	8025a0c <fiprintf>
 80259bc:	f7ff ffe7 	bl	802598e <abort>
 80259c0:	4b04      	ldr	r3, [pc, #16]	; (80259d4 <__assert_func+0x38>)
 80259c2:	461c      	mov	r4, r3
 80259c4:	e7f3      	b.n	80259ae <__assert_func+0x12>
 80259c6:	bf00      	nop
 80259c8:	200000d8 	.word	0x200000d8
 80259cc:	080290c8 	.word	0x080290c8
 80259d0:	080290d5 	.word	0x080290d5
 80259d4:	08029103 	.word	0x08029103

080259d8 <atexit>:
 80259d8:	2300      	movs	r3, #0
 80259da:	4601      	mov	r1, r0
 80259dc:	461a      	mov	r2, r3
 80259de:	4618      	mov	r0, r3
 80259e0:	f000 bd52 	b.w	8026488 <__register_exitproc>

080259e4 <__cxa_atexit>:
 80259e4:	b510      	push	{r4, lr}
 80259e6:	4c05      	ldr	r4, [pc, #20]	; (80259fc <__cxa_atexit+0x18>)
 80259e8:	4613      	mov	r3, r2
 80259ea:	b12c      	cbz	r4, 80259f8 <__cxa_atexit+0x14>
 80259ec:	460a      	mov	r2, r1
 80259ee:	4601      	mov	r1, r0
 80259f0:	2002      	movs	r0, #2
 80259f2:	f000 fd49 	bl	8026488 <__register_exitproc>
 80259f6:	bd10      	pop	{r4, pc}
 80259f8:	4620      	mov	r0, r4
 80259fa:	e7fc      	b.n	80259f6 <__cxa_atexit+0x12>
 80259fc:	08026489 	.word	0x08026489

08025a00 <__errno>:
 8025a00:	4b01      	ldr	r3, [pc, #4]	; (8025a08 <__errno+0x8>)
 8025a02:	6818      	ldr	r0, [r3, #0]
 8025a04:	4770      	bx	lr
 8025a06:	bf00      	nop
 8025a08:	200000d8 	.word	0x200000d8

08025a0c <fiprintf>:
 8025a0c:	b40e      	push	{r1, r2, r3}
 8025a0e:	b503      	push	{r0, r1, lr}
 8025a10:	4601      	mov	r1, r0
 8025a12:	ab03      	add	r3, sp, #12
 8025a14:	4805      	ldr	r0, [pc, #20]	; (8025a2c <fiprintf+0x20>)
 8025a16:	f853 2b04 	ldr.w	r2, [r3], #4
 8025a1a:	6800      	ldr	r0, [r0, #0]
 8025a1c:	9301      	str	r3, [sp, #4]
 8025a1e:	f000 f95b 	bl	8025cd8 <_vfiprintf_r>
 8025a22:	b002      	add	sp, #8
 8025a24:	f85d eb04 	ldr.w	lr, [sp], #4
 8025a28:	b003      	add	sp, #12
 8025a2a:	4770      	bx	lr
 8025a2c:	200000d8 	.word	0x200000d8

08025a30 <__libc_init_array>:
 8025a30:	b570      	push	{r4, r5, r6, lr}
 8025a32:	4d0d      	ldr	r5, [pc, #52]	; (8025a68 <__libc_init_array+0x38>)
 8025a34:	4c0d      	ldr	r4, [pc, #52]	; (8025a6c <__libc_init_array+0x3c>)
 8025a36:	1b64      	subs	r4, r4, r5
 8025a38:	10a4      	asrs	r4, r4, #2
 8025a3a:	2600      	movs	r6, #0
 8025a3c:	42a6      	cmp	r6, r4
 8025a3e:	d109      	bne.n	8025a54 <__libc_init_array+0x24>
 8025a40:	4d0b      	ldr	r5, [pc, #44]	; (8025a70 <__libc_init_array+0x40>)
 8025a42:	4c0c      	ldr	r4, [pc, #48]	; (8025a74 <__libc_init_array+0x44>)
 8025a44:	f001 f85a 	bl	8026afc <_init>
 8025a48:	1b64      	subs	r4, r4, r5
 8025a4a:	10a4      	asrs	r4, r4, #2
 8025a4c:	2600      	movs	r6, #0
 8025a4e:	42a6      	cmp	r6, r4
 8025a50:	d105      	bne.n	8025a5e <__libc_init_array+0x2e>
 8025a52:	bd70      	pop	{r4, r5, r6, pc}
 8025a54:	f855 3b04 	ldr.w	r3, [r5], #4
 8025a58:	4798      	blx	r3
 8025a5a:	3601      	adds	r6, #1
 8025a5c:	e7ee      	b.n	8025a3c <__libc_init_array+0xc>
 8025a5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8025a62:	4798      	blx	r3
 8025a64:	3601      	adds	r6, #1
 8025a66:	e7f2      	b.n	8025a4e <__libc_init_array+0x1e>
 8025a68:	080291f4 	.word	0x080291f4
 8025a6c:	080291f4 	.word	0x080291f4
 8025a70:	080291f4 	.word	0x080291f4
 8025a74:	0802920c 	.word	0x0802920c

08025a78 <malloc>:
 8025a78:	4b02      	ldr	r3, [pc, #8]	; (8025a84 <malloc+0xc>)
 8025a7a:	4601      	mov	r1, r0
 8025a7c:	6818      	ldr	r0, [r3, #0]
 8025a7e:	f000 b88d 	b.w	8025b9c <_malloc_r>
 8025a82:	bf00      	nop
 8025a84:	200000d8 	.word	0x200000d8

08025a88 <free>:
 8025a88:	4b02      	ldr	r3, [pc, #8]	; (8025a94 <free+0xc>)
 8025a8a:	4601      	mov	r1, r0
 8025a8c:	6818      	ldr	r0, [r3, #0]
 8025a8e:	f000 b819 	b.w	8025ac4 <_free_r>
 8025a92:	bf00      	nop
 8025a94:	200000d8 	.word	0x200000d8

08025a98 <memcpy>:
 8025a98:	440a      	add	r2, r1
 8025a9a:	4291      	cmp	r1, r2
 8025a9c:	f100 33ff 	add.w	r3, r0, #4294967295
 8025aa0:	d100      	bne.n	8025aa4 <memcpy+0xc>
 8025aa2:	4770      	bx	lr
 8025aa4:	b510      	push	{r4, lr}
 8025aa6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025aaa:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025aae:	4291      	cmp	r1, r2
 8025ab0:	d1f9      	bne.n	8025aa6 <memcpy+0xe>
 8025ab2:	bd10      	pop	{r4, pc}

08025ab4 <memset>:
 8025ab4:	4402      	add	r2, r0
 8025ab6:	4603      	mov	r3, r0
 8025ab8:	4293      	cmp	r3, r2
 8025aba:	d100      	bne.n	8025abe <memset+0xa>
 8025abc:	4770      	bx	lr
 8025abe:	f803 1b01 	strb.w	r1, [r3], #1
 8025ac2:	e7f9      	b.n	8025ab8 <memset+0x4>

08025ac4 <_free_r>:
 8025ac4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8025ac6:	2900      	cmp	r1, #0
 8025ac8:	d044      	beq.n	8025b54 <_free_r+0x90>
 8025aca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025ace:	9001      	str	r0, [sp, #4]
 8025ad0:	2b00      	cmp	r3, #0
 8025ad2:	f1a1 0404 	sub.w	r4, r1, #4
 8025ad6:	bfb8      	it	lt
 8025ad8:	18e4      	addlt	r4, r4, r3
 8025ada:	f000 ff57 	bl	802698c <__malloc_lock>
 8025ade:	4a1e      	ldr	r2, [pc, #120]	; (8025b58 <_free_r+0x94>)
 8025ae0:	9801      	ldr	r0, [sp, #4]
 8025ae2:	6813      	ldr	r3, [r2, #0]
 8025ae4:	b933      	cbnz	r3, 8025af4 <_free_r+0x30>
 8025ae6:	6063      	str	r3, [r4, #4]
 8025ae8:	6014      	str	r4, [r2, #0]
 8025aea:	b003      	add	sp, #12
 8025aec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8025af0:	f000 bf52 	b.w	8026998 <__malloc_unlock>
 8025af4:	42a3      	cmp	r3, r4
 8025af6:	d908      	bls.n	8025b0a <_free_r+0x46>
 8025af8:	6825      	ldr	r5, [r4, #0]
 8025afa:	1961      	adds	r1, r4, r5
 8025afc:	428b      	cmp	r3, r1
 8025afe:	bf01      	itttt	eq
 8025b00:	6819      	ldreq	r1, [r3, #0]
 8025b02:	685b      	ldreq	r3, [r3, #4]
 8025b04:	1949      	addeq	r1, r1, r5
 8025b06:	6021      	streq	r1, [r4, #0]
 8025b08:	e7ed      	b.n	8025ae6 <_free_r+0x22>
 8025b0a:	461a      	mov	r2, r3
 8025b0c:	685b      	ldr	r3, [r3, #4]
 8025b0e:	b10b      	cbz	r3, 8025b14 <_free_r+0x50>
 8025b10:	42a3      	cmp	r3, r4
 8025b12:	d9fa      	bls.n	8025b0a <_free_r+0x46>
 8025b14:	6811      	ldr	r1, [r2, #0]
 8025b16:	1855      	adds	r5, r2, r1
 8025b18:	42a5      	cmp	r5, r4
 8025b1a:	d10b      	bne.n	8025b34 <_free_r+0x70>
 8025b1c:	6824      	ldr	r4, [r4, #0]
 8025b1e:	4421      	add	r1, r4
 8025b20:	1854      	adds	r4, r2, r1
 8025b22:	42a3      	cmp	r3, r4
 8025b24:	6011      	str	r1, [r2, #0]
 8025b26:	d1e0      	bne.n	8025aea <_free_r+0x26>
 8025b28:	681c      	ldr	r4, [r3, #0]
 8025b2a:	685b      	ldr	r3, [r3, #4]
 8025b2c:	6053      	str	r3, [r2, #4]
 8025b2e:	4421      	add	r1, r4
 8025b30:	6011      	str	r1, [r2, #0]
 8025b32:	e7da      	b.n	8025aea <_free_r+0x26>
 8025b34:	d902      	bls.n	8025b3c <_free_r+0x78>
 8025b36:	230c      	movs	r3, #12
 8025b38:	6003      	str	r3, [r0, #0]
 8025b3a:	e7d6      	b.n	8025aea <_free_r+0x26>
 8025b3c:	6825      	ldr	r5, [r4, #0]
 8025b3e:	1961      	adds	r1, r4, r5
 8025b40:	428b      	cmp	r3, r1
 8025b42:	bf04      	itt	eq
 8025b44:	6819      	ldreq	r1, [r3, #0]
 8025b46:	685b      	ldreq	r3, [r3, #4]
 8025b48:	6063      	str	r3, [r4, #4]
 8025b4a:	bf04      	itt	eq
 8025b4c:	1949      	addeq	r1, r1, r5
 8025b4e:	6021      	streq	r1, [r4, #0]
 8025b50:	6054      	str	r4, [r2, #4]
 8025b52:	e7ca      	b.n	8025aea <_free_r+0x26>
 8025b54:	b003      	add	sp, #12
 8025b56:	bd30      	pop	{r4, r5, pc}
 8025b58:	2000dd78 	.word	0x2000dd78

08025b5c <sbrk_aligned>:
 8025b5c:	b570      	push	{r4, r5, r6, lr}
 8025b5e:	4e0e      	ldr	r6, [pc, #56]	; (8025b98 <sbrk_aligned+0x3c>)
 8025b60:	460c      	mov	r4, r1
 8025b62:	6831      	ldr	r1, [r6, #0]
 8025b64:	4605      	mov	r5, r0
 8025b66:	b911      	cbnz	r1, 8025b6e <sbrk_aligned+0x12>
 8025b68:	f000 fb7a 	bl	8026260 <_sbrk_r>
 8025b6c:	6030      	str	r0, [r6, #0]
 8025b6e:	4621      	mov	r1, r4
 8025b70:	4628      	mov	r0, r5
 8025b72:	f000 fb75 	bl	8026260 <_sbrk_r>
 8025b76:	1c43      	adds	r3, r0, #1
 8025b78:	d00a      	beq.n	8025b90 <sbrk_aligned+0x34>
 8025b7a:	1cc4      	adds	r4, r0, #3
 8025b7c:	f024 0403 	bic.w	r4, r4, #3
 8025b80:	42a0      	cmp	r0, r4
 8025b82:	d007      	beq.n	8025b94 <sbrk_aligned+0x38>
 8025b84:	1a21      	subs	r1, r4, r0
 8025b86:	4628      	mov	r0, r5
 8025b88:	f000 fb6a 	bl	8026260 <_sbrk_r>
 8025b8c:	3001      	adds	r0, #1
 8025b8e:	d101      	bne.n	8025b94 <sbrk_aligned+0x38>
 8025b90:	f04f 34ff 	mov.w	r4, #4294967295
 8025b94:	4620      	mov	r0, r4
 8025b96:	bd70      	pop	{r4, r5, r6, pc}
 8025b98:	2000dd7c 	.word	0x2000dd7c

08025b9c <_malloc_r>:
 8025b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025ba0:	1ccd      	adds	r5, r1, #3
 8025ba2:	f025 0503 	bic.w	r5, r5, #3
 8025ba6:	3508      	adds	r5, #8
 8025ba8:	2d0c      	cmp	r5, #12
 8025baa:	bf38      	it	cc
 8025bac:	250c      	movcc	r5, #12
 8025bae:	2d00      	cmp	r5, #0
 8025bb0:	4607      	mov	r7, r0
 8025bb2:	db01      	blt.n	8025bb8 <_malloc_r+0x1c>
 8025bb4:	42a9      	cmp	r1, r5
 8025bb6:	d905      	bls.n	8025bc4 <_malloc_r+0x28>
 8025bb8:	230c      	movs	r3, #12
 8025bba:	603b      	str	r3, [r7, #0]
 8025bbc:	2600      	movs	r6, #0
 8025bbe:	4630      	mov	r0, r6
 8025bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025bc4:	4e2e      	ldr	r6, [pc, #184]	; (8025c80 <_malloc_r+0xe4>)
 8025bc6:	f000 fee1 	bl	802698c <__malloc_lock>
 8025bca:	6833      	ldr	r3, [r6, #0]
 8025bcc:	461c      	mov	r4, r3
 8025bce:	bb34      	cbnz	r4, 8025c1e <_malloc_r+0x82>
 8025bd0:	4629      	mov	r1, r5
 8025bd2:	4638      	mov	r0, r7
 8025bd4:	f7ff ffc2 	bl	8025b5c <sbrk_aligned>
 8025bd8:	1c43      	adds	r3, r0, #1
 8025bda:	4604      	mov	r4, r0
 8025bdc:	d14d      	bne.n	8025c7a <_malloc_r+0xde>
 8025bde:	6834      	ldr	r4, [r6, #0]
 8025be0:	4626      	mov	r6, r4
 8025be2:	2e00      	cmp	r6, #0
 8025be4:	d140      	bne.n	8025c68 <_malloc_r+0xcc>
 8025be6:	6823      	ldr	r3, [r4, #0]
 8025be8:	4631      	mov	r1, r6
 8025bea:	4638      	mov	r0, r7
 8025bec:	eb04 0803 	add.w	r8, r4, r3
 8025bf0:	f000 fb36 	bl	8026260 <_sbrk_r>
 8025bf4:	4580      	cmp	r8, r0
 8025bf6:	d13a      	bne.n	8025c6e <_malloc_r+0xd2>
 8025bf8:	6821      	ldr	r1, [r4, #0]
 8025bfa:	3503      	adds	r5, #3
 8025bfc:	1a6d      	subs	r5, r5, r1
 8025bfe:	f025 0503 	bic.w	r5, r5, #3
 8025c02:	3508      	adds	r5, #8
 8025c04:	2d0c      	cmp	r5, #12
 8025c06:	bf38      	it	cc
 8025c08:	250c      	movcc	r5, #12
 8025c0a:	4629      	mov	r1, r5
 8025c0c:	4638      	mov	r0, r7
 8025c0e:	f7ff ffa5 	bl	8025b5c <sbrk_aligned>
 8025c12:	3001      	adds	r0, #1
 8025c14:	d02b      	beq.n	8025c6e <_malloc_r+0xd2>
 8025c16:	6823      	ldr	r3, [r4, #0]
 8025c18:	442b      	add	r3, r5
 8025c1a:	6023      	str	r3, [r4, #0]
 8025c1c:	e00e      	b.n	8025c3c <_malloc_r+0xa0>
 8025c1e:	6822      	ldr	r2, [r4, #0]
 8025c20:	1b52      	subs	r2, r2, r5
 8025c22:	d41e      	bmi.n	8025c62 <_malloc_r+0xc6>
 8025c24:	2a0b      	cmp	r2, #11
 8025c26:	d916      	bls.n	8025c56 <_malloc_r+0xba>
 8025c28:	1961      	adds	r1, r4, r5
 8025c2a:	42a3      	cmp	r3, r4
 8025c2c:	6025      	str	r5, [r4, #0]
 8025c2e:	bf18      	it	ne
 8025c30:	6059      	strne	r1, [r3, #4]
 8025c32:	6863      	ldr	r3, [r4, #4]
 8025c34:	bf08      	it	eq
 8025c36:	6031      	streq	r1, [r6, #0]
 8025c38:	5162      	str	r2, [r4, r5]
 8025c3a:	604b      	str	r3, [r1, #4]
 8025c3c:	4638      	mov	r0, r7
 8025c3e:	f104 060b 	add.w	r6, r4, #11
 8025c42:	f000 fea9 	bl	8026998 <__malloc_unlock>
 8025c46:	f026 0607 	bic.w	r6, r6, #7
 8025c4a:	1d23      	adds	r3, r4, #4
 8025c4c:	1af2      	subs	r2, r6, r3
 8025c4e:	d0b6      	beq.n	8025bbe <_malloc_r+0x22>
 8025c50:	1b9b      	subs	r3, r3, r6
 8025c52:	50a3      	str	r3, [r4, r2]
 8025c54:	e7b3      	b.n	8025bbe <_malloc_r+0x22>
 8025c56:	6862      	ldr	r2, [r4, #4]
 8025c58:	42a3      	cmp	r3, r4
 8025c5a:	bf0c      	ite	eq
 8025c5c:	6032      	streq	r2, [r6, #0]
 8025c5e:	605a      	strne	r2, [r3, #4]
 8025c60:	e7ec      	b.n	8025c3c <_malloc_r+0xa0>
 8025c62:	4623      	mov	r3, r4
 8025c64:	6864      	ldr	r4, [r4, #4]
 8025c66:	e7b2      	b.n	8025bce <_malloc_r+0x32>
 8025c68:	4634      	mov	r4, r6
 8025c6a:	6876      	ldr	r6, [r6, #4]
 8025c6c:	e7b9      	b.n	8025be2 <_malloc_r+0x46>
 8025c6e:	230c      	movs	r3, #12
 8025c70:	603b      	str	r3, [r7, #0]
 8025c72:	4638      	mov	r0, r7
 8025c74:	f000 fe90 	bl	8026998 <__malloc_unlock>
 8025c78:	e7a1      	b.n	8025bbe <_malloc_r+0x22>
 8025c7a:	6025      	str	r5, [r4, #0]
 8025c7c:	e7de      	b.n	8025c3c <_malloc_r+0xa0>
 8025c7e:	bf00      	nop
 8025c80:	2000dd78 	.word	0x2000dd78

08025c84 <__sfputc_r>:
 8025c84:	6893      	ldr	r3, [r2, #8]
 8025c86:	3b01      	subs	r3, #1
 8025c88:	2b00      	cmp	r3, #0
 8025c8a:	b410      	push	{r4}
 8025c8c:	6093      	str	r3, [r2, #8]
 8025c8e:	da08      	bge.n	8025ca2 <__sfputc_r+0x1e>
 8025c90:	6994      	ldr	r4, [r2, #24]
 8025c92:	42a3      	cmp	r3, r4
 8025c94:	db01      	blt.n	8025c9a <__sfputc_r+0x16>
 8025c96:	290a      	cmp	r1, #10
 8025c98:	d103      	bne.n	8025ca2 <__sfputc_r+0x1e>
 8025c9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025c9e:	f000 bb33 	b.w	8026308 <__swbuf_r>
 8025ca2:	6813      	ldr	r3, [r2, #0]
 8025ca4:	1c58      	adds	r0, r3, #1
 8025ca6:	6010      	str	r0, [r2, #0]
 8025ca8:	7019      	strb	r1, [r3, #0]
 8025caa:	4608      	mov	r0, r1
 8025cac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025cb0:	4770      	bx	lr

08025cb2 <__sfputs_r>:
 8025cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025cb4:	4606      	mov	r6, r0
 8025cb6:	460f      	mov	r7, r1
 8025cb8:	4614      	mov	r4, r2
 8025cba:	18d5      	adds	r5, r2, r3
 8025cbc:	42ac      	cmp	r4, r5
 8025cbe:	d101      	bne.n	8025cc4 <__sfputs_r+0x12>
 8025cc0:	2000      	movs	r0, #0
 8025cc2:	e007      	b.n	8025cd4 <__sfputs_r+0x22>
 8025cc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025cc8:	463a      	mov	r2, r7
 8025cca:	4630      	mov	r0, r6
 8025ccc:	f7ff ffda 	bl	8025c84 <__sfputc_r>
 8025cd0:	1c43      	adds	r3, r0, #1
 8025cd2:	d1f3      	bne.n	8025cbc <__sfputs_r+0xa>
 8025cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08025cd8 <_vfiprintf_r>:
 8025cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025cdc:	460d      	mov	r5, r1
 8025cde:	b09d      	sub	sp, #116	; 0x74
 8025ce0:	4614      	mov	r4, r2
 8025ce2:	4698      	mov	r8, r3
 8025ce4:	4606      	mov	r6, r0
 8025ce6:	b118      	cbz	r0, 8025cf0 <_vfiprintf_r+0x18>
 8025ce8:	6983      	ldr	r3, [r0, #24]
 8025cea:	b90b      	cbnz	r3, 8025cf0 <_vfiprintf_r+0x18>
 8025cec:	f000 fd48 	bl	8026780 <__sinit>
 8025cf0:	4b89      	ldr	r3, [pc, #548]	; (8025f18 <_vfiprintf_r+0x240>)
 8025cf2:	429d      	cmp	r5, r3
 8025cf4:	d11b      	bne.n	8025d2e <_vfiprintf_r+0x56>
 8025cf6:	6875      	ldr	r5, [r6, #4]
 8025cf8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025cfa:	07d9      	lsls	r1, r3, #31
 8025cfc:	d405      	bmi.n	8025d0a <_vfiprintf_r+0x32>
 8025cfe:	89ab      	ldrh	r3, [r5, #12]
 8025d00:	059a      	lsls	r2, r3, #22
 8025d02:	d402      	bmi.n	8025d0a <_vfiprintf_r+0x32>
 8025d04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025d06:	f000 fdd9 	bl	80268bc <__retarget_lock_acquire_recursive>
 8025d0a:	89ab      	ldrh	r3, [r5, #12]
 8025d0c:	071b      	lsls	r3, r3, #28
 8025d0e:	d501      	bpl.n	8025d14 <_vfiprintf_r+0x3c>
 8025d10:	692b      	ldr	r3, [r5, #16]
 8025d12:	b9eb      	cbnz	r3, 8025d50 <_vfiprintf_r+0x78>
 8025d14:	4629      	mov	r1, r5
 8025d16:	4630      	mov	r0, r6
 8025d18:	f000 fb48 	bl	80263ac <__swsetup_r>
 8025d1c:	b1c0      	cbz	r0, 8025d50 <_vfiprintf_r+0x78>
 8025d1e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025d20:	07dc      	lsls	r4, r3, #31
 8025d22:	d50e      	bpl.n	8025d42 <_vfiprintf_r+0x6a>
 8025d24:	f04f 30ff 	mov.w	r0, #4294967295
 8025d28:	b01d      	add	sp, #116	; 0x74
 8025d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d2e:	4b7b      	ldr	r3, [pc, #492]	; (8025f1c <_vfiprintf_r+0x244>)
 8025d30:	429d      	cmp	r5, r3
 8025d32:	d101      	bne.n	8025d38 <_vfiprintf_r+0x60>
 8025d34:	68b5      	ldr	r5, [r6, #8]
 8025d36:	e7df      	b.n	8025cf8 <_vfiprintf_r+0x20>
 8025d38:	4b79      	ldr	r3, [pc, #484]	; (8025f20 <_vfiprintf_r+0x248>)
 8025d3a:	429d      	cmp	r5, r3
 8025d3c:	bf08      	it	eq
 8025d3e:	68f5      	ldreq	r5, [r6, #12]
 8025d40:	e7da      	b.n	8025cf8 <_vfiprintf_r+0x20>
 8025d42:	89ab      	ldrh	r3, [r5, #12]
 8025d44:	0598      	lsls	r0, r3, #22
 8025d46:	d4ed      	bmi.n	8025d24 <_vfiprintf_r+0x4c>
 8025d48:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025d4a:	f000 fdb9 	bl	80268c0 <__retarget_lock_release_recursive>
 8025d4e:	e7e9      	b.n	8025d24 <_vfiprintf_r+0x4c>
 8025d50:	2300      	movs	r3, #0
 8025d52:	9309      	str	r3, [sp, #36]	; 0x24
 8025d54:	2320      	movs	r3, #32
 8025d56:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8025d5a:	f8cd 800c 	str.w	r8, [sp, #12]
 8025d5e:	2330      	movs	r3, #48	; 0x30
 8025d60:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8025f24 <_vfiprintf_r+0x24c>
 8025d64:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8025d68:	f04f 0901 	mov.w	r9, #1
 8025d6c:	4623      	mov	r3, r4
 8025d6e:	469a      	mov	sl, r3
 8025d70:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025d74:	b10a      	cbz	r2, 8025d7a <_vfiprintf_r+0xa2>
 8025d76:	2a25      	cmp	r2, #37	; 0x25
 8025d78:	d1f9      	bne.n	8025d6e <_vfiprintf_r+0x96>
 8025d7a:	ebba 0b04 	subs.w	fp, sl, r4
 8025d7e:	d00b      	beq.n	8025d98 <_vfiprintf_r+0xc0>
 8025d80:	465b      	mov	r3, fp
 8025d82:	4622      	mov	r2, r4
 8025d84:	4629      	mov	r1, r5
 8025d86:	4630      	mov	r0, r6
 8025d88:	f7ff ff93 	bl	8025cb2 <__sfputs_r>
 8025d8c:	3001      	adds	r0, #1
 8025d8e:	f000 80aa 	beq.w	8025ee6 <_vfiprintf_r+0x20e>
 8025d92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025d94:	445a      	add	r2, fp
 8025d96:	9209      	str	r2, [sp, #36]	; 0x24
 8025d98:	f89a 3000 	ldrb.w	r3, [sl]
 8025d9c:	2b00      	cmp	r3, #0
 8025d9e:	f000 80a2 	beq.w	8025ee6 <_vfiprintf_r+0x20e>
 8025da2:	2300      	movs	r3, #0
 8025da4:	f04f 32ff 	mov.w	r2, #4294967295
 8025da8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025dac:	f10a 0a01 	add.w	sl, sl, #1
 8025db0:	9304      	str	r3, [sp, #16]
 8025db2:	9307      	str	r3, [sp, #28]
 8025db4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8025db8:	931a      	str	r3, [sp, #104]	; 0x68
 8025dba:	4654      	mov	r4, sl
 8025dbc:	2205      	movs	r2, #5
 8025dbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025dc2:	4858      	ldr	r0, [pc, #352]	; (8025f24 <_vfiprintf_r+0x24c>)
 8025dc4:	f7da fa1c 	bl	8000200 <memchr>
 8025dc8:	9a04      	ldr	r2, [sp, #16]
 8025dca:	b9d8      	cbnz	r0, 8025e04 <_vfiprintf_r+0x12c>
 8025dcc:	06d1      	lsls	r1, r2, #27
 8025dce:	bf44      	itt	mi
 8025dd0:	2320      	movmi	r3, #32
 8025dd2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025dd6:	0713      	lsls	r3, r2, #28
 8025dd8:	bf44      	itt	mi
 8025dda:	232b      	movmi	r3, #43	; 0x2b
 8025ddc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8025de0:	f89a 3000 	ldrb.w	r3, [sl]
 8025de4:	2b2a      	cmp	r3, #42	; 0x2a
 8025de6:	d015      	beq.n	8025e14 <_vfiprintf_r+0x13c>
 8025de8:	9a07      	ldr	r2, [sp, #28]
 8025dea:	4654      	mov	r4, sl
 8025dec:	2000      	movs	r0, #0
 8025dee:	f04f 0c0a 	mov.w	ip, #10
 8025df2:	4621      	mov	r1, r4
 8025df4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8025df8:	3b30      	subs	r3, #48	; 0x30
 8025dfa:	2b09      	cmp	r3, #9
 8025dfc:	d94e      	bls.n	8025e9c <_vfiprintf_r+0x1c4>
 8025dfe:	b1b0      	cbz	r0, 8025e2e <_vfiprintf_r+0x156>
 8025e00:	9207      	str	r2, [sp, #28]
 8025e02:	e014      	b.n	8025e2e <_vfiprintf_r+0x156>
 8025e04:	eba0 0308 	sub.w	r3, r0, r8
 8025e08:	fa09 f303 	lsl.w	r3, r9, r3
 8025e0c:	4313      	orrs	r3, r2
 8025e0e:	9304      	str	r3, [sp, #16]
 8025e10:	46a2      	mov	sl, r4
 8025e12:	e7d2      	b.n	8025dba <_vfiprintf_r+0xe2>
 8025e14:	9b03      	ldr	r3, [sp, #12]
 8025e16:	1d19      	adds	r1, r3, #4
 8025e18:	681b      	ldr	r3, [r3, #0]
 8025e1a:	9103      	str	r1, [sp, #12]
 8025e1c:	2b00      	cmp	r3, #0
 8025e1e:	bfbb      	ittet	lt
 8025e20:	425b      	neglt	r3, r3
 8025e22:	f042 0202 	orrlt.w	r2, r2, #2
 8025e26:	9307      	strge	r3, [sp, #28]
 8025e28:	9307      	strlt	r3, [sp, #28]
 8025e2a:	bfb8      	it	lt
 8025e2c:	9204      	strlt	r2, [sp, #16]
 8025e2e:	7823      	ldrb	r3, [r4, #0]
 8025e30:	2b2e      	cmp	r3, #46	; 0x2e
 8025e32:	d10c      	bne.n	8025e4e <_vfiprintf_r+0x176>
 8025e34:	7863      	ldrb	r3, [r4, #1]
 8025e36:	2b2a      	cmp	r3, #42	; 0x2a
 8025e38:	d135      	bne.n	8025ea6 <_vfiprintf_r+0x1ce>
 8025e3a:	9b03      	ldr	r3, [sp, #12]
 8025e3c:	1d1a      	adds	r2, r3, #4
 8025e3e:	681b      	ldr	r3, [r3, #0]
 8025e40:	9203      	str	r2, [sp, #12]
 8025e42:	2b00      	cmp	r3, #0
 8025e44:	bfb8      	it	lt
 8025e46:	f04f 33ff 	movlt.w	r3, #4294967295
 8025e4a:	3402      	adds	r4, #2
 8025e4c:	9305      	str	r3, [sp, #20]
 8025e4e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8025f34 <_vfiprintf_r+0x25c>
 8025e52:	7821      	ldrb	r1, [r4, #0]
 8025e54:	2203      	movs	r2, #3
 8025e56:	4650      	mov	r0, sl
 8025e58:	f7da f9d2 	bl	8000200 <memchr>
 8025e5c:	b140      	cbz	r0, 8025e70 <_vfiprintf_r+0x198>
 8025e5e:	2340      	movs	r3, #64	; 0x40
 8025e60:	eba0 000a 	sub.w	r0, r0, sl
 8025e64:	fa03 f000 	lsl.w	r0, r3, r0
 8025e68:	9b04      	ldr	r3, [sp, #16]
 8025e6a:	4303      	orrs	r3, r0
 8025e6c:	3401      	adds	r4, #1
 8025e6e:	9304      	str	r3, [sp, #16]
 8025e70:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025e74:	482c      	ldr	r0, [pc, #176]	; (8025f28 <_vfiprintf_r+0x250>)
 8025e76:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8025e7a:	2206      	movs	r2, #6
 8025e7c:	f7da f9c0 	bl	8000200 <memchr>
 8025e80:	2800      	cmp	r0, #0
 8025e82:	d03f      	beq.n	8025f04 <_vfiprintf_r+0x22c>
 8025e84:	4b29      	ldr	r3, [pc, #164]	; (8025f2c <_vfiprintf_r+0x254>)
 8025e86:	bb1b      	cbnz	r3, 8025ed0 <_vfiprintf_r+0x1f8>
 8025e88:	9b03      	ldr	r3, [sp, #12]
 8025e8a:	3307      	adds	r3, #7
 8025e8c:	f023 0307 	bic.w	r3, r3, #7
 8025e90:	3308      	adds	r3, #8
 8025e92:	9303      	str	r3, [sp, #12]
 8025e94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e96:	443b      	add	r3, r7
 8025e98:	9309      	str	r3, [sp, #36]	; 0x24
 8025e9a:	e767      	b.n	8025d6c <_vfiprintf_r+0x94>
 8025e9c:	fb0c 3202 	mla	r2, ip, r2, r3
 8025ea0:	460c      	mov	r4, r1
 8025ea2:	2001      	movs	r0, #1
 8025ea4:	e7a5      	b.n	8025df2 <_vfiprintf_r+0x11a>
 8025ea6:	2300      	movs	r3, #0
 8025ea8:	3401      	adds	r4, #1
 8025eaa:	9305      	str	r3, [sp, #20]
 8025eac:	4619      	mov	r1, r3
 8025eae:	f04f 0c0a 	mov.w	ip, #10
 8025eb2:	4620      	mov	r0, r4
 8025eb4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025eb8:	3a30      	subs	r2, #48	; 0x30
 8025eba:	2a09      	cmp	r2, #9
 8025ebc:	d903      	bls.n	8025ec6 <_vfiprintf_r+0x1ee>
 8025ebe:	2b00      	cmp	r3, #0
 8025ec0:	d0c5      	beq.n	8025e4e <_vfiprintf_r+0x176>
 8025ec2:	9105      	str	r1, [sp, #20]
 8025ec4:	e7c3      	b.n	8025e4e <_vfiprintf_r+0x176>
 8025ec6:	fb0c 2101 	mla	r1, ip, r1, r2
 8025eca:	4604      	mov	r4, r0
 8025ecc:	2301      	movs	r3, #1
 8025ece:	e7f0      	b.n	8025eb2 <_vfiprintf_r+0x1da>
 8025ed0:	ab03      	add	r3, sp, #12
 8025ed2:	9300      	str	r3, [sp, #0]
 8025ed4:	462a      	mov	r2, r5
 8025ed6:	4b16      	ldr	r3, [pc, #88]	; (8025f30 <_vfiprintf_r+0x258>)
 8025ed8:	a904      	add	r1, sp, #16
 8025eda:	4630      	mov	r0, r6
 8025edc:	f3af 8000 	nop.w
 8025ee0:	4607      	mov	r7, r0
 8025ee2:	1c78      	adds	r0, r7, #1
 8025ee4:	d1d6      	bne.n	8025e94 <_vfiprintf_r+0x1bc>
 8025ee6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8025ee8:	07d9      	lsls	r1, r3, #31
 8025eea:	d405      	bmi.n	8025ef8 <_vfiprintf_r+0x220>
 8025eec:	89ab      	ldrh	r3, [r5, #12]
 8025eee:	059a      	lsls	r2, r3, #22
 8025ef0:	d402      	bmi.n	8025ef8 <_vfiprintf_r+0x220>
 8025ef2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8025ef4:	f000 fce4 	bl	80268c0 <__retarget_lock_release_recursive>
 8025ef8:	89ab      	ldrh	r3, [r5, #12]
 8025efa:	065b      	lsls	r3, r3, #25
 8025efc:	f53f af12 	bmi.w	8025d24 <_vfiprintf_r+0x4c>
 8025f00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025f02:	e711      	b.n	8025d28 <_vfiprintf_r+0x50>
 8025f04:	ab03      	add	r3, sp, #12
 8025f06:	9300      	str	r3, [sp, #0]
 8025f08:	462a      	mov	r2, r5
 8025f0a:	4b09      	ldr	r3, [pc, #36]	; (8025f30 <_vfiprintf_r+0x258>)
 8025f0c:	a904      	add	r1, sp, #16
 8025f0e:	4630      	mov	r0, r6
 8025f10:	f000 f880 	bl	8026014 <_printf_i>
 8025f14:	e7e4      	b.n	8025ee0 <_vfiprintf_r+0x208>
 8025f16:	bf00      	nop
 8025f18:	08029160 	.word	0x08029160
 8025f1c:	08029180 	.word	0x08029180
 8025f20:	08029140 	.word	0x08029140
 8025f24:	08029108 	.word	0x08029108
 8025f28:	08029112 	.word	0x08029112
 8025f2c:	00000000 	.word	0x00000000
 8025f30:	08025cb3 	.word	0x08025cb3
 8025f34:	0802910e 	.word	0x0802910e

08025f38 <_printf_common>:
 8025f38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025f3c:	4616      	mov	r6, r2
 8025f3e:	4699      	mov	r9, r3
 8025f40:	688a      	ldr	r2, [r1, #8]
 8025f42:	690b      	ldr	r3, [r1, #16]
 8025f44:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8025f48:	4293      	cmp	r3, r2
 8025f4a:	bfb8      	it	lt
 8025f4c:	4613      	movlt	r3, r2
 8025f4e:	6033      	str	r3, [r6, #0]
 8025f50:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8025f54:	4607      	mov	r7, r0
 8025f56:	460c      	mov	r4, r1
 8025f58:	b10a      	cbz	r2, 8025f5e <_printf_common+0x26>
 8025f5a:	3301      	adds	r3, #1
 8025f5c:	6033      	str	r3, [r6, #0]
 8025f5e:	6823      	ldr	r3, [r4, #0]
 8025f60:	0699      	lsls	r1, r3, #26
 8025f62:	bf42      	ittt	mi
 8025f64:	6833      	ldrmi	r3, [r6, #0]
 8025f66:	3302      	addmi	r3, #2
 8025f68:	6033      	strmi	r3, [r6, #0]
 8025f6a:	6825      	ldr	r5, [r4, #0]
 8025f6c:	f015 0506 	ands.w	r5, r5, #6
 8025f70:	d106      	bne.n	8025f80 <_printf_common+0x48>
 8025f72:	f104 0a19 	add.w	sl, r4, #25
 8025f76:	68e3      	ldr	r3, [r4, #12]
 8025f78:	6832      	ldr	r2, [r6, #0]
 8025f7a:	1a9b      	subs	r3, r3, r2
 8025f7c:	42ab      	cmp	r3, r5
 8025f7e:	dc26      	bgt.n	8025fce <_printf_common+0x96>
 8025f80:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8025f84:	1e13      	subs	r3, r2, #0
 8025f86:	6822      	ldr	r2, [r4, #0]
 8025f88:	bf18      	it	ne
 8025f8a:	2301      	movne	r3, #1
 8025f8c:	0692      	lsls	r2, r2, #26
 8025f8e:	d42b      	bmi.n	8025fe8 <_printf_common+0xb0>
 8025f90:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8025f94:	4649      	mov	r1, r9
 8025f96:	4638      	mov	r0, r7
 8025f98:	47c0      	blx	r8
 8025f9a:	3001      	adds	r0, #1
 8025f9c:	d01e      	beq.n	8025fdc <_printf_common+0xa4>
 8025f9e:	6823      	ldr	r3, [r4, #0]
 8025fa0:	68e5      	ldr	r5, [r4, #12]
 8025fa2:	6832      	ldr	r2, [r6, #0]
 8025fa4:	f003 0306 	and.w	r3, r3, #6
 8025fa8:	2b04      	cmp	r3, #4
 8025faa:	bf08      	it	eq
 8025fac:	1aad      	subeq	r5, r5, r2
 8025fae:	68a3      	ldr	r3, [r4, #8]
 8025fb0:	6922      	ldr	r2, [r4, #16]
 8025fb2:	bf0c      	ite	eq
 8025fb4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025fb8:	2500      	movne	r5, #0
 8025fba:	4293      	cmp	r3, r2
 8025fbc:	bfc4      	itt	gt
 8025fbe:	1a9b      	subgt	r3, r3, r2
 8025fc0:	18ed      	addgt	r5, r5, r3
 8025fc2:	2600      	movs	r6, #0
 8025fc4:	341a      	adds	r4, #26
 8025fc6:	42b5      	cmp	r5, r6
 8025fc8:	d11a      	bne.n	8026000 <_printf_common+0xc8>
 8025fca:	2000      	movs	r0, #0
 8025fcc:	e008      	b.n	8025fe0 <_printf_common+0xa8>
 8025fce:	2301      	movs	r3, #1
 8025fd0:	4652      	mov	r2, sl
 8025fd2:	4649      	mov	r1, r9
 8025fd4:	4638      	mov	r0, r7
 8025fd6:	47c0      	blx	r8
 8025fd8:	3001      	adds	r0, #1
 8025fda:	d103      	bne.n	8025fe4 <_printf_common+0xac>
 8025fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8025fe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025fe4:	3501      	adds	r5, #1
 8025fe6:	e7c6      	b.n	8025f76 <_printf_common+0x3e>
 8025fe8:	18e1      	adds	r1, r4, r3
 8025fea:	1c5a      	adds	r2, r3, #1
 8025fec:	2030      	movs	r0, #48	; 0x30
 8025fee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8025ff2:	4422      	add	r2, r4
 8025ff4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8025ff8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025ffc:	3302      	adds	r3, #2
 8025ffe:	e7c7      	b.n	8025f90 <_printf_common+0x58>
 8026000:	2301      	movs	r3, #1
 8026002:	4622      	mov	r2, r4
 8026004:	4649      	mov	r1, r9
 8026006:	4638      	mov	r0, r7
 8026008:	47c0      	blx	r8
 802600a:	3001      	adds	r0, #1
 802600c:	d0e6      	beq.n	8025fdc <_printf_common+0xa4>
 802600e:	3601      	adds	r6, #1
 8026010:	e7d9      	b.n	8025fc6 <_printf_common+0x8e>
	...

08026014 <_printf_i>:
 8026014:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026018:	7e0f      	ldrb	r7, [r1, #24]
 802601a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802601c:	2f78      	cmp	r7, #120	; 0x78
 802601e:	4691      	mov	r9, r2
 8026020:	4680      	mov	r8, r0
 8026022:	460c      	mov	r4, r1
 8026024:	469a      	mov	sl, r3
 8026026:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802602a:	d807      	bhi.n	802603c <_printf_i+0x28>
 802602c:	2f62      	cmp	r7, #98	; 0x62
 802602e:	d80a      	bhi.n	8026046 <_printf_i+0x32>
 8026030:	2f00      	cmp	r7, #0
 8026032:	f000 80d8 	beq.w	80261e6 <_printf_i+0x1d2>
 8026036:	2f58      	cmp	r7, #88	; 0x58
 8026038:	f000 80a3 	beq.w	8026182 <_printf_i+0x16e>
 802603c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026040:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026044:	e03a      	b.n	80260bc <_printf_i+0xa8>
 8026046:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802604a:	2b15      	cmp	r3, #21
 802604c:	d8f6      	bhi.n	802603c <_printf_i+0x28>
 802604e:	a101      	add	r1, pc, #4	; (adr r1, 8026054 <_printf_i+0x40>)
 8026050:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026054:	080260ad 	.word	0x080260ad
 8026058:	080260c1 	.word	0x080260c1
 802605c:	0802603d 	.word	0x0802603d
 8026060:	0802603d 	.word	0x0802603d
 8026064:	0802603d 	.word	0x0802603d
 8026068:	0802603d 	.word	0x0802603d
 802606c:	080260c1 	.word	0x080260c1
 8026070:	0802603d 	.word	0x0802603d
 8026074:	0802603d 	.word	0x0802603d
 8026078:	0802603d 	.word	0x0802603d
 802607c:	0802603d 	.word	0x0802603d
 8026080:	080261cd 	.word	0x080261cd
 8026084:	080260f1 	.word	0x080260f1
 8026088:	080261af 	.word	0x080261af
 802608c:	0802603d 	.word	0x0802603d
 8026090:	0802603d 	.word	0x0802603d
 8026094:	080261ef 	.word	0x080261ef
 8026098:	0802603d 	.word	0x0802603d
 802609c:	080260f1 	.word	0x080260f1
 80260a0:	0802603d 	.word	0x0802603d
 80260a4:	0802603d 	.word	0x0802603d
 80260a8:	080261b7 	.word	0x080261b7
 80260ac:	682b      	ldr	r3, [r5, #0]
 80260ae:	1d1a      	adds	r2, r3, #4
 80260b0:	681b      	ldr	r3, [r3, #0]
 80260b2:	602a      	str	r2, [r5, #0]
 80260b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80260b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80260bc:	2301      	movs	r3, #1
 80260be:	e0a3      	b.n	8026208 <_printf_i+0x1f4>
 80260c0:	6820      	ldr	r0, [r4, #0]
 80260c2:	6829      	ldr	r1, [r5, #0]
 80260c4:	0606      	lsls	r6, r0, #24
 80260c6:	f101 0304 	add.w	r3, r1, #4
 80260ca:	d50a      	bpl.n	80260e2 <_printf_i+0xce>
 80260cc:	680e      	ldr	r6, [r1, #0]
 80260ce:	602b      	str	r3, [r5, #0]
 80260d0:	2e00      	cmp	r6, #0
 80260d2:	da03      	bge.n	80260dc <_printf_i+0xc8>
 80260d4:	232d      	movs	r3, #45	; 0x2d
 80260d6:	4276      	negs	r6, r6
 80260d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80260dc:	485e      	ldr	r0, [pc, #376]	; (8026258 <_printf_i+0x244>)
 80260de:	230a      	movs	r3, #10
 80260e0:	e019      	b.n	8026116 <_printf_i+0x102>
 80260e2:	680e      	ldr	r6, [r1, #0]
 80260e4:	602b      	str	r3, [r5, #0]
 80260e6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80260ea:	bf18      	it	ne
 80260ec:	b236      	sxthne	r6, r6
 80260ee:	e7ef      	b.n	80260d0 <_printf_i+0xbc>
 80260f0:	682b      	ldr	r3, [r5, #0]
 80260f2:	6820      	ldr	r0, [r4, #0]
 80260f4:	1d19      	adds	r1, r3, #4
 80260f6:	6029      	str	r1, [r5, #0]
 80260f8:	0601      	lsls	r1, r0, #24
 80260fa:	d501      	bpl.n	8026100 <_printf_i+0xec>
 80260fc:	681e      	ldr	r6, [r3, #0]
 80260fe:	e002      	b.n	8026106 <_printf_i+0xf2>
 8026100:	0646      	lsls	r6, r0, #25
 8026102:	d5fb      	bpl.n	80260fc <_printf_i+0xe8>
 8026104:	881e      	ldrh	r6, [r3, #0]
 8026106:	4854      	ldr	r0, [pc, #336]	; (8026258 <_printf_i+0x244>)
 8026108:	2f6f      	cmp	r7, #111	; 0x6f
 802610a:	bf0c      	ite	eq
 802610c:	2308      	moveq	r3, #8
 802610e:	230a      	movne	r3, #10
 8026110:	2100      	movs	r1, #0
 8026112:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026116:	6865      	ldr	r5, [r4, #4]
 8026118:	60a5      	str	r5, [r4, #8]
 802611a:	2d00      	cmp	r5, #0
 802611c:	bfa2      	ittt	ge
 802611e:	6821      	ldrge	r1, [r4, #0]
 8026120:	f021 0104 	bicge.w	r1, r1, #4
 8026124:	6021      	strge	r1, [r4, #0]
 8026126:	b90e      	cbnz	r6, 802612c <_printf_i+0x118>
 8026128:	2d00      	cmp	r5, #0
 802612a:	d04d      	beq.n	80261c8 <_printf_i+0x1b4>
 802612c:	4615      	mov	r5, r2
 802612e:	fbb6 f1f3 	udiv	r1, r6, r3
 8026132:	fb03 6711 	mls	r7, r3, r1, r6
 8026136:	5dc7      	ldrb	r7, [r0, r7]
 8026138:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802613c:	4637      	mov	r7, r6
 802613e:	42bb      	cmp	r3, r7
 8026140:	460e      	mov	r6, r1
 8026142:	d9f4      	bls.n	802612e <_printf_i+0x11a>
 8026144:	2b08      	cmp	r3, #8
 8026146:	d10b      	bne.n	8026160 <_printf_i+0x14c>
 8026148:	6823      	ldr	r3, [r4, #0]
 802614a:	07de      	lsls	r6, r3, #31
 802614c:	d508      	bpl.n	8026160 <_printf_i+0x14c>
 802614e:	6923      	ldr	r3, [r4, #16]
 8026150:	6861      	ldr	r1, [r4, #4]
 8026152:	4299      	cmp	r1, r3
 8026154:	bfde      	ittt	le
 8026156:	2330      	movle	r3, #48	; 0x30
 8026158:	f805 3c01 	strble.w	r3, [r5, #-1]
 802615c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8026160:	1b52      	subs	r2, r2, r5
 8026162:	6122      	str	r2, [r4, #16]
 8026164:	f8cd a000 	str.w	sl, [sp]
 8026168:	464b      	mov	r3, r9
 802616a:	aa03      	add	r2, sp, #12
 802616c:	4621      	mov	r1, r4
 802616e:	4640      	mov	r0, r8
 8026170:	f7ff fee2 	bl	8025f38 <_printf_common>
 8026174:	3001      	adds	r0, #1
 8026176:	d14c      	bne.n	8026212 <_printf_i+0x1fe>
 8026178:	f04f 30ff 	mov.w	r0, #4294967295
 802617c:	b004      	add	sp, #16
 802617e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026182:	4835      	ldr	r0, [pc, #212]	; (8026258 <_printf_i+0x244>)
 8026184:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8026188:	6829      	ldr	r1, [r5, #0]
 802618a:	6823      	ldr	r3, [r4, #0]
 802618c:	f851 6b04 	ldr.w	r6, [r1], #4
 8026190:	6029      	str	r1, [r5, #0]
 8026192:	061d      	lsls	r5, r3, #24
 8026194:	d514      	bpl.n	80261c0 <_printf_i+0x1ac>
 8026196:	07df      	lsls	r7, r3, #31
 8026198:	bf44      	itt	mi
 802619a:	f043 0320 	orrmi.w	r3, r3, #32
 802619e:	6023      	strmi	r3, [r4, #0]
 80261a0:	b91e      	cbnz	r6, 80261aa <_printf_i+0x196>
 80261a2:	6823      	ldr	r3, [r4, #0]
 80261a4:	f023 0320 	bic.w	r3, r3, #32
 80261a8:	6023      	str	r3, [r4, #0]
 80261aa:	2310      	movs	r3, #16
 80261ac:	e7b0      	b.n	8026110 <_printf_i+0xfc>
 80261ae:	6823      	ldr	r3, [r4, #0]
 80261b0:	f043 0320 	orr.w	r3, r3, #32
 80261b4:	6023      	str	r3, [r4, #0]
 80261b6:	2378      	movs	r3, #120	; 0x78
 80261b8:	4828      	ldr	r0, [pc, #160]	; (802625c <_printf_i+0x248>)
 80261ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80261be:	e7e3      	b.n	8026188 <_printf_i+0x174>
 80261c0:	0659      	lsls	r1, r3, #25
 80261c2:	bf48      	it	mi
 80261c4:	b2b6      	uxthmi	r6, r6
 80261c6:	e7e6      	b.n	8026196 <_printf_i+0x182>
 80261c8:	4615      	mov	r5, r2
 80261ca:	e7bb      	b.n	8026144 <_printf_i+0x130>
 80261cc:	682b      	ldr	r3, [r5, #0]
 80261ce:	6826      	ldr	r6, [r4, #0]
 80261d0:	6961      	ldr	r1, [r4, #20]
 80261d2:	1d18      	adds	r0, r3, #4
 80261d4:	6028      	str	r0, [r5, #0]
 80261d6:	0635      	lsls	r5, r6, #24
 80261d8:	681b      	ldr	r3, [r3, #0]
 80261da:	d501      	bpl.n	80261e0 <_printf_i+0x1cc>
 80261dc:	6019      	str	r1, [r3, #0]
 80261de:	e002      	b.n	80261e6 <_printf_i+0x1d2>
 80261e0:	0670      	lsls	r0, r6, #25
 80261e2:	d5fb      	bpl.n	80261dc <_printf_i+0x1c8>
 80261e4:	8019      	strh	r1, [r3, #0]
 80261e6:	2300      	movs	r3, #0
 80261e8:	6123      	str	r3, [r4, #16]
 80261ea:	4615      	mov	r5, r2
 80261ec:	e7ba      	b.n	8026164 <_printf_i+0x150>
 80261ee:	682b      	ldr	r3, [r5, #0]
 80261f0:	1d1a      	adds	r2, r3, #4
 80261f2:	602a      	str	r2, [r5, #0]
 80261f4:	681d      	ldr	r5, [r3, #0]
 80261f6:	6862      	ldr	r2, [r4, #4]
 80261f8:	2100      	movs	r1, #0
 80261fa:	4628      	mov	r0, r5
 80261fc:	f7da f800 	bl	8000200 <memchr>
 8026200:	b108      	cbz	r0, 8026206 <_printf_i+0x1f2>
 8026202:	1b40      	subs	r0, r0, r5
 8026204:	6060      	str	r0, [r4, #4]
 8026206:	6863      	ldr	r3, [r4, #4]
 8026208:	6123      	str	r3, [r4, #16]
 802620a:	2300      	movs	r3, #0
 802620c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026210:	e7a8      	b.n	8026164 <_printf_i+0x150>
 8026212:	6923      	ldr	r3, [r4, #16]
 8026214:	462a      	mov	r2, r5
 8026216:	4649      	mov	r1, r9
 8026218:	4640      	mov	r0, r8
 802621a:	47d0      	blx	sl
 802621c:	3001      	adds	r0, #1
 802621e:	d0ab      	beq.n	8026178 <_printf_i+0x164>
 8026220:	6823      	ldr	r3, [r4, #0]
 8026222:	079b      	lsls	r3, r3, #30
 8026224:	d413      	bmi.n	802624e <_printf_i+0x23a>
 8026226:	68e0      	ldr	r0, [r4, #12]
 8026228:	9b03      	ldr	r3, [sp, #12]
 802622a:	4298      	cmp	r0, r3
 802622c:	bfb8      	it	lt
 802622e:	4618      	movlt	r0, r3
 8026230:	e7a4      	b.n	802617c <_printf_i+0x168>
 8026232:	2301      	movs	r3, #1
 8026234:	4632      	mov	r2, r6
 8026236:	4649      	mov	r1, r9
 8026238:	4640      	mov	r0, r8
 802623a:	47d0      	blx	sl
 802623c:	3001      	adds	r0, #1
 802623e:	d09b      	beq.n	8026178 <_printf_i+0x164>
 8026240:	3501      	adds	r5, #1
 8026242:	68e3      	ldr	r3, [r4, #12]
 8026244:	9903      	ldr	r1, [sp, #12]
 8026246:	1a5b      	subs	r3, r3, r1
 8026248:	42ab      	cmp	r3, r5
 802624a:	dcf2      	bgt.n	8026232 <_printf_i+0x21e>
 802624c:	e7eb      	b.n	8026226 <_printf_i+0x212>
 802624e:	2500      	movs	r5, #0
 8026250:	f104 0619 	add.w	r6, r4, #25
 8026254:	e7f5      	b.n	8026242 <_printf_i+0x22e>
 8026256:	bf00      	nop
 8026258:	08029119 	.word	0x08029119
 802625c:	0802912a 	.word	0x0802912a

08026260 <_sbrk_r>:
 8026260:	b538      	push	{r3, r4, r5, lr}
 8026262:	4d06      	ldr	r5, [pc, #24]	; (802627c <_sbrk_r+0x1c>)
 8026264:	2300      	movs	r3, #0
 8026266:	4604      	mov	r4, r0
 8026268:	4608      	mov	r0, r1
 802626a:	602b      	str	r3, [r5, #0]
 802626c:	f7dc fb2a 	bl	80028c4 <_sbrk>
 8026270:	1c43      	adds	r3, r0, #1
 8026272:	d102      	bne.n	802627a <_sbrk_r+0x1a>
 8026274:	682b      	ldr	r3, [r5, #0]
 8026276:	b103      	cbz	r3, 802627a <_sbrk_r+0x1a>
 8026278:	6023      	str	r3, [r4, #0]
 802627a:	bd38      	pop	{r3, r4, r5, pc}
 802627c:	2000df1c 	.word	0x2000df1c

08026280 <_raise_r>:
 8026280:	291f      	cmp	r1, #31
 8026282:	b538      	push	{r3, r4, r5, lr}
 8026284:	4604      	mov	r4, r0
 8026286:	460d      	mov	r5, r1
 8026288:	d904      	bls.n	8026294 <_raise_r+0x14>
 802628a:	2316      	movs	r3, #22
 802628c:	6003      	str	r3, [r0, #0]
 802628e:	f04f 30ff 	mov.w	r0, #4294967295
 8026292:	bd38      	pop	{r3, r4, r5, pc}
 8026294:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8026296:	b112      	cbz	r2, 802629e <_raise_r+0x1e>
 8026298:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802629c:	b94b      	cbnz	r3, 80262b2 <_raise_r+0x32>
 802629e:	4620      	mov	r0, r4
 80262a0:	f000 f830 	bl	8026304 <_getpid_r>
 80262a4:	462a      	mov	r2, r5
 80262a6:	4601      	mov	r1, r0
 80262a8:	4620      	mov	r0, r4
 80262aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80262ae:	f000 b817 	b.w	80262e0 <_kill_r>
 80262b2:	2b01      	cmp	r3, #1
 80262b4:	d00a      	beq.n	80262cc <_raise_r+0x4c>
 80262b6:	1c59      	adds	r1, r3, #1
 80262b8:	d103      	bne.n	80262c2 <_raise_r+0x42>
 80262ba:	2316      	movs	r3, #22
 80262bc:	6003      	str	r3, [r0, #0]
 80262be:	2001      	movs	r0, #1
 80262c0:	e7e7      	b.n	8026292 <_raise_r+0x12>
 80262c2:	2400      	movs	r4, #0
 80262c4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80262c8:	4628      	mov	r0, r5
 80262ca:	4798      	blx	r3
 80262cc:	2000      	movs	r0, #0
 80262ce:	e7e0      	b.n	8026292 <_raise_r+0x12>

080262d0 <raise>:
 80262d0:	4b02      	ldr	r3, [pc, #8]	; (80262dc <raise+0xc>)
 80262d2:	4601      	mov	r1, r0
 80262d4:	6818      	ldr	r0, [r3, #0]
 80262d6:	f7ff bfd3 	b.w	8026280 <_raise_r>
 80262da:	bf00      	nop
 80262dc:	200000d8 	.word	0x200000d8

080262e0 <_kill_r>:
 80262e0:	b538      	push	{r3, r4, r5, lr}
 80262e2:	4d07      	ldr	r5, [pc, #28]	; (8026300 <_kill_r+0x20>)
 80262e4:	2300      	movs	r3, #0
 80262e6:	4604      	mov	r4, r0
 80262e8:	4608      	mov	r0, r1
 80262ea:	4611      	mov	r1, r2
 80262ec:	602b      	str	r3, [r5, #0]
 80262ee:	f7dc fab3 	bl	8002858 <_kill>
 80262f2:	1c43      	adds	r3, r0, #1
 80262f4:	d102      	bne.n	80262fc <_kill_r+0x1c>
 80262f6:	682b      	ldr	r3, [r5, #0]
 80262f8:	b103      	cbz	r3, 80262fc <_kill_r+0x1c>
 80262fa:	6023      	str	r3, [r4, #0]
 80262fc:	bd38      	pop	{r3, r4, r5, pc}
 80262fe:	bf00      	nop
 8026300:	2000df1c 	.word	0x2000df1c

08026304 <_getpid_r>:
 8026304:	f7dc baa6 	b.w	8002854 <_getpid>

08026308 <__swbuf_r>:
 8026308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802630a:	460e      	mov	r6, r1
 802630c:	4614      	mov	r4, r2
 802630e:	4605      	mov	r5, r0
 8026310:	b118      	cbz	r0, 802631a <__swbuf_r+0x12>
 8026312:	6983      	ldr	r3, [r0, #24]
 8026314:	b90b      	cbnz	r3, 802631a <__swbuf_r+0x12>
 8026316:	f000 fa33 	bl	8026780 <__sinit>
 802631a:	4b21      	ldr	r3, [pc, #132]	; (80263a0 <__swbuf_r+0x98>)
 802631c:	429c      	cmp	r4, r3
 802631e:	d12b      	bne.n	8026378 <__swbuf_r+0x70>
 8026320:	686c      	ldr	r4, [r5, #4]
 8026322:	69a3      	ldr	r3, [r4, #24]
 8026324:	60a3      	str	r3, [r4, #8]
 8026326:	89a3      	ldrh	r3, [r4, #12]
 8026328:	071a      	lsls	r2, r3, #28
 802632a:	d52f      	bpl.n	802638c <__swbuf_r+0x84>
 802632c:	6923      	ldr	r3, [r4, #16]
 802632e:	b36b      	cbz	r3, 802638c <__swbuf_r+0x84>
 8026330:	6923      	ldr	r3, [r4, #16]
 8026332:	6820      	ldr	r0, [r4, #0]
 8026334:	1ac0      	subs	r0, r0, r3
 8026336:	6963      	ldr	r3, [r4, #20]
 8026338:	b2f6      	uxtb	r6, r6
 802633a:	4283      	cmp	r3, r0
 802633c:	4637      	mov	r7, r6
 802633e:	dc04      	bgt.n	802634a <__swbuf_r+0x42>
 8026340:	4621      	mov	r1, r4
 8026342:	4628      	mov	r0, r5
 8026344:	f000 f988 	bl	8026658 <_fflush_r>
 8026348:	bb30      	cbnz	r0, 8026398 <__swbuf_r+0x90>
 802634a:	68a3      	ldr	r3, [r4, #8]
 802634c:	3b01      	subs	r3, #1
 802634e:	60a3      	str	r3, [r4, #8]
 8026350:	6823      	ldr	r3, [r4, #0]
 8026352:	1c5a      	adds	r2, r3, #1
 8026354:	6022      	str	r2, [r4, #0]
 8026356:	701e      	strb	r6, [r3, #0]
 8026358:	6963      	ldr	r3, [r4, #20]
 802635a:	3001      	adds	r0, #1
 802635c:	4283      	cmp	r3, r0
 802635e:	d004      	beq.n	802636a <__swbuf_r+0x62>
 8026360:	89a3      	ldrh	r3, [r4, #12]
 8026362:	07db      	lsls	r3, r3, #31
 8026364:	d506      	bpl.n	8026374 <__swbuf_r+0x6c>
 8026366:	2e0a      	cmp	r6, #10
 8026368:	d104      	bne.n	8026374 <__swbuf_r+0x6c>
 802636a:	4621      	mov	r1, r4
 802636c:	4628      	mov	r0, r5
 802636e:	f000 f973 	bl	8026658 <_fflush_r>
 8026372:	b988      	cbnz	r0, 8026398 <__swbuf_r+0x90>
 8026374:	4638      	mov	r0, r7
 8026376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026378:	4b0a      	ldr	r3, [pc, #40]	; (80263a4 <__swbuf_r+0x9c>)
 802637a:	429c      	cmp	r4, r3
 802637c:	d101      	bne.n	8026382 <__swbuf_r+0x7a>
 802637e:	68ac      	ldr	r4, [r5, #8]
 8026380:	e7cf      	b.n	8026322 <__swbuf_r+0x1a>
 8026382:	4b09      	ldr	r3, [pc, #36]	; (80263a8 <__swbuf_r+0xa0>)
 8026384:	429c      	cmp	r4, r3
 8026386:	bf08      	it	eq
 8026388:	68ec      	ldreq	r4, [r5, #12]
 802638a:	e7ca      	b.n	8026322 <__swbuf_r+0x1a>
 802638c:	4621      	mov	r1, r4
 802638e:	4628      	mov	r0, r5
 8026390:	f000 f80c 	bl	80263ac <__swsetup_r>
 8026394:	2800      	cmp	r0, #0
 8026396:	d0cb      	beq.n	8026330 <__swbuf_r+0x28>
 8026398:	f04f 37ff 	mov.w	r7, #4294967295
 802639c:	e7ea      	b.n	8026374 <__swbuf_r+0x6c>
 802639e:	bf00      	nop
 80263a0:	08029160 	.word	0x08029160
 80263a4:	08029180 	.word	0x08029180
 80263a8:	08029140 	.word	0x08029140

080263ac <__swsetup_r>:
 80263ac:	4b32      	ldr	r3, [pc, #200]	; (8026478 <__swsetup_r+0xcc>)
 80263ae:	b570      	push	{r4, r5, r6, lr}
 80263b0:	681d      	ldr	r5, [r3, #0]
 80263b2:	4606      	mov	r6, r0
 80263b4:	460c      	mov	r4, r1
 80263b6:	b125      	cbz	r5, 80263c2 <__swsetup_r+0x16>
 80263b8:	69ab      	ldr	r3, [r5, #24]
 80263ba:	b913      	cbnz	r3, 80263c2 <__swsetup_r+0x16>
 80263bc:	4628      	mov	r0, r5
 80263be:	f000 f9df 	bl	8026780 <__sinit>
 80263c2:	4b2e      	ldr	r3, [pc, #184]	; (802647c <__swsetup_r+0xd0>)
 80263c4:	429c      	cmp	r4, r3
 80263c6:	d10f      	bne.n	80263e8 <__swsetup_r+0x3c>
 80263c8:	686c      	ldr	r4, [r5, #4]
 80263ca:	89a3      	ldrh	r3, [r4, #12]
 80263cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80263d0:	0719      	lsls	r1, r3, #28
 80263d2:	d42c      	bmi.n	802642e <__swsetup_r+0x82>
 80263d4:	06dd      	lsls	r5, r3, #27
 80263d6:	d411      	bmi.n	80263fc <__swsetup_r+0x50>
 80263d8:	2309      	movs	r3, #9
 80263da:	6033      	str	r3, [r6, #0]
 80263dc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80263e0:	81a3      	strh	r3, [r4, #12]
 80263e2:	f04f 30ff 	mov.w	r0, #4294967295
 80263e6:	e03e      	b.n	8026466 <__swsetup_r+0xba>
 80263e8:	4b25      	ldr	r3, [pc, #148]	; (8026480 <__swsetup_r+0xd4>)
 80263ea:	429c      	cmp	r4, r3
 80263ec:	d101      	bne.n	80263f2 <__swsetup_r+0x46>
 80263ee:	68ac      	ldr	r4, [r5, #8]
 80263f0:	e7eb      	b.n	80263ca <__swsetup_r+0x1e>
 80263f2:	4b24      	ldr	r3, [pc, #144]	; (8026484 <__swsetup_r+0xd8>)
 80263f4:	429c      	cmp	r4, r3
 80263f6:	bf08      	it	eq
 80263f8:	68ec      	ldreq	r4, [r5, #12]
 80263fa:	e7e6      	b.n	80263ca <__swsetup_r+0x1e>
 80263fc:	0758      	lsls	r0, r3, #29
 80263fe:	d512      	bpl.n	8026426 <__swsetup_r+0x7a>
 8026400:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026402:	b141      	cbz	r1, 8026416 <__swsetup_r+0x6a>
 8026404:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026408:	4299      	cmp	r1, r3
 802640a:	d002      	beq.n	8026412 <__swsetup_r+0x66>
 802640c:	4630      	mov	r0, r6
 802640e:	f7ff fb59 	bl	8025ac4 <_free_r>
 8026412:	2300      	movs	r3, #0
 8026414:	6363      	str	r3, [r4, #52]	; 0x34
 8026416:	89a3      	ldrh	r3, [r4, #12]
 8026418:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802641c:	81a3      	strh	r3, [r4, #12]
 802641e:	2300      	movs	r3, #0
 8026420:	6063      	str	r3, [r4, #4]
 8026422:	6923      	ldr	r3, [r4, #16]
 8026424:	6023      	str	r3, [r4, #0]
 8026426:	89a3      	ldrh	r3, [r4, #12]
 8026428:	f043 0308 	orr.w	r3, r3, #8
 802642c:	81a3      	strh	r3, [r4, #12]
 802642e:	6923      	ldr	r3, [r4, #16]
 8026430:	b94b      	cbnz	r3, 8026446 <__swsetup_r+0x9a>
 8026432:	89a3      	ldrh	r3, [r4, #12]
 8026434:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026438:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802643c:	d003      	beq.n	8026446 <__swsetup_r+0x9a>
 802643e:	4621      	mov	r1, r4
 8026440:	4630      	mov	r0, r6
 8026442:	f000 fa63 	bl	802690c <__smakebuf_r>
 8026446:	89a0      	ldrh	r0, [r4, #12]
 8026448:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802644c:	f010 0301 	ands.w	r3, r0, #1
 8026450:	d00a      	beq.n	8026468 <__swsetup_r+0xbc>
 8026452:	2300      	movs	r3, #0
 8026454:	60a3      	str	r3, [r4, #8]
 8026456:	6963      	ldr	r3, [r4, #20]
 8026458:	425b      	negs	r3, r3
 802645a:	61a3      	str	r3, [r4, #24]
 802645c:	6923      	ldr	r3, [r4, #16]
 802645e:	b943      	cbnz	r3, 8026472 <__swsetup_r+0xc6>
 8026460:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026464:	d1ba      	bne.n	80263dc <__swsetup_r+0x30>
 8026466:	bd70      	pop	{r4, r5, r6, pc}
 8026468:	0781      	lsls	r1, r0, #30
 802646a:	bf58      	it	pl
 802646c:	6963      	ldrpl	r3, [r4, #20]
 802646e:	60a3      	str	r3, [r4, #8]
 8026470:	e7f4      	b.n	802645c <__swsetup_r+0xb0>
 8026472:	2000      	movs	r0, #0
 8026474:	e7f7      	b.n	8026466 <__swsetup_r+0xba>
 8026476:	bf00      	nop
 8026478:	200000d8 	.word	0x200000d8
 802647c:	08029160 	.word	0x08029160
 8026480:	08029180 	.word	0x08029180
 8026484:	08029140 	.word	0x08029140

08026488 <__register_exitproc>:
 8026488:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802648c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8026548 <__register_exitproc+0xc0>
 8026490:	4606      	mov	r6, r0
 8026492:	f8d8 0000 	ldr.w	r0, [r8]
 8026496:	461f      	mov	r7, r3
 8026498:	460d      	mov	r5, r1
 802649a:	4691      	mov	r9, r2
 802649c:	f000 fa0e 	bl	80268bc <__retarget_lock_acquire_recursive>
 80264a0:	4b25      	ldr	r3, [pc, #148]	; (8026538 <__register_exitproc+0xb0>)
 80264a2:	681c      	ldr	r4, [r3, #0]
 80264a4:	b934      	cbnz	r4, 80264b4 <__register_exitproc+0x2c>
 80264a6:	4c25      	ldr	r4, [pc, #148]	; (802653c <__register_exitproc+0xb4>)
 80264a8:	601c      	str	r4, [r3, #0]
 80264aa:	4b25      	ldr	r3, [pc, #148]	; (8026540 <__register_exitproc+0xb8>)
 80264ac:	b113      	cbz	r3, 80264b4 <__register_exitproc+0x2c>
 80264ae:	681b      	ldr	r3, [r3, #0]
 80264b0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80264b4:	6863      	ldr	r3, [r4, #4]
 80264b6:	2b1f      	cmp	r3, #31
 80264b8:	dd07      	ble.n	80264ca <__register_exitproc+0x42>
 80264ba:	f8d8 0000 	ldr.w	r0, [r8]
 80264be:	f000 f9ff 	bl	80268c0 <__retarget_lock_release_recursive>
 80264c2:	f04f 30ff 	mov.w	r0, #4294967295
 80264c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80264ca:	b34e      	cbz	r6, 8026520 <__register_exitproc+0x98>
 80264cc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80264d0:	b988      	cbnz	r0, 80264f6 <__register_exitproc+0x6e>
 80264d2:	4b1c      	ldr	r3, [pc, #112]	; (8026544 <__register_exitproc+0xbc>)
 80264d4:	b923      	cbnz	r3, 80264e0 <__register_exitproc+0x58>
 80264d6:	f8d8 0000 	ldr.w	r0, [r8]
 80264da:	f000 f9f0 	bl	80268be <__retarget_lock_release>
 80264de:	e7f0      	b.n	80264c2 <__register_exitproc+0x3a>
 80264e0:	f44f 7084 	mov.w	r0, #264	; 0x108
 80264e4:	f7ff fac8 	bl	8025a78 <malloc>
 80264e8:	2800      	cmp	r0, #0
 80264ea:	d0f4      	beq.n	80264d6 <__register_exitproc+0x4e>
 80264ec:	2300      	movs	r3, #0
 80264ee:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80264f2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80264f6:	6863      	ldr	r3, [r4, #4]
 80264f8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80264fc:	2201      	movs	r2, #1
 80264fe:	409a      	lsls	r2, r3
 8026500:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8026504:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8026508:	4313      	orrs	r3, r2
 802650a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802650e:	2e02      	cmp	r6, #2
 8026510:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8026514:	bf02      	ittt	eq
 8026516:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802651a:	4313      	orreq	r3, r2
 802651c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8026520:	6863      	ldr	r3, [r4, #4]
 8026522:	f8d8 0000 	ldr.w	r0, [r8]
 8026526:	1c5a      	adds	r2, r3, #1
 8026528:	3302      	adds	r3, #2
 802652a:	6062      	str	r2, [r4, #4]
 802652c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8026530:	f000 f9c6 	bl	80268c0 <__retarget_lock_release_recursive>
 8026534:	2000      	movs	r0, #0
 8026536:	e7c6      	b.n	80264c6 <__register_exitproc+0x3e>
 8026538:	2000df14 	.word	0x2000df14
 802653c:	2000de88 	.word	0x2000de88
 8026540:	0802913c 	.word	0x0802913c
 8026544:	08025a79 	.word	0x08025a79
 8026548:	2000013c 	.word	0x2000013c

0802654c <__sflush_r>:
 802654c:	898a      	ldrh	r2, [r1, #12]
 802654e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026552:	4605      	mov	r5, r0
 8026554:	0710      	lsls	r0, r2, #28
 8026556:	460c      	mov	r4, r1
 8026558:	d458      	bmi.n	802660c <__sflush_r+0xc0>
 802655a:	684b      	ldr	r3, [r1, #4]
 802655c:	2b00      	cmp	r3, #0
 802655e:	dc05      	bgt.n	802656c <__sflush_r+0x20>
 8026560:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026562:	2b00      	cmp	r3, #0
 8026564:	dc02      	bgt.n	802656c <__sflush_r+0x20>
 8026566:	2000      	movs	r0, #0
 8026568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802656c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802656e:	2e00      	cmp	r6, #0
 8026570:	d0f9      	beq.n	8026566 <__sflush_r+0x1a>
 8026572:	2300      	movs	r3, #0
 8026574:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026578:	682f      	ldr	r7, [r5, #0]
 802657a:	602b      	str	r3, [r5, #0]
 802657c:	d032      	beq.n	80265e4 <__sflush_r+0x98>
 802657e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026580:	89a3      	ldrh	r3, [r4, #12]
 8026582:	075a      	lsls	r2, r3, #29
 8026584:	d505      	bpl.n	8026592 <__sflush_r+0x46>
 8026586:	6863      	ldr	r3, [r4, #4]
 8026588:	1ac0      	subs	r0, r0, r3
 802658a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802658c:	b10b      	cbz	r3, 8026592 <__sflush_r+0x46>
 802658e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026590:	1ac0      	subs	r0, r0, r3
 8026592:	2300      	movs	r3, #0
 8026594:	4602      	mov	r2, r0
 8026596:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026598:	6a21      	ldr	r1, [r4, #32]
 802659a:	4628      	mov	r0, r5
 802659c:	47b0      	blx	r6
 802659e:	1c43      	adds	r3, r0, #1
 80265a0:	89a3      	ldrh	r3, [r4, #12]
 80265a2:	d106      	bne.n	80265b2 <__sflush_r+0x66>
 80265a4:	6829      	ldr	r1, [r5, #0]
 80265a6:	291d      	cmp	r1, #29
 80265a8:	d82c      	bhi.n	8026604 <__sflush_r+0xb8>
 80265aa:	4a2a      	ldr	r2, [pc, #168]	; (8026654 <__sflush_r+0x108>)
 80265ac:	40ca      	lsrs	r2, r1
 80265ae:	07d6      	lsls	r6, r2, #31
 80265b0:	d528      	bpl.n	8026604 <__sflush_r+0xb8>
 80265b2:	2200      	movs	r2, #0
 80265b4:	6062      	str	r2, [r4, #4]
 80265b6:	04d9      	lsls	r1, r3, #19
 80265b8:	6922      	ldr	r2, [r4, #16]
 80265ba:	6022      	str	r2, [r4, #0]
 80265bc:	d504      	bpl.n	80265c8 <__sflush_r+0x7c>
 80265be:	1c42      	adds	r2, r0, #1
 80265c0:	d101      	bne.n	80265c6 <__sflush_r+0x7a>
 80265c2:	682b      	ldr	r3, [r5, #0]
 80265c4:	b903      	cbnz	r3, 80265c8 <__sflush_r+0x7c>
 80265c6:	6560      	str	r0, [r4, #84]	; 0x54
 80265c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80265ca:	602f      	str	r7, [r5, #0]
 80265cc:	2900      	cmp	r1, #0
 80265ce:	d0ca      	beq.n	8026566 <__sflush_r+0x1a>
 80265d0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80265d4:	4299      	cmp	r1, r3
 80265d6:	d002      	beq.n	80265de <__sflush_r+0x92>
 80265d8:	4628      	mov	r0, r5
 80265da:	f7ff fa73 	bl	8025ac4 <_free_r>
 80265de:	2000      	movs	r0, #0
 80265e0:	6360      	str	r0, [r4, #52]	; 0x34
 80265e2:	e7c1      	b.n	8026568 <__sflush_r+0x1c>
 80265e4:	6a21      	ldr	r1, [r4, #32]
 80265e6:	2301      	movs	r3, #1
 80265e8:	4628      	mov	r0, r5
 80265ea:	47b0      	blx	r6
 80265ec:	1c41      	adds	r1, r0, #1
 80265ee:	d1c7      	bne.n	8026580 <__sflush_r+0x34>
 80265f0:	682b      	ldr	r3, [r5, #0]
 80265f2:	2b00      	cmp	r3, #0
 80265f4:	d0c4      	beq.n	8026580 <__sflush_r+0x34>
 80265f6:	2b1d      	cmp	r3, #29
 80265f8:	d001      	beq.n	80265fe <__sflush_r+0xb2>
 80265fa:	2b16      	cmp	r3, #22
 80265fc:	d101      	bne.n	8026602 <__sflush_r+0xb6>
 80265fe:	602f      	str	r7, [r5, #0]
 8026600:	e7b1      	b.n	8026566 <__sflush_r+0x1a>
 8026602:	89a3      	ldrh	r3, [r4, #12]
 8026604:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026608:	81a3      	strh	r3, [r4, #12]
 802660a:	e7ad      	b.n	8026568 <__sflush_r+0x1c>
 802660c:	690f      	ldr	r7, [r1, #16]
 802660e:	2f00      	cmp	r7, #0
 8026610:	d0a9      	beq.n	8026566 <__sflush_r+0x1a>
 8026612:	0793      	lsls	r3, r2, #30
 8026614:	680e      	ldr	r6, [r1, #0]
 8026616:	bf08      	it	eq
 8026618:	694b      	ldreq	r3, [r1, #20]
 802661a:	600f      	str	r7, [r1, #0]
 802661c:	bf18      	it	ne
 802661e:	2300      	movne	r3, #0
 8026620:	eba6 0807 	sub.w	r8, r6, r7
 8026624:	608b      	str	r3, [r1, #8]
 8026626:	f1b8 0f00 	cmp.w	r8, #0
 802662a:	dd9c      	ble.n	8026566 <__sflush_r+0x1a>
 802662c:	6a21      	ldr	r1, [r4, #32]
 802662e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8026630:	4643      	mov	r3, r8
 8026632:	463a      	mov	r2, r7
 8026634:	4628      	mov	r0, r5
 8026636:	47b0      	blx	r6
 8026638:	2800      	cmp	r0, #0
 802663a:	dc06      	bgt.n	802664a <__sflush_r+0xfe>
 802663c:	89a3      	ldrh	r3, [r4, #12]
 802663e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026642:	81a3      	strh	r3, [r4, #12]
 8026644:	f04f 30ff 	mov.w	r0, #4294967295
 8026648:	e78e      	b.n	8026568 <__sflush_r+0x1c>
 802664a:	4407      	add	r7, r0
 802664c:	eba8 0800 	sub.w	r8, r8, r0
 8026650:	e7e9      	b.n	8026626 <__sflush_r+0xda>
 8026652:	bf00      	nop
 8026654:	20400001 	.word	0x20400001

08026658 <_fflush_r>:
 8026658:	b538      	push	{r3, r4, r5, lr}
 802665a:	690b      	ldr	r3, [r1, #16]
 802665c:	4605      	mov	r5, r0
 802665e:	460c      	mov	r4, r1
 8026660:	b913      	cbnz	r3, 8026668 <_fflush_r+0x10>
 8026662:	2500      	movs	r5, #0
 8026664:	4628      	mov	r0, r5
 8026666:	bd38      	pop	{r3, r4, r5, pc}
 8026668:	b118      	cbz	r0, 8026672 <_fflush_r+0x1a>
 802666a:	6983      	ldr	r3, [r0, #24]
 802666c:	b90b      	cbnz	r3, 8026672 <_fflush_r+0x1a>
 802666e:	f000 f887 	bl	8026780 <__sinit>
 8026672:	4b14      	ldr	r3, [pc, #80]	; (80266c4 <_fflush_r+0x6c>)
 8026674:	429c      	cmp	r4, r3
 8026676:	d11b      	bne.n	80266b0 <_fflush_r+0x58>
 8026678:	686c      	ldr	r4, [r5, #4]
 802667a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802667e:	2b00      	cmp	r3, #0
 8026680:	d0ef      	beq.n	8026662 <_fflush_r+0xa>
 8026682:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026684:	07d0      	lsls	r0, r2, #31
 8026686:	d404      	bmi.n	8026692 <_fflush_r+0x3a>
 8026688:	0599      	lsls	r1, r3, #22
 802668a:	d402      	bmi.n	8026692 <_fflush_r+0x3a>
 802668c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802668e:	f000 f915 	bl	80268bc <__retarget_lock_acquire_recursive>
 8026692:	4628      	mov	r0, r5
 8026694:	4621      	mov	r1, r4
 8026696:	f7ff ff59 	bl	802654c <__sflush_r>
 802669a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802669c:	07da      	lsls	r2, r3, #31
 802669e:	4605      	mov	r5, r0
 80266a0:	d4e0      	bmi.n	8026664 <_fflush_r+0xc>
 80266a2:	89a3      	ldrh	r3, [r4, #12]
 80266a4:	059b      	lsls	r3, r3, #22
 80266a6:	d4dd      	bmi.n	8026664 <_fflush_r+0xc>
 80266a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80266aa:	f000 f909 	bl	80268c0 <__retarget_lock_release_recursive>
 80266ae:	e7d9      	b.n	8026664 <_fflush_r+0xc>
 80266b0:	4b05      	ldr	r3, [pc, #20]	; (80266c8 <_fflush_r+0x70>)
 80266b2:	429c      	cmp	r4, r3
 80266b4:	d101      	bne.n	80266ba <_fflush_r+0x62>
 80266b6:	68ac      	ldr	r4, [r5, #8]
 80266b8:	e7df      	b.n	802667a <_fflush_r+0x22>
 80266ba:	4b04      	ldr	r3, [pc, #16]	; (80266cc <_fflush_r+0x74>)
 80266bc:	429c      	cmp	r4, r3
 80266be:	bf08      	it	eq
 80266c0:	68ec      	ldreq	r4, [r5, #12]
 80266c2:	e7da      	b.n	802667a <_fflush_r+0x22>
 80266c4:	08029160 	.word	0x08029160
 80266c8:	08029180 	.word	0x08029180
 80266cc:	08029140 	.word	0x08029140

080266d0 <std>:
 80266d0:	2300      	movs	r3, #0
 80266d2:	b510      	push	{r4, lr}
 80266d4:	4604      	mov	r4, r0
 80266d6:	e9c0 3300 	strd	r3, r3, [r0]
 80266da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80266de:	6083      	str	r3, [r0, #8]
 80266e0:	8181      	strh	r1, [r0, #12]
 80266e2:	6643      	str	r3, [r0, #100]	; 0x64
 80266e4:	81c2      	strh	r2, [r0, #14]
 80266e6:	6183      	str	r3, [r0, #24]
 80266e8:	4619      	mov	r1, r3
 80266ea:	2208      	movs	r2, #8
 80266ec:	305c      	adds	r0, #92	; 0x5c
 80266ee:	f7ff f9e1 	bl	8025ab4 <memset>
 80266f2:	4b05      	ldr	r3, [pc, #20]	; (8026708 <std+0x38>)
 80266f4:	6263      	str	r3, [r4, #36]	; 0x24
 80266f6:	4b05      	ldr	r3, [pc, #20]	; (802670c <std+0x3c>)
 80266f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80266fa:	4b05      	ldr	r3, [pc, #20]	; (8026710 <std+0x40>)
 80266fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80266fe:	4b05      	ldr	r3, [pc, #20]	; (8026714 <std+0x44>)
 8026700:	6224      	str	r4, [r4, #32]
 8026702:	6323      	str	r3, [r4, #48]	; 0x30
 8026704:	bd10      	pop	{r4, pc}
 8026706:	bf00      	nop
 8026708:	080269a5 	.word	0x080269a5
 802670c:	080269c7 	.word	0x080269c7
 8026710:	080269ff 	.word	0x080269ff
 8026714:	08026a23 	.word	0x08026a23

08026718 <_cleanup_r>:
 8026718:	4901      	ldr	r1, [pc, #4]	; (8026720 <_cleanup_r+0x8>)
 802671a:	f000 b8af 	b.w	802687c <_fwalk_reent>
 802671e:	bf00      	nop
 8026720:	08026659 	.word	0x08026659

08026724 <__sfmoreglue>:
 8026724:	b570      	push	{r4, r5, r6, lr}
 8026726:	2268      	movs	r2, #104	; 0x68
 8026728:	1e4d      	subs	r5, r1, #1
 802672a:	4355      	muls	r5, r2
 802672c:	460e      	mov	r6, r1
 802672e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8026732:	f7ff fa33 	bl	8025b9c <_malloc_r>
 8026736:	4604      	mov	r4, r0
 8026738:	b140      	cbz	r0, 802674c <__sfmoreglue+0x28>
 802673a:	2100      	movs	r1, #0
 802673c:	e9c0 1600 	strd	r1, r6, [r0]
 8026740:	300c      	adds	r0, #12
 8026742:	60a0      	str	r0, [r4, #8]
 8026744:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8026748:	f7ff f9b4 	bl	8025ab4 <memset>
 802674c:	4620      	mov	r0, r4
 802674e:	bd70      	pop	{r4, r5, r6, pc}

08026750 <__sfp_lock_acquire>:
 8026750:	4801      	ldr	r0, [pc, #4]	; (8026758 <__sfp_lock_acquire+0x8>)
 8026752:	f000 b8b3 	b.w	80268bc <__retarget_lock_acquire_recursive>
 8026756:	bf00      	nop
 8026758:	2000df1a 	.word	0x2000df1a

0802675c <__sfp_lock_release>:
 802675c:	4801      	ldr	r0, [pc, #4]	; (8026764 <__sfp_lock_release+0x8>)
 802675e:	f000 b8af 	b.w	80268c0 <__retarget_lock_release_recursive>
 8026762:	bf00      	nop
 8026764:	2000df1a 	.word	0x2000df1a

08026768 <__sinit_lock_acquire>:
 8026768:	4801      	ldr	r0, [pc, #4]	; (8026770 <__sinit_lock_acquire+0x8>)
 802676a:	f000 b8a7 	b.w	80268bc <__retarget_lock_acquire_recursive>
 802676e:	bf00      	nop
 8026770:	2000df1b 	.word	0x2000df1b

08026774 <__sinit_lock_release>:
 8026774:	4801      	ldr	r0, [pc, #4]	; (802677c <__sinit_lock_release+0x8>)
 8026776:	f000 b8a3 	b.w	80268c0 <__retarget_lock_release_recursive>
 802677a:	bf00      	nop
 802677c:	2000df1b 	.word	0x2000df1b

08026780 <__sinit>:
 8026780:	b510      	push	{r4, lr}
 8026782:	4604      	mov	r4, r0
 8026784:	f7ff fff0 	bl	8026768 <__sinit_lock_acquire>
 8026788:	69a3      	ldr	r3, [r4, #24]
 802678a:	b11b      	cbz	r3, 8026794 <__sinit+0x14>
 802678c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026790:	f7ff bff0 	b.w	8026774 <__sinit_lock_release>
 8026794:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8026798:	6523      	str	r3, [r4, #80]	; 0x50
 802679a:	4b13      	ldr	r3, [pc, #76]	; (80267e8 <__sinit+0x68>)
 802679c:	4a13      	ldr	r2, [pc, #76]	; (80267ec <__sinit+0x6c>)
 802679e:	681b      	ldr	r3, [r3, #0]
 80267a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80267a2:	42a3      	cmp	r3, r4
 80267a4:	bf04      	itt	eq
 80267a6:	2301      	moveq	r3, #1
 80267a8:	61a3      	streq	r3, [r4, #24]
 80267aa:	4620      	mov	r0, r4
 80267ac:	f000 f820 	bl	80267f0 <__sfp>
 80267b0:	6060      	str	r0, [r4, #4]
 80267b2:	4620      	mov	r0, r4
 80267b4:	f000 f81c 	bl	80267f0 <__sfp>
 80267b8:	60a0      	str	r0, [r4, #8]
 80267ba:	4620      	mov	r0, r4
 80267bc:	f000 f818 	bl	80267f0 <__sfp>
 80267c0:	2200      	movs	r2, #0
 80267c2:	60e0      	str	r0, [r4, #12]
 80267c4:	2104      	movs	r1, #4
 80267c6:	6860      	ldr	r0, [r4, #4]
 80267c8:	f7ff ff82 	bl	80266d0 <std>
 80267cc:	68a0      	ldr	r0, [r4, #8]
 80267ce:	2201      	movs	r2, #1
 80267d0:	2109      	movs	r1, #9
 80267d2:	f7ff ff7d 	bl	80266d0 <std>
 80267d6:	68e0      	ldr	r0, [r4, #12]
 80267d8:	2202      	movs	r2, #2
 80267da:	2112      	movs	r1, #18
 80267dc:	f7ff ff78 	bl	80266d0 <std>
 80267e0:	2301      	movs	r3, #1
 80267e2:	61a3      	str	r3, [r4, #24]
 80267e4:	e7d2      	b.n	802678c <__sinit+0xc>
 80267e6:	bf00      	nop
 80267e8:	08029104 	.word	0x08029104
 80267ec:	08026719 	.word	0x08026719

080267f0 <__sfp>:
 80267f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80267f2:	4607      	mov	r7, r0
 80267f4:	f7ff ffac 	bl	8026750 <__sfp_lock_acquire>
 80267f8:	4b1e      	ldr	r3, [pc, #120]	; (8026874 <__sfp+0x84>)
 80267fa:	681e      	ldr	r6, [r3, #0]
 80267fc:	69b3      	ldr	r3, [r6, #24]
 80267fe:	b913      	cbnz	r3, 8026806 <__sfp+0x16>
 8026800:	4630      	mov	r0, r6
 8026802:	f7ff ffbd 	bl	8026780 <__sinit>
 8026806:	3648      	adds	r6, #72	; 0x48
 8026808:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802680c:	3b01      	subs	r3, #1
 802680e:	d503      	bpl.n	8026818 <__sfp+0x28>
 8026810:	6833      	ldr	r3, [r6, #0]
 8026812:	b30b      	cbz	r3, 8026858 <__sfp+0x68>
 8026814:	6836      	ldr	r6, [r6, #0]
 8026816:	e7f7      	b.n	8026808 <__sfp+0x18>
 8026818:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802681c:	b9d5      	cbnz	r5, 8026854 <__sfp+0x64>
 802681e:	4b16      	ldr	r3, [pc, #88]	; (8026878 <__sfp+0x88>)
 8026820:	60e3      	str	r3, [r4, #12]
 8026822:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8026826:	6665      	str	r5, [r4, #100]	; 0x64
 8026828:	f000 f847 	bl	80268ba <__retarget_lock_init_recursive>
 802682c:	f7ff ff96 	bl	802675c <__sfp_lock_release>
 8026830:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8026834:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8026838:	6025      	str	r5, [r4, #0]
 802683a:	61a5      	str	r5, [r4, #24]
 802683c:	2208      	movs	r2, #8
 802683e:	4629      	mov	r1, r5
 8026840:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8026844:	f7ff f936 	bl	8025ab4 <memset>
 8026848:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802684c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8026850:	4620      	mov	r0, r4
 8026852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026854:	3468      	adds	r4, #104	; 0x68
 8026856:	e7d9      	b.n	802680c <__sfp+0x1c>
 8026858:	2104      	movs	r1, #4
 802685a:	4638      	mov	r0, r7
 802685c:	f7ff ff62 	bl	8026724 <__sfmoreglue>
 8026860:	4604      	mov	r4, r0
 8026862:	6030      	str	r0, [r6, #0]
 8026864:	2800      	cmp	r0, #0
 8026866:	d1d5      	bne.n	8026814 <__sfp+0x24>
 8026868:	f7ff ff78 	bl	802675c <__sfp_lock_release>
 802686c:	230c      	movs	r3, #12
 802686e:	603b      	str	r3, [r7, #0]
 8026870:	e7ee      	b.n	8026850 <__sfp+0x60>
 8026872:	bf00      	nop
 8026874:	08029104 	.word	0x08029104
 8026878:	ffff0001 	.word	0xffff0001

0802687c <_fwalk_reent>:
 802687c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026880:	4606      	mov	r6, r0
 8026882:	4688      	mov	r8, r1
 8026884:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8026888:	2700      	movs	r7, #0
 802688a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802688e:	f1b9 0901 	subs.w	r9, r9, #1
 8026892:	d505      	bpl.n	80268a0 <_fwalk_reent+0x24>
 8026894:	6824      	ldr	r4, [r4, #0]
 8026896:	2c00      	cmp	r4, #0
 8026898:	d1f7      	bne.n	802688a <_fwalk_reent+0xe>
 802689a:	4638      	mov	r0, r7
 802689c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80268a0:	89ab      	ldrh	r3, [r5, #12]
 80268a2:	2b01      	cmp	r3, #1
 80268a4:	d907      	bls.n	80268b6 <_fwalk_reent+0x3a>
 80268a6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80268aa:	3301      	adds	r3, #1
 80268ac:	d003      	beq.n	80268b6 <_fwalk_reent+0x3a>
 80268ae:	4629      	mov	r1, r5
 80268b0:	4630      	mov	r0, r6
 80268b2:	47c0      	blx	r8
 80268b4:	4307      	orrs	r7, r0
 80268b6:	3568      	adds	r5, #104	; 0x68
 80268b8:	e7e9      	b.n	802688e <_fwalk_reent+0x12>

080268ba <__retarget_lock_init_recursive>:
 80268ba:	4770      	bx	lr

080268bc <__retarget_lock_acquire_recursive>:
 80268bc:	4770      	bx	lr

080268be <__retarget_lock_release>:
 80268be:	4770      	bx	lr

080268c0 <__retarget_lock_release_recursive>:
 80268c0:	4770      	bx	lr

080268c2 <__swhatbuf_r>:
 80268c2:	b570      	push	{r4, r5, r6, lr}
 80268c4:	460e      	mov	r6, r1
 80268c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80268ca:	2900      	cmp	r1, #0
 80268cc:	b096      	sub	sp, #88	; 0x58
 80268ce:	4614      	mov	r4, r2
 80268d0:	461d      	mov	r5, r3
 80268d2:	da08      	bge.n	80268e6 <__swhatbuf_r+0x24>
 80268d4:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80268d8:	2200      	movs	r2, #0
 80268da:	602a      	str	r2, [r5, #0]
 80268dc:	061a      	lsls	r2, r3, #24
 80268de:	d410      	bmi.n	8026902 <__swhatbuf_r+0x40>
 80268e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80268e4:	e00e      	b.n	8026904 <__swhatbuf_r+0x42>
 80268e6:	466a      	mov	r2, sp
 80268e8:	f000 f8c2 	bl	8026a70 <_fstat_r>
 80268ec:	2800      	cmp	r0, #0
 80268ee:	dbf1      	blt.n	80268d4 <__swhatbuf_r+0x12>
 80268f0:	9a01      	ldr	r2, [sp, #4]
 80268f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80268f6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80268fa:	425a      	negs	r2, r3
 80268fc:	415a      	adcs	r2, r3
 80268fe:	602a      	str	r2, [r5, #0]
 8026900:	e7ee      	b.n	80268e0 <__swhatbuf_r+0x1e>
 8026902:	2340      	movs	r3, #64	; 0x40
 8026904:	2000      	movs	r0, #0
 8026906:	6023      	str	r3, [r4, #0]
 8026908:	b016      	add	sp, #88	; 0x58
 802690a:	bd70      	pop	{r4, r5, r6, pc}

0802690c <__smakebuf_r>:
 802690c:	898b      	ldrh	r3, [r1, #12]
 802690e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026910:	079d      	lsls	r5, r3, #30
 8026912:	4606      	mov	r6, r0
 8026914:	460c      	mov	r4, r1
 8026916:	d507      	bpl.n	8026928 <__smakebuf_r+0x1c>
 8026918:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802691c:	6023      	str	r3, [r4, #0]
 802691e:	6123      	str	r3, [r4, #16]
 8026920:	2301      	movs	r3, #1
 8026922:	6163      	str	r3, [r4, #20]
 8026924:	b002      	add	sp, #8
 8026926:	bd70      	pop	{r4, r5, r6, pc}
 8026928:	ab01      	add	r3, sp, #4
 802692a:	466a      	mov	r2, sp
 802692c:	f7ff ffc9 	bl	80268c2 <__swhatbuf_r>
 8026930:	9900      	ldr	r1, [sp, #0]
 8026932:	4605      	mov	r5, r0
 8026934:	4630      	mov	r0, r6
 8026936:	f7ff f931 	bl	8025b9c <_malloc_r>
 802693a:	b948      	cbnz	r0, 8026950 <__smakebuf_r+0x44>
 802693c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026940:	059a      	lsls	r2, r3, #22
 8026942:	d4ef      	bmi.n	8026924 <__smakebuf_r+0x18>
 8026944:	f023 0303 	bic.w	r3, r3, #3
 8026948:	f043 0302 	orr.w	r3, r3, #2
 802694c:	81a3      	strh	r3, [r4, #12]
 802694e:	e7e3      	b.n	8026918 <__smakebuf_r+0xc>
 8026950:	4b0d      	ldr	r3, [pc, #52]	; (8026988 <__smakebuf_r+0x7c>)
 8026952:	62b3      	str	r3, [r6, #40]	; 0x28
 8026954:	89a3      	ldrh	r3, [r4, #12]
 8026956:	6020      	str	r0, [r4, #0]
 8026958:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802695c:	81a3      	strh	r3, [r4, #12]
 802695e:	9b00      	ldr	r3, [sp, #0]
 8026960:	6163      	str	r3, [r4, #20]
 8026962:	9b01      	ldr	r3, [sp, #4]
 8026964:	6120      	str	r0, [r4, #16]
 8026966:	b15b      	cbz	r3, 8026980 <__smakebuf_r+0x74>
 8026968:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802696c:	4630      	mov	r0, r6
 802696e:	f000 f891 	bl	8026a94 <_isatty_r>
 8026972:	b128      	cbz	r0, 8026980 <__smakebuf_r+0x74>
 8026974:	89a3      	ldrh	r3, [r4, #12]
 8026976:	f023 0303 	bic.w	r3, r3, #3
 802697a:	f043 0301 	orr.w	r3, r3, #1
 802697e:	81a3      	strh	r3, [r4, #12]
 8026980:	89a0      	ldrh	r0, [r4, #12]
 8026982:	4305      	orrs	r5, r0
 8026984:	81a5      	strh	r5, [r4, #12]
 8026986:	e7cd      	b.n	8026924 <__smakebuf_r+0x18>
 8026988:	08026719 	.word	0x08026719

0802698c <__malloc_lock>:
 802698c:	4801      	ldr	r0, [pc, #4]	; (8026994 <__malloc_lock+0x8>)
 802698e:	f7ff bf95 	b.w	80268bc <__retarget_lock_acquire_recursive>
 8026992:	bf00      	nop
 8026994:	2000df19 	.word	0x2000df19

08026998 <__malloc_unlock>:
 8026998:	4801      	ldr	r0, [pc, #4]	; (80269a0 <__malloc_unlock+0x8>)
 802699a:	f7ff bf91 	b.w	80268c0 <__retarget_lock_release_recursive>
 802699e:	bf00      	nop
 80269a0:	2000df19 	.word	0x2000df19

080269a4 <__sread>:
 80269a4:	b510      	push	{r4, lr}
 80269a6:	460c      	mov	r4, r1
 80269a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80269ac:	f000 f894 	bl	8026ad8 <_read_r>
 80269b0:	2800      	cmp	r0, #0
 80269b2:	bfab      	itete	ge
 80269b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80269b6:	89a3      	ldrhlt	r3, [r4, #12]
 80269b8:	181b      	addge	r3, r3, r0
 80269ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80269be:	bfac      	ite	ge
 80269c0:	6563      	strge	r3, [r4, #84]	; 0x54
 80269c2:	81a3      	strhlt	r3, [r4, #12]
 80269c4:	bd10      	pop	{r4, pc}

080269c6 <__swrite>:
 80269c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80269ca:	461f      	mov	r7, r3
 80269cc:	898b      	ldrh	r3, [r1, #12]
 80269ce:	05db      	lsls	r3, r3, #23
 80269d0:	4605      	mov	r5, r0
 80269d2:	460c      	mov	r4, r1
 80269d4:	4616      	mov	r6, r2
 80269d6:	d505      	bpl.n	80269e4 <__swrite+0x1e>
 80269d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80269dc:	2302      	movs	r3, #2
 80269de:	2200      	movs	r2, #0
 80269e0:	f000 f868 	bl	8026ab4 <_lseek_r>
 80269e4:	89a3      	ldrh	r3, [r4, #12]
 80269e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80269ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80269ee:	81a3      	strh	r3, [r4, #12]
 80269f0:	4632      	mov	r2, r6
 80269f2:	463b      	mov	r3, r7
 80269f4:	4628      	mov	r0, r5
 80269f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80269fa:	f000 b817 	b.w	8026a2c <_write_r>

080269fe <__sseek>:
 80269fe:	b510      	push	{r4, lr}
 8026a00:	460c      	mov	r4, r1
 8026a02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026a06:	f000 f855 	bl	8026ab4 <_lseek_r>
 8026a0a:	1c43      	adds	r3, r0, #1
 8026a0c:	89a3      	ldrh	r3, [r4, #12]
 8026a0e:	bf15      	itete	ne
 8026a10:	6560      	strne	r0, [r4, #84]	; 0x54
 8026a12:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8026a16:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8026a1a:	81a3      	strheq	r3, [r4, #12]
 8026a1c:	bf18      	it	ne
 8026a1e:	81a3      	strhne	r3, [r4, #12]
 8026a20:	bd10      	pop	{r4, pc}

08026a22 <__sclose>:
 8026a22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026a26:	f000 b813 	b.w	8026a50 <_close_r>
	...

08026a2c <_write_r>:
 8026a2c:	b538      	push	{r3, r4, r5, lr}
 8026a2e:	4d07      	ldr	r5, [pc, #28]	; (8026a4c <_write_r+0x20>)
 8026a30:	4604      	mov	r4, r0
 8026a32:	4608      	mov	r0, r1
 8026a34:	4611      	mov	r1, r2
 8026a36:	2200      	movs	r2, #0
 8026a38:	602a      	str	r2, [r5, #0]
 8026a3a:	461a      	mov	r2, r3
 8026a3c:	f7db ff28 	bl	8002890 <_write>
 8026a40:	1c43      	adds	r3, r0, #1
 8026a42:	d102      	bne.n	8026a4a <_write_r+0x1e>
 8026a44:	682b      	ldr	r3, [r5, #0]
 8026a46:	b103      	cbz	r3, 8026a4a <_write_r+0x1e>
 8026a48:	6023      	str	r3, [r4, #0]
 8026a4a:	bd38      	pop	{r3, r4, r5, pc}
 8026a4c:	2000df1c 	.word	0x2000df1c

08026a50 <_close_r>:
 8026a50:	b538      	push	{r3, r4, r5, lr}
 8026a52:	4d06      	ldr	r5, [pc, #24]	; (8026a6c <_close_r+0x1c>)
 8026a54:	2300      	movs	r3, #0
 8026a56:	4604      	mov	r4, r0
 8026a58:	4608      	mov	r0, r1
 8026a5a:	602b      	str	r3, [r5, #0]
 8026a5c:	f7db ff26 	bl	80028ac <_close>
 8026a60:	1c43      	adds	r3, r0, #1
 8026a62:	d102      	bne.n	8026a6a <_close_r+0x1a>
 8026a64:	682b      	ldr	r3, [r5, #0]
 8026a66:	b103      	cbz	r3, 8026a6a <_close_r+0x1a>
 8026a68:	6023      	str	r3, [r4, #0]
 8026a6a:	bd38      	pop	{r3, r4, r5, pc}
 8026a6c:	2000df1c 	.word	0x2000df1c

08026a70 <_fstat_r>:
 8026a70:	b538      	push	{r3, r4, r5, lr}
 8026a72:	4d07      	ldr	r5, [pc, #28]	; (8026a90 <_fstat_r+0x20>)
 8026a74:	2300      	movs	r3, #0
 8026a76:	4604      	mov	r4, r0
 8026a78:	4608      	mov	r0, r1
 8026a7a:	4611      	mov	r1, r2
 8026a7c:	602b      	str	r3, [r5, #0]
 8026a7e:	f7db ff18 	bl	80028b2 <_fstat>
 8026a82:	1c43      	adds	r3, r0, #1
 8026a84:	d102      	bne.n	8026a8c <_fstat_r+0x1c>
 8026a86:	682b      	ldr	r3, [r5, #0]
 8026a88:	b103      	cbz	r3, 8026a8c <_fstat_r+0x1c>
 8026a8a:	6023      	str	r3, [r4, #0]
 8026a8c:	bd38      	pop	{r3, r4, r5, pc}
 8026a8e:	bf00      	nop
 8026a90:	2000df1c 	.word	0x2000df1c

08026a94 <_isatty_r>:
 8026a94:	b538      	push	{r3, r4, r5, lr}
 8026a96:	4d06      	ldr	r5, [pc, #24]	; (8026ab0 <_isatty_r+0x1c>)
 8026a98:	2300      	movs	r3, #0
 8026a9a:	4604      	mov	r4, r0
 8026a9c:	4608      	mov	r0, r1
 8026a9e:	602b      	str	r3, [r5, #0]
 8026aa0:	f7db ff0c 	bl	80028bc <_isatty>
 8026aa4:	1c43      	adds	r3, r0, #1
 8026aa6:	d102      	bne.n	8026aae <_isatty_r+0x1a>
 8026aa8:	682b      	ldr	r3, [r5, #0]
 8026aaa:	b103      	cbz	r3, 8026aae <_isatty_r+0x1a>
 8026aac:	6023      	str	r3, [r4, #0]
 8026aae:	bd38      	pop	{r3, r4, r5, pc}
 8026ab0:	2000df1c 	.word	0x2000df1c

08026ab4 <_lseek_r>:
 8026ab4:	b538      	push	{r3, r4, r5, lr}
 8026ab6:	4d07      	ldr	r5, [pc, #28]	; (8026ad4 <_lseek_r+0x20>)
 8026ab8:	4604      	mov	r4, r0
 8026aba:	4608      	mov	r0, r1
 8026abc:	4611      	mov	r1, r2
 8026abe:	2200      	movs	r2, #0
 8026ac0:	602a      	str	r2, [r5, #0]
 8026ac2:	461a      	mov	r2, r3
 8026ac4:	f7db fefc 	bl	80028c0 <_lseek>
 8026ac8:	1c43      	adds	r3, r0, #1
 8026aca:	d102      	bne.n	8026ad2 <_lseek_r+0x1e>
 8026acc:	682b      	ldr	r3, [r5, #0]
 8026ace:	b103      	cbz	r3, 8026ad2 <_lseek_r+0x1e>
 8026ad0:	6023      	str	r3, [r4, #0]
 8026ad2:	bd38      	pop	{r3, r4, r5, pc}
 8026ad4:	2000df1c 	.word	0x2000df1c

08026ad8 <_read_r>:
 8026ad8:	b538      	push	{r3, r4, r5, lr}
 8026ada:	4d07      	ldr	r5, [pc, #28]	; (8026af8 <_read_r+0x20>)
 8026adc:	4604      	mov	r4, r0
 8026ade:	4608      	mov	r0, r1
 8026ae0:	4611      	mov	r1, r2
 8026ae2:	2200      	movs	r2, #0
 8026ae4:	602a      	str	r2, [r5, #0]
 8026ae6:	461a      	mov	r2, r3
 8026ae8:	f7db fec4 	bl	8002874 <_read>
 8026aec:	1c43      	adds	r3, r0, #1
 8026aee:	d102      	bne.n	8026af6 <_read_r+0x1e>
 8026af0:	682b      	ldr	r3, [r5, #0]
 8026af2:	b103      	cbz	r3, 8026af6 <_read_r+0x1e>
 8026af4:	6023      	str	r3, [r4, #0]
 8026af6:	bd38      	pop	{r3, r4, r5, pc}
 8026af8:	2000df1c 	.word	0x2000df1c

08026afc <_init>:
 8026afc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026afe:	bf00      	nop
 8026b00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026b02:	bc08      	pop	{r3}
 8026b04:	469e      	mov	lr, r3
 8026b06:	4770      	bx	lr

08026b08 <_fini>:
 8026b08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026b0a:	bf00      	nop
 8026b0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026b0e:	bc08      	pop	{r3}
 8026b10:	469e      	mov	lr, r3
 8026b12:	4770      	bx	lr
