/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <gui/containers/InfoWidget.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Graph2clicked(AbstractDataGraph::GraphClickEvent value)
    {
        // Override and implement this function in Screen1
    }

    virtual void Graph2dragged(AbstractDataGraph::GraphDragEvent value)
    {
        // Override and implement this function in Screen1
    }

    virtual void XupButtonClicked()
    {
        // Override and implement this function in Screen1
    }

    virtual void XdownButtonClicked()
    {
        // Override and implement this function in Screen1
    }

    virtual void YupButtonClicked()
    {
        // Override and implement this function in Screen1
    }

    virtual void YdownButtonClicked()
    {
        // Override and implement this function in Screen1
    }

    virtual void ResetButtonClicked()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ButtonWithLabel Channel2_button;
    touchgfx::ButtonWithLabel ResetButton;
    touchgfx::Button XdownButton;
    touchgfx::Button XupButton;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::Button YupButton;
    touchgfx::Button YdownButton;
    touchgfx::GraphScroll<200> Graph2;
    touchgfx::GraphElementLine Graph2Line1;
    touchgfx::PainterRGB565 Graph2Line1Painter;
    touchgfx::GraphElementGridX Graph2MajorXAxisGrid;
    touchgfx::GraphElementGridY Graph2MajorYAxisGrid;
    touchgfx::GraphLabelsX Graph2MajorXAxisLabel;
    touchgfx::GraphLabelsY Graph2MajorYAxisLabel;
    InfoWidget infoWidget1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphClickEvent&> graphClickedCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphDragEvent&> graphDraggedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value);
    void graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SCREEN1VIEWBASE_HPP
